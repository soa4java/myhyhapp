android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    android.graphics.drawable.Drawable mWrapped -> mWrapped
    float mOffset -> mOffset
    float mOffsetBy -> mOffsetBy
    android.graphics.Rect mTmpRect -> mTmpRect
    void setOffset(float) -> setOffset
    float getOffset() -> getOffset
    void setOffsetBy(float) -> setOffsetBy
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> registerContentObserver
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch(long[],int,int,long) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.MenuCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewGravity(android.view.View) -> getDrawerViewGravity
    boolean checkDrawerViewGravity(android.view.View,int) -> checkDrawerViewGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> access$100
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mGravity -> mGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> IMPL
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$900
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> access$1000
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
cn.sharesdk.framework.CustomPlatform -> cn.sharesdk.framework.CustomPlatform:
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getPlatformId() -> getPlatformId
    int getCustomPlatformId() -> getCustomPlatformId
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.FakeActivity -> cn.sharesdk.framework.FakeActivity:
    java.lang.Class shell -> shell
    android.app.Activity activity -> activity
    cn.sharesdk.framework.FakeActivity resultReceiver -> resultReceiver
    java.util.HashMap result -> result
    android.view.View contentView -> contentView
    void setShell(java.lang.Class) -> setShell
    void setActivity(android.app.Activity) -> setActivity
    void setContentViewLayoutResName(java.lang.String) -> setContentViewLayoutResName
    void setContentView(android.view.View) -> setContentView
    android.view.View getContentView() -> getContentView
    android.view.View findViewById(int) -> findViewById
    android.view.View findViewByResName(android.view.View,java.lang.String) -> findViewByResName
    android.view.View findViewByResName(java.lang.String) -> findViewByResName
    void onCreate() -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    void finish() -> finish
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    android.content.Context getContext() -> getContext
    void show(android.content.Context,android.content.Intent) -> show
    void showForResult(android.content.Context,android.content.Intent,cn.sharesdk.framework.FakeActivity) -> showForResult
    cn.sharesdk.framework.FakeActivity getParent() -> getParent
    void setResult(java.util.HashMap) -> setResult
    void sendResult() -> sendResult
    void onResult(java.util.HashMap) -> onResult
    void runOnUIThread(java.lang.Runnable) -> runOnUIThread
    void runOnUIThread(java.lang.Runnable,long) -> runOnUIThread
    void setRequestedOrientation(int) -> setRequestedOrientation
    void requestPortraitOrientation() -> requestPortraitOrientation
    void requestLandscapeOrientation() -> requestLandscapeOrientation
    int getOrientation() -> getOrientation
    void requestFullScreen(boolean) -> requestFullScreen
cn.sharesdk.framework.MobUIShell -> cn.sharesdk.framework.MobUIShell:
    java.util.HashMap a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    java.lang.String a(cn.sharesdk.framework.FakeActivity) -> a
    java.lang.String a(java.lang.String,cn.sharesdk.framework.FakeActivity) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void finish() -> finish
cn.sharesdk.framework.Platform -> cn.sharesdk.framework.Platform:
    int ACTION_AUTHORIZING -> ACTION_AUTHORIZING
    int ACTION_GETTING_FRIEND_LIST -> ACTION_GETTING_FRIEND_LIST
    int ACTION_SENDING_DIRECT_MESSAGE -> ACTION_SENDING_DIRECT_MESSAGE
    int ACTION_FOLLOWING_USER -> ACTION_FOLLOWING_USER
    int ACTION_TIMELINE -> ACTION_TIMELINE
    int ACTION_USER_INFOR -> ACTION_USER_INFOR
    int ACTION_SHARE -> ACTION_SHARE
    int ACTION_CUSTOMER -> ACTION_CUSTOMER
    int CUSTOMER_ACTION_MASK -> CUSTOMER_ACTION_MASK
    int SHARE_TEXT -> SHARE_TEXT
    int SHARE_IMAGE -> SHARE_IMAGE
    int SHARE_WEBPAGE -> SHARE_WEBPAGE
    int SHARE_MUSIC -> SHARE_MUSIC
    int SHARE_VIDEO -> SHARE_VIDEO
    int SHARE_APPS -> SHARE_APPS
    int SHARE_FILE -> SHARE_FILE
    int SHARE_EMOJI -> SHARE_EMOJI
    cn.sharesdk.framework.i a -> a
    android.content.Context context -> context
    cn.sharesdk.framework.PlatformDb db -> db
    cn.sharesdk.framework.PlatformActionListener listener -> listener
    void a() -> a
    void initDevInfo(java.lang.String) -> initDevInfo
    void copyDevinfo(java.lang.String,java.lang.String) -> copyDevinfo
    void copyNetworkDevinfo(int,int) -> copyNetworkDevinfo
    java.lang.String getDevinfo(java.lang.String) -> getDevinfo
    java.lang.String getDevinfo(java.lang.String,java.lang.String) -> getDevinfo
    java.lang.String getNetworkDevinfo(java.lang.String,java.lang.String) -> getNetworkDevinfo
    java.lang.String getNetworkDevinfo(int,java.lang.String,java.lang.String) -> getNetworkDevinfo
    android.content.Context getContext() -> getContext
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getId() -> getId
    int getPlatformId() -> getPlatformId
    int getSortId() -> getSortId
    void setPlatformActionListener(cn.sharesdk.framework.PlatformActionListener) -> setPlatformActionListener
    cn.sharesdk.framework.PlatformActionListener getPlatformActionListener() -> getPlatformActionListener
    boolean isValid() -> isValid
    void SSOSetting(boolean) -> SSOSetting
    boolean isSSODisable() -> isSSODisable
    boolean b() -> b
    void authorize() -> authorize
    void authorize(java.lang.String[]) -> authorize
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void innerAuthorize(int,java.lang.Object) -> innerAuthorize
    void share(cn.sharesdk.framework.Platform$ShareParams) -> share
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void followFriend(java.lang.String) -> followFriend
    void follow(java.lang.String) -> follow
    void getTimeLine(java.lang.String,int,int) -> getTimeLine
    void timeline(int,int,java.lang.String) -> timeline
    void showUser(java.lang.String) -> showUser
    void userInfor(java.lang.String) -> userInfor
    void listFriend(int,int,java.lang.String) -> listFriend
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void customerProtocol(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> customerProtocol
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    void afterRegister(int,java.lang.Object) -> afterRegister
    cn.sharesdk.framework.PlatformDb getDb() -> getDb
    void removeAccount() -> removeAccount
    void removeAccount(boolean) -> removeAccount
    java.lang.String getShortLintk(java.lang.String,boolean) -> getShortLintk
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    java.lang.String uploadImageToFileServer(android.graphics.Bitmap) -> uploadImageToFileServer
cn.sharesdk.framework.Platform$ShareParams -> cn.sharesdk.framework.Platform$ShareParams:
    java.lang.String text -> text
    java.lang.String imagePath -> imagePath
cn.sharesdk.framework.PlatformActionListener -> cn.sharesdk.framework.PlatformActionListener:
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.PlatformDb -> cn.sharesdk.framework.PlatformDb:
    java.lang.String DB_NAME -> DB_NAME
    android.content.SharedPreferences db -> db
    java.lang.String platformNname -> platformNname
    int platformVersion -> platformVersion
    void put(java.lang.String,java.lang.String) -> put
    java.lang.String get(java.lang.String) -> get
    java.lang.String getToken() -> getToken
    void putToken(java.lang.String) -> putToken
    java.lang.String getTokenSecret() -> getTokenSecret
    void putTokenSecret(java.lang.String) -> putTokenSecret
    long getExpiresIn() -> getExpiresIn
    void putExpiresIn(long) -> putExpiresIn
    long getExpiresTime() -> getExpiresTime
    int getPlatformVersion() -> getPlatformVersion
    java.lang.String getPlatformNname() -> getPlatformNname
    void putUserId(java.lang.String) -> putUserId
    java.lang.String getUserId() -> getUserId
    java.lang.String getUserName() -> getUserName
    java.lang.String getUserIcon() -> getUserIcon
    void removeAccount() -> removeAccount
    java.lang.String exportData() -> exportData
    void importData(java.lang.String) -> importData
    boolean isValid() -> isValid
    java.lang.String getUserGender() -> getUserGender
cn.sharesdk.framework.ReflectablePlatformActionListener -> cn.sharesdk.framework.ReflectablePlatformActionListener:
    int a -> a
    android.os.Handler$Callback b -> b
    int c -> c
    android.os.Handler$Callback d -> d
    int e -> e
    android.os.Handler$Callback f -> f
    void setOnCompleteCallback(int,android.os.Handler$Callback) -> setOnCompleteCallback
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void setOnErrorCallback(int,android.os.Handler$Callback) -> setOnErrorCallback
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void setOnCancelCallback(int,android.os.Handler$Callback) -> setOnCancelCallback
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.Service -> cn.sharesdk.framework.Service:
    android.content.Context a -> a
    java.lang.String b -> b
    void a(android.content.Context) -> a
    android.content.Context getContext() -> getContext
    void a(java.lang.String) -> a
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getDeviceKey() -> getDeviceKey
    int getServiceVersionInt() -> getServiceVersionInt
    java.lang.String getServiceVersionName() -> getServiceVersionName
    void onBind() -> onBind
    void onUnbind() -> onUnbind
    android.content.Context a(cn.sharesdk.framework.Service) -> a
cn.sharesdk.framework.Service$ServiceEvent -> cn.sharesdk.framework.Service$ServiceEvent:
    int PLATFORM -> PLATFORM
    cn.sharesdk.framework.Service service -> service
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    java.util.HashMap filterShareContent(int,cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
cn.sharesdk.framework.ShareSDK -> cn.sharesdk.framework.ShareSDK:
    cn.sharesdk.framework.p a -> a
    boolean b -> b
    void initSDK(android.content.Context) -> initSDK
    void initSDK(android.content.Context,boolean) -> initSDK
    void initSDK(android.content.Context,java.lang.String) -> initSDK
    void initSDK(android.content.Context,java.lang.String,boolean) -> initSDK
    void stopSDK(android.content.Context) -> stopSDK
    void stopSDK() -> stopSDK
    void c() -> c
    void registerService(java.lang.Class) -> registerService
    void unregisterService(java.lang.Class) -> unregisterService
    cn.sharesdk.framework.Service getService(java.lang.Class) -> getService
    void registerPlatform(java.lang.Class) -> registerPlatform
    void unregisterPlatform(java.lang.Class) -> unregisterPlatform
    java.lang.String getSDKVersionName() -> getSDKVersionName
    int getSDKVersionCode() -> getSDKVersionCode
    void setConnTimeout(int) -> setConnTimeout
    void setReadTimeout(int) -> setReadTimeout
    void removeCookieOnAuthorize(boolean) -> removeCookieOnAuthorize
    void deleteCache() -> deleteCache
    cn.sharesdk.framework.Platform[] getPlatformList(android.content.Context) -> getPlatformList
    cn.sharesdk.framework.Platform[] getPlatformList() -> getPlatformList
    cn.sharesdk.framework.Platform getPlatform(android.content.Context,java.lang.String) -> getPlatform
    cn.sharesdk.framework.Platform getPlatform(java.lang.String) -> getPlatform
    void logDemoEvent(int,cn.sharesdk.framework.Platform) -> logDemoEvent
    void logApiEvent(java.lang.String,int) -> logApiEvent
    void setPlatformDevInfo(java.lang.String,java.util.HashMap) -> setPlatformDevInfo
    java.lang.String platformIdToName(int) -> platformIdToName
    int platformNameToId(java.lang.String) -> platformNameToId
    boolean isRemoveCookieOnAuthorize() -> isRemoveCookieOnAuthorize
    void closeDebug() -> closeDebug
    boolean isDebug() -> isDebug
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean a() -> a
    boolean b() -> b
    boolean a(java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(android.graphics.Bitmap) -> a
cn.sharesdk.framework.ShareSDKUIShell -> cn.sharesdk.framework.ShareSDKUIShell:
cn.sharesdk.framework.TitleLayout -> cn.sharesdk.framework.TitleLayout:
    android.widget.ImageView btnBack -> btnBack
    android.widget.TextView tvTitle -> tvTitle
    android.widget.TextView btnRight -> btnRight
    void init(android.content.Context) -> init
    android.widget.ImageView getBtnBack() -> getBtnBack
    android.widget.TextView getTvTitle() -> getTvTitle
    android.widget.TextView getBtnRight() -> getBtnRight
cn.sharesdk.framework.a -> cn.sharesdk.framework.a:
    cn.sharesdk.framework.FakeActivity a -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.authorize.AuthorizeAdapter -> cn.sharesdk.framework.authorize.AuthorizeAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    java.lang.String platform -> platform
    android.widget.RelativeLayout rlBody -> rlBody
    boolean popUpAnimationDisable -> popUpAnimationDisable
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setPlatformName(java.lang.String) -> setPlatformName
    java.lang.String getPlatformName() -> getPlatformName
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onResize(int,int,int,int) -> onResize
    void onDestroy() -> onDestroy
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void disablePopUpAnimation() -> disablePopUpAnimation
    boolean isPopUpAnimationDisable() -> isPopUpAnimationDisable
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void hideShareSDKLogo() -> hideShareSDKLogo
cn.sharesdk.framework.authorize.AuthorizeHelper -> cn.sharesdk.framework.authorize.AuthorizeHelper:
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.authorize.AuthorizeListener -> cn.sharesdk.framework.authorize.AuthorizeListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.framework.authorize.RegisterView -> cn.sharesdk.framework.authorize.RegisterView:
    cn.sharesdk.framework.TitleLayout a -> a
    android.widget.RelativeLayout b -> b
    android.webkit.WebView c -> c
    android.widget.TextView d -> d
    void a(android.content.Context) -> a
    int b(android.content.Context) -> b
    android.view.View a() -> a
    void a(boolean) -> a
    android.webkit.WebView b() -> b
    cn.sharesdk.framework.TitleLayout c() -> c
    android.widget.RelativeLayout d() -> d
    android.widget.TextView a(cn.sharesdk.framework.authorize.RegisterView) -> a
cn.sharesdk.framework.authorize.ResizeLayout -> cn.sharesdk.framework.authorize.ResizeLayout:
    cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener a -> a
    void a(cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener -> cn.sharesdk.framework.authorize.ResizeLayout$OnResizeListener:
    void OnResize(int,int,int,int) -> OnResize
cn.sharesdk.framework.authorize.SSOListener -> cn.sharesdk.framework.authorize.SSOListener:
    void onFailed(java.lang.Throwable) -> onFailed
    void onCancel() -> onCancel
    void onComplete(android.os.Bundle) -> onComplete
cn.sharesdk.framework.authorize.a -> cn.sharesdk.framework.authorize.a:
    cn.sharesdk.framework.authorize.AuthorizeHelper a -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeHelper) -> a
    void show(android.content.Context,android.content.Intent) -> show
    cn.sharesdk.framework.authorize.AuthorizeHelper a() -> a
cn.sharesdk.framework.authorize.b -> cn.sharesdk.framework.authorize.b:
    cn.sharesdk.framework.authorize.g a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c -> c
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
cn.sharesdk.framework.authorize.c -> cn.sharesdk.framework.authorize.c:
    cn.sharesdk.framework.authorize.RegisterView a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.d -> cn.sharesdk.framework.authorize.d:
    int a -> a
    cn.sharesdk.framework.authorize.RegisterView b -> b
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
cn.sharesdk.framework.authorize.e -> cn.sharesdk.framework.authorize.e:
    cn.sharesdk.framework.authorize.f c -> c
    cn.sharesdk.framework.authorize.SSOListener b -> b
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    void onCreate() -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
cn.sharesdk.framework.authorize.f -> cn.sharesdk.framework.authorize.f:
    cn.sharesdk.framework.authorize.e a -> a
    int b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    void a() -> a
    void a(int) -> a
    void a(int,int,android.content.Intent) -> a
    void a(android.content.Intent) -> a
cn.sharesdk.framework.authorize.g -> cn.sharesdk.framework.authorize.g:
    cn.sharesdk.framework.authorize.AuthorizeAdapter c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.framework.authorize.AuthorizeAdapter c() -> c
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView b() -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void OnResize(int,int,int,int) -> OnResize
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
    void onDestroy() -> onDestroy
    android.app.Activity a(cn.sharesdk.framework.authorize.g) -> a
    android.app.Activity b(cn.sharesdk.framework.authorize.g) -> b
cn.sharesdk.framework.authorize.g$a -> cn.sharesdk.framework.authorize.g$a:
    float[] a -> a
    float getInterpolation(float) -> getInterpolation
cn.sharesdk.framework.authorize.h -> cn.sharesdk.framework.authorize.h:
    cn.sharesdk.framework.authorize.g a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.framework.authorize.i -> cn.sharesdk.framework.authorize.i:
    cn.sharesdk.framework.authorize.h a -> a
    void run() -> run
cn.sharesdk.framework.authorize.j -> cn.sharesdk.framework.authorize.j:
    cn.sharesdk.framework.authorize.g a -> a
    void run() -> run
cn.sharesdk.framework.b -> cn.sharesdk.framework.b:
    java.lang.Runnable a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.c -> cn.sharesdk.framework.c:
    java.lang.Runnable a -> a
    cn.sharesdk.framework.FakeActivity b -> b
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.d -> cn.sharesdk.framework.d:
    cn.sharesdk.framework.PlatformActionListener a -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a() -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void a(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void b(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> b
    void a(cn.sharesdk.framework.Platform,int,java.lang.Object) -> a
    java.lang.String a(cn.sharesdk.framework.Platform) -> a
    java.lang.String b(cn.sharesdk.framework.Platform) -> b
    java.lang.String a(cn.sharesdk.framework.PlatformDb,java.lang.String[]) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d,cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.d) -> a
    java.lang.String a(cn.sharesdk.framework.d,cn.sharesdk.framework.Platform) -> a
cn.sharesdk.framework.e -> cn.sharesdk.framework.e:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.util.HashMap c -> c
    cn.sharesdk.framework.d d -> d
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.f -> cn.sharesdk.framework.f:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.lang.Object c -> c
    cn.sharesdk.framework.d d -> d
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.framework.g -> cn.sharesdk.framework.g:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE_PATH -> IMAGE_PATH
    java.lang.String FILE_PATH -> FILE_PATH
    java.lang.String TITLE -> TITLE
    java.lang.String NOTEBOOK -> NOTEBOOK
    java.lang.String STACK -> STACK
    java.lang.String TAGS -> TAGS
    java.lang.String IS_PUBLIC -> IS_PUBLIC
    java.lang.String IS_FRIEND -> IS_FRIEND
    java.lang.String IS_FAMILY -> IS_FAMILY
    java.lang.String SAFETY_LEVEL -> SAFETY_LEVEL
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String HIDDEN -> HIDDEN
    java.lang.String VENUE_NAME -> VENUE_NAME
    java.lang.String VENUE_DESCRIPTION -> VENUE_DESCRIPTION
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String IMAGE_URL -> IMAGE_URL
    java.lang.String COMMENT -> COMMENT
    java.lang.String TITLE_URL -> TITLE_URL
    java.lang.String URL -> URL
    java.lang.String ADDRESS -> ADDRESS
    java.lang.String SITE -> SITE
    java.lang.String SITE_URL -> SITE_URL
    java.lang.String GROPU_ID -> GROPU_ID
    java.lang.String EXT_INFO -> EXT_INFO
    java.lang.String SHARE_TYPE -> SHARE_TYPE
    java.lang.String MUSIC_URL -> MUSIC_URL
    java.lang.String IMAGE_DATA -> IMAGE_DATA
    java.lang.String AUTHOR -> AUTHOR
    java.lang.String SCENCE -> SCENCE
    java.lang.String CUSTOM_FLAG -> CUSTOM_FLAG
    java.lang.String EXECUTE_URL -> EXECUTE_URL
    java.lang.String INSTALL_URL -> INSTALL_URL
    java.lang.String IS_SHARE_TENCENT_WEIBO -> IS_SHARE_TENCENT_WEIBO
    java.lang.String IMAGE_ARRAY -> IMAGE_ARRAY
    java.util.HashMap params -> params
    void set(java.lang.String,java.lang.Object) -> set
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.util.HashMap toMap() -> toMap
    java.lang.String toString() -> toString
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    java.lang.String getImagePath() -> getImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    java.lang.String getImageUrl() -> getImageUrl
    void setFilePath(java.lang.String) -> setFilePath
    java.lang.String getFilePath() -> getFilePath
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getNotebook() -> getNotebook
    void setNotebook(java.lang.String) -> setNotebook
    java.lang.String getStack() -> getStack
    void setStack(java.lang.String) -> setStack
    java.lang.String[] getTags() -> getTags
    void setTags(java.lang.String[]) -> setTags
    boolean isPublic() -> isPublic
    void setPublic(boolean) -> setPublic
    boolean isFriend() -> isFriend
    void setFriend(boolean) -> setFriend
    boolean isFamily() -> isFamily
    void setFamily(boolean) -> setFamily
    int getSafetyLevel() -> getSafetyLevel
    void setSafetyLevel(int) -> setSafetyLevel
    int getContentType() -> getContentType
    void setContentType(int) -> setContentType
    int getHidden() -> getHidden
    void setHidden(int) -> setHidden
    void setVenueName(java.lang.String) -> setVenueName
    java.lang.String getVenueName() -> getVenueName
    java.lang.String getVenueDescription() -> getVenueDescription
    void setVenueDescription(java.lang.String) -> setVenueDescription
    float getLatitude() -> getLatitude
    void setLatitude(float) -> setLatitude
    float getLongitude() -> getLongitude
    void setLongitude(float) -> setLongitude
    java.lang.String getTitleUrl() -> getTitleUrl
    void setTitleUrl(java.lang.String) -> setTitleUrl
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getUrl() -> getUrl
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
    java.lang.String getMusicUrl() -> getMusicUrl
    void setMusicUrl(java.lang.String) -> setMusicUrl
    java.lang.String getSite() -> getSite
    void setSite(java.lang.String) -> setSite
    java.lang.String getSiteUrl() -> getSiteUrl
    void setSiteUrl(java.lang.String) -> setSiteUrl
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getAuthor() -> getAuthor
    void setAuthor(java.lang.String) -> setAuthor
    android.graphics.Bitmap getImageData() -> getImageData
    void setImageData(android.graphics.Bitmap) -> setImageData
    int getShareType() -> getShareType
    void setShareType(int) -> setShareType
    int getScence() -> getScence
    void setScence(int) -> setScence
    java.lang.String getExtInfo() -> getExtInfo
    void setExtInfo(java.lang.String) -> setExtInfo
    java.lang.String[] getCustomFlag() -> getCustomFlag
    void setCustomFlag(java.lang.String[]) -> setCustomFlag
    java.lang.String getExecuteUrl() -> getExecuteUrl
    void setExecuteUrl() -> setExecuteUrl
    java.lang.String getInstallUrl() -> getInstallUrl
    void setInstallUrl() -> setInstallUrl
    boolean isShareTencentWeibo() -> isShareTencentWeibo
    void setShareTencentWeibo(boolean) -> setShareTencentWeibo
    java.lang.String[] getImageArray() -> getImageArray
    void setImageArray(java.lang.String[]) -> setImageArray
cn.sharesdk.framework.h -> cn.sharesdk.framework.h:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.framework.authorize.SSOListener c -> c
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    int c() -> c
    void b(cn.sharesdk.framework.authorize.AuthorizeListener) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener getAuthorizeListener() -> getAuthorizeListener
    void a(cn.sharesdk.framework.authorize.SSOListener) -> a
    cn.sharesdk.framework.authorize.SSOListener getSSOListener() -> getSSOListener
cn.sharesdk.framework.i -> cn.sharesdk.framework.i:
    cn.sharesdk.framework.Platform a -> a
    android.content.Context b -> b
    cn.sharesdk.framework.PlatformDb c -> c
    cn.sharesdk.framework.d d -> d
    int e -> e
    int f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    void a(java.lang.String) -> a
    int a() -> a
    int b() -> b
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener c() -> c
    boolean d() -> d
    void a(boolean) -> a
    boolean e() -> e
    boolean f() -> f
    boolean j() -> j
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
    void a(int,java.lang.Object) -> a
    void b(int,java.lang.Object) -> b
    void c(int,java.lang.Object) -> c
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,int,int) -> a
    void c(java.lang.String) -> c
    void a(int,int,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,short,java.util.HashMap,java.util.HashMap) -> a
    cn.sharesdk.framework.PlatformDb g() -> g
    void h() -> h
    java.lang.String a(java.lang.String,boolean) -> a
    java.lang.String k() -> k
    cn.sharesdk.framework.PlatformActionListener i() -> i
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    boolean a(cn.sharesdk.framework.i) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.framework.i) -> b
cn.sharesdk.framework.j -> cn.sharesdk.framework.j:
    int a -> a
    java.lang.Object b -> b
    cn.sharesdk.framework.i c -> c
    void run() -> run
cn.sharesdk.framework.k -> cn.sharesdk.framework.k:
    java.lang.String[] a -> a
    cn.sharesdk.framework.i b -> b
    void run() -> run
cn.sharesdk.framework.l -> cn.sharesdk.framework.l:
    android.os.Handler a -> a
    java.lang.String b -> b
    void a() -> a
    void a(int,int,java.lang.Object) -> a
    void b() -> b
    void b(int,int,java.lang.Object) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
cn.sharesdk.framework.m -> cn.sharesdk.framework.m:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message) -> onTooManyRedirects
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message) -> onFormResubmission
    void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String) -> onReceivedHttpAuthRequest
    boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> shouldOverrideKeyEvent
    void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
cn.sharesdk.framework.n -> cn.sharesdk.framework.n:
    boolean a -> a
    java.util.ArrayList a(android.content.Context) -> a
    android.content.pm.PackageInfo c(android.content.Context) -> c
    java.util.ArrayList a(android.content.pm.PackageInfo,android.content.Context) -> a
    java.util.ArrayList d(android.content.Context) -> d
    void a(java.util.ArrayList) -> a
    void a(android.content.Context,java.lang.String,android.os.Handler,boolean,int) -> a
    void b(android.content.Context) -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    java.lang.String a(int,java.lang.String,java.util.HashMap) -> a
    boolean a(java.util.HashMap,java.util.HashMap) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,android.graphics.Bitmap) -> a
    java.lang.String a() -> a
    int b() -> b
    void a(int,int,java.util.HashMap) -> a
cn.sharesdk.framework.network.HttpResponseCallback -> cn.sharesdk.framework.network.HttpResponseCallback:
    void onResponse(org.apache.http.HttpResponse) -> onResponse
cn.sharesdk.framework.network.OnReadListener -> cn.sharesdk.framework.network.OnReadListener:
    void onRead(long) -> onRead
cn.sharesdk.framework.network.ProgressCallback -> cn.sharesdk.framework.network.ProgressCallback:
    void onProgress(long,long) -> onProgress
cn.sharesdk.framework.network.RawNetworkCallback -> cn.sharesdk.framework.network.RawNetworkCallback:
    void onResponse(java.io.InputStream) -> onResponse
cn.sharesdk.framework.network.a -> cn.sharesdk.framework.network.a:
    byte[] a() -> a
cn.sharesdk.framework.network.b -> cn.sharesdk.framework.network.b:
    cn.sharesdk.framework.network.a a -> a
    cn.sharesdk.framework.network.b a(byte[]) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.c -> cn.sharesdk.framework.network.c:
    java.io.InputStream a -> a
    long b -> b
    cn.sharesdk.framework.network.OnReadListener c -> c
    int read() -> read
    int read(byte[],int,int) -> read
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    void reset() -> reset
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void a(cn.sharesdk.framework.network.OnReadListener) -> a
cn.sharesdk.framework.network.d -> cn.sharesdk.framework.network.d:
    java.io.File a -> a
    void a(java.io.File) -> a
    void a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.e -> cn.sharesdk.framework.network.e:
    long a -> a
    cn.sharesdk.framework.network.OnReadListener b -> b
    java.io.InputStream a() -> a
    long b() -> b
    org.apache.http.entity.InputStreamEntity c() -> c
cn.sharesdk.framework.network.f -> cn.sharesdk.framework.network.f:
    java.lang.String a -> a
    java.lang.Object b -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.network.g -> cn.sharesdk.framework.network.g:
    java.util.ArrayList a -> a
    cn.sharesdk.framework.network.g a(cn.sharesdk.framework.network.e) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.network.h -> cn.sharesdk.framework.network.h:
    java.util.ArrayList a -> a
    int b -> b
    void a(java.io.InputStream) -> a
    boolean a() -> a
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
cn.sharesdk.framework.network.i -> cn.sharesdk.framework.network.i:
    int a -> a
    int b -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
    void a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,cn.sharesdk.framework.network.HttpResponseCallback) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList,java.util.ArrayList) -> a
    org.apache.http.client.methods.HttpPost a(java.lang.String,java.util.ArrayList) -> a
    void a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,cn.sharesdk.framework.network.RawNetworkCallback) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList) -> b
    java.lang.String a(java.util.ArrayList) -> a
    org.apache.http.client.HttpClient a() -> a
cn.sharesdk.framework.network.j -> cn.sharesdk.framework.network.j:
    java.util.HashMap a -> a
    cn.sharesdk.framework.network.i b -> b
    void onResponse(org.apache.http.HttpResponse) -> onResponse
cn.sharesdk.framework.network.k -> cn.sharesdk.framework.network.k:
    cn.sharesdk.framework.network.k c -> c
    cn.sharesdk.framework.network.k a() -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.lang.String,int) -> b
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.f,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> b
    void a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.network.e,cn.sharesdk.framework.network.RawNetworkCallback,java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.String,int) -> b
    void a(java.lang.String,int) -> a
cn.sharesdk.framework.network.l -> cn.sharesdk.framework.network.l:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
cn.sharesdk.framework.network.m -> cn.sharesdk.framework.network.m:
    cn.sharesdk.framework.network.l a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
cn.sharesdk.framework.network.n -> cn.sharesdk.framework.network.n:
    java.lang.StringBuilder a -> a
    cn.sharesdk.framework.network.n a(java.lang.String) -> a
    java.io.InputStream a() -> a
    java.lang.String toString() -> toString
    long b() -> b
cn.sharesdk.framework.o -> cn.sharesdk.framework.o:
    cn.sharesdk.framework.n a -> a
    int a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.sharesdk.framework.p -> cn.sharesdk.framework.p:
    cn.sharesdk.framework.p$a b -> b
    android.content.Context c -> c
    java.util.HashMap d -> d
    java.util.ArrayList e -> e
    java.util.HashMap f -> f
    java.util.HashMap g -> g
    java.util.HashMap h -> h
    java.util.HashMap i -> i
    java.util.HashMap j -> j
    java.lang.String k -> k
    boolean l -> l
    java.lang.String m -> m
    boolean n -> n
    boolean o -> o
    void a(java.lang.String) -> a
    void a(boolean) -> a
    void a() -> a
    void j() -> j
    void k() -> k
    void a(android.os.Message) -> a
    void l() -> l
    void m() -> m
    void n() -> n
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void a(java.lang.Class) -> a
    void b(java.lang.Class) -> b
    cn.sharesdk.framework.Service c(java.lang.Class) -> c
    void d(java.lang.Class) -> d
    void e(java.lang.Class) -> e
    cn.sharesdk.framework.Platform b(java.lang.String) -> b
    cn.sharesdk.framework.Platform[] c() -> c
    java.lang.String d() -> d
    int e() -> e
    void a(int) -> a
    void b(int) -> b
    void b(boolean) -> b
    boolean f() -> f
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String c(int) -> c
    int c(java.lang.String) -> c
    void a(java.lang.String,java.lang.String) -> a
    void a(int,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String a(int,java.lang.String) -> a
    boolean g() -> g
    boolean h() -> h
    boolean a(java.util.HashMap) -> a
    boolean a(cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    java.lang.String a(java.lang.String,boolean,int,java.lang.String) -> a
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    void i() -> i
    java.lang.String a(cn.sharesdk.framework.p) -> a
    boolean a(cn.sharesdk.framework.p,cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
cn.sharesdk.framework.p$a -> cn.sharesdk.framework.p$a:
    cn.sharesdk.framework.p$a a -> a
    cn.sharesdk.framework.p$a b -> b
    cn.sharesdk.framework.p$a c -> c
    cn.sharesdk.framework.p$a[] d -> d
    cn.sharesdk.framework.p$a[] values() -> values
    cn.sharesdk.framework.p$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.q -> cn.sharesdk.framework.q:
    cn.sharesdk.framework.p a -> a
    void run() -> run
cn.sharesdk.framework.r -> cn.sharesdk.framework.r:
    cn.sharesdk.framework.statistics.a a -> a
    cn.sharesdk.framework.p b -> b
    void run() -> run
cn.sharesdk.framework.s -> cn.sharesdk.framework.s:
    android.widget.ImageView a -> a
    cn.sharesdk.framework.TitleLayout b -> b
    void setVisibility(int) -> setVisibility
cn.sharesdk.framework.statistics.NewAppReceiver -> cn.sharesdk.framework.statistics.NewAppReceiver:
    java.lang.String[] a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver b -> b
    android.content.Context c -> c
    android.content.IntentFilter[] d -> d
    android.os.Handler e -> e
    void a(android.content.Context) -> a
    void a() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.statistics.NewAppReceiver$a -> cn.sharesdk.framework.statistics.NewAppReceiver$a:
    cn.sharesdk.framework.utils.f a -> a
    java.util.ArrayList a() -> a
    void a(java.util.ArrayList) -> a
    long b() -> b
    void a(long) -> a
cn.sharesdk.framework.statistics.NewAppReceiver$b -> cn.sharesdk.framework.statistics.NewAppReceiver$b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver$a b -> b
    void a(android.content.Context) -> a
    void run() -> run
    java.util.HashMap a(java.util.ArrayList) -> a
    java.util.ArrayList a(java.util.HashMap) -> a
cn.sharesdk.framework.statistics.a -> cn.sharesdk.framework.statistics.a:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a e -> e
    cn.sharesdk.framework.statistics.a.c f -> f
    java.lang.String b -> b
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String c -> c
    boolean d -> d
    boolean i -> i
    boolean j -> j
    cn.sharesdk.framework.network.i k -> k
    cn.sharesdk.framework.statistics.a a(android.content.Context) -> a
    void a(boolean) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    boolean a(java.lang.String) -> a
    long h() -> h
    long b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(java.lang.String,java.util.ArrayList) -> a
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    java.lang.String g(java.lang.String) -> g
    java.lang.String a(java.lang.String,cn.sharesdk.framework.statistics.a$a) -> a
    java.lang.String a(android.graphics.Bitmap,cn.sharesdk.framework.statistics.a$a) -> a
    java.lang.String d(java.lang.String) -> d
    java.lang.String a(android.graphics.Bitmap) -> a
    void a() -> a
    boolean c(java.lang.String,java.lang.String) -> c
    java.lang.String h(java.lang.String) -> h
    java.lang.String a(java.lang.String,byte[]) -> a
    java.lang.String i(java.lang.String) -> i
    org.json.JSONObject i() -> i
    java.lang.String a(java.lang.String,java.lang.String,int,boolean,java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> a
    java.lang.String d(java.lang.String,java.lang.String) -> d
    java.util.HashMap e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String f(java.lang.String) -> f
    java.lang.String b(java.lang.String,java.lang.String) -> b
cn.sharesdk.framework.statistics.a$a -> cn.sharesdk.framework.statistics.a$a:
    cn.sharesdk.framework.statistics.a$a a -> a
    cn.sharesdk.framework.statistics.a$a b -> b
    cn.sharesdk.framework.statistics.a$a[] c -> c
    cn.sharesdk.framework.statistics.a$a[] values() -> values
    cn.sharesdk.framework.statistics.a$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.statistics.a.a -> cn.sharesdk.framework.statistics.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.sharesdk.framework.statistics.a.b -> cn.sharesdk.framework.statistics.a.b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a.a b -> b
    cn.sharesdk.framework.statistics.a.b c -> c
    cn.sharesdk.framework.statistics.a.b a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
cn.sharesdk.framework.statistics.a.c -> cn.sharesdk.framework.statistics.a.c:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    cn.sharesdk.framework.statistics.a.c c -> c
    cn.sharesdk.framework.statistics.a.c a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Boolean) -> a
    void a(java.lang.String,java.lang.Long) -> a
    long b(java.lang.String) -> b
    void a(java.lang.String,int) -> a
    int c(java.lang.String) -> c
    long a() -> a
    boolean b() -> b
    boolean c() -> c
    int d() -> d
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String g(java.lang.String) -> g
    void h(java.lang.String) -> h
    java.lang.String e() -> e
    void a(long) -> a
    java.lang.Long f() -> f
    void a(boolean) -> a
    boolean g() -> g
    void b(long) -> b
    java.lang.Long h() -> h
cn.sharesdk.framework.statistics.a.d -> cn.sharesdk.framework.statistics.a.d:
    java.lang.String a -> a
    java.util.ArrayList b -> b
cn.sharesdk.framework.statistics.a.e -> cn.sharesdk.framework.statistics.a.e:
    int a -> a
    int b -> b
    int c -> c
    long a(android.content.Context,java.lang.String,long) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context) -> a
cn.sharesdk.framework.statistics.b -> cn.sharesdk.framework.statistics.b:
    cn.sharesdk.framework.statistics.b b -> b
    android.content.Context c -> c
    cn.sharesdk.framework.utils.b d -> d
    cn.sharesdk.framework.statistics.a e -> e
    java.lang.String f -> f
    android.os.Handler g -> g
    boolean h -> h
    int i -> i
    boolean j -> j
    long k -> k
    boolean l -> l
    cn.sharesdk.framework.statistics.b a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void a(android.os.Handler) -> a
    void a(boolean) -> a
    void a(int) -> a
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    void b(cn.sharesdk.framework.statistics.b.c) -> b
    void c(android.os.Message) -> c
    void c(cn.sharesdk.framework.statistics.b.c) -> c
    void c() -> c
    boolean d() -> d
    void e() -> e
cn.sharesdk.framework.statistics.b.a -> cn.sharesdk.framework.statistics.b.a:
    int c -> c
    long d -> d
    int a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.b -> cn.sharesdk.framework.statistics.b.b:
    int n -> n
    long o -> o
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.c -> cn.sharesdk.framework.statistics.b.c:
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long e() -> e
    long d() -> d
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.d -> cn.sharesdk.framework.statistics.b.d:
    int d -> d
    long n -> n
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.e -> cn.sharesdk.framework.statistics.b.e:
    int b -> b
    long c -> c
    long a -> a
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.f -> cn.sharesdk.framework.statistics.b.f:
    int p -> p
    long q -> q
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.statistics.b.f$a d -> d
    java.lang.String n -> n
    java.lang.String[] o -> o
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.f$a -> cn.sharesdk.framework.statistics.b.f$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.util.ArrayList f -> f
    java.util.HashMap g -> g
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.g -> cn.sharesdk.framework.statistics.b.g:
    int a -> a
    long b -> b
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.utils.BitmapHelper -> cn.sharesdk.framework.utils.BitmapHelper:
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String) -> getBitmap
    java.lang.String downloadBitmap(android.content.Context,java.lang.String) -> downloadBitmap
    java.lang.String saveViewToImage(android.view.View) -> saveViewToImage
    java.lang.String saveViewToImage(android.view.View,int,int) -> saveViewToImage
    android.graphics.Bitmap captureView(android.view.View,int,int) -> captureView
    android.graphics.Bitmap blur(android.graphics.Bitmap,int,int) -> blur
    android.graphics.Bitmap a(android.graphics.Bitmap,int,boolean) -> a
    android.graphics.Bitmap roundBitmap(android.graphics.Bitmap,int,int,float,float,float,float) -> roundBitmap
    int[] fixRect(int[],int[]) -> fixRect
    int[] fixRect_2(int[],int[]) -> fixRect_2
    java.lang.String saveBitmap(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int) -> saveBitmap
    java.lang.String saveBitmap(android.content.Context,android.graphics.Bitmap) -> saveBitmap
    android.graphics.Bitmap$CompressFormat getBmpFormat(byte[]) -> getBmpFormat
    android.graphics.Bitmap$CompressFormat getBmpFormat(java.lang.String) -> getBmpFormat
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    boolean a(byte[],byte[]) -> a
    android.graphics.Bitmap cropBitmap(android.graphics.Bitmap,int,int,int,int) -> cropBitmap
    boolean isBlackBitmap(android.graphics.Bitmap) -> isBlackBitmap
    int mixAlpha(int,int) -> mixAlpha
cn.sharesdk.framework.utils.Escaper -> cn.sharesdk.framework.utils.Escaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.Appendable escape(java.lang.Appendable) -> escape
cn.sharesdk.framework.utils.R -> cn.sharesdk.framework.utils.R:
    java.lang.String a -> a
    float b -> b
    int dipToPx(android.content.Context,int) -> dipToPx
    int pxToDip(android.content.Context,int) -> pxToDip
    int[] getScreenSize(android.content.Context) -> getScreenSize
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    int getResId(java.lang.Class,java.lang.String) -> getResId
    int getBitmapRes(android.content.Context,java.lang.String) -> getBitmapRes
    int getStringRes(android.content.Context,java.lang.String) -> getStringRes
    int getStringArrayRes(android.content.Context,java.lang.String) -> getStringArrayRes
    int getLayoutRes(android.content.Context,java.lang.String) -> getLayoutRes
    int getStyleRes(android.content.Context,java.lang.String) -> getStyleRes
    int getIdRes(android.content.Context,java.lang.String) -> getIdRes
    int getColorRes(android.content.Context,java.lang.String) -> getColorRes
    int getRawRes(android.content.Context,java.lang.String) -> getRawRes
    int getPluralsRes(android.content.Context,java.lang.String) -> getPluralsRes
    void setCacheRoot(java.lang.String) -> setCacheRoot
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    java.lang.String getImageCachePath(android.content.Context) -> getImageCachePath
    void clearCache(android.content.Context) -> clearCache
    void deleteFileAndFolder(java.io.File) -> deleteFileAndFolder
    java.lang.String toWordText(java.lang.String,int) -> toWordText
    int getTextLengthInWord(java.lang.String) -> getTextLengthInWord
    long strToDate(java.lang.String) -> strToDate
    long dateStrToLong(java.lang.String) -> dateStrToLong
    java.util.Date longToDate(long) -> longToDate
    java.lang.String longToTime(long,int) -> longToTime
    long parseTwitterDate(java.lang.String) -> parseTwitterDate
    int[] covertTimeInYears(long) -> covertTimeInYears
    android.net.Uri pathToContentUri(android.content.Context,java.lang.String) -> pathToContentUri
    java.lang.String contentUriToPath(android.content.Context,android.net.Uri) -> contentUriToPath
    java.lang.String encodeUrl(android.os.Bundle) -> encodeUrl
    java.lang.String encodeUrl(java.util.ArrayList) -> encodeUrl
    android.os.Bundle urlToBundle(java.lang.String) -> urlToBundle
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    boolean copyFile(java.lang.String,java.lang.String) -> copyFile
    void copyFile(java.io.FileInputStream,java.io.FileOutputStream) -> copyFile
    boolean saveObjectToFile(java.lang.String,java.lang.Object) -> saveObjectToFile
    java.lang.Object readObjectFromFile(java.lang.String) -> readObjectFromFile
cn.sharesdk.framework.utils.UIHandler -> cn.sharesdk.framework.utils.UIHandler:
    java.lang.String[] prays -> prays
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void reset() -> reset
    void printPray() -> printPray
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$000(android.os.Message) -> access$000
cn.sharesdk.framework.utils.a -> cn.sharesdk.framework.utils.a:
    cn.sharesdk.framework.utils.d a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    byte[] a(byte[],java.lang.String) -> a
    byte[] a(byte[],byte[]) -> a
    java.lang.String b(byte[]) -> b
    java.lang.String a(byte[],int,int) -> a
    java.lang.String b(java.lang.String) -> b
    byte[] c(java.lang.String) -> c
    byte[] c(byte[]) -> c
    byte[] a(java.io.InputStream) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
cn.sharesdk.framework.utils.b -> cn.sharesdk.framework.utils.b:
    android.content.Context a -> a
    cn.sharesdk.framework.utils.b b -> b
    cn.sharesdk.framework.utils.b a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    java.lang.Object b(java.lang.String) -> b
    java.lang.String m() -> m
    java.lang.String n() -> n
    int o() -> o
    boolean A() -> A
    boolean B() -> B
    java.lang.String p() -> p
    java.lang.String C() -> C
    void c(java.lang.String) -> c
    java.lang.String q() -> q
    java.lang.String r() -> r
    int s() -> s
    java.lang.String t() -> t
    java.util.ArrayList a(boolean) -> a
    boolean a(android.content.pm.PackageInfo) -> a
    java.lang.String u() -> u
    boolean a(java.lang.String) -> a
    java.lang.String v() -> v
    boolean w() -> w
    java.lang.String x() -> x
    java.lang.String y() -> y
    java.lang.String z() -> z
cn.sharesdk.framework.utils.b$1 -> cn.sharesdk.framework.utils.b$1:
cn.sharesdk.framework.utils.b$a -> cn.sharesdk.framework.utils.b$a:
    boolean a -> a
    java.util.concurrent.BlockingQueue c -> c
    cn.sharesdk.framework.utils.b b -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder a() -> a
cn.sharesdk.framework.utils.c -> cn.sharesdk.framework.utils.c:
    char[] a -> a
    java.lang.String a(byte[]) -> a
cn.sharesdk.framework.utils.d -> cn.sharesdk.framework.utils.d:
    java.util.HashMap a(java.lang.String) -> a
    java.util.HashMap a(org.json.JSONObject) -> a
    java.util.ArrayList a(org.json.JSONArray) -> a
    java.lang.String a(java.util.HashMap) -> a
    org.json.JSONObject b(java.util.HashMap) -> b
    boolean a(java.lang.Object) -> a
    java.util.ArrayList b(java.lang.Object) -> b
    org.json.JSONArray a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.e -> cn.sharesdk.framework.utils.e:
    android.content.Context c -> c
    java.lang.String d -> d
    cn.sharesdk.framework.utils.e$a a -> a
    cn.sharesdk.framework.utils.e$b b -> b
    void a(android.content.Context) -> a
    int a(java.lang.Throwable) -> a
    int a(java.lang.Object,java.lang.Object[]) -> a
    int b(java.lang.Object,java.lang.Object[]) -> b
    int b(java.lang.Throwable) -> b
    int c(java.lang.Throwable) -> c
    int c(java.lang.Object,java.lang.Object[]) -> c
    int a(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> a
    android.content.Context a() -> a
    java.lang.String b() -> b
cn.sharesdk.framework.utils.e$a -> cn.sharesdk.framework.utils.e$a:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
cn.sharesdk.framework.utils.e$b -> cn.sharesdk.framework.utils.e$b:
    int a(int,java.lang.String) -> a
    int b(int,java.lang.String) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(int) -> a
cn.sharesdk.framework.utils.f -> cn.sharesdk.framework.utils.f:
    java.io.File a -> a
    java.util.HashMap b -> b
    void a(java.lang.String) -> a
    void a() -> a
    void b(java.lang.String,java.lang.Object) -> b
    java.lang.Object e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Long) -> a
    long c(java.lang.String) -> c
    void a(java.lang.String,java.lang.Object) -> a
    java.lang.Object d(java.lang.String) -> d
cn.sharesdk.framework.utils.g -> cn.sharesdk.framework.utils.g:
    cn.sharesdk.framework.utils.g$b a -> a
    cn.sharesdk.framework.utils.h b -> b
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    cn.sharesdk.framework.utils.g$b a() -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList) -> a
    java.util.ArrayList a(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> a
    java.util.ArrayList b(java.lang.String,java.util.ArrayList) -> b
    java.util.ArrayList b(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> b
    java.util.ArrayList c(java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> c
    void a(java.lang.String,java.lang.String) -> a
    java.util.ArrayList a(java.lang.String,java.lang.String,java.util.ArrayList,cn.sharesdk.framework.utils.g$a) -> a
    java.lang.String a(java.lang.String) -> a
    java.util.ArrayList a(long,java.util.ArrayList,java.lang.String) -> a
    java.lang.String b(java.util.ArrayList) -> b
    java.util.ArrayList a(long,java.lang.String) -> a
    java.util.ArrayList a(java.util.ArrayList) -> a
cn.sharesdk.framework.utils.g$1 -> cn.sharesdk.framework.utils.g$1:
    int[] a -> a
cn.sharesdk.framework.utils.g$a -> cn.sharesdk.framework.utils.g$a:
    cn.sharesdk.framework.utils.g$a a -> a
    cn.sharesdk.framework.utils.g$a b -> b
    cn.sharesdk.framework.utils.g$a[] c -> c
    cn.sharesdk.framework.utils.g$a[] values() -> values
    cn.sharesdk.framework.utils.g$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.utils.g$b -> cn.sharesdk.framework.utils.g$b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
cn.sharesdk.framework.utils.h -> cn.sharesdk.framework.utils.h:
    char[] a -> a
    char[] b -> b
    boolean c -> c
    boolean[] d -> d
    boolean[] a(java.lang.String) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    char[] a(int) -> a
cn.sharesdk.framework.utils.i -> cn.sharesdk.framework.utils.i:
    java.lang.Object a(java.lang.Object) -> a
cn.sharesdk.framework.utils.j -> cn.sharesdk.framework.utils.j:
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.framework.utils.k -> cn.sharesdk.framework.utils.k:
    java.lang.ThreadLocal a -> a
    char[] a(int) -> a
    int a(java.lang.CharSequence,int,int) -> a
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String a(java.lang.String,int) -> a
    java.lang.Appendable escape(java.lang.Appendable) -> escape
    int b(java.lang.CharSequence,int,int) -> b
    char[] a(char[],int,int) -> a
cn.sharesdk.framework.utils.l -> cn.sharesdk.framework.utils.l:
    int a -> a
    char[] b -> b
    java.lang.Appendable c -> c
    cn.sharesdk.framework.utils.k d -> d
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(char) -> append
    void a(char[],int) -> a
cn.sharesdk.framework.utils.m -> cn.sharesdk.framework.utils.m:
    char[] a() -> a
    java.lang.Object initialValue() -> initialValue
cn.sharesdk.framework.utils.n -> cn.sharesdk.framework.utils.n:
    java.util.HashMap a(java.lang.String) -> a
cn.sharesdk.framework.utils.n$a -> cn.sharesdk.framework.utils.n$a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap a() -> a
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
cn.sharesdk.onekeyshare.CustomerLogo -> cn.sharesdk.onekeyshare.CustomerLogo:
    java.lang.String label -> label
    android.graphics.Bitmap enableLogo -> enableLogo
    android.graphics.Bitmap disableLogo -> disableLogo
    android.view.View$OnClickListener listener -> listener
cn.sharesdk.onekeyshare.EditPageFakeActivity -> cn.sharesdk.onekeyshare.EditPageFakeActivity:
    java.util.List platforms -> platforms
    java.util.HashMap shareParamMap -> shareParamMap
    boolean dialogMode -> dialogMode
    android.view.View backgroundView -> backgroundView
    java.util.ArrayList toFriendList -> toFriendList
    java.util.ArrayList shareImageList -> shareImageList
    void setShareData(java.util.HashMap) -> setShareData
    void setDialogMode() -> setDialogMode
    void setBackgroundView(android.view.View) -> setBackgroundView
    void setPlatforms(java.util.List) -> setPlatforms
    java.lang.String getLogoName(java.lang.String) -> getLogoName
    boolean isShowAtUserLayout(java.lang.String) -> isShowAtUserLayout
    java.lang.String getAtUserButtonText(java.lang.String) -> getAtUserButtonText
    java.lang.String getJoinSelectedUser(java.util.HashMap) -> getJoinSelectedUser
    boolean initImageList(cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageListResultsCallback) -> initImageList
    void removeImage(cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> removeImage
    void setResultAndFinish() -> setResultAndFinish
    boolean onFinish() -> onFinish
    java.util.ArrayList access$0(cn.sharesdk.onekeyshare.EditPageFakeActivity) -> access$0
    android.app.Activity access$1(cn.sharesdk.onekeyshare.EditPageFakeActivity) -> access$1
cn.sharesdk.onekeyshare.EditPageFakeActivity$1 -> cn.sharesdk.onekeyshare.EditPageFakeActivity$1:
    cn.sharesdk.onekeyshare.EditPageFakeActivity this$0 -> this$0
    cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageListResultsCallback doInBackground(java.lang.Object[]) -> doInBackground
    void onPostExecute(cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageListResultsCallback) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo -> cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo:
    java.lang.String paramName -> paramName
    java.lang.String srcValue -> srcValue
    android.graphics.Bitmap bitmap -> bitmap
cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageListResultsCallback -> cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageListResultsCallback:
    void onFinish(java.util.ArrayList) -> onFinish
cn.sharesdk.onekeyshare.FollowerListFakeActivity -> cn.sharesdk.onekeyshare.FollowerListFakeActivity:
    cn.sharesdk.framework.Platform platform -> platform
    void setPlatform(cn.sharesdk.framework.Platform) -> setPlatform
    cn.sharesdk.framework.Platform getPlatform() -> getPlatform
    boolean isRadioMode(java.lang.String) -> isRadioMode
    void setResultForChecked(java.util.ArrayList) -> setResultForChecked
    cn.sharesdk.onekeyshare.FollowerListFakeActivity$FollowersResult parseFollowers(java.lang.String,java.util.HashMap,java.util.HashMap) -> parseFollowers
cn.sharesdk.onekeyshare.FollowerListFakeActivity$FollowersResult -> cn.sharesdk.onekeyshare.FollowerListFakeActivity$FollowersResult:
    java.util.ArrayList list -> list
    boolean hasNextPage -> hasNextPage
cn.sharesdk.onekeyshare.FollowerListFakeActivity$Following -> cn.sharesdk.onekeyshare.FollowerListFakeActivity$Following:
    boolean checked -> checked
    java.lang.String screenName -> screenName
    java.lang.String description -> description
    java.lang.String uid -> uid
    java.lang.String icon -> icon
    java.lang.String atName -> atName
cn.sharesdk.onekeyshare.OnekeyShare -> cn.sharesdk.onekeyshare.OnekeyShare:
    int MSG_TOAST -> MSG_TOAST
    int MSG_ACTION_CCALLBACK -> MSG_ACTION_CCALLBACK
    int MSG_CANCEL_NOTIFY -> MSG_CANCEL_NOTIFY
    java.util.HashMap shareParamsMap -> shareParamsMap
    java.util.ArrayList customers -> customers
    int notifyIcon -> notifyIcon
    java.lang.String notifyTitle -> notifyTitle
    boolean silent -> silent
    cn.sharesdk.framework.PlatformActionListener callback -> callback
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> customizeCallback
    boolean dialogMode -> dialogMode
    boolean disableSSO -> disableSSO
    java.util.HashMap hiddenPlatforms -> hiddenPlatforms
    android.view.View bgView -> bgView
    cn.sharesdk.onekeyshare.OnekeyShareTheme theme -> theme
    android.content.Context context -> context
    cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener onShareButtonClickListener -> onShareButtonClickListener
    void show(android.content.Context) -> show
    void setTheme(cn.sharesdk.onekeyshare.OnekeyShareTheme) -> setTheme
    void setNotification(int,java.lang.String) -> setNotification
    void setAddress(java.lang.String) -> setAddress
    void setTitle(java.lang.String) -> setTitle
    void setTitleUrl(java.lang.String) -> setTitleUrl
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setImagePath(java.lang.String) -> setImagePath
    void setImageUrl(java.lang.String) -> setImageUrl
    void setUrl(java.lang.String) -> setUrl
    void setFilePath(java.lang.String) -> setFilePath
    void setComment(java.lang.String) -> setComment
    void setSite(java.lang.String) -> setSite
    void setSiteUrl(java.lang.String) -> setSiteUrl
    void setVenueName(java.lang.String) -> setVenueName
    void setVenueDescription(java.lang.String) -> setVenueDescription
    void setLatitude(float) -> setLatitude
    void setLongitude(float) -> setLongitude
    void setSilent(boolean) -> setSilent
    void setPlatform(java.lang.String) -> setPlatform
    void setInstallUrl(java.lang.String) -> setInstallUrl
    void setExecuteUrl(java.lang.String) -> setExecuteUrl
    void setMusicUrl(java.lang.String) -> setMusicUrl
    void setCallback(cn.sharesdk.framework.PlatformActionListener) -> setCallback
    cn.sharesdk.framework.PlatformActionListener getCallback() -> getCallback
    void setShareContentCustomizeCallback(cn.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> setShareContentCustomizeCallback
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback getShareContentCustomizeCallback() -> getShareContentCustomizeCallback
    void setCustomerLogo(android.graphics.Bitmap,android.graphics.Bitmap,java.lang.String,android.view.View$OnClickListener) -> setCustomerLogo
    void disableSSOWhenAuthorize() -> disableSSOWhenAuthorize
    void setDialogMode() -> setDialogMode
    void addHiddenPlatform(java.lang.String) -> addHiddenPlatform
    void setViewToShare(android.view.View) -> setViewToShare
    void setImageArray(java.lang.String[]) -> setImageArray
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void setOnShareButtonClickListener(cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener) -> setOnShareButtonClickListener
    void share(java.util.HashMap) -> share
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification(long,java.lang.String) -> showNotification
    void setShareFromQQAuthSupport(boolean) -> setShareFromQQAuthSupport
cn.sharesdk.onekeyshare.OnekeyShare$1 -> cn.sharesdk.onekeyshare.OnekeyShare$1:
    cn.sharesdk.onekeyshare.OnekeyShare this$0 -> this$0
    void doShare(java.util.HashMap) -> doShare
cn.sharesdk.onekeyshare.OnekeyShareTheme -> cn.sharesdk.onekeyshare.OnekeyShareTheme:
    cn.sharesdk.onekeyshare.OnekeyShareTheme CLASSIC -> CLASSIC
    cn.sharesdk.onekeyshare.OnekeyShareTheme SKYBLUE -> SKYBLUE
    cn.sharesdk.onekeyshare.OnekeyShareTheme[] ENUM$VALUES -> ENUM$VALUES
    cn.sharesdk.onekeyshare.OnekeyShareTheme[] values() -> values
    cn.sharesdk.onekeyshare.OnekeyShareTheme valueOf(java.lang.String) -> valueOf
cn.sharesdk.onekeyshare.PicViewer -> cn.sharesdk.onekeyshare.PicViewer:
    android.widget.ImageView ivViewer -> ivViewer
    android.graphics.Bitmap pic -> pic
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.PlatformListFakeActivity -> cn.sharesdk.onekeyshare.PlatformListFakeActivity:
    java.util.HashMap shareParamsMap -> shareParamsMap
    boolean silent -> silent
    java.util.ArrayList customerLogos -> customerLogos
    java.util.HashMap hiddenPlatforms -> hiddenPlatforms
    boolean canceled -> canceled
    android.view.View backgroundView -> backgroundView
    cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener onShareButtonClickListener -> onShareButtonClickListener
    boolean dialogMode -> dialogMode
    cn.sharesdk.onekeyshare.ThemeShareCallback themeShareCallback -> themeShareCallback
    void onCreate() -> onCreate
    boolean onKeyEvent(int,android.view.KeyEvent) -> onKeyEvent
    void setCanceled(boolean) -> setCanceled
    boolean onFinish() -> onFinish
    void show(android.content.Context,android.content.Intent) -> show
    java.util.HashMap getShareParamsMap() -> getShareParamsMap
    void setShareParamsMap(java.util.HashMap) -> setShareParamsMap
    boolean isSilent() -> isSilent
    void setSilent(boolean) -> setSilent
    java.util.ArrayList getCustomerLogos() -> getCustomerLogos
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    java.util.HashMap getHiddenPlatforms() -> getHiddenPlatforms
    void setHiddenPlatforms(java.util.HashMap) -> setHiddenPlatforms
    android.view.View getBackgroundView() -> getBackgroundView
    void setBackgroundView(android.view.View) -> setBackgroundView
    cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener getOnShareButtonClickListener() -> getOnShareButtonClickListener
    void setOnShareButtonClickListener(cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener) -> setOnShareButtonClickListener
    boolean isDialogMode() -> isDialogMode
    void setDialogMode(boolean) -> setDialogMode
    cn.sharesdk.onekeyshare.ThemeShareCallback getThemeShareCallback() -> getThemeShareCallback
    void setThemeShareCallback(cn.sharesdk.onekeyshare.ThemeShareCallback) -> setThemeShareCallback
    void onShareButtonClick(android.view.View,java.util.List) -> onShareButtonClick
    void showEditPage(java.util.List) -> showEditPage
    void showEditPage(android.content.Context,cn.sharesdk.framework.Platform) -> showEditPage
    void showEditPage(android.content.Context,java.util.List) -> showEditPage
cn.sharesdk.onekeyshare.PlatformListFakeActivity$1 -> cn.sharesdk.onekeyshare.PlatformListFakeActivity$1:
    cn.sharesdk.onekeyshare.PlatformListFakeActivity this$0 -> this$0
    void onResult(java.util.HashMap) -> onResult
cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener -> cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener:
    void onClick(android.view.View,java.util.List) -> onClick
cn.sharesdk.onekeyshare.Shake2Share -> cn.sharesdk.onekeyshare.Shake2Share:
    int UPDATE_INTERVAL -> UPDATE_INTERVAL
    int SHAKE_THRESHOLD -> SHAKE_THRESHOLD
    cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener listener -> listener
    android.hardware.SensorManager mSensorManager -> mSensorManager
    long mLastUpdateTime -> mLastUpdateTime
    float mLastX -> mLastX
    float mLastY -> mLastY
    float mLastZ -> mLastZ
    boolean shaken -> shaken
    void setOnShakeListener(cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener) -> setOnShakeListener
    void setActivity(android.app.Activity) -> setActivity
    void onCreate() -> onCreate
    void startSensor() -> startSensor
    void onDestroy() -> onDestroy
    void stopSensor() -> stopSensor
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener -> cn.sharesdk.onekeyshare.Shake2Share$OnShakeListener:
    void onShake() -> onShake
cn.sharesdk.onekeyshare.ShareAllGird -> cn.sharesdk.onekeyshare.ShareAllGird:
    android.widget.FrameLayout flPage -> flPage
    cn.sharesdk.onekeyshare.WeiboGridView grid -> grid
    android.widget.Button btnCancel -> btnCancel
    android.view.animation.Animation animShow -> animShow
    android.view.animation.Animation animHide -> animHide
    boolean finishing -> finishing
    void onCreate(android.os.Bundle) -> onCreate
    void initPageView() -> initPageView
    void initAnim() -> initAnim
    void onClick(android.view.View) -> onClick
    void finish() -> finish
    android.widget.FrameLayout access$0(cn.sharesdk.onekeyshare.ShareAllGird) -> access$0
    void access$1(cn.sharesdk.onekeyshare.ShareAllGird) -> access$1
cn.sharesdk.onekeyshare.ShareAllGird$1 -> cn.sharesdk.onekeyshare.ShareAllGird$1:
    cn.sharesdk.onekeyshare.ShareAllGird this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
cn.sharesdk.onekeyshare.ShareContentCustomizeCallback -> cn.sharesdk.onekeyshare.ShareContentCustomizeCallback:
    void onShare(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> onShare
cn.sharesdk.onekeyshare.ShareCore -> cn.sharesdk.onekeyshare.ShareCore:
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> customizeCallback
    void setShareContentCustomizeCallback(cn.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> setShareContentCustomizeCallback
    boolean share(cn.sharesdk.framework.Platform,java.util.HashMap) -> share
    boolean isUseClientToShare(java.lang.String) -> isUseClientToShare
    boolean canAuthorize(android.content.Context,java.lang.String) -> canAuthorize
    boolean canGetUserInfo(android.content.Context,java.lang.String) -> canGetUserInfo
    boolean isDirectShare(cn.sharesdk.framework.Platform) -> isDirectShare
cn.sharesdk.onekeyshare.SharePage -> cn.sharesdk.onekeyshare.SharePage:
    android.os.Handler handler -> handler
    int notifIcon -> notifIcon
    java.lang.String notifTitle -> notifTitle
    java.lang.String platform -> platform
    android.widget.LinearLayout llPage -> llPage
    cn.sharesdk.framework.TitleLayout llTitle -> llTitle
    android.widget.EditText etContent -> etContent
    android.widget.TextView tvCounter -> tvCounter
    android.widget.LinearLayout llPlat -> llPlat
    cn.sharesdk.framework.AbstractWeibo[] weiboList -> weiboList
    android.view.View[] views -> views
    java.lang.String[] names -> names
    void onCreate(android.os.Bundle) -> onCreate
    void initPageView() -> initPageView
    java.lang.String getShownText() -> getShownText
    void run() -> run
    android.graphics.Bitmap getPlatLogo(cn.sharesdk.framework.AbstractWeibo) -> getPlatLogo
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onClick(android.view.View) -> onClick
    void share(cn.sharesdk.framework.AbstractWeibo) -> share
    void onComplete(cn.sharesdk.framework.AbstractWeibo,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.AbstractWeibo,int) -> onCancel
    void onError(cn.sharesdk.framework.AbstractWeibo,int,java.lang.Throwable) -> onError
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification(long,java.lang.String) -> showNotification
    void finish() -> finish
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void access$0(cn.sharesdk.onekeyshare.SharePage,cn.sharesdk.framework.AbstractWeibo[]) -> access$0
    cn.sharesdk.framework.AbstractWeibo[] access$1(cn.sharesdk.onekeyshare.SharePage) -> access$1
    android.os.Handler access$2(cn.sharesdk.onekeyshare.SharePage) -> access$2
cn.sharesdk.onekeyshare.SharePage$1 -> cn.sharesdk.onekeyshare.SharePage$1:
    cn.sharesdk.onekeyshare.SharePage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.SharePage$2 -> cn.sharesdk.onekeyshare.SharePage$2:
    cn.sharesdk.onekeyshare.SharePage this$0 -> this$0
    android.app.NotificationManager val$nm -> val$nm
    void run() -> run
cn.sharesdk.onekeyshare.ShareTools -> cn.sharesdk.onekeyshare.ShareTools:
    cn.sharesdk.onekeyshare.ShareTools _this -> _this
    cn.sharesdk.onekeyshare.ShareTools$OnAuthCallback onAuthCallback -> onAuthCallback
    java.lang.String TEST_IMAGE -> TEST_IMAGE
    java.lang.String FILE_NAME -> FILE_NAME
    cn.sharesdk.onekeyshare.ShareTools instance -> instance
    cn.sharesdk.onekeyshare.ShareTools getInstance() -> getInstance
    cn.sharesdk.framework.Platform[] getAuthList() -> getAuthList
    cn.sharesdk.framework.Platform getPlatForm(java.lang.String) -> getPlatForm
    void getAuthorize(cn.sharesdk.framework.Platform) -> getAuthorize
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    boolean handleMessage(android.os.Message) -> handleMessage
    void setOnAuthCallback(cn.sharesdk.onekeyshare.ShareTools$OnAuthCallback) -> setOnAuthCallback
    void share(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> share
    void initImagePath() -> initImagePath
cn.sharesdk.onekeyshare.ShareTools$OnAuthCallback -> cn.sharesdk.onekeyshare.ShareTools$OnAuthCallback:
    void callback(cn.sharesdk.framework.Platform,java.lang.String) -> callback
cn.sharesdk.onekeyshare.ThemeShareCallback -> cn.sharesdk.onekeyshare.ThemeShareCallback:
    void doShare(java.util.HashMap) -> doShare
cn.sharesdk.onekeyshare.WeiboGridView -> cn.sharesdk.onekeyshare.WeiboGridView:
    int PAGE_SIZE -> PAGE_SIZE
    android.support.v4.view.ViewPager pager -> pager
    android.widget.ImageView[] points -> points
    android.graphics.Bitmap grayPoint -> grayPoint
    android.graphics.Bitmap whitePoint -> whitePoint
    boolean silent -> silent
    cn.sharesdk.framework.AbstractWeibo[] weiboList -> weiboList
    android.os.Handler handler -> handler
    android.content.Intent intent -> intent
    void init(android.content.Context) -> init
    void run() -> run
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void setData(android.content.Intent) -> setData
    void onClick(android.view.View) -> onClick
    boolean shareSilently(cn.sharesdk.framework.AbstractWeibo) -> shareSilently
    void onComplete(cn.sharesdk.framework.AbstractWeibo,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.AbstractWeibo,int) -> onCancel
    void onError(cn.sharesdk.framework.AbstractWeibo,int,java.lang.Throwable) -> onError
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification(long,java.lang.String) -> showNotification
    void access$0(cn.sharesdk.onekeyshare.WeiboGridView,cn.sharesdk.framework.AbstractWeibo[]) -> access$0
    android.os.Handler access$1(cn.sharesdk.onekeyshare.WeiboGridView) -> access$1
cn.sharesdk.onekeyshare.WeiboGridView$1 -> cn.sharesdk.onekeyshare.WeiboGridView$1:
    cn.sharesdk.onekeyshare.WeiboGridView this$0 -> this$0
    android.content.Context val$context -> val$context
    void run() -> run
cn.sharesdk.onekeyshare.WeiboGridView$2 -> cn.sharesdk.onekeyshare.WeiboGridView$2:
    cn.sharesdk.onekeyshare.WeiboGridView this$0 -> this$0
    android.app.NotificationManager val$nm -> val$nm
    void run() -> run
cn.sharesdk.onekeyshare.WeiboGridView$GridView -> cn.sharesdk.onekeyshare.WeiboGridView$GridView:
    cn.sharesdk.framework.AbstractWeibo[] weibos -> weibos
    android.view.View$OnClickListener callback -> callback
    int lines -> lines
    int iconWidth -> iconWidth
    void setData(int,cn.sharesdk.framework.AbstractWeibo[]) -> setData
    void init() -> init
    android.widget.LinearLayout getView(int,android.content.Context) -> getView
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.AbstractWeibo) -> getIcon
    java.lang.String getName(cn.sharesdk.framework.AbstractWeibo) -> getName
cn.sharesdk.onekeyshare.WeiboGridView$WeiboAdapter -> cn.sharesdk.onekeyshare.WeiboGridView$WeiboAdapter:
    cn.sharesdk.onekeyshare.WeiboGridView$GridView[] girds -> girds
    cn.sharesdk.framework.AbstractWeibo[] weibos -> weibos
    android.view.View$OnClickListener callback -> callback
    int lines -> lines
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
cn.sharesdk.onekeyshare.res.R -> cn.sharesdk.onekeyshare.res.R:
    java.lang.String packageName -> packageName
    java.lang.String getString(android.content.Context,java.lang.String) -> getString
    android.graphics.drawable.Drawable getDrawable(android.content.Context,java.lang.String) -> getDrawable
    android.graphics.Bitmap getBitmap(android.content.Context,java.lang.String) -> getBitmap
    int dipToPx(android.content.Context,int) -> dipToPx
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
cn.sharesdk.onekeyshare.theme.classic.EditPage -> cn.sharesdk.onekeyshare.theme.classic.EditPage:
    int MAX_TEXT_COUNT -> MAX_TEXT_COUNT
    int DIM_COLOR -> DIM_COLOR
    android.widget.RelativeLayout rlPage -> rlPage
    cn.sharesdk.framework.TitleLayout llTitle -> llTitle
    android.widget.LinearLayout llBody -> llBody
    android.widget.RelativeLayout rlThumb -> rlThumb
    android.widget.EditText etContent -> etContent
    android.widget.TextView tvCounter -> tvCounter
    android.widget.ImageView ivPin -> ivPin
    cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo imgInfo -> imgInfo
    android.widget.ImageView ivImage -> ivImage
    android.graphics.Bitmap image -> image
    android.widget.LinearLayout llPlat -> llPlat
    android.view.View[] views -> views
    android.graphics.drawable.Drawable background -> background
    cn.sharesdk.framework.Platform[] platformList -> platformList
    void setActivity(android.app.Activity) -> setActivity
    void onCreate() -> onCreate
    android.widget.RelativeLayout getPageView() -> getPageView
    cn.sharesdk.framework.TitleLayout getPageTitle() -> getPageTitle
    android.widget.LinearLayout getPageBody() -> getPageBody
    android.widget.LinearLayout getMainBody() -> getMainBody
    android.widget.RelativeLayout getThumbView() -> getThumbView
    void showThumb() -> showThumb
    android.widget.LinearLayout getBodyBottom() -> getBodyBottom
    android.widget.LinearLayout getAtLine(java.lang.String) -> getAtLine
    android.view.View getSep() -> getSep
    android.widget.LinearLayout getPlatformList() -> getPlatformList
    android.widget.ImageView getImagePin() -> getImagePin
    void genBackground() -> genBackground
    java.lang.String getName(java.lang.String) -> getName
    void onClick(android.view.View) -> onClick
    void afterPlatformListGot() -> afterPlatformListGot
    android.graphics.Bitmap getPlatLogo(cn.sharesdk.framework.Platform) -> getPlatLogo
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onResult(java.util.HashMap) -> onResult
    void hideSoftInput() -> hideSoftInput
    boolean onFinish() -> onFinish
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void access$0(cn.sharesdk.onekeyshare.theme.classic.EditPage,cn.sharesdk.framework.Platform[]) -> access$0
    cn.sharesdk.framework.Platform[] access$1(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$1
    android.graphics.Bitmap access$2(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$2
    android.app.Activity access$3(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$3
    android.widget.RelativeLayout access$4(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$4
    android.widget.ImageView access$5(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$5
    cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo access$6(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$6
    void access$7(cn.sharesdk.onekeyshare.theme.classic.EditPage,cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> access$7
    void access$8(cn.sharesdk.onekeyshare.theme.classic.EditPage,cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> access$8
    void access$9(cn.sharesdk.onekeyshare.theme.classic.EditPage,android.graphics.Bitmap) -> access$9
    android.widget.ImageView access$10(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$10
    java.util.List access$11(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$11
    android.widget.LinearLayout access$12(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$12
    void access$13(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$13
    android.widget.RelativeLayout access$14(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$14
    android.graphics.drawable.Drawable access$15(cn.sharesdk.onekeyshare.theme.classic.EditPage) -> access$15
cn.sharesdk.onekeyshare.theme.classic.EditPage$1 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$1:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void run() -> run
    cn.sharesdk.onekeyshare.theme.classic.EditPage access$0(cn.sharesdk.onekeyshare.theme.classic.EditPage$1) -> access$0
cn.sharesdk.onekeyshare.theme.classic.EditPage$1$1 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$1$1:
    cn.sharesdk.onekeyshare.theme.classic.EditPage$1 this$1 -> this$1
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.theme.classic.EditPage$2 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$2:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.classic.EditPage$3 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$3:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.classic.EditPage$4 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$4:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void onFinish(java.util.ArrayList) -> onFinish
cn.sharesdk.onekeyshare.theme.classic.EditPage$5 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$5:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.classic.EditPage$6 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$6:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    int val$postSel -> val$postSel
    int val$dp_24 -> val$dp_24
    int val$dp_9 -> val$dp_9
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.onekeyshare.theme.classic.EditPage$7 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$7:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.theme.classic.EditPage$8 -> cn.sharesdk.onekeyshare.theme.classic.EditPage$8:
    cn.sharesdk.onekeyshare.theme.classic.EditPage this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.theme.classic.FollowListPage -> cn.sharesdk.onekeyshare.theme.classic.FollowListPage:
    cn.sharesdk.framework.TitleLayout llTitle -> llTitle
    cn.sharesdk.onekeyshare.theme.classic.FollowListPage$FollowAdapter adapter -> adapter
    int lastPosition -> lastPosition
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.sharesdk.onekeyshare.theme.classic.FollowListPage$FollowAdapter -> cn.sharesdk.onekeyshare.theme.classic.FollowListPage$FollowAdapter:
    int FOLLOW_LIST_EMPTY -> FOLLOW_LIST_EMPTY
    int curPage -> curPage
    java.util.ArrayList follows -> follows
    java.util.HashMap map -> map
    boolean hasNext -> hasNext
    cn.sharesdk.framework.Platform platform -> platform
    cn.sharesdk.onekeyshare.theme.classic.FollowListPage$PRTHeader llHeader -> llHeader
    android.graphics.Bitmap bmChd -> bmChd
    android.graphics.Bitmap bmUnch -> bmUnch
    void setPlatform(cn.sharesdk.framework.Platform) -> setPlatform
    void next() -> next
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.sharesdk.onekeyshare.FollowerListFakeActivity$Following getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    android.view.View getHeaderView() -> getHeaderView
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    boolean handleMessage(android.os.Message) -> handleMessage
    void onReversed() -> onReversed
    java.lang.Object getItem(int) -> getItem
cn.sharesdk.onekeyshare.theme.classic.FollowListPage$FollowListItem -> cn.sharesdk.onekeyshare.theme.classic.FollowListPage$FollowListItem:
    m.framework.ui.widget.asyncview.AsyncImageView aivIcon -> aivIcon
    android.widget.TextView tvName -> tvName
    android.widget.TextView tvSign -> tvSign
    android.widget.ImageView ivCheck -> ivCheck
cn.sharesdk.onekeyshare.theme.classic.FollowListPage$PRTHeader -> cn.sharesdk.onekeyshare.theme.classic.FollowListPage$PRTHeader:
    android.widget.TextView tvHeader -> tvHeader
    cn.sharesdk.onekeyshare.theme.classic.FollowListPage$RotateImageView ivArrow -> ivArrow
    android.widget.ProgressBar pbRefreshing -> pbRefreshing
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void reverse() -> reverse
cn.sharesdk.onekeyshare.theme.classic.FollowListPage$RotateImageView -> cn.sharesdk.onekeyshare.theme.classic.FollowListPage$RotateImageView:
    int rotation -> rotation
    void setRotation(int) -> setRotation
    void onDraw(android.graphics.Canvas) -> onDraw
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView -> cn.sharesdk.onekeyshare.theme.classic.PlatformGridView:
    int MIN_CLICK_INTERVAL -> MIN_CLICK_INTERVAL
    int MSG_PLATFORM_LIST_GOT -> MSG_PLATFORM_LIST_GOT
    int LINE_PER_PAGE -> LINE_PER_PAGE
    int COLUMN_PER_LINE -> COLUMN_PER_LINE
    int PAGE_SIZE -> PAGE_SIZE
    m.framework.ui.widget.viewpager.ViewPagerClassic pager -> pager
    android.widget.ImageView[] points -> points
    android.graphics.Bitmap grayPoint -> grayPoint
    android.graphics.Bitmap bluePoint -> bluePoint
    boolean silent -> silent
    cn.sharesdk.framework.Platform[] platformList -> platformList
    java.util.HashMap reqData -> reqData
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage parent -> parent
    java.util.ArrayList customers -> customers
    java.util.HashMap hiddenPlatforms -> hiddenPlatforms
    android.view.View bgView -> bgView
    long lastClickTime -> lastClickTime
    void init(android.content.Context) -> init
    void calPageSize() -> calPageSize
    boolean handleMessage(android.os.Message) -> handleMessage
    void afterPlatformListGot() -> afterPlatformListGot
    void onConfigurationChanged() -> onConfigurationChanged
    void setData(java.util.HashMap,boolean) -> setData
    void setHiddenPlatforms(java.util.HashMap) -> setHiddenPlatforms
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void setParent(cn.sharesdk.onekeyshare.theme.classic.PlatformListPage) -> setParent
    void onClick(android.view.View) -> onClick
    void disableOverScrollMode(android.view.View) -> disableOverScrollMode
    cn.sharesdk.framework.Platform[] access$0(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$0
    java.util.HashMap access$1(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$1
    java.util.ArrayList access$2(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$2
    int access$3(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$3
    int access$4(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$4
    android.widget.ImageView[] access$5(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$5
    android.graphics.Bitmap access$6(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$6
    android.graphics.Bitmap access$7(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> access$7
    void access$8(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView,cn.sharesdk.framework.Platform[]) -> access$8
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$1 -> cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$1:
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView this$0 -> this$0
    void run() -> run
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$GridView -> cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$GridView:
    java.lang.Object[] beans -> beans
    android.view.View$OnClickListener callback -> callback
    int lines -> lines
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter platformAdapter -> platformAdapter
    void setData(int,java.lang.Object[]) -> setData
    void init() -> init
    android.widget.LinearLayout getView(int,android.view.View$OnClickListener,android.content.Context) -> getView
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform) -> getIcon
    java.lang.String getName(cn.sharesdk.framework.Platform) -> getName
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter -> cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter:
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$GridView[] girds -> girds
    java.util.List logos -> logos
    android.view.View$OnClickListener callback -> callback
    int lines -> lines
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView platformGridView -> platformGridView
    int getCount() -> getCount
    android.view.View getView(int,android.view.ViewGroup) -> getView
    void onScreenChange(int,int) -> onScreenChange
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView access$0(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter) -> access$0
    android.view.View$OnClickListener access$1(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter) -> access$1
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage -> cn.sharesdk.onekeyshare.theme.classic.PlatformListPage:
    android.widget.FrameLayout flPage -> flPage
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView grid -> grid
    android.widget.Button btnCancel -> btnCancel
    android.view.animation.Animation animShow -> animShow
    android.view.animation.Animation animHide -> animHide
    boolean finishing -> finishing
    android.widget.LinearLayout llPage -> llPage
    void onCreate() -> onCreate
    void initPageView() -> initPageView
    void initAnim() -> initAnim
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onFinish() -> onFinish
    void onClick(android.view.View) -> onClick
    void onPlatformIconClick(android.view.View,java.util.ArrayList) -> onPlatformIconClick
    android.widget.FrameLayout access$0(cn.sharesdk.onekeyshare.theme.classic.PlatformListPage) -> access$0
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$1 -> cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$1:
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage this$0 -> this$0
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$2 -> cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$2:
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
cn.sharesdk.onekeyshare.theme.skyblue.EditPage -> cn.sharesdk.onekeyshare.theme.skyblue.EditPage:
    int MAX_TEXT_COUNT -> MAX_TEXT_COUNT
    android.widget.TextView textCounterTextView -> textCounterTextView
    android.widget.EditText titleEditText -> titleEditText
    android.widget.EditText textEditText -> textEditText
    void onCreate() -> onCreate
    void initView() -> initView
    void initTitleView() -> initTitleView
    void initBodyView() -> initBodyView
    void initAtUserView() -> initAtUserView
    void initImageListView() -> initImageListView
    android.view.View makeImageItemView(cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> makeImageItemView
    void onClick(android.view.View) -> onClick
    void onShareButtonClick(android.view.View) -> onShareButtonClick
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void onResult(java.util.HashMap) -> onResult
    boolean onFinish() -> onFinish
    android.app.Activity access$0(cn.sharesdk.onekeyshare.theme.skyblue.EditPage) -> access$0
    android.view.View access$1(cn.sharesdk.onekeyshare.theme.skyblue.EditPage,cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> access$1
    void access$2(cn.sharesdk.onekeyshare.theme.skyblue.EditPage,cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo) -> access$2
cn.sharesdk.onekeyshare.theme.skyblue.EditPage$1 -> cn.sharesdk.onekeyshare.theme.skyblue.EditPage$1:
    cn.sharesdk.onekeyshare.theme.skyblue.EditPage this$0 -> this$0
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.skyblue.EditPage$2 -> cn.sharesdk.onekeyshare.theme.skyblue.EditPage$2:
    cn.sharesdk.onekeyshare.theme.skyblue.EditPage this$0 -> this$0
    void onFinish(java.util.ArrayList) -> onFinish
cn.sharesdk.onekeyshare.theme.skyblue.EditPage$3 -> cn.sharesdk.onekeyshare.theme.skyblue.EditPage$3:
    cn.sharesdk.onekeyshare.theme.skyblue.EditPage this$0 -> this$0
    cn.sharesdk.onekeyshare.EditPageFakeActivity$ImageInfo val$imageInfo -> val$imageInfo
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.skyblue.EditPage$4 -> cn.sharesdk.onekeyshare.theme.skyblue.EditPage$4:
    cn.sharesdk.onekeyshare.theme.skyblue.EditPage this$0 -> this$0
    android.view.View val$view -> val$view
    void onClick(android.view.View) -> onClick
cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage -> cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage:
    cn.sharesdk.framework.TitleLayout llTitle -> llTitle
    cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$FollowAdapter adapter -> adapter
    int lastPosition -> lastPosition
    void onCreate() -> onCreate
    void onClick(android.view.View) -> onClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$FollowAdapter -> cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$FollowAdapter:
    int FOLLOW_LIST_EMPTY -> FOLLOW_LIST_EMPTY
    int curPage -> curPage
    java.util.ArrayList follows -> follows
    java.util.HashMap map -> map
    boolean hasNext -> hasNext
    cn.sharesdk.framework.Platform platform -> platform
    cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$PRTHeader llHeader -> llHeader
    android.graphics.Bitmap bmChd -> bmChd
    android.graphics.Bitmap bmUnch -> bmUnch
    void setPlatform(cn.sharesdk.framework.Platform) -> setPlatform
    void next() -> next
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.sharesdk.onekeyshare.FollowerListFakeActivity$Following getItem(int) -> getItem
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    android.view.View getHeaderView() -> getHeaderView
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    boolean handleMessage(android.os.Message) -> handleMessage
    void onReversed() -> onReversed
    java.lang.Object getItem(int) -> getItem
cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$FollowListItem -> cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$FollowListItem:
    m.framework.ui.widget.asyncview.AsyncImageView aivIcon -> aivIcon
    android.widget.TextView tvName -> tvName
    android.widget.TextView tvSign -> tvSign
    android.widget.ImageView ivCheck -> ivCheck
cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$PRTHeader -> cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$PRTHeader:
    android.widget.TextView tvHeader -> tvHeader
    cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$RotateImageView ivArrow -> ivArrow
    android.widget.ProgressBar pbRefreshing -> pbRefreshing
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void reverse() -> reverse
cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$RotateImageView -> cn.sharesdk.onekeyshare.theme.skyblue.FollowListPage$RotateImageView:
    int rotation -> rotation
    void setRotation(int) -> setRotation
    void onDraw(android.graphics.Canvas) -> onDraw
cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter -> cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter:
    android.content.Context context -> context
    java.util.List logos -> logos
    java.util.List checkedPositionList -> checkedPositionList
    int directOnlyPosition -> directOnlyPosition
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
    void setData(cn.sharesdk.framework.Platform[],java.util.HashMap) -> setData
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    java.util.List getCheckedItems() -> getCheckedItems
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform,java.lang.String) -> getIcon
    java.lang.String getName(cn.sharesdk.framework.Platform) -> getName
cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter$ViewHolder -> cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter$ViewHolder:
    java.lang.Integer position -> position
    android.widget.ImageView logoImageView -> logoImageView
    android.widget.ImageView checkedImageView -> checkedImageView
    android.widget.TextView nameTextView -> nameTextView
cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage -> cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage:
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter gridViewAdapter -> gridViewAdapter
    void onCreate() -> onCreate
    void initView() -> initView
    void onClick(android.view.View) -> onClick
    void onShareButtonClick(android.view.View) -> onShareButtonClick
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter access$0(cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage) -> access$0
    java.util.HashMap access$1(cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage) -> access$1
cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage$1 -> cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage$1:
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage this$0 -> this$0
    cn.sharesdk.framework.Platform[] doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(cn.sharesdk.framework.Platform[]) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.sharesdk.sina.weibo.SinaActivity -> cn.sharesdk.sina.weibo.SinaActivity:
    java.lang.String a -> a
    long b -> b
    com.sina.weibo.sdk.auth.sso.SsoHandler c -> c
    com.sina.weibo.sdk.auth.AuthInfo d -> d
    com.sina.weibo.sdk.api.share.IWeiboShareAPI e -> e
    cn.sharesdk.framework.Platform$ShareParams f -> f
    cn.sharesdk.framework.authorize.AuthorizeListener g -> g
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    com.sina.weibo.sdk.api.BaseMediaObject b() -> b
    com.sina.weibo.sdk.api.ImageObject c() -> c
    android.graphics.Bitmap a(android.content.Context,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(android.content.Context,java.lang.String) -> a
    int a(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    com.sina.weibo.sdk.api.TextObject d() -> d
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> onResponse
    void onCancel() -> onCancel
    void onComplete(android.os.Bundle) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void e() -> e
    boolean handleMessage(android.os.Message) -> handleMessage
cn.sharesdk.sina.weibo.SinaWeibo -> cn.sharesdk.sina.weibo.SinaWeibo:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void initDevInfo(java.lang.String) -> initDevInfo
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    int getPlatformId() -> getPlatformId
    void setNetworkDevinfo() -> setNetworkDevinfo
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doAuthorize(java.lang.String[]) -> doAuthorize
    void a(java.lang.String[]) -> a
    void b(java.lang.String[]) -> b
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.framework.Platform$ShareParams) -> b
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.sina.weibo.SinaWeibo) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.sina.weibo.SinaWeibo) -> b
    void a(cn.sharesdk.sina.weibo.SinaWeibo,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.sina.weibo.SinaWeibo) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.sina.weibo.SinaWeibo) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.sina.weibo.SinaWeibo) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.sina.weibo.SinaWeibo) -> f
    cn.sharesdk.framework.PlatformDb g(cn.sharesdk.sina.weibo.SinaWeibo) -> g
    cn.sharesdk.framework.PlatformDb h(cn.sharesdk.sina.weibo.SinaWeibo) -> h
    cn.sharesdk.framework.PlatformDb i(cn.sharesdk.sina.weibo.SinaWeibo) -> i
    void b(cn.sharesdk.sina.weibo.SinaWeibo,int,java.lang.Object) -> b
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.sina.weibo.SinaWeibo) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.sina.weibo.SinaWeibo) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.sina.weibo.SinaWeibo) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.sina.weibo.SinaWeibo) -> m
cn.sharesdk.sina.weibo.SinaWeibo$ShareParams -> cn.sharesdk.sina.weibo.SinaWeibo$ShareParams:
    java.lang.String imageUrl -> imageUrl
    float longitude -> longitude
    float latitude -> latitude
cn.sharesdk.sina.weibo.a -> cn.sharesdk.sina.weibo.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    java.lang.String[] e -> e
    cn.sharesdk.framework.PlatformActionListener f -> f
    cn.sharesdk.framework.Platform g -> g
    cn.sharesdk.framework.Platform$ShareParams h -> h
    void onCreate() -> onCreate
    void a(cn.sharesdk.framework.PlatformActionListener,java.lang.String[],boolean) -> a
    void a(cn.sharesdk.framework.PlatformActionListener,cn.sharesdk.framework.Platform$ShareParams,boolean) -> a
    void a() -> a
    void b() -> b
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.sina.weibo.a) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.sina.weibo.a) -> b
    cn.sharesdk.framework.Platform$ShareParams c(cn.sharesdk.sina.weibo.a) -> c
cn.sharesdk.sina.weibo.b -> cn.sharesdk.sina.weibo.b:
    cn.sharesdk.sina.weibo.a a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.c -> cn.sharesdk.sina.weibo.c:
    cn.sharesdk.sina.weibo.a a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.d -> cn.sharesdk.sina.weibo.d:
    cn.sharesdk.sina.weibo.SinaWeibo a -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.sina.weibo.e -> cn.sharesdk.sina.weibo.e:
    cn.sharesdk.sina.weibo.i a -> a
    cn.sharesdk.sina.weibo.SinaWeibo b -> b
    void onComplete(android.os.Bundle) -> onComplete
    void onError(java.lang.Throwable) -> onError
    void onCancel() -> onCancel
cn.sharesdk.sina.weibo.f -> cn.sharesdk.sina.weibo.f:
    boolean d -> d
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform,java.lang.String) -> a
    android.content.Intent b(java.lang.String) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener a(cn.sharesdk.sina.weibo.f) -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b(cn.sharesdk.sina.weibo.f) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c(cn.sharesdk.sina.weibo.f) -> c
cn.sharesdk.sina.weibo.g -> cn.sharesdk.sina.weibo.g:
    cn.sharesdk.framework.Platform a -> a
    java.lang.String b -> b
    cn.sharesdk.sina.weibo.f c -> c
    void run() -> run
cn.sharesdk.sina.weibo.h -> cn.sharesdk.sina.weibo.h:
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    void a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    void a() -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(android.content.Intent) -> b
    void a(int,int,android.content.Intent) -> a
    void c(android.content.Intent) -> c
    void d(android.content.Intent) -> d
cn.sharesdk.sina.weibo.i -> cn.sharesdk.sina.weibo.i:
    cn.sharesdk.sina.weibo.i b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String[] g -> g
    cn.sharesdk.framework.network.k h -> h
    cn.sharesdk.sina.weibo.i a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void b(java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    boolean a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap b(java.lang.String,java.lang.String,float,float) -> b
    java.util.HashMap a(java.lang.String,float,float) -> a
    java.util.HashMap d(java.lang.String) -> d
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap b(int,int,java.lang.String) -> b
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    void a(cn.sharesdk.sina.weibo.i,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.sina.weibo.j -> cn.sharesdk.sina.weibo.j:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.sina.weibo.i b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.QQ -> cn.sharesdk.tencent.qq.QQ:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    java.lang.String uploadImageToFileServer(java.lang.String) -> uploadImageToFileServer
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qq.QQ) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.qq.QQ) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.qq.QQ) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.qq.QQ) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.qq.QQ) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.qq.QQ) -> f
    void a(cn.sharesdk.tencent.qq.QQ,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.tencent.qq.QQ) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.tencent.qq.QQ) -> h
    cn.sharesdk.framework.PlatformActionListener i(cn.sharesdk.tencent.qq.QQ) -> i
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.tencent.qq.QQ) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.tencent.qq.QQ) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.tencent.qq.QQ) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.tencent.qq.QQ) -> m
    cn.sharesdk.framework.PlatformActionListener n(cn.sharesdk.tencent.qq.QQ) -> n
cn.sharesdk.tencent.qq.QQ$ShareParams -> cn.sharesdk.tencent.qq.QQ$ShareParams:
    java.lang.String title -> title
    java.lang.String titleUrl -> titleUrl
    java.lang.String imageUrl -> imageUrl
    java.lang.String musicUrl -> musicUrl
cn.sharesdk.tencent.qq.QQClientNotExistException -> cn.sharesdk.tencent.qq.QQClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qq.QQWebShareAdapter -> cn.sharesdk.tencent.qq.QQWebShareAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    android.widget.RelativeLayout rlBody -> rlBody
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
cn.sharesdk.tencent.qq.TencentSSOClientNotInstalledException -> cn.sharesdk.tencent.qq.TencentSSOClientNotInstalledException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qq.a -> cn.sharesdk.tencent.qq.a:
    cn.sharesdk.tencent.qq.e a -> a
    cn.sharesdk.tencent.qq.QQ b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.b -> cn.sharesdk.tencent.qq.b:
    cn.sharesdk.framework.Platform$ShareParams a -> a
    cn.sharesdk.tencent.qq.QQ b -> b
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qq.c -> cn.sharesdk.tencent.qq.c:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
cn.sharesdk.tencent.qq.d -> cn.sharesdk.tencent.qq.d:
    java.lang.String a -> a
    cn.sharesdk.tencent.qq.c b -> b
    void run() -> run
cn.sharesdk.tencent.qq.e -> cn.sharesdk.tencent.qq.e:
    java.lang.String[] b -> b
    cn.sharesdk.tencent.qq.e c -> c
    java.lang.String d -> d
    java.lang.String[] e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    cn.sharesdk.tencent.qq.e a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    void b(java.lang.String) -> b
    java.util.HashMap c(java.lang.String) -> c
    void d(java.lang.String) -> d
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    java.lang.String b() -> b
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    java.util.HashMap e(java.lang.String) -> e
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,cn.sharesdk.framework.PlatformActionListener,boolean) -> a
    boolean a() -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> a
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> b
    void a(cn.sharesdk.tencent.qq.e,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.tencent.qq.f -> cn.sharesdk.tencent.qq.f:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.qq.e b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qq.g -> cn.sharesdk.tencent.qq.g:
    java.lang.String d -> d
    java.lang.String e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(int,int,android.content.Intent) -> a
cn.sharesdk.tencent.qq.h -> cn.sharesdk.tencent.qq.h:
    java.lang.String a -> a
    cn.sharesdk.framework.Platform b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.PlatformActionListener) -> a
    void onCreate() -> onCreate
cn.sharesdk.tencent.qq.i -> cn.sharesdk.tencent.qq.i:
    cn.sharesdk.framework.Platform a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    void onCreate() -> onCreate
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    int[] a() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.app.Activity a(cn.sharesdk.tencent.qq.i) -> a
    android.app.Activity b(cn.sharesdk.tencent.qq.i) -> b
    void a(cn.sharesdk.tencent.qq.i,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
cn.sharesdk.tencent.qq.j -> cn.sharesdk.tencent.qq.j:
    java.lang.String a -> a
    android.os.Bundle b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    cn.sharesdk.tencent.qq.i f -> f
    void run() -> run
cn.sharesdk.tencent.qq.k -> cn.sharesdk.tencent.qq.k:
    java.lang.String a -> a
    cn.sharesdk.framework.PlatformActionListener b -> b
    java.lang.String c -> c
    cn.sharesdk.tencent.qq.QQWebShareAdapter d -> d
    cn.sharesdk.framework.authorize.RegisterView e -> e
    android.webkit.WebView f -> f
    boolean g -> g
    boolean h -> h
    void a(java.lang.String) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void b(java.lang.String) -> b
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.tencent.qq.QQWebShareAdapter b() -> b
    void onCreate() -> onCreate
    cn.sharesdk.framework.authorize.RegisterView a() -> a
    void c(java.lang.String) -> c
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onFinish() -> onFinish
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qq.k) -> a
    java.lang.String b(cn.sharesdk.tencent.qq.k) -> b
    void a(cn.sharesdk.tencent.qq.k,java.lang.String) -> a
    boolean a(cn.sharesdk.tencent.qq.k,boolean) -> a
    android.app.Activity c(cn.sharesdk.tencent.qq.k) -> c
    android.app.Activity d(cn.sharesdk.tencent.qq.k) -> d
    android.app.Activity e(cn.sharesdk.tencent.qq.k) -> e
    android.app.Activity f(cn.sharesdk.tencent.qq.k) -> f
cn.sharesdk.tencent.qq.l -> cn.sharesdk.tencent.qq.l:
    cn.sharesdk.tencent.qq.k a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.tencent.qq.m -> cn.sharesdk.tencent.qq.m:
    cn.sharesdk.tencent.qq.l a -> a
    void run() -> run
cn.sharesdk.tencent.qq.n -> cn.sharesdk.tencent.qq.n:
    cn.sharesdk.tencent.qq.k a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
cn.sharesdk.tencent.qzone.QZone -> cn.sharesdk.tencent.qzone.QZone:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    boolean b -> b
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.framework.Platform$ShareParams) -> b
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qzone.QZone) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.qzone.QZone) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.qzone.QZone) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.qzone.QZone) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.qzone.QZone) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.qzone.QZone) -> f
    void a(cn.sharesdk.tencent.qzone.QZone,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener g(cn.sharesdk.tencent.qzone.QZone) -> g
    cn.sharesdk.framework.PlatformActionListener h(cn.sharesdk.tencent.qzone.QZone) -> h
    cn.sharesdk.framework.PlatformActionListener i(cn.sharesdk.tencent.qzone.QZone) -> i
    cn.sharesdk.framework.PlatformActionListener j(cn.sharesdk.tencent.qzone.QZone) -> j
    cn.sharesdk.framework.PlatformActionListener k(cn.sharesdk.tencent.qzone.QZone) -> k
    cn.sharesdk.framework.PlatformActionListener l(cn.sharesdk.tencent.qzone.QZone) -> l
    cn.sharesdk.framework.PlatformActionListener m(cn.sharesdk.tencent.qzone.QZone) -> m
    cn.sharesdk.framework.PlatformActionListener n(cn.sharesdk.tencent.qzone.QZone) -> n
cn.sharesdk.tencent.qzone.QZone$ShareParams -> cn.sharesdk.tencent.qzone.QZone$ShareParams:
    java.lang.String title -> title
    java.lang.String imageUrl -> imageUrl
    java.lang.String titleUrl -> titleUrl
    java.lang.String comment -> comment
    java.lang.String site -> site
    java.lang.String siteUrl -> siteUrl
    boolean webShare -> webShare
cn.sharesdk.tencent.qzone.QZoneWebShareAdapter -> cn.sharesdk.tencent.qzone.QZoneWebShareAdapter:
    android.app.Activity activity -> activity
    cn.sharesdk.framework.TitleLayout title -> title
    android.webkit.WebView webview -> webview
    boolean noTitle -> noTitle
    android.widget.RelativeLayout rlBody -> rlBody
    void setActivity(android.app.Activity) -> setActivity
    android.app.Activity getActivity() -> getActivity
    void setTitleView(cn.sharesdk.framework.TitleLayout) -> setTitleView
    cn.sharesdk.framework.TitleLayout getTitleLayout() -> getTitleLayout
    void setWebView(android.webkit.WebView) -> setWebView
    android.webkit.WebView getWebBody() -> getWebBody
    void setNotitle(boolean) -> setNotitle
    boolean isNotitle() -> isNotitle
    void setBodyView(android.widget.RelativeLayout) -> setBodyView
    android.widget.RelativeLayout getBodyView() -> getBodyView
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    boolean onFinish() -> onFinish
cn.sharesdk.tencent.qzone.TencentSSOClientNotInstalledException -> cn.sharesdk.tencent.qzone.TencentSSOClientNotInstalledException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.tencent.qzone.a -> cn.sharesdk.tencent.qzone.a:
    cn.sharesdk.tencent.qzone.f a -> a
    cn.sharesdk.tencent.qzone.QZone b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qzone.b -> cn.sharesdk.tencent.qzone.b:
    cn.sharesdk.framework.PlatformActionListener a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.tencent.qzone.QZone c -> c
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qzone.c -> cn.sharesdk.tencent.qzone.c:
    cn.sharesdk.framework.Platform$ShareParams a -> a
    cn.sharesdk.tencent.qzone.QZone b -> b
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
cn.sharesdk.tencent.qzone.d -> cn.sharesdk.tencent.qzone.d:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
cn.sharesdk.tencent.qzone.e -> cn.sharesdk.tencent.qzone.e:
    java.lang.String a -> a
    cn.sharesdk.tencent.qzone.d b -> b
    void run() -> run
cn.sharesdk.tencent.qzone.f -> cn.sharesdk.tencent.qzone.f:
    java.lang.String[] b -> b
    cn.sharesdk.tencent.qzone.f c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    cn.sharesdk.framework.network.k g -> g
    java.lang.String[] h -> h
    cn.sharesdk.tencent.qzone.f a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String[]) -> a
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    java.lang.String a() -> a
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    java.util.HashMap d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> a
    java.lang.String b() -> b
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,cn.sharesdk.framework.PlatformActionListener) -> b
    java.util.HashMap a(java.lang.String,java.lang.String) -> a
    java.util.HashMap e(java.lang.String) -> e
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    java.util.HashMap b(java.lang.String,java.lang.String) -> b
    void a(cn.sharesdk.tencent.qzone.f,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
cn.sharesdk.tencent.qzone.g -> cn.sharesdk.tencent.qzone.g:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.qzone.f b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.qzone.h -> cn.sharesdk.tencent.qzone.h:
    java.lang.String d -> d
    java.lang.String e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(int,int,android.content.Intent) -> a
cn.sharesdk.tencent.qzone.i -> cn.sharesdk.tencent.qzone.i:
    java.lang.String a -> a
    boolean b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.RegisterView d -> d
    android.webkit.WebView e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    cn.sharesdk.tencent.qzone.QZoneWebShareAdapter i -> i
    void a(java.lang.String,boolean) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    void setActivity(android.app.Activity) -> setActivity
    cn.sharesdk.tencent.qzone.QZoneWebShareAdapter b() -> b
    void onCreate() -> onCreate
    void c() -> c
    void d() -> d
    cn.sharesdk.framework.authorize.RegisterView a() -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    boolean onFinish() -> onFinish
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.qzone.i) -> a
    java.lang.String b(cn.sharesdk.tencent.qzone.i) -> b
    void a(cn.sharesdk.tencent.qzone.i,java.lang.String) -> a
    void b(cn.sharesdk.tencent.qzone.i,java.lang.String) -> b
cn.sharesdk.tencent.qzone.j -> cn.sharesdk.tencent.qzone.j:
    cn.sharesdk.tencent.qzone.i a -> a
    void onClick(android.view.View) -> onClick
cn.sharesdk.tencent.qzone.k -> cn.sharesdk.tencent.qzone.k:
    cn.sharesdk.tencent.qzone.j a -> a
    void run() -> run
cn.sharesdk.tencent.qzone.l -> cn.sharesdk.tencent.qzone.l:
    cn.sharesdk.tencent.qzone.i a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
cn.sharesdk.tencent.weibo.TencentWeibo -> cn.sharesdk.tencent.weibo.TencentWeibo:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.tencent.weibo.TencentWeibo) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.tencent.weibo.TencentWeibo) -> b
    cn.sharesdk.framework.PlatformDb c(cn.sharesdk.tencent.weibo.TencentWeibo) -> c
    cn.sharesdk.framework.PlatformDb d(cn.sharesdk.tencent.weibo.TencentWeibo) -> d
    cn.sharesdk.framework.PlatformDb e(cn.sharesdk.tencent.weibo.TencentWeibo) -> e
    cn.sharesdk.framework.PlatformDb f(cn.sharesdk.tencent.weibo.TencentWeibo) -> f
    cn.sharesdk.framework.PlatformDb g(cn.sharesdk.tencent.weibo.TencentWeibo) -> g
    cn.sharesdk.framework.PlatformDb h(cn.sharesdk.tencent.weibo.TencentWeibo) -> h
    cn.sharesdk.framework.PlatformDb i(cn.sharesdk.tencent.weibo.TencentWeibo) -> i
    cn.sharesdk.framework.PlatformDb j(cn.sharesdk.tencent.weibo.TencentWeibo) -> j
    cn.sharesdk.framework.PlatformDb k(cn.sharesdk.tencent.weibo.TencentWeibo) -> k
    cn.sharesdk.framework.PlatformDb l(cn.sharesdk.tencent.weibo.TencentWeibo) -> l
    cn.sharesdk.framework.PlatformDb m(cn.sharesdk.tencent.weibo.TencentWeibo) -> m
    cn.sharesdk.framework.PlatformDb n(cn.sharesdk.tencent.weibo.TencentWeibo) -> n
    void a(cn.sharesdk.tencent.weibo.TencentWeibo,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener o(cn.sharesdk.tencent.weibo.TencentWeibo) -> o
    cn.sharesdk.framework.PlatformActionListener p(cn.sharesdk.tencent.weibo.TencentWeibo) -> p
cn.sharesdk.tencent.weibo.TencentWeibo$ShareParams -> cn.sharesdk.tencent.weibo.TencentWeibo$ShareParams:
    float longitude -> longitude
    float latitude -> latitude
    java.lang.String imageUrl -> imageUrl
cn.sharesdk.tencent.weibo.a -> cn.sharesdk.tencent.weibo.a:
    java.lang.String a(byte[]) -> a
    char[] a(byte[],int) -> a
    char a(int) -> a
cn.sharesdk.tencent.weibo.b -> cn.sharesdk.tencent.weibo.b:
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    byte[] h -> h
    boolean i -> i
    int j -> j
    java.util.Random k -> k
    long a(byte[],int,int) -> a
    byte[] a(byte[],int,int,byte[]) -> a
    byte[] b(byte[],int,int,byte[]) -> b
    byte[] a(byte[],byte[]) -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    byte[] b(byte[]) -> b
    void a() -> a
    boolean b(byte[],int,int) -> b
    int b() -> b
    byte[] a(byte[],byte[],int) -> a
    byte[] a(int) -> a
cn.sharesdk.tencent.weibo.c -> cn.sharesdk.tencent.weibo.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    long h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
cn.sharesdk.tencent.weibo.d -> cn.sharesdk.tencent.weibo.d:
    cn.sharesdk.tencent.weibo.h a -> a
    cn.sharesdk.tencent.weibo.TencentWeibo b -> b
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.tencent.weibo.e -> cn.sharesdk.tencent.weibo.e:
    int d -> d
    boolean e -> e
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void a(java.lang.String) -> a
    cn.sharesdk.framework.authorize.g a(cn.sharesdk.tencent.weibo.e) -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b(cn.sharesdk.tencent.weibo.e) -> b
    cn.sharesdk.framework.authorize.AuthorizeListener c(cn.sharesdk.tencent.weibo.e) -> c
    cn.sharesdk.framework.authorize.AuthorizeListener d(cn.sharesdk.tencent.weibo.e) -> d
    cn.sharesdk.framework.authorize.AuthorizeListener e(cn.sharesdk.tencent.weibo.e) -> e
    cn.sharesdk.framework.authorize.AuthorizeListener f(cn.sharesdk.tencent.weibo.e) -> f
    cn.sharesdk.framework.authorize.AuthorizeListener g(cn.sharesdk.tencent.weibo.e) -> g
    cn.sharesdk.framework.authorize.AuthorizeListener h(cn.sharesdk.tencent.weibo.e) -> h
    cn.sharesdk.framework.authorize.AuthorizeListener i(cn.sharesdk.tencent.weibo.e) -> i
cn.sharesdk.tencent.weibo.f -> cn.sharesdk.tencent.weibo.f:
    android.os.Bundle a -> a
    cn.sharesdk.tencent.weibo.e b -> b
    void run() -> run
cn.sharesdk.tencent.weibo.g -> cn.sharesdk.tencent.weibo.g:
    cn.sharesdk.tencent.weibo.c d -> d
    void a(cn.sharesdk.tencent.weibo.c) -> a
    void a() -> a
    int a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    byte[] a(long,long) -> a
    void a(int,int,android.content.Intent) -> a
    void a(android.os.Bundle) -> a
    void a(byte[]) -> a
    void b(android.os.Bundle) -> b
    cn.sharesdk.framework.authorize.e a(cn.sharesdk.tencent.weibo.g) -> a
    void a(cn.sharesdk.tencent.weibo.g,android.os.Bundle) -> a
    void b(cn.sharesdk.tencent.weibo.g,android.os.Bundle) -> b
cn.sharesdk.tencent.weibo.g$a -> cn.sharesdk.tencent.weibo.g$a:
    cn.sharesdk.tencent.weibo.g a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.sharesdk.tencent.weibo.h -> cn.sharesdk.tencent.weibo.h:
    cn.sharesdk.tencent.weibo.h b -> b
    cn.sharesdk.tencent.weibo.c c -> c
    cn.sharesdk.framework.network.k d -> d
    cn.sharesdk.tencent.weibo.h a(cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    cn.sharesdk.framework.authorize.b getAuthorizeWebviewClient(cn.sharesdk.framework.authorize.g) -> getAuthorizeWebviewClient
    cn.sharesdk.framework.authorize.f getSSOProcessor(cn.sharesdk.framework.authorize.e) -> getSSOProcessor
    void a(cn.sharesdk.framework.authorize.AuthorizeListener,boolean) -> a
    java.lang.String getAuthorizeUrl() -> getAuthorizeUrl
    java.lang.String getRedirectUri() -> getRedirectUri
    android.os.Bundle b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.util.ArrayList) -> a
    java.util.HashMap c(java.lang.String) -> c
    java.util.HashMap a(java.lang.String,float,float) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,float,float) -> a
    java.util.HashMap b(java.lang.String,java.lang.String,float,float) -> b
    java.lang.String d(java.lang.String) -> d
    java.util.HashMap e(java.lang.String) -> e
    java.util.HashMap a(int,int,java.lang.String) -> a
    java.util.HashMap a(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> a
    void a(cn.sharesdk.tencent.weibo.h,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    cn.sharesdk.tencent.weibo.c a(cn.sharesdk.tencent.weibo.h) -> a
cn.sharesdk.tencent.weibo.i -> cn.sharesdk.tencent.weibo.i:
    cn.sharesdk.framework.authorize.AuthorizeListener a -> a
    cn.sharesdk.tencent.weibo.h b -> b
    void onFailed(java.lang.Throwable) -> onFailed
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.friends.Wechat -> cn.sharesdk.wechat.friends.Wechat:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean isValid() -> isValid
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.friends.Wechat) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.friends.Wechat) -> b
    void a(cn.sharesdk.wechat.friends.Wechat,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.friends.Wechat) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.friends.Wechat) -> d
cn.sharesdk.wechat.friends.Wechat$ShareParams -> cn.sharesdk.wechat.friends.Wechat$ShareParams:
cn.sharesdk.wechat.friends.a -> cn.sharesdk.wechat.friends.a:
    cn.sharesdk.wechat.friends.Wechat a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.moments.WechatMoments -> cn.sharesdk.wechat.moments.WechatMoments:
    java.lang.String NAME -> NAME
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    void initDevInfo(java.lang.String) -> initDevInfo
    int getPlatformId() -> getPlatformId
    java.lang.String getName() -> getName
    int getVersion() -> getVersion
    void setNetworkDevinfo() -> setNetworkDevinfo
    void doAuthorize(java.lang.String[]) -> doAuthorize
    boolean checkAuthorize(int,java.lang.Object) -> checkAuthorize
    boolean isValid() -> isValid
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> doShare
    void follow(java.lang.String) -> follow
    void timeline(int,int,java.lang.String) -> timeline
    void userInfor(java.lang.String) -> userInfor
    void getFriendList(int,int,java.lang.String) -> getFriendList
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> doCustomerProtocol
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> filterShareContent
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.wechat.moments.WechatMoments) -> a
    cn.sharesdk.framework.PlatformActionListener b(cn.sharesdk.wechat.moments.WechatMoments) -> b
    void a(cn.sharesdk.wechat.moments.WechatMoments,int,java.lang.Object) -> a
    cn.sharesdk.framework.PlatformActionListener c(cn.sharesdk.wechat.moments.WechatMoments) -> c
    cn.sharesdk.framework.PlatformActionListener d(cn.sharesdk.wechat.moments.WechatMoments) -> d
cn.sharesdk.wechat.moments.WechatMoments$ShareParams -> cn.sharesdk.wechat.moments.WechatMoments$ShareParams:
cn.sharesdk.wechat.moments.a -> cn.sharesdk.wechat.moments.a:
    cn.sharesdk.wechat.moments.WechatMoments a -> a
    void onError(java.lang.Throwable) -> onError
    void onComplete(android.os.Bundle) -> onComplete
    void onCancel() -> onCancel
cn.sharesdk.wechat.utils.WXAppExtendObject -> cn.sharesdk.wechat.utils.WXAppExtendObject:
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXEmojiObject -> cn.sharesdk.wechat.utils.WXEmojiObject:
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXFileObject -> cn.sharesdk.wechat.utils.WXFileObject:
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXImageObject -> cn.sharesdk.wechat.utils.WXImageObject:
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage -> cn.sharesdk.wechat.utils.WXMediaMessage:
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject -> cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXMediaMessage$a -> cn.sharesdk.wechat.utils.WXMediaMessage$a:
    android.os.Bundle a(cn.sharesdk.wechat.utils.WXMediaMessage) -> a
    cn.sharesdk.wechat.utils.WXMediaMessage a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WXMusicObject -> cn.sharesdk.wechat.utils.WXMusicObject:
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXTextObject -> cn.sharesdk.wechat.utils.WXTextObject:
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXVideoObject -> cn.sharesdk.wechat.utils.WXVideoObject:
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WXWebpageObject -> cn.sharesdk.wechat.utils.WXWebpageObject:
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
cn.sharesdk.wechat.utils.WechatClientNotExistException -> cn.sharesdk.wechat.utils.WechatClientNotExistException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException -> cn.sharesdk.wechat.utils.WechatFavoriteNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.WechatHandlerActivity -> cn.sharesdk.wechat.utils.WechatHandlerActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
cn.sharesdk.wechat.utils.WechatHelper -> cn.sharesdk.wechat.utils.WechatHelper:
    boolean a -> a
    cn.sharesdk.wechat.utils.WechatHelper b -> b
    cn.sharesdk.wechat.utils.j c -> c
    cn.sharesdk.wechat.utils.k d -> d
    cn.sharesdk.wechat.utils.WechatHelper a() -> a
    void a(cn.sharesdk.wechat.utils.k) -> a
    boolean b() -> b
    void a(cn.sharesdk.wechat.utils.k,cn.sharesdk.framework.Platform$ShareParams) -> a
    void b(cn.sharesdk.wechat.utils.k) -> b
    void a(java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> a
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    void c(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> c
    void c(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> c
    void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> b
    void b(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,int,cn.sharesdk.wechat.utils.k) -> b
    byte[] a(java.lang.String) -> a
    int a(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    byte[] b(android.content.Context,java.lang.String) -> b
    byte[] a(android.content.Context,byte[]) -> a
    byte[] a(android.content.Context,android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity) -> a
    boolean c() -> c
    boolean d() -> d
    void a(cn.sharesdk.wechat.utils.WXMediaMessage,java.lang.String,int,cn.sharesdk.wechat.utils.k) -> a
cn.sharesdk.wechat.utils.WechatHelper$ShareParams -> cn.sharesdk.wechat.utils.WechatHelper$ShareParams:
    int shareType -> shareType
    java.lang.String title -> title
    java.lang.String musicUrl -> musicUrl
    java.lang.String url -> url
    java.lang.String imageUrl -> imageUrl
    android.graphics.Bitmap imageData -> imageData
    int scene -> scene
    java.lang.String filePath -> filePath
    java.lang.String extInfo -> extInfo
cn.sharesdk.wechat.utils.WechatResp -> cn.sharesdk.wechat.utils.WechatResp:
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int a() -> a
    void b(android.os.Bundle) -> b
    void a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WechatResp$ErrCode -> cn.sharesdk.wechat.utils.WechatResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException -> cn.sharesdk.wechat.utils.WechatTimelineNotSupportedException:
    long serialVersionUID -> serialVersionUID
cn.sharesdk.wechat.utils.a -> cn.sharesdk.wechat.utils.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.b -> cn.sharesdk.wechat.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.c -> cn.sharesdk.wechat.utils.c:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.d -> cn.sharesdk.wechat.utils.d:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int b -> b
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
cn.sharesdk.wechat.utils.e -> cn.sharesdk.wechat.utils.e:
    int a() -> a
cn.sharesdk.wechat.utils.f -> cn.sharesdk.wechat.utils.f:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> a
    int a() -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.g -> cn.sharesdk.wechat.utils.g:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.network.k c -> c
    cn.sharesdk.framework.Platform d -> d
    int e -> e
    void a(java.lang.String,java.lang.String) -> a
    void a(android.os.Bundle,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(java.lang.String,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(java.lang.String) -> a
    cn.sharesdk.framework.Platform a(cn.sharesdk.wechat.utils.g) -> a
    int b(cn.sharesdk.wechat.utils.g) -> b
    cn.sharesdk.framework.network.k c(cn.sharesdk.wechat.utils.g) -> c
    java.lang.String d(cn.sharesdk.wechat.utils.g) -> d
    java.lang.String e(cn.sharesdk.wechat.utils.g) -> e
    void a(cn.sharesdk.wechat.utils.g,java.lang.String) -> a
cn.sharesdk.wechat.utils.h -> cn.sharesdk.wechat.utils.h:
    java.lang.String a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.wechat.utils.g c -> c
    void run() -> run
cn.sharesdk.wechat.utils.i -> cn.sharesdk.wechat.utils.i:
    cn.sharesdk.framework.PlatformActionListener a -> a
    cn.sharesdk.wechat.utils.g b -> b
    void run() -> run
cn.sharesdk.wechat.utils.j -> cn.sharesdk.wechat.utils.j:
    android.content.Context a -> a
    java.lang.String b -> b
    boolean a(android.content.Context,java.lang.String) -> a
    void a(cn.sharesdk.wechat.utils.l) -> a
    boolean a() -> a
    boolean b() -> b
    boolean d() -> d
    byte[] a(java.lang.String,java.lang.String,int) -> a
    java.lang.String a(java.lang.String) -> a
    boolean c() -> c
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity,cn.sharesdk.wechat.utils.k) -> a
    boolean a(byte[],byte[]) -> a
cn.sharesdk.wechat.utils.k -> cn.sharesdk.wechat.utils.k:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.AuthorizeListener d -> d
    cn.sharesdk.wechat.utils.g e -> e
    void a(cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(cn.sharesdk.framework.Platform$ShareParams,cn.sharesdk.framework.PlatformActionListener) -> a
    void a(cn.sharesdk.wechat.utils.g) -> a
    void a(cn.sharesdk.wechat.utils.WechatResp) -> a
    cn.sharesdk.framework.Platform$ShareParams a() -> a
    cn.sharesdk.framework.Platform b() -> b
    cn.sharesdk.framework.PlatformActionListener c() -> c
cn.sharesdk.wechat.utils.l -> cn.sharesdk.wechat.utils.l:
    java.lang.String c -> c
    int a() -> a
    void a(android.os.Bundle) -> a
    boolean b() -> b
com.baidu.android.bba.common.security.AESUtil -> com.baidu.android.bba.common.security.AESUtil:
    java.lang.String TRANSFORMATION -> TRANSFORMATION
    java.lang.String ALGORITHM_NAME -> ALGORITHM_NAME
    byte[] encrypt(java.lang.String,java.lang.String,byte[]) -> encrypt
    byte[] decrypt(java.lang.String,java.lang.String,byte[]) -> decrypt
com.baidu.android.bba.common.security.Base64 -> com.baidu.android.bba.common.security.Base64:
    byte[] MAP -> MAP
    byte[] decode(byte[]) -> decode
    byte[] decode(byte[],int) -> decode
    java.lang.String encode(byte[],java.lang.String) -> encode
com.baidu.android.bba.common.util.CommonParam -> com.baidu.android.bba.common.util.CommonParam:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    java.lang.String getCUID(android.content.Context) -> getCUID
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
com.baidu.android.bba.common.util.DeviceId -> com.baidu.android.bba.common.util.DeviceId:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.lang.String KEY_IMEI -> KEY_IMEI
    java.lang.String KEY_DEVICE_ID -> KEY_DEVICE_ID
    java.lang.String AES_KEY -> AES_KEY
    java.lang.String EXT_FILE -> EXT_FILE
    java.lang.String getDeviceID(android.content.Context) -> getDeviceID
    java.lang.String getIMEI(android.content.Context) -> getIMEI
    java.lang.String getAndroidId(android.content.Context) -> getAndroidId
    void checkPermission(android.content.Context,java.lang.String) -> checkPermission
    java.lang.String getExternalDeviceId(java.lang.String) -> getExternalDeviceId
    void setExternalDeviceId(java.lang.String,java.lang.String) -> setExternalDeviceId
com.baidu.android.bba.common.util.Util -> com.baidu.android.bba.common.util.Util:
    java.lang.String toMd5(byte[],boolean) -> toMd5
    java.lang.String toHexString(byte[],java.lang.String,boolean) -> toHexString
com.baidu.android.bbalbs.common.a.a -> com.baidu.android.bbalbs.common.a.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.android.bbalbs.common.a.b -> com.baidu.android.bbalbs.common.a.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.bbalbs.common.a.c -> com.baidu.android.bbalbs.common.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.android.bbalbs.common.util.CommonParam -> com.baidu.android.bbalbs.common.util.CommonParam:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.baidu.android.bbalbs.common.util.DeviceId -> com.baidu.android.bbalbs.common.util.DeviceId:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.android.bbalbs.common.util.DeviceId$a -> com.baidu.android.bbalbs.common.util.DeviceId$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.android.bbalbs.common.util.DeviceId$a a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.android.pushservice.BasicPushNotificationBuilder -> com.baidu.android.pushservice.BasicPushNotificationBuilder:
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder getInner() -> getInner
    android.app.Notification construct(android.content.Context) -> construct
    com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder a(com.baidu.android.pushservice.BasicPushNotificationBuilder,com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder) -> a
com.baidu.android.pushservice.BasicPushNotificationBuilder$1 -> com.baidu.android.pushservice.BasicPushNotificationBuilder$1:
    android.content.Context a -> a
    com.baidu.android.pushservice.BasicPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CommandService -> com.baidu.android.pushservice.CommandService:
    java.lang.String a -> a
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    java.lang.String getReceiver(java.lang.String,java.lang.String) -> getReceiver
    void reflectReceiver(android.content.Intent) -> reflectReceiver
com.baidu.android.pushservice.CustomPushNotificationBuilder -> com.baidu.android.pushservice.CustomPushNotificationBuilder:
    boolean a -> a
    com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder getInner() -> getInner
    void setLayoutDrawable(int) -> setLayoutDrawable
    android.app.Notification construct(android.content.Context) -> construct
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    void a(int) -> a
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder getInner() -> getInner
    boolean a(com.baidu.android.pushservice.CustomPushNotificationBuilder,boolean) -> a
    boolean a(com.baidu.android.pushservice.CustomPushNotificationBuilder) -> a
    void a(com.baidu.android.pushservice.CustomPushNotificationBuilder,int) -> a
com.baidu.android.pushservice.CustomPushNotificationBuilder$1 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$1:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    com.baidu.android.pushservice.CustomPushNotificationBuilder f -> f
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$2 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$2:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$3 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$3:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$4 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$4:
    java.lang.String a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$5 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$5:
    java.lang.String a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$6 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$6:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$7 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$7:
    int a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$8 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$8:
    android.net.Uri a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.CustomPushNotificationBuilder$9 -> com.baidu.android.pushservice.CustomPushNotificationBuilder$9:
    long[] a -> a
    com.baidu.android.pushservice.CustomPushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.IPushLightappListener -> com.baidu.android.pushservice.IPushLightappListener:
    void initialComplete(com.baidu.android.pushservice.PushLightapp) -> initialComplete
    void onSubscribeResult(int,java.lang.String) -> onSubscribeResult
    void onUnsubscribeResult(int,java.lang.String) -> onUnsubscribeResult
    void onUnbindLightResult(int,java.lang.String) -> onUnbindLightResult
    void onSubscribeByApiKey(int,java.lang.String) -> onSubscribeByApiKey
com.baidu.android.pushservice.Internal -> com.baidu.android.pushservice.Internal:
    void enablePushService(android.content.Context) -> enablePushService
    void disablePushService(android.content.Context) -> disablePushService
    void disablePushConnection(android.content.Context) -> disablePushConnection
    void enablePushConnection(android.content.Context) -> enablePushConnection
    void createBdussIntent(android.content.Context) -> createBdussIntent
com.baidu.android.pushservice.Internal$1 -> com.baidu.android.pushservice.Internal$1:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$2 -> com.baidu.android.pushservice.Internal$2:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$3 -> com.baidu.android.pushservice.Internal$3:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$4 -> com.baidu.android.pushservice.Internal$4:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.Internal$5 -> com.baidu.android.pushservice.Internal$5:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.LoadExecutor -> com.baidu.android.pushservice.LoadExecutor:
    java.lang.String a -> a
    boolean loadPush(android.content.Context) -> loadPush
    boolean isPushLibLoaded(android.content.Context) -> isPushLibLoaded
    void excuteMethod(java.lang.Runnable,android.content.Context) -> excuteMethod
com.baidu.android.pushservice.LoadExecutor$1 -> com.baidu.android.pushservice.LoadExecutor$1:
    android.content.Context a -> a
    java.lang.Runnable b -> b
    void run() -> run
com.baidu.android.pushservice.PushConstants -> com.baidu.android.pushservice.PushConstants:
    java.lang.String EXTRA_PUSH_MESSAGE -> EXTRA_PUSH_MESSAGE
    java.lang.String EXTRA_PUSH_MESSAGE_STRING -> EXTRA_PUSH_MESSAGE_STRING
    java.lang.String ACTION_MESSAGE -> ACTION_MESSAGE
    java.lang.String ACTION_SDK_MESSAGE -> ACTION_SDK_MESSAGE
    java.lang.String ACTION_FB_MESSAGE -> ACTION_FB_MESSAGE
    java.lang.String ACTION_METHOD -> ACTION_METHOD
    java.lang.String ACTION_LAPP_RECEIVE -> ACTION_LAPP_RECEIVE
    java.lang.String ACTION_RECEIVE -> ACTION_RECEIVE
    java.lang.String ACTION_RECEIVER_NOTIFICATION_CLICK -> ACTION_RECEIVER_NOTIFICATION_CLICK
    java.lang.String ACTION_SDK_RECEIVE -> ACTION_SDK_RECEIVE
    java.lang.String ACTION_WEB_RECEIVE -> ACTION_WEB_RECEIVE
    java.lang.String EXTRA_WEB_BIND_API_KEY -> EXTRA_WEB_BIND_API_KEY
    java.lang.String ACTION_LAPP_MESSAGE -> ACTION_LAPP_MESSAGE
    java.lang.String METHOD_LAPP_BIND_INTENT -> METHOD_LAPP_BIND_INTENT
    java.lang.String METHOD_LAPP_UNBIND -> METHOD_LAPP_UNBIND
    java.lang.String METHOD_GET_LAPP_BIND_STATE -> METHOD_GET_LAPP_BIND_STATE
    java.lang.String EXTRA_LAPP_BIND_STATE -> EXTRA_LAPP_BIND_STATE
    java.lang.String METHOD_SET_LAPP_TAGS -> METHOD_SET_LAPP_TAGS
    java.lang.String METHOD_DEL_LAPP_TAGS -> METHOD_DEL_LAPP_TAGS
    int LOGIN_TYPE_LIGHT_APP_API_KEY -> LOGIN_TYPE_LIGHT_APP_API_KEY
    java.lang.String EXTRA_METHOD -> EXTRA_METHOD
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String EXTRA_ERROR_CODE -> EXTRA_ERROR_CODE
    java.lang.String EXTRA_CONTENT -> EXTRA_CONTENT
    java.lang.String EXTRA_TAGS_LIST -> EXTRA_TAGS_LIST
    java.lang.String EXTRA_APP_ID -> EXTRA_APP_ID
    java.lang.String EXTRA_USER_ID -> EXTRA_USER_ID
    java.lang.String EXTRA_APP -> EXTRA_APP
    java.lang.String EXTRA_ACCESS_TOKEN -> EXTRA_ACCESS_TOKEN
    java.lang.String EXTRA_API_KEY -> EXTRA_API_KEY
    java.lang.String EXTRA_BIND_NAME -> EXTRA_BIND_NAME
    java.lang.String EXTRA_BIND_STATUS -> EXTRA_BIND_STATUS
    java.lang.String EXTRA_PUSH_SDK_VERSION -> EXTRA_PUSH_SDK_VERSION
    java.lang.String EXTRA_MSG_KEY -> EXTRA_MSG_KEY
    java.lang.String EXTRA_MSG -> EXTRA_MSG
    java.lang.String EXTRA_CB_URL -> EXTRA_CB_URL
    java.lang.String EXTRA_TIMESTAMP -> EXTRA_TIMESTAMP
    java.lang.String EXTRA_MSGID -> EXTRA_MSGID
    java.lang.String EXTRA_HASHCODE -> EXTRA_HASHCODE
    java.lang.String EXTRA_OPENTYPE -> EXTRA_OPENTYPE
    java.lang.String EXTRA_EXTRA -> EXTRA_EXTRA
    int OPEN_BY_USER -> OPEN_BY_USER
    int OPEN_BY_NOTIFICATION -> OPEN_BY_NOTIFICATION
    int BIND_STATUS_ONLINE -> BIND_STATUS_ONLINE
    int BIND_STATUS_OFFLINE -> BIND_STATUS_OFFLINE
    java.lang.String METHOD_SEND_MSG_TO_SERVER -> METHOD_SEND_MSG_TO_SERVER
    java.lang.String METHOD_SEND_MSG_TO_USER -> METHOD_SEND_MSG_TO_USER
    java.lang.String METHOD_APPSTART -> METHOD_APPSTART
    java.lang.String METHOD_APPSTOP -> METHOD_APPSTOP
    java.lang.String METHOD_SEND -> METHOD_SEND
    java.lang.String METHOD_BIND -> METHOD_BIND
    java.lang.String METHOD_UNBIND -> METHOD_UNBIND
    java.lang.String EXTRA_FETCH_TYPE -> EXTRA_FETCH_TYPE
    java.lang.String EXTRA_FETCH_NUM -> EXTRA_FETCH_NUM
    java.lang.String METHOD_FETCH -> METHOD_FETCH
    java.lang.String METHOD_COUNT -> METHOD_COUNT
    java.lang.String EXTRA_MSG_IDS -> EXTRA_MSG_IDS
    java.lang.String METHOD_DELETE -> METHOD_DELETE
    java.lang.String METHOD_GBIND -> METHOD_GBIND
    java.lang.String EXTRA_GID -> EXTRA_GID
    java.lang.String METHOD_SET_TAGS -> METHOD_SET_TAGS
    java.lang.String METHOD_DEL_TAGS -> METHOD_DEL_TAGS
    java.lang.String EXTRA_TAGS -> EXTRA_TAGS
    java.lang.String EXTRA_NOTIFICATION_TITLE -> EXTRA_NOTIFICATION_TITLE
    java.lang.String EXTRA_NOTIFICATION_CONTENT -> EXTRA_NOTIFICATION_CONTENT
    java.lang.String METHOD_GUNBIND -> METHOD_GUNBIND
    java.lang.String METHOD_GINFO -> METHOD_GINFO
    java.lang.String METHOD_GLIST -> METHOD_GLIST
    java.lang.String METHOD_LISTTAGS -> METHOD_LISTTAGS
    java.lang.String METHOD_LIST_LAPP_TAGS -> METHOD_LIST_LAPP_TAGS
    java.lang.String METHOD_FETCHGMSG -> METHOD_FETCHGMSG
    java.lang.String EXTRA_GROUP_FETCH_TYPE -> EXTRA_GROUP_FETCH_TYPE
    java.lang.String EXTRA_GROUP_FETCH_NUM -> EXTRA_GROUP_FETCH_NUM
    java.lang.String METHOD_COUNTGMSG -> METHOD_COUNTGMSG
    java.lang.String METHOD_ONLINE -> METHOD_ONLINE
    int ERROR_SUCCESS -> ERROR_SUCCESS
    int ERROR_NETWORK_ERROR -> ERROR_NETWORK_ERROR
    int ERROR_SERVICE_NOT_AVAILABLE -> ERROR_SERVICE_NOT_AVAILABLE
    int ERROR_SERVICE_NOT_AVAILABLE_TEMP -> ERROR_SERVICE_NOT_AVAILABLE_TEMP
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_SERVER_INTERNAL_ERROR -> ERROR_SERVER_INTERNAL_ERROR
    int ERROR_METHOD_ERROR -> ERROR_METHOD_ERROR
    int ERROR_PARAMS_ERROR -> ERROR_PARAMS_ERROR
    int ERROR_AUTHENTICATION_FAILED -> ERROR_AUTHENTICATION_FAILED
    int ERROR_QUOTA_USE_UP -> ERROR_QUOTA_USE_UP
    int ERROR_DATA_NOT_FOUND -> ERROR_DATA_NOT_FOUND
    int ERROR_TIME_EXPIRES -> ERROR_TIME_EXPIRES
    int ERROR_CHANNEL_TOKEN_TIMEOUT -> ERROR_CHANNEL_TOKEN_TIMEOUT
    int ERROR_BIND_NOT_EXIST -> ERROR_BIND_NOT_EXIST
    int ERROR_BIND_OVERLOAD -> ERROR_BIND_OVERLOAD
    int LOGIN_TYPE_API_KEY -> LOGIN_TYPE_API_KEY
    int LOGIN_TYPE_ACCESS_TOKEN -> LOGIN_TYPE_ACCESS_TOKEN
    int LOGIN_TYPE_BDUSS -> LOGIN_TYPE_BDUSS
    int LOGIN_TYPE_UNKNOWN -> LOGIN_TYPE_UNKNOWN
    int ERROR_AIDL_FAIL -> ERROR_AIDL_FAIL
    java.lang.String ERROR_AIDL_FAIL_EXCEPTION -> ERROR_AIDL_FAIL_EXCEPTION
    java.lang.String ERROR_AIDL_FAIL_NO_PUSHSERVICE -> ERROR_AIDL_FAIL_NO_PUSHSERVICE
    short ORIGINAL_VERSION -> ORIGINAL_VERSION
    int a -> a
    java.lang.String b -> b
    java.lang.String rsaEncrypt(java.lang.String) -> rsaEncrypt
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    void restartPushService(android.content.Context) -> restartPushService
    void startPushService(android.content.Context) -> startPushService
    java.lang.String getErrorMsg(int) -> getErrorMsg
    byte[] a(byte[],java.lang.String,int) -> a
com.baidu.android.pushservice.PushLightapp -> com.baidu.android.pushservice.PushLightapp:
    int b -> b
    boolean c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.PushLightapp e -> e
    com.baidu.android.pushservice.IPushLightappListener f -> f
    android.content.Context g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    com.baidu.android.pushservice.aidl.IPushService a -> a
    android.content.ServiceConnection s -> s
    java.lang.String ACTION_REGISTER_SYNC -> ACTION_REGISTER_SYNC
    java.lang.String SHARED_NAME_SETTINGS -> SHARED_NAME_SETTINGS
    int CONTEXT_FLAG_MODE_MULTI_PROCESS -> CONTEXT_FLAG_MODE_MULTI_PROCESS
    java.lang.String KEY_PRIORITY2 -> KEY_PRIORITY2
    java.lang.String SETTINGS_KEY_CURRENT_PACKAGE_NAME -> SETTINGS_KEY_CURRENT_PACKAGE_NAME
    void e() -> e
    com.baidu.android.pushservice.PushLightapp a(android.content.Context) -> a
    void getInstanceAsync(android.content.Context,com.baidu.android.pushservice.IPushLightappListener) -> getInstanceAsync
    boolean isReady() -> isReady
    void destroy() -> destroy
    void f() -> f
    void subscribeLight(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLight
    void subscribeLight(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLight
    void subscribeLightByApiKey(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLightByApiKey
    void unsubscribeLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> unsubscribeLight
    void unbindLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> unbindLight
    java.lang.String getSubcribeApps() -> getSubcribeApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> register
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    java.lang.String getBlackList(java.lang.String) -> getBlackList
    int g() -> g
    java.lang.String b(android.content.Context) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.util.List getFriendPackages(android.content.Context) -> getFriendPackages
    boolean b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    int a() -> a
    boolean b() -> b
    boolean a(com.baidu.android.pushservice.PushLightapp) -> a
    void b(com.baidu.android.pushservice.PushLightapp) -> b
    boolean a(com.baidu.android.pushservice.PushLightapp,boolean) -> a
    int a(int) -> a
    int c(com.baidu.android.pushservice.PushLightapp) -> c
    com.baidu.android.pushservice.IPushLightappListener c() -> c
    com.baidu.android.pushservice.PushLightapp d() -> d
    android.content.Context d(com.baidu.android.pushservice.PushLightapp) -> d
    com.baidu.android.pushservice.PushLightapp e(com.baidu.android.pushservice.PushLightapp) -> e
    int a(com.baidu.android.pushservice.PushLightapp,int) -> a
    int f(com.baidu.android.pushservice.PushLightapp) -> f
    void g(com.baidu.android.pushservice.PushLightapp) -> g
com.baidu.android.pushservice.PushLightapp$1 -> com.baidu.android.pushservice.PushLightapp$1:
    com.baidu.android.pushservice.PushLightapp a -> a
    void run() -> run
com.baidu.android.pushservice.PushLightapp$2 -> com.baidu.android.pushservice.PushLightapp$2:
    com.baidu.android.pushservice.PushLightapp a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.android.pushservice.PushLightapp$3 -> com.baidu.android.pushservice.PushLightapp$3:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.PushLightapp$4 -> com.baidu.android.pushservice.PushLightapp$4:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.PushLightapp$5 -> com.baidu.android.pushservice.PushLightapp$5:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    java.lang.String b -> b
    com.baidu.android.pushservice.PushLightapp c -> c
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.PushLightapp$6 -> com.baidu.android.pushservice.PushLightapp$6:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.PushLightapp$7 -> com.baidu.android.pushservice.PushLightapp$7:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
com.baidu.android.pushservice.PushManager -> com.baidu.android.pushservice.PushManager:
    java.lang.String a -> a
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    void init(android.content.Context,java.lang.String) -> init
    void initFromAKSK(android.content.Context,java.lang.String) -> initFromAKSK
    void startWork(android.content.Context,java.lang.String,java.lang.String) -> startWork
    void startWork(android.content.Context,int,java.lang.String) -> startWork
    void sdkStartWork(android.content.Context,java.lang.String,int) -> sdkStartWork
    void sdkUnbind(android.content.Context,java.lang.String) -> sdkUnbind
    void setSDKTags(android.content.Context,java.lang.String,java.util.List) -> setSDKTags
    void setLappTags(android.content.Context,java.lang.String,java.util.List) -> setLappTags
    void stopWork(android.content.Context) -> stopWork
    void resumeWork(android.content.Context) -> resumeWork
    boolean isPushEnabled(android.content.Context) -> isPushEnabled
    void activityStarted(android.app.Activity) -> activityStarted
    void activityStoped(android.app.Activity) -> activityStoped
    void setAccessToken(android.content.Context,java.lang.String) -> setAccessToken
    void setApiKey(android.content.Context,java.lang.String) -> setApiKey
    void setBduss(android.content.Context,java.lang.String) -> setBduss
    void bind(android.content.Context,int) -> bind
    void unbind(android.content.Context) -> unbind
    void fetchMessages(android.content.Context,int,int) -> fetchMessages
    void getMessageCounts(android.content.Context) -> getMessageCounts
    void deleteMessages(android.content.Context,java.lang.String[]) -> deleteMessages
    void sendMsgToUser(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToUser
    void bindGroup(android.content.Context,java.lang.String) -> bindGroup
    void setTags(android.content.Context,java.util.List) -> setTags
    void listTags(android.content.Context) -> listTags
    void listSDKTags(android.content.Context,java.lang.String) -> listSDKTags
    void listLappTags(android.content.Context,java.lang.String) -> listLappTags
    void delTags(android.content.Context,java.util.List) -> delTags
    void delSDKTags(android.content.Context,java.lang.String,java.util.List) -> delSDKTags
    void delLappTags(android.content.Context,java.lang.String,java.util.List) -> delLappTags
    void unbindGroup(android.content.Context,java.lang.String) -> unbindGroup
    void getGroupInfo(android.content.Context,java.lang.String) -> getGroupInfo
    void getGroupList(android.content.Context) -> getGroupList
    void fetchGroupMessages(android.content.Context,java.lang.String,int,int) -> fetchGroupMessages
    void getGroupMessageCounts(android.content.Context,java.lang.String) -> getGroupMessageCounts
    void setDefaultNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setDefaultNotificationBuilder
    void setNotificationBuilder(android.content.Context,int,com.baidu.android.pushservice.PushNotificationBuilder) -> setNotificationBuilder
    void setMediaNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setMediaNotificationBuilder
    boolean isConnected(android.content.Context) -> isConnected
    boolean a(android.content.Context) -> a
    void tryConnect(android.content.Context) -> tryConnect
    void enableLbs(android.content.Context) -> enableLbs
    void disableLbs(android.content.Context) -> disableLbs
    void getLappBindState(android.content.Context,java.lang.String) -> getLappBindState
    java.util.HashMap getAppNotiMap(android.content.Context) -> getAppNotiMap
    void saveAppNotiMap(android.content.Context,java.util.HashMap) -> saveAppNotiMap
    void setNoDisturbMode(android.content.Context,int,int,int,int) -> setNoDisturbMode
com.baidu.android.pushservice.PushManager$1 -> com.baidu.android.pushservice.PushManager$1:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$10 -> com.baidu.android.pushservice.PushManager$10:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$11 -> com.baidu.android.pushservice.PushManager$11:
    android.content.Context a -> a
    int b -> b
    int c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$12 -> com.baidu.android.pushservice.PushManager$12:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$13 -> com.baidu.android.pushservice.PushManager$13:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$14 -> com.baidu.android.pushservice.PushManager$14:
    android.content.Context a -> a
    java.lang.String[] b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$15 -> com.baidu.android.pushservice.PushManager$15:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    void run() -> run
com.baidu.android.pushservice.PushManager$16 -> com.baidu.android.pushservice.PushManager$16:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$17 -> com.baidu.android.pushservice.PushManager$17:
    android.content.Context a -> a
    java.util.List b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$18 -> com.baidu.android.pushservice.PushManager$18:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$19 -> com.baidu.android.pushservice.PushManager$19:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$2 -> com.baidu.android.pushservice.PushManager$2:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$20 -> com.baidu.android.pushservice.PushManager$20:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$21 -> com.baidu.android.pushservice.PushManager$21:
    android.content.Context a -> a
    java.util.List b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$22 -> com.baidu.android.pushservice.PushManager$22:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$23 -> com.baidu.android.pushservice.PushManager$23:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$24 -> com.baidu.android.pushservice.PushManager$24:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$25 -> com.baidu.android.pushservice.PushManager$25:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$26 -> com.baidu.android.pushservice.PushManager$26:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$27 -> com.baidu.android.pushservice.PushManager$27:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$28 -> com.baidu.android.pushservice.PushManager$28:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    void run() -> run
com.baidu.android.pushservice.PushManager$29 -> com.baidu.android.pushservice.PushManager$29:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$3 -> com.baidu.android.pushservice.PushManager$3:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$30 -> com.baidu.android.pushservice.PushManager$30:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$31 -> com.baidu.android.pushservice.PushManager$31:
    android.content.Context a -> a
    int b -> b
    com.baidu.android.pushservice.PushNotificationBuilder c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$32 -> com.baidu.android.pushservice.PushManager$32:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$33 -> com.baidu.android.pushservice.PushManager$33:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$34 -> com.baidu.android.pushservice.PushManager$34:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$35 -> com.baidu.android.pushservice.PushManager$35:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$36 -> com.baidu.android.pushservice.PushManager$36:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$37 -> com.baidu.android.pushservice.PushManager$37:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$38 -> com.baidu.android.pushservice.PushManager$38:
    java.util.HashMap a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$39 -> com.baidu.android.pushservice.PushManager$39:
    android.content.Context a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    void run() -> run
com.baidu.android.pushservice.PushManager$4 -> com.baidu.android.pushservice.PushManager$4:
    android.app.Activity a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$40 -> com.baidu.android.pushservice.PushManager$40:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$41 -> com.baidu.android.pushservice.PushManager$41:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$42 -> com.baidu.android.pushservice.PushManager$42:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$43 -> com.baidu.android.pushservice.PushManager$43:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$44 -> com.baidu.android.pushservice.PushManager$44:
    android.content.Context a -> a
    java.lang.String b -> b
    java.util.List c -> c
    void run() -> run
com.baidu.android.pushservice.PushManager$5 -> com.baidu.android.pushservice.PushManager$5:
    android.app.Activity a -> a
    void run() -> run
com.baidu.android.pushservice.PushManager$6 -> com.baidu.android.pushservice.PushManager$6:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$7 -> com.baidu.android.pushservice.PushManager$7:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$8 -> com.baidu.android.pushservice.PushManager$8:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.PushManager$9 -> com.baidu.android.pushservice.PushManager$9:
    android.content.Context a -> a
    int b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder -> com.baidu.android.pushservice.PushNotificationBuilder:
    boolean a -> a
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder mInstance -> mInstance
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder getInner() -> getInner
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    void a(int) -> a
    android.app.Notification construct(android.content.Context) -> construct
    boolean a(com.baidu.android.pushservice.PushNotificationBuilder,boolean) -> a
    boolean a(com.baidu.android.pushservice.PushNotificationBuilder) -> a
    void a(com.baidu.android.pushservice.PushNotificationBuilder,int) -> a
com.baidu.android.pushservice.PushNotificationBuilder$1 -> com.baidu.android.pushservice.PushNotificationBuilder$1:
    android.content.Context a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$2 -> com.baidu.android.pushservice.PushNotificationBuilder$2:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$3 -> com.baidu.android.pushservice.PushNotificationBuilder$3:
    java.lang.String a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$4 -> com.baidu.android.pushservice.PushNotificationBuilder$4:
    java.lang.String a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$5 -> com.baidu.android.pushservice.PushNotificationBuilder$5:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$6 -> com.baidu.android.pushservice.PushNotificationBuilder$6:
    int a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$7 -> com.baidu.android.pushservice.PushNotificationBuilder$7:
    android.net.Uri a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushNotificationBuilder$8 -> com.baidu.android.pushservice.PushNotificationBuilder$8:
    long[] a -> a
    com.baidu.android.pushservice.PushNotificationBuilder b -> b
    void run() -> run
com.baidu.android.pushservice.PushServiceReceiver -> com.baidu.android.pushservice.PushServiceReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.android.pushservice.PushServiceReceiver$1 -> com.baidu.android.pushservice.PushServiceReceiver$1:
    android.content.Context a -> a
    android.content.Intent b -> b
    com.baidu.android.pushservice.PushServiceReceiver c -> c
    void run() -> run
com.baidu.android.pushservice.PushSettings -> com.baidu.android.pushservice.PushSettings:
    void enableDebugMode(android.content.Context,boolean) -> enableDebugMode
com.baidu.android.pushservice.PushSettings$1 -> com.baidu.android.pushservice.PushSettings$1:
    android.content.Context a -> a
    boolean b -> b
    void run() -> run
com.baidu.android.pushservice.RegistrationReceiver -> com.baidu.android.pushservice.RegistrationReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.android.pushservice.RegistrationReceiver$1 -> com.baidu.android.pushservice.RegistrationReceiver$1:
    android.content.Context a -> a
    android.content.Intent b -> b
    com.baidu.android.pushservice.RegistrationReceiver c -> c
    void run() -> run
com.baidu.android.pushservice.aidl.IPushService -> com.baidu.android.pushservice.aidl.IPushService:
    void subscribeLight(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLight
    void unsubscribeLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unsubscribeLight
    void unbindLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unbindLight
    java.lang.String getSubcribedApps() -> getSubcribedApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean registerRunTime(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerRunTime
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getPushVersion() -> getPushVersion
    void subscribeLightApp(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLightApp
    java.lang.String getBlackList(java.lang.String) -> getBlackList
com.baidu.android.pushservice.aidl.IPushService$Stub -> com.baidu.android.pushservice.aidl.IPushService$Stub:
    java.lang.String w -> w
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    com.baidu.android.pushservice.aidl.IPushService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.aidl.IPushService$Stub$a -> com.baidu.android.pushservice.aidl.IPushService$Stub$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    void subscribeLight(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLight
    void unsubscribeLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unsubscribeLight
    void unbindLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> unbindLight
    java.lang.String getSubcribedApps() -> getSubcribedApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean registerRunTime(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> registerRunTime
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getPushVersion() -> getPushVersion
    void subscribeLightApp(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.aidl.IPushServiceListener) -> subscribeLightApp
    java.lang.String getBlackList(java.lang.String) -> getBlackList
com.baidu.android.pushservice.aidl.IPushServiceListener -> com.baidu.android.pushservice.aidl.IPushServiceListener:
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.aidl.IPushServiceListener$Stub -> com.baidu.android.pushservice.aidl.IPushServiceListener$Stub:
    java.lang.String a -> a
    int d -> d
    int e -> e
    int f -> f
    com.baidu.android.pushservice.aidl.IPushServiceListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.aidl.IPushServiceListener$Stub$a -> com.baidu.android.pushservice.aidl.IPushServiceListener$Stub$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String a() -> a
    void onSubscribe(int,java.lang.String) -> onSubscribe
    void onUnsubscribe(int,java.lang.String) -> onUnsubscribe
    void onUnbindLight(int,java.lang.String) -> onUnbindLight
com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgeBasicPushNotificationBuilder:
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder getInner() -> getInner
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgeCustomPushNotificationBuilder:
    com.baidu.android.pushservice.internal.CustomPushNotificationBuilder getInner() -> getInner
    void setLayoutDrawable(int) -> setLayoutDrawable
    android.app.Notification construct(android.content.Context) -> construct
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    com.baidu.android.pushservice.internal.PushNotificationBuilder getInner() -> getInner
com.baidu.android.pushservice.apiproxy.BridgeInternal -> com.baidu.android.pushservice.apiproxy.BridgeInternal:
    void enablePushService(android.content.Context) -> enablePushService
    void disablePushService(android.content.Context) -> disablePushService
    void disablePushConnection(android.content.Context) -> disablePushConnection
    void enablePushConnection(android.content.Context) -> enablePushConnection
    void createBdussIntent(android.content.Context) -> createBdussIntent
com.baidu.android.pushservice.apiproxy.BridgePushConstants -> com.baidu.android.pushservice.apiproxy.BridgePushConstants:
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    void restartPushService(android.content.Context) -> restartPushService
    void startPushService(android.content.Context) -> startPushService
com.baidu.android.pushservice.apiproxy.BridgePushManager -> com.baidu.android.pushservice.apiproxy.BridgePushManager:
    void init(android.content.Context,java.lang.String,java.lang.String) -> init
    void init(android.content.Context,java.lang.String) -> init
    void initFromAKSK(android.content.Context,java.lang.String) -> initFromAKSK
    void startWork(android.content.Context,java.lang.String,java.lang.String) -> startWork
    void startWork(android.content.Context,int,java.lang.String) -> startWork
    void sdkStartWork(android.content.Context,java.lang.String,int) -> sdkStartWork
    void stopWork(android.content.Context) -> stopWork
    void resumeWork(android.content.Context) -> resumeWork
    boolean isPushEnabled(android.content.Context) -> isPushEnabled
    void activityStarted(android.app.Activity) -> activityStarted
    void activityStoped(android.app.Activity) -> activityStoped
    void setAccessToken(android.content.Context,java.lang.String) -> setAccessToken
    void setApiKey(android.content.Context,java.lang.String) -> setApiKey
    void setBduss(android.content.Context,java.lang.String) -> setBduss
    void bind(android.content.Context,int) -> bind
    void unbind(android.content.Context) -> unbind
    void fetchMessages(android.content.Context,int,int) -> fetchMessages
    void getMessageCounts(android.content.Context) -> getMessageCounts
    void deleteMessages(android.content.Context,java.lang.String[]) -> deleteMessages
    void sendMsgToUser(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToUser
    void bindGroup(android.content.Context,java.lang.String) -> bindGroup
    void setTags(android.content.Context,java.util.List) -> setTags
    void listTags(android.content.Context) -> listTags
    void delTags(android.content.Context,java.util.List) -> delTags
    void unbindGroup(android.content.Context,java.lang.String) -> unbindGroup
    void getGroupInfo(android.content.Context,java.lang.String) -> getGroupInfo
    void getGroupList(android.content.Context) -> getGroupList
    void fetchGroupMessages(android.content.Context,java.lang.String,int,int) -> fetchGroupMessages
    void getGroupMessageCounts(android.content.Context,java.lang.String) -> getGroupMessageCounts
    void setDefaultNotificationBuilder(android.content.Context,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setDefaultNotificationBuilder
    void setNotificationBuilder(android.content.Context,int,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setNotificationBuilder
    void setMediaNotificationBuilder(android.content.Context,com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder) -> setMediaNotificationBuilder
    boolean isConnected(android.content.Context) -> isConnected
    void tryConnect(android.content.Context) -> tryConnect
    void enableLbs(android.content.Context) -> enableLbs
    void disableLbs(android.content.Context) -> disableLbs
    void sdkUnbind(android.content.Context,java.lang.String) -> sdkUnbind
    void setSDKTags(android.content.Context,java.lang.String,java.util.List) -> setSDKTags
    void setLappTags(android.content.Context,java.lang.String,java.util.List) -> setLappTags
    void listSDKTags(android.content.Context,java.lang.String) -> listSDKTags
    void delLappTags(android.content.Context,java.lang.String,java.util.List) -> delLappTags
    void listLappTags(android.content.Context,java.lang.String) -> listLappTags
    void delSDKTags(android.content.Context,java.lang.String,java.util.List) -> delSDKTags
    void getLappBindState(android.content.Context,java.lang.String) -> getLappBindState
    java.util.HashMap getAppNotiMap() -> getAppNotiMap
    void saveAppNotiMap(java.util.HashMap) -> saveAppNotiMap
    void setNoDisturbMode(android.content.Context,int,int,int,int) -> setNoDisturbMode
com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder -> com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder:
    com.baidu.android.pushservice.internal.PushNotificationBuilder mInstance -> mInstance
    com.baidu.android.pushservice.internal.PushNotificationBuilder getInner() -> getInner
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder$1 -> com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder$1:
    com.baidu.android.pushservice.apiproxy.BridgePushNotificationBuilder a -> a
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.apiproxy.BridgePushSettings -> com.baidu.android.pushservice.apiproxy.BridgePushSettings:
    void enableDebugMode(android.content.Context,boolean) -> enableDebugMode
com.baidu.android.pushservice.apiproxy.BridgeReceiver -> com.baidu.android.pushservice.apiproxy.BridgeReceiver:
    void PushServiceReceiverOnReceive(android.content.Context,android.content.Intent) -> PushServiceReceiverOnReceive
    void RegistrationReceiverOnReceive(android.content.Context,android.content.Intent) -> RegistrationReceiverOnReceive
com.baidu.android.silentupdate.SilentManager -> com.baidu.android.silentupdate.SilentManager:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    boolean g -> g
    void enableDebugMode(boolean) -> enableDebugMode
    void enableRSA(boolean) -> enableRSA
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    boolean loadLib(android.content.Context,java.lang.String,java.lang.String) -> loadLib
    boolean loadLib(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> loadLib
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.io.File) -> a
    boolean a(android.content.Context,java.io.File,java.io.File,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(java.io.File) -> b
    void a(java.io.InputStream,java.io.OutputStream) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String decrypt(java.lang.String,java.lang.String) -> decrypt
    void a(java.io.Closeable) -> a
com.baidu.android.silentupdate.a -> com.baidu.android.silentupdate.a:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.android.silentupdate.b -> com.baidu.android.silentupdate.b:
    java.lang.String a -> a
    boolean a(java.lang.ClassLoader,java.lang.ClassLoader) -> a
    java.lang.ClassLoader a(java.lang.String,java.lang.String,java.lang.String,android.content.Context) -> a
com.baidu.android.silentupdate.c -> com.baidu.android.silentupdate.c:
    void a(android.app.Application,java.lang.String) -> a
com.baidu.frontia.Frontia -> com.baidu.frontia.Frontia:
    java.lang.String a -> a
    com.baidu.frontia.base.impl.FrontiaImpl b -> b
    java.lang.String c -> c
    boolean init(android.content.Context,java.lang.String) -> init
    java.lang.String getApiKey() -> getApiKey
    java.lang.String getFrontiaVersion() -> getFrontiaVersion
    void setSlientUpdateEnabled(boolean) -> setSlientUpdateEnabled
    com.baidu.frontia.api.FrontiaPush getPush() -> getPush
com.baidu.frontia.FrontiaApplication -> com.baidu.frontia.FrontiaApplication:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void onCreate() -> onCreate
    void initFrontiaApplication(android.content.Context) -> initFrontiaApplication
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
com.baidu.frontia.FrontiaError -> com.baidu.frontia.FrontiaError:
    int No_Error -> No_Error
    int Error_DefaultError -> Error_DefaultError
    int Error_Unsupported_API -> Error_Unsupported_API
    int Error_No_Permission -> Error_No_Permission
    int Error_Unauthorized_IP -> Error_Unauthorized_IP
    int Error_DB_Query -> Error_DB_Query
    int Error_DB_Connect -> Error_DB_Connect
    int Error_DB_Result_Set_Empty -> Error_DB_Result_Set_Empty
    int Error_Network -> Error_Network
    int Error_Access_Server -> Error_Access_Server
    int Error_Param -> Error_Param
    int Error_AppId_Empty -> Error_AppId_Empty
    int Error_BCS -> Error_BCS
    int Error_Invalid_Bduss -> Error_Invalid_Bduss
    int Error_User_Not_Login -> Error_User_Not_Login
    int Error_User_Not_Active -> Error_User_Not_Active
    int Error_User_Not_Authorized -> Error_User_Not_Authorized
    int Error_User_Not_Exist -> Error_User_Not_Exist
    int Error_User_Already_Exist -> Error_User_Already_Exist
    int Error_File_Already_Exist -> Error_File_Already_Exist
    int Error_File_Name_Invaild -> Error_File_Name_Invaild
    int Error_File_Parent_Path_Not_Exist -> Error_File_Parent_Path_Not_Exist
    int Error_File_Not_Authorized -> Error_File_Not_Authorized
    int Error_Directory_Null -> Error_Directory_Null
    int Error_File_Not_Exist -> Error_File_Not_Exist
    int Error_File_Deal_Failed -> Error_File_Deal_Failed
    int Error_File_Create_Failed -> Error_File_Create_Failed
    int Error_File_Copy_Failed -> Error_File_Copy_Failed
    int Error_File_Delete_Failed -> Error_File_Delete_Failed
    int Error_Get_File_Meta_Failed -> Error_Get_File_Meta_Failed
    int Error_File_Move_Failed -> Error_File_Move_Failed
    int Error_File_Rename_Failed -> Error_File_Rename_Failed
    int Error_SuperFile_Create_Failed -> Error_SuperFile_Create_Failed
    int Error_SuperFile_Block_List_Empty -> Error_SuperFile_Block_List_Empty
    int Error_SuperFile_Update_Failed -> Error_SuperFile_Update_Failed
    int Error_Tag_Internal -> Error_Tag_Internal
    int Error_Tag_Param -> Error_Tag_Param
    int Error_Tag_Database -> Error_Tag_Database
    int Error_Set_Quota_Denied -> Error_Set_Quota_Denied
    int Error_Quota_Support_2_Level -> Error_Quota_Support_2_Level
    int Error_Quota_Exceed -> Error_Quota_Exceed
    int Error_Quota_Bigger_Than_ParentDir -> Error_Quota_Bigger_Than_ParentDir
    int Error_Quota_Smaller_Than_SubDir -> Error_Quota_Smaller_Than_SubDir
    int Error_Thumbnail_Failed -> Error_Thumbnail_Failed
    int Error_Invalid_Access_Token -> Error_Invalid_Access_Token
    int Error_Signature -> Error_Signature
    int Error_Object_Not_Exist -> Error_Object_Not_Exist
    int Error_ACL_Put -> Error_ACL_Put
    int Error_ACL_Query -> Error_ACL_Query
    int Error_ACL_Get -> Error_ACL_Get
    int Error_ACL_Not_Exist -> Error_ACL_Not_Exist
    int Error_Bucket_Already_Exist -> Error_Bucket_Already_Exist
    int Error_Bad_Request -> Error_Bad_Request
    int Error_BaiduBS_Internal_Error -> Error_BaiduBS_Internal_Error
    int Error_Not_Support -> Error_Not_Support
    int Error_Access_Denied -> Error_Access_Denied
    int Error_Service_Unavailable -> Error_Service_Unavailable
    int Error_Retry -> Error_Retry
    int Error_Put_Object_Data -> Error_Put_Object_Data
    int Error_Put_Object_Meta -> Error_Put_Object_Meta
    int Error_Get_Object_Data -> Error_Get_Object_Data
    int Error_Get_Object_Meta -> Error_Get_Object_Meta
    int Error_Storage_Exceed_Limit -> Error_Storage_Exceed_Limit
    int Error_Request_Exceed_Limit -> Error_Request_Exceed_Limit
    int Error_Transfer_Exceed_Limit -> Error_Transfer_Exceed_Limit
    int Error_Response_Key_Illegal -> Error_Response_Key_Illegal
    int Error_Response_Key_Not_Exist -> Error_Response_Key_Not_Exist
    int Error_CloudMatch_Not_Exist -> Error_CloudMatch_Not_Exist
    int Error_Internal_Server -> Error_Internal_Server
    int Error_Param_CloudDownaload -> Error_Param_CloudDownaload
    int Error_AppId_Is_Empty -> Error_AppId_Is_Empty
    int Error_Bduss_Is_Invalid -> Error_Bduss_Is_Invalid
    int Error_No_Permission_CloudDownload -> Error_No_Permission_CloudDownload
    int Error_User_Not_Login_CloudDownload -> Error_User_Not_Login_CloudDownload
    int Error_User_Not_Active_CloudDownload -> Error_User_Not_Active_CloudDownload
    int Error_User_Not_Authorized_CloudDownload -> Error_User_Not_Authorized_CloudDownload
    int Error_User_Not_Exsits -> Error_User_Not_Exsits
    int Error_Storage_Exceed_Limit_CloudDownload -> Error_Storage_Exceed_Limit_CloudDownload
    int Error_Object_Not_exists -> Error_Object_Not_exists
    int Error_Unsupported_Api -> Error_Unsupported_Api
    int Error_Request_Expires_Timeout -> Error_Request_Expires_Timeout
com.baidu.frontia.FrontiaQuery -> com.baidu.frontia.FrontiaQuery:
    com.baidu.frontia.base.impl.FrontiaQueryImpl a -> a
    void a(com.baidu.frontia.base.impl.FrontiaQueryImpl) -> a
    org.json.JSONObject toJSONObject() -> toJSONObject
    com.baidu.frontia.FrontiaQuery equals(java.lang.String,java.lang.Object) -> equals
    com.baidu.frontia.FrontiaQuery notEqual(java.lang.String,java.lang.Object) -> notEqual
    com.baidu.frontia.FrontiaQuery greaterThan(java.lang.String,java.lang.Object) -> greaterThan
    com.baidu.frontia.FrontiaQuery lessThan(java.lang.String,java.lang.Object) -> lessThan
    com.baidu.frontia.FrontiaQuery greaterThanEqualTo(java.lang.String,java.lang.Object) -> greaterThanEqualTo
    com.baidu.frontia.FrontiaQuery lessThanEqualTo(java.lang.String,java.lang.Object) -> lessThanEqualTo
    com.baidu.frontia.FrontiaQuery in(java.lang.String,java.lang.Object[]) -> in
    com.baidu.frontia.FrontiaQuery notIn(java.lang.String,java.lang.Object[]) -> notIn
    com.baidu.frontia.FrontiaQuery regEx(java.lang.String,java.lang.String) -> regEx
    com.baidu.frontia.FrontiaQuery startsWith(java.lang.String,java.lang.String) -> startsWith
    com.baidu.frontia.FrontiaQuery endsWith(java.lang.String,java.lang.String) -> endsWith
    com.baidu.frontia.FrontiaQuery all(java.lang.String,java.lang.Object[]) -> all
    com.baidu.frontia.FrontiaQuery size(java.lang.String,int) -> size
    com.baidu.frontia.FrontiaQuery and(com.baidu.frontia.FrontiaQuery) -> and
    com.baidu.frontia.FrontiaQuery or(com.baidu.frontia.FrontiaQuery) -> or
    com.baidu.frontia.FrontiaQuery not() -> not
    com.baidu.frontia.FrontiaQuery setLimit(int) -> setLimit
    int getLimit() -> getLimit
    com.baidu.frontia.FrontiaQuery addSort(java.lang.String,com.baidu.frontia.FrontiaQuery$SortOrder) -> addSort
    org.json.JSONObject getSort() -> getSort
    com.baidu.frontia.FrontiaQuery setSkip(int) -> setSkip
    int getSkip() -> getSkip
com.baidu.frontia.FrontiaQuery$SortOrder -> com.baidu.frontia.FrontiaQuery$SortOrder:
    com.baidu.frontia.FrontiaQuery$SortOrder ASC -> ASC
    com.baidu.frontia.FrontiaQuery$SortOrder DESC -> DESC
    com.baidu.frontia.FrontiaQuery$SortOrder[] a -> a
    com.baidu.frontia.FrontiaQuery$SortOrder[] values() -> values
    com.baidu.frontia.FrontiaQuery$SortOrder valueOf(java.lang.String) -> valueOf
com.baidu.frontia.a -> com.baidu.frontia.a:
    java.lang.String[] a() -> a
    void a(android.content.Context,java.lang.String) -> a
com.baidu.frontia.api.FrontiaDeepLink -> com.baidu.frontia.api.FrontiaDeepLink:
    java.lang.String a -> a
    com.baidu.frontia.module.deeplink.FrontiaDeepLinkImpl b -> b
    com.baidu.frontia.api.FrontiaDeepLink c -> c
    com.baidu.frontia.api.FrontiaDeepLink newInstance(android.content.Context) -> newInstance
    void launch(java.lang.String) -> launch
    void init(java.lang.String) -> init
com.baidu.frontia.api.FrontiaPush -> com.baidu.frontia.api.FrontiaPush:
    com.baidu.frontia.api.FrontiaPush a -> a
    com.baidu.frontia.module.push.FrontiaPushImpl b -> b
    android.content.Context c -> c
    com.baidu.frontia.module.push.FrontiaPushImpl a() -> a
    com.baidu.frontia.api.FrontiaPush newInstance(android.content.Context) -> newInstance
    void init(java.lang.String) -> init
    void setNotificationBuilder(int,com.baidu.frontia.api.FrontiaPushUtil$a) -> setNotificationBuilder
    void stop() -> stop
    void resume() -> resume
    boolean isPushWorking() -> isPushWorking
    void start() -> start
    void start(java.lang.String) -> start
    void setTags(java.util.List) -> setTags
    void deleteTags(java.util.List) -> deleteTags
    void listTags() -> listTags
    void enableLbs() -> enableLbs
    void disableLbs() -> disableLbs
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void pushMessage(com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$PushMessageListener) -> pushMessage
    void listMessage(com.baidu.frontia.FrontiaQuery,com.baidu.frontia.api.FrontiaPushListener$ListMessageListener) -> listMessage
    void describeMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener) -> describeMessage
    void replaceMessage(java.lang.String,java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void replaceMessage(java.lang.String,java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void replaceMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushUtil$Trigger,com.baidu.frontia.api.FrontiaPushUtil$MessageContent,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> replaceMessage
    void removeMessage(java.lang.String,com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener) -> removeMessage
    void setDebugModeEnabled(boolean) -> setDebugModeEnabled
com.baidu.frontia.api.FrontiaPush$a -> com.baidu.frontia.api.FrontiaPush$a:
    com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$CommonMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$CommonMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener a(com.baidu.frontia.api.FrontiaPush$a) -> a
com.baidu.frontia.api.FrontiaPush$a$1 -> com.baidu.frontia.api.FrontiaPush$a$1:
    com.baidu.frontia.api.FrontiaPush$a a -> a
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$b -> com.baidu.frontia.api.FrontiaPush$b:
    com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener a(com.baidu.frontia.api.FrontiaPush$b) -> a
com.baidu.frontia.api.FrontiaPush$b$1 -> com.baidu.frontia.api.FrontiaPush$b$1:
    com.baidu.frontia.api.FrontiaPush$b a -> a
    void onSuccess(com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageResult) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$c -> com.baidu.frontia.api.FrontiaPush$c:
    com.baidu.frontia.api.FrontiaPushListener$ListMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$ListMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$ListMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$ListMessageListener a(com.baidu.frontia.api.FrontiaPush$c) -> a
com.baidu.frontia.api.FrontiaPush$c$1 -> com.baidu.frontia.api.FrontiaPush$c$1:
    com.baidu.frontia.api.FrontiaPush$c a -> a
    void onSuccess(java.util.List) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPush$d -> com.baidu.frontia.api.FrontiaPush$d:
    com.baidu.frontia.api.FrontiaPushListener$PushMessageListener c -> c
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl a -> a
    com.baidu.frontia.api.FrontiaPush b -> b
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl a() -> a
    com.baidu.frontia.api.FrontiaPushListener$PushMessageListener a(com.baidu.frontia.api.FrontiaPush$d) -> a
com.baidu.frontia.api.FrontiaPush$d$1 -> com.baidu.frontia.api.FrontiaPush$d$1:
    com.baidu.frontia.api.FrontiaPush$d a -> a
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener -> com.baidu.frontia.api.FrontiaPushListener:
com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener -> com.baidu.frontia.api.FrontiaPushListener$CommonMessageListener:
    void onSuccess() -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener -> com.baidu.frontia.api.FrontiaPushListener$DescribeMessageListener:
    void onSuccess(com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult -> com.baidu.frontia.api.FrontiaPushListener$DescribeMessageResult:
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$DescribeMessageResult a -> a
    java.lang.String getId() -> getId
    java.lang.String getUserId() -> getUserId
    java.lang.String getChannelId() -> getChannelId
    java.lang.String getTag() -> getTag
    com.baidu.frontia.api.FrontiaPushUtil$Trigger getTrigger() -> getTrigger
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent getMessage() -> getMessage
    org.json.JSONObject getExtras() -> getExtras
com.baidu.frontia.api.FrontiaPushListener$ListMessageListener -> com.baidu.frontia.api.FrontiaPushListener$ListMessageListener:
    void onSuccess(java.util.List) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushListener$PushMessageListener -> com.baidu.frontia.api.FrontiaPushListener$PushMessageListener:
    void onSuccess(java.lang.String) -> onSuccess
    void onFailure(int,java.lang.String) -> onFailure
com.baidu.frontia.api.FrontiaPushMessageReceiver -> com.baidu.frontia.api.FrontiaPushMessageReceiver:
    java.lang.String TAG -> TAG
    java.lang.String a -> a
    java.lang.String b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onBind
    void onUnbind(android.content.Context,int,java.lang.String) -> onUnbind
    void onCheckBindState(android.content.Context,int,java.lang.String,boolean) -> onCheckBindState
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onSetTags
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onDelTags
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> onListTags
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> onMessage
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationClicked
com.baidu.frontia.api.FrontiaPushUtil -> com.baidu.frontia.api.FrontiaPushUtil:
com.baidu.frontia.api.FrontiaPushUtil$AndroidContent -> com.baidu.frontia.api.FrontiaPushUtil$AndroidContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$AndroidContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$AndroidContentImpl a() -> a
    void setBuilderId(int) -> setBuilderId
    int getBuilderId() -> getBuilderId
    void setPKGContent(java.lang.String) -> setPKGContent
    java.lang.String getPKGContent() -> getPKGContent
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getUrl() -> getUrl
    void setNotificationStyle(com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle) -> setNotificationStyle
    com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle getNotificationStyle() -> getNotificationStyle
com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle -> com.baidu.frontia.api.FrontiaPushUtil$DefaultNotificationStyle:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$DefaultNotificationStyleImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$DefaultNotificationStyleImpl a() -> a
    void enableAlert() -> enableAlert
    void disableAlert() -> disableAlert
    boolean isAlertEnabled() -> isAlertEnabled
    void enableVibration() -> enableVibration
    void disableVibration() -> disableVibration
    boolean isVibrationEnabled() -> isVibrationEnabled
    void enableDismissible() -> enableDismissible
    void disableDismissible() -> disableDismissible
    boolean isDismissible() -> isDismissible
com.baidu.frontia.api.FrontiaPushUtil$DeployStatus -> com.baidu.frontia.api.FrontiaPushUtil$DeployStatus:
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus DEVELOPE -> DEVELOPE
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus PRODUCTION -> PRODUCTION
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus[] a -> a
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus[] values() -> values
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus valueOf(java.lang.String) -> valueOf
com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushBasicNotificationBuilder -> com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushBasicNotificationBuilder:
    com.baidu.android.pushservice.internal.BasicPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushCustomNotificationBuilder -> com.baidu.frontia.api.FrontiaPushUtil$FrontiaPushCustomNotificationBuilder:
    com.baidu.android.pushservice.internal.CustomPushNotificationBuilder a -> a
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
com.baidu.frontia.api.FrontiaPushUtil$IOSContent -> com.baidu.frontia.api.FrontiaPushUtil$IOSContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$IOSContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$IOSContentImpl a() -> a
    void setAlertMsg(java.lang.String) -> setAlertMsg
    java.lang.String getAlertMsg() -> getAlertMsg
    void setSoundFile(java.lang.String) -> setSoundFile
    java.lang.String getSoundFile() -> getSoundFile
    void setBadge(int) -> setBadge
    int getBadge() -> getBadge
com.baidu.frontia.api.FrontiaPushUtil$MessageContent -> com.baidu.frontia.api.FrontiaPushUtil$MessageContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl a -> a
    int b -> b
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent createStringMessage(java.lang.String,java.lang.String) -> createStringMessage
    com.baidu.frontia.api.FrontiaPushUtil$MessageContent createNotificationMessage(java.lang.String,java.lang.String,java.lang.String) -> createNotificationMessage
    void setMessage(java.lang.String) -> setMessage
    void setNotification(com.baidu.frontia.api.FrontiaPushUtil$NotificationContent) -> setNotification
    java.lang.String getMessageKeys() -> getMessageKeys
    com.baidu.frontia.api.FrontiaPushUtil$DeployStatus getDeployStatus() -> getDeployStatus
    java.lang.String getMessage() -> getMessage
    com.baidu.frontia.api.FrontiaPushUtil$NotificationContent getNotification() -> getNotification
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl a() -> a
com.baidu.frontia.api.FrontiaPushUtil$NotificationContent -> com.baidu.frontia.api.FrontiaPushUtil$NotificationContent:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$NotificationContentImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$NotificationContentImpl a() -> a
    java.lang.String getTitle() -> getTitle
    java.lang.String getDescription() -> getDescription
    void addCustomContent(java.lang.String,java.lang.String) -> addCustomContent
    org.json.JSONObject getCustomContent() -> getCustomContent
    void addAndroidContent(com.baidu.frontia.api.FrontiaPushUtil$AndroidContent) -> addAndroidContent
    com.baidu.frontia.api.FrontiaPushUtil$AndroidContent getAndroidContent() -> getAndroidContent
    void addIOSContent(com.baidu.frontia.api.FrontiaPushUtil$IOSContent) -> addIOSContent
    com.baidu.frontia.api.FrontiaPushUtil$IOSContent getIOSContent() -> getIOSContent
com.baidu.frontia.api.FrontiaPushUtil$Trigger -> com.baidu.frontia.api.FrontiaPushUtil$Trigger:
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$TriggerImpl a -> a
    com.baidu.frontia.module.push.FrontiaPushUtilImpl$TriggerImpl a() -> a
    void setTime(java.lang.String) -> setTime
    java.lang.String getTime() -> getTime
    void setCrontab(java.lang.String) -> setCrontab
    java.lang.String getCrontab() -> getCrontab
com.baidu.frontia.api.FrontiaPushUtil$a -> com.baidu.frontia.api.FrontiaPushUtil$a:
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(android.net.Uri) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    com.baidu.android.pushservice.internal.PushNotificationBuilder a() -> a
com.baidu.frontia.framework.IModule -> com.baidu.frontia.framework.IModule:
    void init(java.lang.String) -> init
com.baidu.lbsapi.BMapManager -> com.baidu.lbsapi.BMapManager:
    com.baidu.pplatform.comapi.a mEngineManager -> mEngineManager
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    com.baidu.lbsapi.MKGeneralListener mListener -> mListener
    java.lang.String mStrAppName -> mStrAppName
    boolean isNetErrorMsgSend -> isNetErrorMsgSend
    com.baidu.lbsapi.NetworkListener mNetworkListener -> mNetworkListener
    boolean init(com.baidu.lbsapi.MKGeneralListener) -> init
    boolean start() -> start
    boolean stop() -> stop
    void destroy() -> destroy
    android.content.Context getContext() -> getContext
    void RegisterNetworkListener() -> RegisterNetworkListener
    void UnRegisterNetworkListener() -> UnRegisterNetworkListener
    void handleEngineMessage(android.os.Message) -> handleEngineMessage
com.baidu.lbsapi.MKGeneralListener -> com.baidu.lbsapi.MKGeneralListener:
    void onGetPermissionState(int) -> onGetPermissionState
com.baidu.lbsapi.NetworkListener -> com.baidu.lbsapi.NetworkListener:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
com.baidu.lbsapi.a -> com.baidu.lbsapi.a:
    com.baidu.lbsapi.BMapManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.lbsapi.a.a -> com.baidu.lbsapi.a.a:
    float c -> c
    java.lang.String d -> d
    com.baidu.pplatform.comapi.basestruct.GeoPoint e -> e
    int a -> a
    int b -> b
    void a(org.json.JSONObject) -> a
    java.lang.String a() -> a
    java.lang.String toString() -> toString
com.baidu.lbsapi.auth.ErrorMessage -> com.baidu.lbsapi.auth.ErrorMessage:
    java.lang.String a(java.lang.String) -> a
com.baidu.lbsapi.auth.LBSAuthManager -> com.baidu.lbsapi.auth.LBSAuthManager:
    boolean debug -> debug
    int CODE_UNAUTHENTICATE -> CODE_UNAUTHENTICATE
    int CODE_AUTHENTICATING -> CODE_AUTHENTICATING
    int CODE_AUTHENTICATE_SUCC -> CODE_AUTHENTICATE_SUCC
    int CODE_INNER_ERROR -> CODE_INNER_ERROR
    java.lang.String VERSION -> VERSION
    java.lang.String API_KEY -> API_KEY
    java.lang.String CACHE_FILE_NAME -> CACHE_FILE_NAME
    java.lang.String CACHE_KEY -> CACHE_KEY
    java.lang.String AUTH_URL -> AUTH_URL
    android.content.Context mContext -> mContext
    com.baidu.lbsapi.auth.c mHttpAsyncTask -> mHttpAsyncTask
    com.baidu.lbsapi.auth.h mThreadLooper -> mThreadLooper
    int mAuthCounter -> mAuthCounter
    int AUTH_TIMEOUT -> AUTH_TIMEOUT
    java.util.Hashtable listenerTable -> listenerTable
    android.os.Handler mHandler -> mHandler
    void createAuthThread() -> createAuthThread
    java.lang.String getPublicKey(android.content.Context) -> getPublicKey
    java.lang.String getPublicKey(android.content.Context,java.lang.String) -> getPublicKey
    void callbackToMainThread(java.lang.String,java.lang.String) -> callbackToMainThread
    int parseAuthMessage(java.lang.String) -> parseAuthMessage
    int authenticate(com.baidu.lbsapi.auth.LBSAuthManagerListener) -> authenticate
    int authenticate(boolean,java.util.Hashtable,com.baidu.lbsapi.auth.LBSAuthManagerListener) -> authenticate
    int authenticate(boolean,java.lang.String,java.util.Hashtable,com.baidu.lbsapi.auth.LBSAuthManagerListener) -> authenticate
    boolean checkAkChanged(java.lang.String) -> checkAkChanged
    void sendAuthRequest(boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> sendAuthRequest
    java.lang.String getAuthString() -> getAuthString
    void saveAuthString(java.lang.String) -> saveAuthString
    java.lang.String getCurProcessName(android.content.Context) -> getCurProcessName
    java.util.Hashtable access$000() -> access$000
    boolean access$100(com.baidu.lbsapi.auth.LBSAuthManager,java.lang.String) -> access$100
    void access$200(com.baidu.lbsapi.auth.LBSAuthManager,boolean,java.lang.String,java.util.Hashtable,java.lang.String) -> access$200
    com.baidu.lbsapi.auth.h access$300() -> access$300
    void access$400(com.baidu.lbsapi.auth.LBSAuthManager,java.lang.String,java.lang.String) -> access$400
com.baidu.lbsapi.auth.LBSAuthManagerListener -> com.baidu.lbsapi.auth.LBSAuthManagerListener:
    void onAuthResult(int,java.lang.String) -> onAuthResult
com.baidu.lbsapi.auth.a -> com.baidu.lbsapi.auth.a:
    boolean a -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
com.baidu.lbsapi.auth.b -> com.baidu.lbsapi.auth.b:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean b(android.content.Context,java.lang.String) -> b
com.baidu.lbsapi.auth.b$a -> com.baidu.lbsapi.auth.b$a:
    java.lang.String a(byte[]) -> a
com.baidu.lbsapi.auth.c -> com.baidu.lbsapi.auth.c:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.HashMap e -> e
    com.baidu.lbsapi.auth.c$a f -> f
    void a(java.util.HashMap,com.baidu.lbsapi.auth.c$a) -> a
    void a(java.lang.String) -> a
    boolean a(org.apache.http.client.HttpClient) -> a
    void b(org.apache.http.client.HttpClient) -> b
    void a(org.apache.http.client.HttpClient,java.lang.String,java.util.HashMap) -> a
    void a(java.lang.String,java.util.HashMap) -> a
    java.lang.String a(android.content.Context) -> a
    java.util.HashMap a(java.util.HashMap) -> a
    org.apache.http.client.HttpClient a() -> a
    java.lang.String a(com.baidu.lbsapi.auth.c) -> a
    java.util.HashMap b(com.baidu.lbsapi.auth.c) -> b
    void a(com.baidu.lbsapi.auth.c,java.lang.String,java.util.HashMap) -> a
com.baidu.lbsapi.auth.c$a -> com.baidu.lbsapi.auth.c$a:
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.c$b -> com.baidu.lbsapi.auth.c$b:
    javax.net.ssl.SSLContext a -> a
    javax.net.ssl.X509TrustManager b -> b
    com.baidu.lbsapi.auth.c c -> c
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.baidu.lbsapi.auth.d -> com.baidu.lbsapi.auth.d:
    com.baidu.lbsapi.auth.c a -> a
    void run() -> run
com.baidu.lbsapi.auth.e -> com.baidu.lbsapi.auth.e:
    com.baidu.lbsapi.auth.LBSAuthManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.lbsapi.auth.f -> com.baidu.lbsapi.auth.f:
    int a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.Hashtable e -> e
    com.baidu.lbsapi.auth.LBSAuthManager f -> f
    void run() -> run
com.baidu.lbsapi.auth.g -> com.baidu.lbsapi.auth.g:
    java.lang.String a -> a
    com.baidu.lbsapi.auth.LBSAuthManager b -> b
    void a(java.lang.String) -> a
    void a(java.lang.Object) -> a
com.baidu.lbsapi.auth.h -> com.baidu.lbsapi.auth.h:
    android.os.Handler a -> a
    java.lang.Object b -> b
    boolean c -> c
    boolean d -> d
    void run() -> run
    void a() -> a
    void b() -> b
    void c() -> c
com.baidu.lbsapi.b -> com.baidu.lbsapi.b:
    com.baidu.lbsapi.MKGeneralListener a -> a
    com.baidu.lbsapi.BMapManager b -> b
    void onAuthResult(int,java.lang.String) -> onAuthResult
com.baidu.lbsapi.c -> com.baidu.lbsapi.c:
    java.lang.String a() -> a
com.baidu.lbsapi.controller.PanoramaController -> com.baidu.lbsapi.controller.PanoramaController:
    com.baidu.pplatform.comapi.a.a mMapDataEngine -> mMapDataEngine
    java.lang.String getPanoramaDataWithJson(java.lang.String) -> getPanoramaDataWithJson
    java.lang.String getPanoramaDataWithJson(int,int) -> getPanoramaDataWithJson
    java.lang.String getPanoramaDataWithJson(double,double) -> getPanoramaDataWithJson
    java.lang.String getPanoramaByIIdWithJson(java.lang.String) -> getPanoramaByIIdWithJson
    java.lang.String getIndoorPanoramaRecommendInfo(java.lang.String) -> getIndoorPanoramaRecommendInfo
com.baidu.lbsapi.panoramaview.ImageMarker -> com.baidu.lbsapi.panoramaview.ImageMarker:
    com.baidu.pplatform.comapi.basestruct.GeoPoint mPoint -> mPoint
    android.graphics.drawable.Drawable mMarker -> mMarker
    android.graphics.drawable.Drawable getMarker() -> getMarker
    com.baidu.pplatform.comapi.basestruct.GeoPoint getPoint() -> getPoint
    void setMarker(android.graphics.drawable.Drawable) -> setMarker
    void setGeoPoint(com.baidu.pplatform.comapi.basestruct.GeoPoint) -> setGeoPoint
com.baidu.lbsapi.panoramaview.IndoorAlbumOnClickListener -> com.baidu.lbsapi.panoramaview.IndoorAlbumOnClickListener:
    void onItemClick(java.lang.String) -> onItemClick
com.baidu.lbsapi.panoramaview.OnTabMarkListener -> com.baidu.lbsapi.panoramaview.OnTabMarkListener:
    void onTab(int) -> onTab
com.baidu.lbsapi.panoramaview.PanoramaOverlay -> com.baidu.lbsapi.panoramaview.PanoramaOverlay:
    java.lang.String LTAG -> LTAG
    void addMarker(com.baidu.pplatform.comapi.map.base.i) -> addMarker
    java.util.List getAllMarker() -> getAllMarker
    com.baidu.pplatform.comapi.map.base.i getMarker(int) -> getMarker
    boolean onTap(int) -> onTap
    boolean updateMarker(com.baidu.pplatform.comapi.map.base.i) -> updateMarker
    boolean removeMarker(com.baidu.pplatform.comapi.map.base.i) -> removeMarker
    boolean removeAll() -> removeAll
    int size() -> size
    int getLayerid() -> getLayerid
com.baidu.lbsapi.panoramaview.PanoramaView -> com.baidu.lbsapi.panoramaview.PanoramaView:
    com.baidu.lbsapi.panoramaview.PanoramaViewListener mListener -> mListener
    int mLayerAddr -> mLayerAddr
    java.lang.String mCurPId -> mCurPId
    android.os.Handler mHandler -> mHandler
    android.os.Handler mInternalHandler -> mInternalHandler
    com.baidu.lbsapi.panoramaview.PanoramaOverlay mOverlay -> mOverlay
    boolean mRequesting -> mRequesting
    boolean isNavigateGesture -> isNavigateGesture
    void initLayers(com.baidu.pplatform.comapi.map.base.f$a) -> initLayers
    void setPanoramaViewListener(com.baidu.lbsapi.panoramaview.PanoramaViewListener) -> setPanoramaViewListener
    void setPanorama(java.lang.String) -> setPanorama
    void setPanorama(double,double) -> setPanorama
    void setPanorama(int,int) -> setPanorama
    java.lang.String getPanoramaData(java.lang.String) -> getPanoramaData
    java.lang.String getPanoramaDataByIID(java.lang.String) -> getPanoramaDataByIID
    void setPanoramaHeading(float) -> setPanoramaHeading
    float getPanoramaheading() -> getPanoramaheading
    void setPanoramaPitch(float) -> setPanoramaPitch
    float getPanoramapitch() -> getPanoramapitch
    void setPanoramaLevel(float) -> setPanoramaLevel
    float getPanoramaLevel() -> getPanoramaLevel
    void setShowTopoLink(boolean) -> setShowTopoLink
    void refresh() -> refresh
    void addMarker(com.baidu.pplatform.comapi.map.base.i) -> addMarker
    void removeMarker(com.baidu.pplatform.comapi.map.base.i) -> removeMarker
    void updateMarker(com.baidu.pplatform.comapi.map.base.i) -> updateMarker
    void clearAllMarker() -> clearAllMarker
    void setPanoramaImageLevel(int) -> setPanoramaImageLevel
    void putPanoramaLinkIntoMapStatus(com.baidu.lbsapi.a.a,com.baidu.pplatform.comapi.map.base.h) -> putPanoramaLinkIntoMapStatus
    void setZoomGestureEnabled(boolean) -> setZoomGestureEnabled
    void setNavigateGestureEnabled(boolean) -> setNavigateGestureEnabled
    void setRotateGestureEnabled(boolean) -> setRotateGestureEnabled
    boolean getZoomGestureEnabled() -> getZoomGestureEnabled
    boolean getNavigateGestureEnabled() -> getNavigateGestureEnabled
    boolean getRotateGestureEnabled() -> getRotateGestureEnabled
    void destroy() -> destroy
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    java.util.List getOverlays() -> getOverlays
    com.baidu.pplatform.comapi.map.base.c access$000(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$000
    com.baidu.pplatform.comapi.map.base.c access$100(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$100
    com.baidu.pplatform.comapi.map.base.c access$200(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$200
    com.baidu.lbsapi.panoramaview.PanoramaViewListener access$300(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$300
    com.baidu.lbsapi.panoramaview.PanoramaOverlay access$400(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$400
    com.baidu.pplatform.comapi.map.base.c access$500(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$500
    void access$600(com.baidu.lbsapi.panoramaview.PanoramaView,com.baidu.lbsapi.a.a,com.baidu.pplatform.comapi.map.base.h) -> access$600
    com.baidu.pplatform.comapi.map.base.c access$700(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$700
    com.baidu.pplatform.comapi.map.base.c access$800(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$800
    com.baidu.pplatform.comapi.map.base.c access$900(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$900
    com.baidu.pplatform.comapi.map.base.c access$1000(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$1000
    boolean access$1102(com.baidu.lbsapi.panoramaview.PanoramaView,boolean) -> access$1102
    android.os.Handler access$1200(com.baidu.lbsapi.panoramaview.PanoramaView) -> access$1200
com.baidu.lbsapi.panoramaview.PanoramaView$1 -> com.baidu.lbsapi.panoramaview.PanoramaView$1:
    com.baidu.lbsapi.panoramaview.PanoramaView this$0 -> this$0
    void onOverlayAdd(java.lang.Object) -> onOverlayAdd
    void onOverlayRemove(java.lang.Object) -> onOverlayRemove
com.baidu.lbsapi.panoramaview.PanoramaView$2 -> com.baidu.lbsapi.panoramaview.PanoramaView$2:
    com.baidu.lbsapi.panoramaview.PanoramaView this$0 -> this$0
    void onClickedMapObj(java.util.List,int) -> onClickedMapObj
    void onClickedPoiObj(java.util.List,int) -> onClickedPoiObj
    void onClickedRouteObj(java.util.List,int) -> onClickedRouteObj
    void onClickedIndoorMapObj(java.util.List) -> onClickedIndoorMapObj
    void onMapRender() -> onMapRender
    void onMapAnimationStart() -> onMapAnimationStart
    void onMapAnimationFinish() -> onMapAnimationFinish
    void onMapMoveStart() -> onMapMoveStart
    void onMapMoveFinish() -> onMapMoveFinish
    void onClickedPopup(int) -> onClickedPopup
    void onClickedItem(int,int) -> onClickedItem
    void onMapClick(int,int) -> onMapClick
    void onMapDoubleClick(int,int) -> onMapDoubleClick
    void onMapLongClick(int,int) -> onMapLongClick
    void onMapLoadFinish() -> onMapLoadFinish
    void onMapStatusChange(com.baidu.pplatform.comapi.map.base.h) -> onMapStatusChange
    void onClickStreetArrow(com.baidu.pplatform.comapi.map.base.e) -> onClickStreetArrow
    void beforeMoveToPanorama() -> beforeMoveToPanorama
    void afterMoveToPanorama() -> afterMoveToPanorama
    void moveToPanoramaError() -> moveToPanoramaError
com.baidu.lbsapi.panoramaview.PanoramaView$3 -> com.baidu.lbsapi.panoramaview.PanoramaView$3:
    com.baidu.lbsapi.panoramaview.PanoramaView this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.lbsapi.panoramaview.PanoramaViewListener -> com.baidu.lbsapi.panoramaview.PanoramaViewListener:
    void onLoadPanoramBegin() -> onLoadPanoramBegin
    void onLoadPanoramaEnd() -> onLoadPanoramaEnd
    void onLoadPanoramaError() -> onLoadPanoramaError
com.baidu.lbsapi.panoramaview.TextMarker -> com.baidu.lbsapi.panoramaview.TextMarker:
    com.baidu.pplatform.comapi.basestruct.GeoPoint mPoint -> mPoint
    void setFontColor(int) -> setFontColor
    void setFontSize(int) -> setFontSize
    void setText(java.lang.String) -> setText
    void setBgColor(int) -> setBgColor
    void setPadding(int,int,int,int) -> setPadding
    void setGeoPoint(com.baidu.pplatform.comapi.basestruct.GeoPoint) -> setGeoPoint
com.baidu.lbsapi.utils.StorageOptions -> com.baidu.lbsapi.utils.StorageOptions:
    java.lang.String EXTERNAL_SD_CARD -> EXTERNAL_SD_CARD
    java.lang.String INTERNAL_STORAGE -> INTERNAL_STORAGE
    java.lang.String DEV_MOUNT -> DEV_MOUNT
    java.lang.String SYSTEM_ETC_VOLD_FSTAB -> SYSTEM_ETC_VOLD_FSTAB
    java.lang.String DEV_BLOCK_VOLD -> DEV_BLOCK_VOLD
    java.lang.String PROC_MOUNTS -> PROC_MOUNTS
    java.lang.String MNT_SDCARD -> MNT_SDCARD
    java.util.ArrayList mMounts -> mMounts
    java.util.ArrayList mVold -> mVold
    java.lang.String[] labels -> labels
    java.lang.String[] paths -> paths
    java.lang.String[] sizes -> sizes
    int count -> count
    void determineStorageOptions(android.content.Context) -> determineStorageOptions
    void readMountsFile() -> readMountsFile
    void readVoldFile() -> readVoldFile
    void compareMountsWithVold() -> compareMountsWithVold
    void testAndCleanMountsList() -> testAndCleanMountsList
    void setProperties(android.content.Context) -> setProperties
    java.lang.String getAvailaleSize(java.lang.String) -> getAvailaleSize
    boolean getStoragePaths(android.content.Context) -> getStoragePaths
com.baidu.lbsapi.utils.a -> com.baidu.lbsapi.utils.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    int h -> h
    java.lang.String l -> l
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    java.lang.String[] k -> k
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String a() -> a
    java.lang.String j() -> j
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
    void c(android.content.Context) -> c
    java.io.File g() -> g
    java.lang.String h() -> h
    boolean i() -> i
    boolean a(java.lang.String) -> a
com.baidu.lbsapi.utils.b -> com.baidu.lbsapi.utils.b:
    boolean a(java.lang.String) -> a
com.baidu.lbsapi.utils.c -> com.baidu.lbsapi.utils.c:
    boolean accept(java.io.File,java.lang.String) -> accept
com.baidu.lbsapi.utils.d -> com.baidu.lbsapi.utils.d:
    double[] a -> a
    double[] b -> b
    double[][] c -> c
    double[][] d -> d
    com.baidu.lbsapi.utils.d$a a(com.baidu.lbsapi.utils.d$a,double[]) -> a
    com.baidu.pplatform.comapi.basestruct.GeoPoint a(com.baidu.pplatform.comapi.basestruct.GeoPoint) -> a
    com.baidu.pplatform.comapi.basestruct.GeoPoint b(com.baidu.pplatform.comapi.basestruct.GeoPoint) -> b
com.baidu.lbsapi.utils.d$a -> com.baidu.lbsapi.utils.d$a:
    double a -> a
    double b -> b
com.baidu.lightapp.LightAppPush -> com.baidu.lightapp.LightAppPush:
    com.baidu.lightapp.LightAppPush a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    com.baidu.lightapp.LightAppPush newInstance(android.content.Context,java.lang.String) -> newInstance
    void lightAppBind() -> lightAppBind
    void lightAppUnbind() -> lightAppUnbind
    void checkLightAppBindState() -> checkLightAppBindState
    void setLightAppTags(java.util.List) -> setLightAppTags
    void delLightAppTags(java.util.List) -> delLightAppTags
    void listLightAppTags() -> listLightAppTags
    void pushMessage(java.lang.String,java.lang.String,com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl,com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl) -> pushMessage
    void pushMessage(java.lang.String,com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl,com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl) -> pushMessage
    void pushMessage(com.baidu.frontia.module.push.FrontiaPushUtilImpl$MessageContentImpl,com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl) -> pushMessage
    com.baidu.frontia.base.impl.FrontiaCmd a() -> a
    java.lang.String b() -> b
    com.baidu.frontia.base.impl.FrontiaCmd a(com.baidu.lightapp.LightAppPush) -> a
com.baidu.lightapp.LightAppPush$a -> com.baidu.lightapp.LightAppPush$a:
    org.json.JSONObject b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.baidu.frontia.module.push.FrontiaPushListenerImpl$PushMessageListenerImpl e -> e
    long f -> f
    com.baidu.lightapp.LightAppPush a -> a
    com.baidu.frontia.base.impl.FrontiaCmd$CmdResult a(java.lang.Void[]) -> a
    void a(com.baidu.frontia.base.impl.FrontiaCmd$CmdResult) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.A -> com.baidu.location.A:
    java.lang.String i -> i
    java.lang.String I -> I
    int F -> F
    int byte -> byte
    int for -> for
    int k -> k
    int r -> r
    int O -> O
    int d -> d
    int L -> L
    int Q -> Q
    int else -> else
    int E -> E
    int goto -> goto
    int q -> q
    int K -> K
    int G -> G
    int o -> o
    int void -> void
    int do -> do
    int char -> char
    int p -> p
    int n -> n
    int h -> h
    int x -> x
    int e -> e
    int case -> case
    int C -> C
    int f -> f
    int D -> D
    int A -> A
    int B -> B
    int z -> z
    int m -> m
    int M -> M
    int u -> u
    int s -> s
    int N -> N
    int H -> H
    int w -> w
    int y -> y
    int v -> v
    int try -> try
    int l -> l
    int g -> g
    int int -> int
    int t -> t
    int long -> long
    int if -> if
    int b -> b
    int P -> P
    int j -> j
    int J -> J
    int new -> new
    int c -> c
com.baidu.location.B -> com.baidu.location.B:
    com.baidu.location.B a -> a
    java.lang.String R -> R
    boolean S -> S
    boolean T -> T
    boolean U -> U
    java.lang.String V -> V
    int W -> W
    double X -> X
    double Y -> Y
    double Z -> Z
    double aa -> aa
    double ab -> ab
    long ac -> ac
    boolean ad -> ad
    boolean ae -> ae
    int af -> af
    int ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    boolean ak -> ak
    com.baidu.location.B cd() -> cd
    void j(android.os.Message) -> j
    void ci() -> ci
    void ch() -> ch
    void a(android.os.Message) -> a
    com.baidu.location.BDLocation case(boolean) -> case
    void a(com.baidu.location.ar$b) -> a
    void a(com.baidu.location.ar$b,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> a
    void a() -> a
    void if(java.lang.String,com.baidu.location.Z$a,com.baidu.location.ar$b,com.baidu.location.BDLocation) -> if
    void a(java.lang.String) -> a
    void a(java.lang.String,com.baidu.location.Z$a,android.database.sqlite.SQLiteDatabase) -> a
    void b() -> b
    java.lang.String a(boolean) -> a
    void c() -> c
    void a(com.baidu.location.B) -> a
    boolean a(com.baidu.location.B,boolean) -> a
    java.lang.String b(com.baidu.location.B) -> b
    void a(com.baidu.location.B,java.lang.String,com.baidu.location.Z$a,android.database.sqlite.SQLiteDatabase) -> a
    void a(com.baidu.location.B,com.baidu.location.ar$b,com.baidu.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> a
com.baidu.location.B$a -> com.baidu.location.B$a:
    com.baidu.location.B a -> a
    java.lang.Boolean a(java.lang.Boolean[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.B$b -> com.baidu.location.B$b:
    com.baidu.location.B a -> a
    java.lang.Boolean a(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.location.BDErrorReport -> com.baidu.location.BDErrorReport:
    java.lang.String a -> a
    void onReportResult(boolean) -> onReportResult
    int setErrorInfo(boolean,double,double,boolean,java.lang.String,double,double,java.lang.String,java.lang.String) -> setErrorInfo
    android.os.Bundle getErrorInfo() -> getErrorInfo
com.baidu.location.BDGeofence -> com.baidu.location.BDGeofence:
    int GEOFENCE_TRANSITION_ENTER -> GEOFENCE_TRANSITION_ENTER
    java.lang.String COORD_TYPE_BD09 -> COORD_TYPE_BD09
    java.lang.String COORD_TYPE_BD09LL -> COORD_TYPE_BD09LL
    java.lang.String COORD_TYPE_GCJ -> COORD_TYPE_GCJ
    int RADIUS_TYPE_SMALL -> RADIUS_TYPE_SMALL
    java.lang.String getGeofenceId() -> getGeofenceId
com.baidu.location.BDGeofence$Builder -> com.baidu.location.BDGeofence$Builder:
    java.lang.String do -> do
    double for -> for
    double try -> try
    int a -> a
    boolean new -> new
    long if -> if
    java.lang.String int -> int
    com.baidu.location.BDGeofence$Builder setExpirationDruation(long) -> setExpirationDruation
    com.baidu.location.BDGeofence$Builder setCircularRegion(double,double,int) -> setCircularRegion
    com.baidu.location.BDGeofence$Builder setGeofenceId(java.lang.String) -> setGeofenceId
    com.baidu.location.BDGeofence$Builder setCoordType(java.lang.String) -> setCoordType
    com.baidu.location.BDGeofence build() -> build
com.baidu.location.BDLocation -> com.baidu.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int OPERATORS_TYPE_UNKONW -> OPERATORS_TYPE_UNKONW
    int OPERATORS_TYPE_MOBILE -> OPERATORS_TYPE_MOBILE
    int OPERATORS_TYPE_UNICOM -> OPERATORS_TYPE_UNICOM
    int OPERATORS_TYPE_TELECOMU -> OPERATORS_TYPE_TELECOMU
    int gU -> gU
    java.lang.String gY -> gY
    double gH -> gH
    double gV -> gV
    boolean gJ -> gJ
    double gN -> gN
    boolean gK -> gK
    float gX -> gX
    boolean gQ -> gQ
    float gS -> gS
    boolean gW -> gW
    int gG -> gG
    float gM -> gM
    java.lang.String gZ -> gZ
    boolean gT -> gT
    java.lang.String gF -> gF
    boolean gO -> gO
    com.baidu.location.BDLocation$a gP -> gP
    java.lang.String gI -> gI
    java.lang.String gR -> gR
    int g0 -> g0
    java.lang.String gL -> gL
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String bm() -> bm
    void if(java.lang.Boolean) -> if
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    com.baidu.location.BDLocation p(java.lang.String) -> p
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    float getDirection() -> getDirection
    void setDirection(float) -> setDirection
    boolean hasSateNumber() -> hasSateNumber
    boolean hasAddr() -> hasAddr
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
    java.lang.String getFloor() -> getFloor
    java.lang.String getNetworkLocationType() -> getNetworkLocationType
    int getOperators() -> getOperators
    void byte(int) -> byte
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String bn() -> bn
    java.lang.String getAdUrl(java.lang.String) -> getAdUrl
    java.lang.String bo() -> bo
    void internalSet(int,java.lang.String) -> internalSet
com.baidu.location.BDLocation$a -> com.baidu.location.BDLocation$a:
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String try -> try
    com.baidu.location.BDLocation a -> a
com.baidu.location.BDLocationListener -> com.baidu.location.BDLocationListener:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.baidu.location.BDLocationStatusCodes -> com.baidu.location.BDLocationStatusCodes:
    int SUCCESS -> SUCCESS
    int ERROR -> ERROR
    int GEOFENCE_NOT_AVAIABLE -> GEOFENCE_NOT_AVAIABLE
    int GEOFENCE_TOO_MANY_GEOFENCES -> GEOFENCE_TOO_MANY_GEOFENCES
    int GEOFENCE_SERVICE_NO_ALIVIABLE -> GEOFENCE_SERVICE_NO_ALIVIABLE
    int getStatusCode(int) -> getStatusCode
com.baidu.location.BDNotifyListener -> com.baidu.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.location.z mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.baidu.location.C -> com.baidu.location.C:
    com.baidu.location.B a -> a
    void run() -> run
com.baidu.location.CommonEncrypt -> com.baidu.location.CommonEncrypt:
    boolean a -> a
    byte[] encrypt(byte[]) -> encrypt
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
com.baidu.location.D -> com.baidu.location.D:
    com.baidu.location.D W -> W
    java.lang.String a -> a
    java.lang.String R -> R
    java.lang.String S -> S
    android.hardware.SensorManager T -> T
    int U -> U
    int V -> V
    java.lang.String iH -> iH
    java.lang.String iM -> iM
    com.baidu.location.D cn() -> cn
    void cm() -> cm
    void cp() -> cp
    void try(java.lang.String,java.lang.String) -> try
    java.lang.String ck() -> ck
    java.lang.String co() -> co
    java.lang.String cl() -> cl
    java.lang.String cj() -> cj
    java.lang.String s(java.lang.String) -> s
    java.lang.String char(boolean) -> char
    java.lang.String if(boolean,java.lang.String) -> if
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.location.E -> com.baidu.location.E:
    boolean a3 -> a3
    boolean am -> am
    boolean ah -> ah
    int al -> al
    java.lang.String a -> a
    java.lang.String Y -> Y
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    boolean aG -> aG
    boolean U -> U
    boolean V -> V
    java.lang.String aA -> aA
    java.lang.Process aC -> aC
    java.lang.String aw -> aw
    java.lang.String bc -> bc
    boolean a7 -> a7
    int aM -> aM
    double a9 -> a9
    double an -> an
    double aH -> aH
    double ac -> ac
    int ak -> ak
    byte[] aB -> aB
    boolean ar -> ar
    int ai -> ai
    float ae -> ae
    float aR -> aR
    float ag -> ag
    float aT -> aT
    int aI -> aI
    int W -> W
    int aJ -> aJ
    int X -> X
    int aa -> aa
    int ax -> ax
    int a4 -> a4
    float be -> be
    float bb -> bb
    float ap -> ap
    float a0 -> a0
    int aX -> aX
    float ab -> ab
    int at -> at
    float aU -> aU
    float bd -> bd
    float ba -> ba
    int a8 -> a8
    int a6 -> a6
    int aj -> aj
    boolean az -> az
    boolean aZ -> aZ
    int av -> av
    int as -> as
    int ay -> ay
    long aQ -> aQ
    long aK -> aK
    long ad -> ad
    long ao -> ao
    long aS -> aS
    long aD -> aD
    int a5 -> a5
    int aV -> aV
    int aW -> aW
    int aO -> aO
    float a2 -> a2
    float af -> af
    float Z -> Z
    int aq -> aq
    int aF -> aF
    int au -> au
    int a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String if(com.baidu.location.Z$a,com.baidu.location.ar$b,android.location.Location,java.lang.String,int) -> if
    java.lang.String if(com.baidu.location.Z$a,com.baidu.location.ar$b,android.location.Location,java.lang.String) -> if
    void char() -> char
    void case() -> case
    void do(java.lang.String,java.lang.String) -> do
    void if(java.lang.String,java.lang.String) -> if
    void if(java.lang.String) -> if
    boolean if(com.baidu.location.BDLocation) -> if
    void do(java.lang.String) -> do
    java.lang.String for() -> for
    java.lang.String try() -> try
    java.lang.String int() -> int
    java.lang.String do() -> do
    java.lang.String byte() -> byte
    java.lang.String else() -> else
    java.lang.String goto() -> goto
com.baidu.location.F -> com.baidu.location.F:
    java.lang.String a -> a
    java.lang.String R -> R
    java.lang.String S -> S
    android.os.Handler T -> T
    com.baidu.location.F U -> U
    com.baidu.location.F X() -> X
    void Z() -> Z
    android.os.Handler d() -> d
    void T() -> T
    void do(boolean) -> do
    void e() -> e
    boolean f() -> f
    void g() -> g
    boolean a(java.lang.String,java.lang.String) -> a
    void if(java.io.File,java.io.File) -> if
    void a(com.baidu.location.F) -> a
    boolean b(com.baidu.location.F) -> b
    void c(com.baidu.location.F) -> c
com.baidu.location.G -> com.baidu.location.G:
    com.baidu.location.F a -> a
    void run() -> run
com.baidu.location.GeofenceClient -> com.baidu.location.GeofenceClient:
    int bj -> bj
    java.lang.String BUNDLE_FOR_GEOFENCE_ID -> BUNDLE_FOR_GEOFENCE_ID
    android.content.Context bf -> bf
    boolean bl -> bl
    android.os.Messenger bk -> bk
    com.baidu.location.GeofenceClient$a bm -> bm
    android.os.Messenger bi -> bi
    com.baidu.location.GeofenceClient$OnGeofenceTriggerListener bg -> bg
    long bn -> bn
    android.content.ServiceConnection bh -> bh
    void start() -> start
    void void() -> void
    void setInterval(long) -> setInterval
    long d() -> d
    boolean isStarted() -> isStarted
    void registerGeofenceTriggerListener(com.baidu.location.GeofenceClient$OnGeofenceTriggerListener) -> registerGeofenceTriggerListener
    void addBDGeofence(com.baidu.location.BDGeofence,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> addBDGeofence
    void removeBDGeofences(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> removeBDGeofences
    void for(java.lang.String) -> for
    void int(java.lang.String) -> int
    void startGeofenceScann() -> startGeofenceScann
    void stop() -> stop
    void long() -> long
    android.os.Messenger if(com.baidu.location.GeofenceClient,android.os.Messenger) -> if
    android.os.Messenger if(com.baidu.location.GeofenceClient) -> if
    boolean if(com.baidu.location.GeofenceClient,boolean) -> if
    void do(com.baidu.location.GeofenceClient,java.lang.String) -> do
    void do(com.baidu.location.GeofenceClient) -> do
    void if(com.baidu.location.GeofenceClient,java.lang.String) -> if
com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener:
    void onAddBDGeofencesResult(int,java.lang.String) -> onAddBDGeofencesResult
com.baidu.location.GeofenceClient$OnGeofenceTriggerListener -> com.baidu.location.GeofenceClient$OnGeofenceTriggerListener:
    void onGeofenceTrigger(java.lang.String) -> onGeofenceTrigger
    void onGeofenceExit(java.lang.String) -> onGeofenceExit
com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener -> com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener:
    void onRemoveBDGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveBDGeofencesByRequestIdsResult
com.baidu.location.GeofenceClient$a -> com.baidu.location.GeofenceClient$a:
    com.baidu.location.GeofenceClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.H -> com.baidu.location.H:
    com.baidu.location.F a -> a
    void run() -> run
com.baidu.location.I -> com.baidu.location.I:
    com.baidu.location.F a -> a
    void run() -> run
com.baidu.location.J -> com.baidu.location.J:
    java.lang.String a -> a
    int b -> b
    com.baidu.location.J c -> c
    int d -> d
    int e -> e
    com.baidu.location.J do() -> do
    void a(int,long) -> a
    long a(int) -> a
    long if() -> if
    void a(long) -> a
    long a() -> a
    void if(long) -> if
com.baidu.location.Jni -> com.baidu.location.Jni:
    int a -> a
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    boolean Y -> Y
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String c(byte[],int) -> c
    java.lang.String g(byte[]) -> g
    void f(byte[],byte[]) -> f
    java.lang.String i(java.lang.String) -> i
    java.lang.String l(java.lang.String) -> l
    java.lang.String j(java.lang.String) -> j
    double[] if(double,double,java.lang.String) -> if
    void int(java.lang.String,java.lang.String) -> int
    java.lang.String k(java.lang.String) -> k
com.baidu.location.K -> com.baidu.location.K:
    boolean bs -> bs
    long bp -> bp
    long a -> a
    long R -> R
    com.baidu.location.K S -> S
    com.baidu.location.K e() -> e
    void h() -> h
    void try(java.lang.String) -> try
    long new(java.lang.String) -> new
com.baidu.location.L -> com.baidu.location.L:
    com.baidu.location.L a -> a
    com.baidu.location.L for() -> for
    void int() -> int
    void do() -> do
    void if() -> if
    void a() -> a
com.baidu.location.LLSInterface -> com.baidu.location.LLSInterface:
    void onCreate(android.content.Context) -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnBind(android.content.Intent) -> onUnBind
    void onDestroy() -> onDestroy
    double getVersion() -> getVersion
com.baidu.location.LocationClient -> com.baidu.location.LocationClient:
    java.lang.String jq -> jq
    int jt -> jt
    int jS -> jS
    int jB -> jB
    int j4 -> j4
    int jO -> jO
    int jR -> jR
    int jH -> jH
    int jC -> jC
    int jF -> jF
    int jo -> jo
    int j1 -> j1
    int jP -> jP
    int jx -> jx
    long jU -> jU
    java.lang.String j3 -> j3
    com.baidu.location.LocationClientOption jN -> jN
    boolean jT -> jT
    android.content.Context jK -> jK
    android.os.Messenger jL -> jL
    com.baidu.location.LocationClient$a jp -> jp
    android.os.Messenger jJ -> jJ
    java.util.ArrayList j5 -> j5
    com.baidu.location.BDLocation j0 -> j0
    boolean jE -> jE
    boolean jY -> jY
    boolean jG -> jG
    com.baidu.location.LocationClient$b ju -> ju
    boolean jn -> jn
    java.lang.Object jr -> jr
    long jM -> jM
    long jV -> jV
    com.baidu.location.z jw -> jw
    boolean jZ -> jZ
    com.baidu.location.BDLocationListener jD -> jD
    java.lang.String j2 -> j2
    java.lang.String jX -> jX
    boolean jA -> jA
    java.lang.Boolean jz -> jz
    java.lang.Boolean jv -> jv
    java.lang.Boolean jQ -> jQ
    boolean jI -> jI
    android.content.ServiceConnection jW -> jW
    long jy -> jy
    com.baidu.location.BDErrorReport js -> js
    com.baidu.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void cB() -> cB
    int requestLocation() -> requestLocation
    boolean isStarted() -> isStarted
    com.baidu.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void cy() -> cy
    void stop() -> stop
    void cz() -> cz
    void registerNotify(com.baidu.location.BDNotifyListener) -> registerNotify
    void l(android.os.Message) -> l
    void removeNotifyEvent(com.baidu.location.BDNotifyListener) -> removeNotifyEvent
    void q(android.os.Message) -> q
    void n(android.os.Message) -> n
    android.os.Bundle cx() -> cx
    android.os.Bundle cw() -> cw
    void registerNotifyLocationListener(com.baidu.location.BDLocationListener) -> registerNotifyLocationListener
    void s(android.os.Message) -> s
    void registerLocationListener(com.baidu.location.BDLocationListener) -> registerLocationListener
    void r(android.os.Message) -> r
    void unRegisterLocationListener(com.baidu.location.BDLocationListener) -> unRegisterLocationListener
    void m(android.os.Message) -> m
    void cA() -> cA
    void o(android.os.Message) -> o
    void if(android.os.Message,int) -> if
    void p(android.os.Message) -> p
    void char(int) -> char
    void setForBaiduMap(boolean) -> setForBaiduMap
    void setDebug(boolean) -> setDebug
    boolean notifyError() -> notifyError
    int reportErrorWithInfo(com.baidu.location.BDErrorReport) -> reportErrorWithInfo
    void cancleError() -> cancleError
    void goto(boolean) -> goto
    boolean else(int) -> else
    java.lang.String getAccessKey() -> getAccessKey
    android.os.Messenger if(com.baidu.location.LocationClient,android.os.Messenger) -> if
    android.os.Messenger char(com.baidu.location.LocationClient) -> char
    boolean if(com.baidu.location.LocationClient,boolean) -> if
    android.os.Messenger new(com.baidu.location.LocationClient) -> new
    android.os.Bundle long(com.baidu.location.LocationClient) -> long
    com.baidu.location.LocationClientOption else(com.baidu.location.LocationClient) -> else
    java.lang.Boolean if(com.baidu.location.LocationClient) -> if
    java.lang.Boolean if(com.baidu.location.LocationClient,java.lang.Boolean) -> if
    com.baidu.location.LocationClient$a byte(com.baidu.location.LocationClient) -> byte
    java.lang.Object for(com.baidu.location.LocationClient) -> for
    boolean int(com.baidu.location.LocationClient,boolean) -> int
    java.util.ArrayList goto(com.baidu.location.LocationClient) -> goto
    void for(com.baidu.location.LocationClient,android.os.Message) -> for
    void do(com.baidu.location.LocationClient,android.os.Message) -> do
    void if(com.baidu.location.LocationClient,android.os.Message) -> if
    void case(com.baidu.location.LocationClient,android.os.Message) -> case
    void byte(com.baidu.location.LocationClient,android.os.Message) -> byte
    void new(com.baidu.location.LocationClient,android.os.Message) -> new
    void do(com.baidu.location.LocationClient) -> do
    void try(com.baidu.location.LocationClient) -> try
    void case(com.baidu.location.LocationClient) -> case
    void int(com.baidu.location.LocationClient,android.os.Message) -> int
    void int(com.baidu.location.LocationClient) -> int
    boolean for(com.baidu.location.LocationClient,boolean) -> for
    void if(com.baidu.location.LocationClient,android.os.Message,int) -> if
    void try(com.baidu.location.LocationClient,android.os.Message) -> try
    void do(com.baidu.location.LocationClient,boolean) -> do
com.baidu.location.LocationClient$a -> com.baidu.location.LocationClient$a:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.LocationClient$b:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int MIN_SCAN_SPAN_NETWORK -> MIN_SCAN_SPAN_NETWORK
    int byte -> byte
    int void -> void
    int try -> try
    java.lang.String do -> do
    java.lang.String else -> else
    boolean for -> for
    int int -> int
    int d -> d
    java.lang.String if -> if
    int h -> h
    boolean goto -> goto
    boolean a -> a
    boolean new -> new
    boolean e -> e
    float c -> c
    int long -> long
    java.lang.String case -> case
    boolean b -> b
    boolean char -> char
    boolean g -> g
    com.baidu.location.LocationClientOption$LocationMode f -> f
    boolean equals(com.baidu.location.LocationClientOption) -> equals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setIsNeedAddress(boolean) -> setIsNeedAddress
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    void setLocationMode(com.baidu.location.LocationClientOption$LocationMode) -> setLocationMode
    com.baidu.location.LocationClientOption$LocationMode getLocationMode() -> getLocationMode
    void setNeedDeviceDirect(boolean) -> setNeedDeviceDirect
    boolean a() -> a
    void SetIgnoreCacheException(boolean) -> SetIgnoreCacheException
    void setIgnoreKillProcess(boolean) -> setIgnoreKillProcess
com.baidu.location.LocationClientOption$1 -> com.baidu.location.LocationClientOption$1:
    int[] a -> a
com.baidu.location.LocationClientOption$LocationMode -> com.baidu.location.LocationClientOption$LocationMode:
    com.baidu.location.LocationClientOption$LocationMode Hight_Accuracy -> Hight_Accuracy
    com.baidu.location.LocationClientOption$LocationMode Battery_Saving -> Battery_Saving
    com.baidu.location.LocationClientOption$LocationMode Device_Sensors -> Device_Sensors
    com.baidu.location.LocationClientOption$LocationMode[] a -> a
    com.baidu.location.LocationClientOption$LocationMode[] values() -> values
    com.baidu.location.LocationClientOption$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.location.M -> com.baidu.location.M:
    void a(android.content.Context,android.app.PendingIntent,int) -> a
    void a(android.content.Context,android.app.PendingIntent) -> a
com.baidu.location.N -> com.baidu.location.N:
    double a -> a
    double R -> R
    boolean S -> S
    long T -> T
    double U -> U
    double V -> V
    int W -> W
    int X -> X
    com.baidu.location.N Y -> Y
    com.baidu.location.N cZ() -> cZ
    void if(boolean,boolean,double,double) -> if
    void byte(com.baidu.location.BDLocation) -> byte
    java.lang.String cY() -> cY
com.baidu.location.O -> com.baidu.location.O:
    com.baidu.location.O a -> a
    java.util.ArrayList R -> R
    boolean S -> S
    boolean T -> T
    com.baidu.location.O p() -> p
    void n() -> n
    boolean k() -> k
    void new(android.os.Message) -> new
    void do(android.os.Message) -> do
    boolean int(android.os.Message) -> int
    java.lang.String if(android.os.Message) -> if
    void if(com.baidu.location.BDLocation,int) -> if
    void do(com.baidu.location.BDLocation) -> do
    void byte(java.lang.String) -> byte
    void if(com.baidu.location.BDLocation,android.os.Message) -> if
    void i() -> i
    java.lang.String o() -> o
    int for(android.os.Message) -> for
    com.baidu.location.O$a a(android.os.Messenger) -> a
    void a(com.baidu.location.O$a) -> a
    void a() -> a
    void b() -> b
    void m() -> m
com.baidu.location.O$a -> com.baidu.location.O$a:
    java.lang.String int -> int
    android.os.Messenger for -> for
    com.baidu.location.LocationClientOption do -> do
    int if -> if
    com.baidu.location.O a -> a
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.BDLocation,int) -> a
    void if(com.baidu.location.BDLocation) -> if
    void a() -> a
    void if() -> if
    void a(int) -> a
    void a(int,java.lang.String,com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.O$a,int) -> a
com.baidu.location.P -> com.baidu.location.P:
    com.baidu.location.l a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.Q -> com.baidu.location.Q:
    com.baidu.location.Q a -> a
    com.baidu.location.Q a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.location.R -> com.baidu.location.R:
    java.util.ArrayList a -> a
    boolean R -> R
    long S -> S
    long T -> T
    int U -> U
    android.os.Handler X -> X
    int db -> db
    com.baidu.location.R V -> V
    com.baidu.location.R$a Y -> Y
    int Z -> Z
    com.baidu.location.R ac() -> ac
    void do(int) -> do
    void T() -> T
    void do(boolean) -> do
    boolean for(boolean) -> for
    void d() -> d
    boolean ab() -> ab
    void a(com.baidu.location.R) -> a
    android.os.Handler b(com.baidu.location.R) -> b
com.baidu.location.R$a -> com.baidu.location.R$a:
    java.lang.String a -> a
    int R -> R
    boolean S -> S
    com.baidu.location.R T -> T
    void T() -> T
    void do(boolean) -> do
    boolean aa() -> aa
com.baidu.location.S -> com.baidu.location.S:
    com.baidu.location.R a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.T -> com.baidu.location.T:
    java.util.ArrayList R -> R
    java.util.ArrayList S -> S
    java.util.ArrayList T -> T
    java.util.ArrayList U -> U
    java.util.ArrayList V -> V
    java.util.ArrayList W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.io.File ac -> ac
    int ad -> ad
    int ae -> ae
    int af -> af
    int ag -> ag
    int ah -> ah
    int ai -> ai
    int aj -> aj
    int ak -> ak
    double al -> al
    double am -> am
    double an -> an
    double ao -> ao
    int ap -> ap
    int aq -> aq
    int ar -> ar
    android.location.Location as -> as
    android.location.Location at -> at
    android.location.Location au -> au
    com.baidu.location.ar$b av -> av
    com.baidu.location.T$b aw -> aw
    com.baidu.location.T ax -> ax
    int ay -> ay
    long a -> a
    com.baidu.location.T x() -> x
    java.lang.String B() -> B
    void do(com.baidu.location.Z$a,com.baidu.location.ar$b,android.location.Location,java.lang.String) -> do
    void if(double,double,double,double) -> if
    boolean if(android.location.Location,boolean) -> if
    boolean a(android.location.Location) -> a
    boolean a(android.location.Location,com.baidu.location.ar$b) -> a
    void z() -> z
    void A() -> A
    void E() -> E
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    int a(java.util.List,int) -> a
    boolean a(int,int,int,int,long) -> a
    void case(java.lang.String) -> case
    void char(java.lang.String) -> char
    void if(int,boolean) -> if
    boolean if(java.lang.String,java.util.List) -> if
    java.lang.String D() -> D
    void w() -> w
    java.lang.String if(int) -> if
    java.lang.String y() -> y
    void if(java.lang.String,int) -> if
    void if(java.lang.String,int,boolean) -> if
    void if(int,int) -> if
    void if(int,int,boolean) -> if
    void C() -> C
    void F() -> F
    void long(java.lang.String) -> long
    java.lang.String if(com.baidu.location.Z$a,com.baidu.location.ar$b,android.location.Location,java.lang.String,java.lang.String) -> if
com.baidu.location.T$a -> com.baidu.location.T$a:
    java.lang.String R -> R
    com.baidu.location.T a -> a
    void T() -> T
    void do(boolean) -> do
    void ae() -> ae
com.baidu.location.T$b -> com.baidu.location.T$b:
    boolean a -> a
    int R -> R
    int S -> S
    java.util.ArrayList U -> U
    com.baidu.location.T T -> T
    void T() -> T
    void do(boolean) -> do
    void af() -> af
com.baidu.location.U -> com.baidu.location.U:
    com.baidu.location.U a -> a
    com.baidu.location.l R -> R
    android.os.Handler S -> S
    com.baidu.location.U H() -> H
    void K() -> K
    void G() -> G
    android.os.Handler I() -> I
    void a() -> a
    void a(com.baidu.location.U) -> a
com.baidu.location.U$a -> com.baidu.location.U$a:
    com.baidu.location.U a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.V -> com.baidu.location.V:
    boolean a -> a
    int R -> R
    java.lang.String S -> S
    int T -> T
    java.lang.String cR -> cR
    int c0 -> c0
    org.apache.http.HttpEntity cS -> cS
    java.util.List cT -> cT
    java.lang.String cW -> cW
    int W -> W
    void T() -> T
    void do(boolean) -> do
    void Q() -> Q
    void N() -> N
    void R() -> R
    void d() -> d
    int e() -> e
    int a(android.content.Context,android.net.NetworkInfo) -> a
    boolean if(android.content.Context) -> if
    void a(com.baidu.location.V) -> a
    int a() -> a
    java.lang.String b() -> b
    int c() -> c
    boolean a(com.baidu.location.V,boolean) -> a
com.baidu.location.W -> com.baidu.location.W:
    com.baidu.location.V a -> a
    void run() -> run
com.baidu.location.X -> com.baidu.location.X:
    com.baidu.location.V a -> a
    void run() -> run
com.baidu.location.Y -> com.baidu.location.Y:
    com.baidu.location.V a -> a
    void run() -> run
com.baidu.location.Z -> com.baidu.location.Z:
    com.baidu.location.Z a -> a
    android.telephony.TelephonyManager R -> R
    com.baidu.location.Z$a S -> S
    java.util.List T -> T
    java.lang.String U -> U
    com.baidu.location.Z$b V -> V
    boolean W -> W
    java.lang.reflect.Method X -> X
    java.lang.reflect.Method Y -> Y
    java.lang.reflect.Method Z -> Z
    java.lang.Class aa -> aa
    long ab -> ab
    int ac -> ac
    boolean ad -> ad
    int ae -> ae
    int af -> af
    com.baidu.location.Z an() -> an
    void am() -> am
    void as() -> as
    int ap() -> ap
    java.lang.String ao() -> ao
    boolean b() -> b
    com.baidu.location.Z$a ak() -> ak
    void a(android.telephony.CellLocation) -> a
    int aq() -> aq
    long a() -> a
    com.baidu.location.Z$a a(com.baidu.location.Z) -> a
    java.util.List b(com.baidu.location.Z) -> b
    int c(com.baidu.location.Z) -> c
    int a(com.baidu.location.Z,int) -> a
    int d(com.baidu.location.Z) -> d
    android.telephony.TelephonyManager e(com.baidu.location.Z) -> e
    void a(com.baidu.location.Z,android.telephony.CellLocation) -> a
com.baidu.location.Z$a -> com.baidu.location.Z$a:
    int for -> for
    int try -> try
    int do -> do
    int if -> if
    long byte -> byte
    int int -> int
    char new -> new
    com.baidu.location.Z a -> a
    boolean a(com.baidu.location.Z$a) -> a
    boolean do() -> do
    boolean for() -> for
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    java.lang.String if() -> if
    java.lang.String int() -> int
com.baidu.location.Z$b -> com.baidu.location.Z$b:
    com.baidu.location.Z a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.a -> com.baidu.location.a:
    com.baidu.location.BDLocation a(android.os.Parcel) -> a
    com.baidu.location.BDLocation[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.location.a.a.a -> com.baidu.location.a.a.a:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.baidu.location.a.a.b -> com.baidu.location.a.a.b:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.location.a.a.b$a -> com.baidu.location.a.a.b$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.location.a.a.b$a a(android.content.Context) -> a
com.baidu.location.a.a.c -> com.baidu.location.a.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.location.a.b.a -> com.baidu.location.a.b.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.location.a.b.b -> com.baidu.location.a.b.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.location.a0 -> com.baidu.location.a0:
    long i2 -> i2
    java.lang.String ji -> ji
    boolean a -> a
    java.util.List b -> b
    java.util.List c -> c
    android.os.PowerManager$WakeLock d -> d
    android.os.HandlerThread e -> e
    com.baidu.location.a0$d f -> f
    com.baidu.location.a0$c g -> g
    boolean h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    com.baidu.location.ar$b k -> k
    com.baidu.location.ar$b l -> l
    java.lang.String m -> m
    android.os.Messenger n -> n
    int o -> o
    java.util.Map p -> p
    com.baidu.location.a0 jf -> jf
    android.os.Handler q -> q
    boolean r -> r
    com.baidu.location.a0 cq() -> cq
    void a() -> a
    void a(java.util.List) -> a
    void b() -> b
    void for(com.baidu.location.s) -> for
    java.util.List a(boolean) -> a
    boolean c() -> c
    void a(android.content.Context) -> a
    void d() -> d
    void if(android.content.Context,android.os.Message) -> if
    void new(android.content.Context) -> new
    void try(android.content.Context) -> try
    void if(android.content.Context,int) -> if
    java.util.List for(java.lang.String,boolean) -> for
    java.util.List if(java.util.List,boolean) -> if
    java.util.Map e() -> e
    boolean a(com.baidu.location.a0,boolean) -> a
    java.lang.String a(com.baidu.location.a0,java.lang.String) -> a
    com.baidu.location.ar$b a(com.baidu.location.a0,com.baidu.location.ar$b) -> a
    boolean a(com.baidu.location.a0) -> a
    boolean b(com.baidu.location.a0,boolean) -> b
    java.util.Map b(com.baidu.location.a0) -> b
    android.os.Messenger c(com.baidu.location.a0) -> c
    java.util.List c(com.baidu.location.a0,boolean) -> c
    java.lang.String d(com.baidu.location.a0) -> d
    java.lang.String e(com.baidu.location.a0) -> e
    boolean f(com.baidu.location.a0) -> f
    boolean g(com.baidu.location.a0) -> g
    com.baidu.location.ar$b h(com.baidu.location.a0) -> h
    java.lang.String b(com.baidu.location.a0,java.lang.String) -> b
    java.util.List a(com.baidu.location.a0,java.util.List) -> a
    java.util.List b(com.baidu.location.a0,java.util.List) -> b
    void c(com.baidu.location.a0,java.util.List) -> c
    void i(com.baidu.location.a0) -> i
    void a(com.baidu.location.a0,android.content.Context) -> a
    com.baidu.location.a0$d j(com.baidu.location.a0) -> j
    android.os.Handler k(com.baidu.location.a0) -> k
com.baidu.location.a0$1 -> com.baidu.location.a0$1:
com.baidu.location.a0$a -> com.baidu.location.a0$a:
    com.baidu.location.s R -> R
    java.lang.String S -> S
    com.baidu.location.a0 a -> a
    void T() -> T
    void do(boolean) -> do
    void d() -> d
    void e() -> e
    void ai() -> ai
com.baidu.location.a0$b -> com.baidu.location.a0$b:
    com.baidu.location.a0 a -> a
    void a(android.os.Message) -> a
    void a() -> a
com.baidu.location.a0$c -> com.baidu.location.a0$c:
    com.baidu.location.a0 a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.a0$d -> com.baidu.location.a0$d:
    com.baidu.location.a0 a -> a
    void run() -> run
com.baidu.location.aa -> com.baidu.location.aa:
    com.baidu.location.aa a -> a
    com.baidu.location.BDLocation S -> S
    long T -> T
    com.baidu.location.k$a eH -> eH
    com.baidu.location.aa aG() -> aG
    void long(android.os.Message) -> long
    void b(android.os.Message) -> b
    void b() -> b
    void a(android.os.Message) -> a
    void a() -> a
com.baidu.location.ab -> com.baidu.location.ab:
    com.baidu.location.ab$a a -> a
    android.os.Messenger R -> R
    android.content.Context S -> S
    boolean gv -> gv
    android.os.Looper T -> T
    android.os.HandlerThread U -> U
    boolean V -> V
    long W -> W
    boolean gE -> gE
    long gw -> gw
    void onCreate(android.content.Context) -> onCreate
    void a() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void b() -> b
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.Handler bj() -> bj
    long bi() -> bi
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void d(android.os.Message) -> d
    boolean onUnBind(android.content.Intent) -> onUnBind
    double getVersion() -> getVersion
    void a(com.baidu.location.ab,android.os.Message) -> a
    void b(com.baidu.location.ab,android.os.Message) -> b
    void c(com.baidu.location.ab,android.os.Message) -> c
    void d(com.baidu.location.ab,android.os.Message) -> d
    void a(com.baidu.location.ab) -> a
    void b(com.baidu.location.ab) -> b
com.baidu.location.ab$a -> com.baidu.location.ab$a:
    com.baidu.location.ab a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.ac -> com.baidu.location.ac:
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.location.ac$a -> com.baidu.location.ac$a:
    java.lang.String a(byte[]) -> a
com.baidu.location.ad -> com.baidu.location.ad:
    com.baidu.location.ad a -> a
    java.lang.String R -> R
    java.io.File S -> S
    java.lang.StringBuffer T -> T
    boolean U -> U
    int V -> V
    int W -> W
    long X -> X
    long Y -> Y
    long Z -> Z
    double aa -> aa
    double ab -> ab
    int ac -> ac
    int ad -> ad
    int ae -> ae
    java.lang.String af -> af
    boolean ag -> ag
    com.baidu.location.ad aK() -> aK
    void aO() -> aO
    boolean do(android.location.Location) -> do
    boolean a(android.location.Location,int,int) -> a
    boolean a(java.lang.String) -> a
    java.lang.String a(int) -> a
    void a() -> a
    void b() -> b
    java.lang.String aM() -> aM
    boolean c() -> c
    boolean a(int,int,int) -> a
com.baidu.location.ae -> com.baidu.location.ae:
    long a -> a
    com.baidu.location.ae R -> R
    android.content.Context S -> S
    android.location.LocationManager T -> T
    android.location.Location U -> U
    com.baidu.location.ae$b V -> V
    com.baidu.location.ae$c W -> W
    android.location.GpsStatus X -> X
    com.baidu.location.ae$a Y -> Y
    int Z -> Z
    long aa -> aa
    long ab -> ab
    boolean ac -> ac
    boolean ad -> ad
    java.lang.String ae -> ae
    boolean af -> af
    long ag -> ag
    long ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.io.File ak -> ak
    android.os.Handler al -> al
    int am -> am
    int an -> an
    int ao -> ao
    int ap -> ap
    android.location.Location aq -> aq
    android.location.Location ar -> ar
    long as -> as
    long at -> at
    java.lang.StringBuilder au -> au
    java.lang.String av -> av
    int aw -> aw
    int ax -> ax
    java.util.HashMap ay -> ay
    com.baidu.location.ae a4() -> a4
    void aU() -> aU
    void a(java.lang.String,android.location.Location) -> a
    void a2() -> a2
    void a3() -> a3
    void aW() -> aW
    java.lang.String aV() -> aV
    void int(boolean) -> int
    java.lang.String aY() -> aY
    java.lang.String case(android.location.Location) -> case
    java.lang.String aP() -> aP
    android.location.Location aS() -> aS
    boolean aT() -> aT
    boolean aR() -> aR
    boolean if(android.location.Location,android.location.Location,boolean) -> if
    void a(android.location.Location) -> a
    void b(android.location.Location) -> b
    void a(double,double,float) -> a
    void a(boolean) -> a
    java.lang.String byte(android.location.Location) -> byte
    java.lang.String new(android.location.Location) -> new
    void a0() -> a0
    java.lang.String a(android.location.GpsSatellite,java.util.HashMap) -> a
    int a(java.util.HashMap) -> a
    java.lang.String b() -> b
    double[] a(java.util.List) -> a
    double[] a(double,double) -> a
    double[] b(double,double) -> b
    int a(com.baidu.location.u,int) -> a
    boolean a1() -> a1
    void a(com.baidu.location.ae,android.location.Location) -> a
    com.baidu.location.ae$a a(com.baidu.location.ae) -> a
    void a(com.baidu.location.ae,java.lang.String,android.location.Location) -> a
    boolean b(com.baidu.location.ae) -> b
    long a(com.baidu.location.ae,long) -> a
    android.os.Handler c(com.baidu.location.ae) -> c
    long b(com.baidu.location.ae,long) -> b
    void a(com.baidu.location.ae,boolean) -> a
    void b(com.baidu.location.ae,android.location.Location) -> b
    boolean b(com.baidu.location.ae,boolean) -> b
    long c(com.baidu.location.ae,long) -> c
    android.location.LocationManager d(com.baidu.location.ae) -> d
    android.location.GpsStatus e(com.baidu.location.ae) -> e
    android.location.GpsStatus a(com.baidu.location.ae,android.location.GpsStatus) -> a
    java.lang.StringBuilder a(java.lang.StringBuilder) -> a
    int a(com.baidu.location.ae,int) -> a
    int b(com.baidu.location.ae,int) -> b
    java.util.HashMap a(com.baidu.location.ae,java.util.HashMap) -> a
    int f(com.baidu.location.ae) -> f
    java.util.HashMap g(com.baidu.location.ae) -> g
    java.lang.String a(com.baidu.location.ae,android.location.GpsSatellite,java.util.HashMap) -> a
    java.lang.StringBuilder a() -> a
    int a(int) -> a
    int b(com.baidu.location.ae,java.util.HashMap) -> b
    long h(com.baidu.location.ae) -> h
    int i(com.baidu.location.ae) -> i
    int a(com.baidu.location.ae,com.baidu.location.u,int) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.location.ae$a -> com.baidu.location.ae$a:
    long a -> a
    long c -> c
    int d -> d
    boolean e -> e
    boolean f -> f
    java.util.List g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    com.baidu.location.ae b -> b
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.baidu.location.ae$b -> com.baidu.location.ae$b:
    com.baidu.location.ae a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.ae$c -> com.baidu.location.ae$c:
    long b -> b
    com.baidu.location.ae a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.af -> com.baidu.location.af:
    com.baidu.location.ae a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.ag -> com.baidu.location.ag:
    com.baidu.location.ag a -> a
    com.baidu.location.ag$a R -> R
    long S -> S
    boolean f6 -> f6
    boolean f8 -> f8
    boolean gb -> gb
    boolean f0 -> f0
    boolean f1 -> f1
    boolean f5 -> f5
    java.lang.String T -> T
    int gc -> gc
    int f4 -> f4
    int gd -> gd
    com.baidu.location.ag a7() -> a7
    void a9() -> a9
    void a() -> a
    boolean o(java.lang.String) -> o
    void a5() -> a5
    void bb() -> bb
    void a8() -> a8
    void n(java.lang.String) -> n
    void a(org.apache.http.HttpEntity) -> a
    void b(org.apache.http.HttpEntity) -> b
    void try(int) -> try
    void a6() -> a6
    void bc() -> bc
    void new(int) -> new
    void a(com.baidu.location.ag,org.apache.http.HttpEntity) -> a
    void b(com.baidu.location.ag,org.apache.http.HttpEntity) -> b
com.baidu.location.ag$a -> com.baidu.location.ag$a:
    java.lang.String a -> a
    boolean R -> R
    boolean S -> S
    com.baidu.location.ag T -> T
    void T() -> T
    void do(boolean) -> do
    void if(java.lang.String,boolean) -> if
com.baidu.location.ar -> com.baidu.location.ar:
    long a -> a
    long R -> R
    long S -> S
    com.baidu.location.ar T -> T
    android.net.wifi.WifiManager U -> U
    com.baidu.location.ar$a V -> V
    com.baidu.location.ar$b W -> W
    long X -> X
    long Y -> Y
    boolean Z -> Z
    java.lang.Object aa -> aa
    java.lang.reflect.Method ab -> ab
    boolean ac -> ac
    long ad -> ad
    com.baidu.location.ar bW() -> bW
    void b2() -> b2
    void bT() -> bT
    boolean b3() -> b3
    boolean bX() -> bX
    boolean b5() -> b5
    boolean bU() -> bU
    java.lang.String b4() -> b4
    com.baidu.location.ar$b bS() -> bS
    com.baidu.location.ar$b b1() -> b1
    com.baidu.location.ar$b bY() -> bY
    void a() -> a
    boolean bZ() -> bZ
    boolean if(com.baidu.location.ar$b,com.baidu.location.ar$b,float) -> if
    double if(com.baidu.location.ar$b,com.baidu.location.ar$b) -> if
    java.lang.String b0() -> b0
    boolean a(java.lang.String) -> a
    long a(com.baidu.location.ar,long) -> a
    void a(com.baidu.location.ar) -> a
    boolean a(com.baidu.location.ar,java.lang.String) -> a
    long b(com.baidu.location.ar) -> b
com.baidu.location.ar$1 -> com.baidu.location.ar$1:
com.baidu.location.ar$a -> com.baidu.location.ar$a:
    com.baidu.location.ar a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.ar$b -> com.baidu.location.ar$b:
    java.util.List for -> for
    long b -> b
    long c -> c
    boolean d -> d
    boolean e -> e
    com.baidu.location.ar a -> a
    java.lang.String int() -> int
    int try() -> try
    java.lang.String char() -> char
    java.lang.String byte() -> byte
    java.lang.String a(int) -> a
    java.lang.String else() -> else
    void a() -> a
    java.lang.String if(int) -> if
    boolean if(com.baidu.location.ar$b) -> if
    boolean do(com.baidu.location.ar$b) -> do
    boolean a(com.baidu.location.ar$b) -> a
    int do() -> do
    boolean case() -> case
    boolean for() -> for
    boolean new() -> new
    boolean if() -> if
com.baidu.location.aw -> com.baidu.location.aw:
    boolean a -> a
    java.lang.String b -> b
    com.baidu.location.aw$a c -> c
    com.baidu.location.aw d -> d
    com.baidu.location.aw do() -> do
    void for() -> for
    void if() -> if
    java.lang.String a() -> a
    boolean int() -> int
    boolean a(com.baidu.location.aw,boolean) -> a
    java.lang.String a(com.baidu.location.aw,java.lang.String) -> a
    boolean a(com.baidu.location.aw) -> a
com.baidu.location.aw$a -> com.baidu.location.aw$a:
    com.baidu.location.aw a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.b -> com.baidu.location.b:
    com.baidu.location.GeofenceClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.c -> com.baidu.location.c:
    com.baidu.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.d -> com.baidu.location.d:
    com.baidu.location.d a -> a
    com.baidu.location.d bg() -> bg
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void if(java.io.File,java.lang.String,java.lang.String) -> if
    void bh() -> bh
    java.lang.String a(java.lang.Throwable) -> a
    boolean a(java.lang.String,java.lang.String) -> a
com.baidu.location.e -> com.baidu.location.e:
    int a -> a
    int R -> R
    android.hardware.SensorManager S -> S
    android.hardware.Sensor T -> T
    android.hardware.Sensor U -> U
    android.os.Handler V -> V
    com.baidu.location.e W -> W
    boolean X -> X
    boolean Y -> Y
    boolean Z -> Z
    boolean aa -> aa
    java.lang.StringBuffer ab -> ab
    java.lang.StringBuffer ac -> ac
    java.lang.Runnable ad -> ad
    java.lang.Runnable ae -> ae
    int af -> af
    int ag -> ag
    boolean ah -> ah
    com.baidu.location.e cM() -> cM
    void goto(int) -> goto
    boolean a(int) -> a
    void a(java.io.RandomAccessFile,int) -> a
    void b(int) -> b
    boolean a() -> a
    boolean a(java.io.File) -> a
    java.lang.String c(int) -> c
    java.lang.String d(int) -> d
    java.lang.String b() -> b
    boolean a(java.io.File,int) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String cG() -> cG
    void cO() -> cO
    void cK() -> cK
    void cP() -> cP
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void a(java.lang.StringBuffer) -> a
    void b(java.lang.StringBuffer) -> b
    void a(java.lang.StringBuffer,java.lang.StringBuffer,java.lang.String) -> a
    void a(java.lang.StringBuffer,java.io.File) -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    java.lang.Runnable a(com.baidu.location.e) -> a
    android.os.Handler b(com.baidu.location.e) -> b
    java.lang.Runnable c(com.baidu.location.e) -> c
com.baidu.location.f -> com.baidu.location.f:
    com.baidu.location.LLSInterface ii -> ii
    com.baidu.location.LLSInterface ik -> ik
    com.baidu.location.LLSInterface il -> il
    java.lang.String replaceFileName -> replaceFileName
    java.lang.String ij -> ij
    android.content.Context mC -> mC
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    float getFrameVersion() -> getFrameVersion
    java.lang.String getJarFileName() -> getJarFileName
    android.content.Context getServiceContext() -> getServiceContext
com.baidu.location.g -> com.baidu.location.g:
    com.baidu.location.e a -> a
    void run() -> run
com.baidu.location.h -> com.baidu.location.h:
    com.baidu.location.e a -> a
    void run() -> run
com.baidu.location.i -> com.baidu.location.i:
    com.baidu.location.i a -> a
    android.os.Handler g1 -> g1
    com.baidu.location.i bp() -> bp
    void bt() -> bt
    void br() -> br
    boolean bs() -> bs
    boolean bq() -> bq
com.baidu.location.j -> com.baidu.location.j:
    float[] a -> a
    float[] R -> R
    float[] S -> S
    android.hardware.SensorManager T -> T
    com.baidu.location.j U -> U
    float V -> V
    boolean W -> W
    com.baidu.location.j bw() -> bw
    void bx() -> bx
    void bv() -> bv
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void try(boolean) -> try
    boolean by() -> by
    float bu() -> bu
com.baidu.location.k -> com.baidu.location.k:
    com.baidu.location.ar$b ek -> ek
    com.baidu.location.Z$a eh -> eh
    boolean a -> a
    boolean S -> S
    boolean T -> T
    boolean U -> U
    java.lang.String ee -> ee
    android.os.Handler R -> R
    void a(android.os.Message) -> a
    void a() -> a
    java.lang.String e(java.lang.String) -> e
com.baidu.location.k$a -> com.baidu.location.k$a:
    java.lang.String a -> a
    java.lang.String R -> R
    com.baidu.location.k S -> S
    void T() -> T
    void do(boolean) -> do
    void d(java.lang.String) -> d
com.baidu.location.k$b -> com.baidu.location.k$b:
    com.baidu.location.k a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.l -> com.baidu.location.l:
    java.lang.String V -> V
    java.lang.String W -> W
    java.io.File X -> X
    java.io.File Y -> Y
    long Z -> Z
    int aa -> aa
    android.app.AlarmManager ab -> ab
    com.baidu.location.l$a ac -> ac
    android.app.PendingIntent ad -> ad
    android.content.Context ae -> ae
    long af -> af
    long[] ag -> ag
    int ah -> ah
    com.baidu.location.Z$a ai -> ai
    java.lang.String bM -> bM
    java.lang.String aj -> aj
    int ak -> ak
    boolean al -> al
    boolean am -> am
    boolean an -> an
    android.os.Handler ao -> ao
    int ap -> ap
    boolean aq -> aq
    long ar -> ar
    int as -> as
    long at -> at
    long au -> au
    long av -> av
    java.lang.String aw -> aw
    boolean ax -> ax
    com.baidu.location.l$c a -> a
    java.util.ArrayList R -> R
    java.util.ArrayList S -> S
    long T -> T
    java.lang.String U -> U
    void u() -> u
    void a() -> a
    void a(boolean) -> a
    void b() -> b
    void q() -> q
    java.lang.String s() -> s
    boolean r() -> r
    boolean a(double,double) -> a
    android.os.Handler a(com.baidu.location.l) -> a
com.baidu.location.l$a -> com.baidu.location.l$a:
    com.baidu.location.l a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.l$b -> com.baidu.location.l$b:
    double do -> do
    double if -> if
    java.util.HashMap b -> b
    double c -> c
    com.baidu.location.l a -> a
    double a(com.baidu.location.l$b) -> a
    java.util.HashMap if() -> if
    double a() -> a
com.baidu.location.l$c -> com.baidu.location.l$c:
    boolean a -> a
    com.baidu.location.l b -> b
    void a(android.content.Context) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.m -> com.baidu.location.m:
    com.baidu.location.m U -> U
    int a -> a
    int S -> S
    boolean V -> V
    com.baidu.location.t W -> W
    com.baidu.location.k$a em -> em
    java.lang.String X -> X
    com.baidu.location.BDLocation Y -> Y
    com.baidu.location.BDLocation Z -> Z
    com.baidu.location.ar$b aa -> aa
    com.baidu.location.Z$a ab -> ab
    boolean ac -> ac
    boolean ad -> ad
    boolean ae -> ae
    long af -> af
    long ag -> ag
    int ah -> ah
    android.os.Handler T -> T
    com.baidu.location.m ay() -> ay
    void case(android.os.Message) -> case
    void b() -> b
    void c() -> c
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void d(android.os.Message) -> d
    void e() -> e
    boolean a(com.baidu.location.ar$b) -> a
    boolean aA() -> aA
    boolean a(com.baidu.location.Z$a) -> a
    void f() -> f
    void aw() -> aw
    void a(android.os.Message) -> a
    void a() -> a
    void d() -> d
    void for(com.baidu.location.BDLocation) -> for
    void g() -> g
    void h() -> h
    boolean a(com.baidu.location.m) -> a
    boolean a(com.baidu.location.m,boolean) -> a
    void b(com.baidu.location.m) -> b
com.baidu.location.m$1 -> com.baidu.location.m$1:
com.baidu.location.m$a -> com.baidu.location.m$a:
    com.baidu.location.m a -> a
    void run() -> run
com.baidu.location.n -> com.baidu.location.n:
    com.baidu.location.n a -> a
    android.os.Handler R -> R
    boolean S -> S
    boolean T -> T
    com.baidu.location.n bA() -> bA
    void bz() -> bz
    void a() -> a
    void bB() -> bB
    void a(com.baidu.location.n) -> a
com.baidu.location.o -> com.baidu.location.o:
    com.baidu.location.n a -> a
    void run() -> run
com.baidu.location.p -> com.baidu.location.p:
    com.baidu.location.p a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String new -> new
    boolean e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.baidu.location.p$a h -> h
    long i -> i
    long j -> j
    long k -> k
    com.baidu.location.p a() -> a
    void do() -> do
    void if() -> if
    void a(android.os.Message) -> a
    void a(java.lang.String) -> a
    void if(java.lang.String) -> if
    java.lang.String a(com.baidu.location.p) -> a
    java.lang.String a(com.baidu.location.p,java.lang.String) -> a
    java.lang.String b(com.baidu.location.p) -> b
    java.lang.String b(com.baidu.location.p,java.lang.String) -> b
    long c(com.baidu.location.p) -> c
    long d(com.baidu.location.p) -> d
    long a(com.baidu.location.p,long) -> a
com.baidu.location.p$a -> com.baidu.location.p$a:
    boolean a -> a
    java.lang.String R -> R
    android.os.Messenger S -> S
    com.baidu.location.p T -> T
    void T() -> T
    void do(boolean) -> do
    void try(android.os.Message) -> try
com.baidu.location.q -> com.baidu.location.q:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void if(boolean,java.lang.Object) -> if
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void if(boolean) -> if
com.baidu.location.r -> com.baidu.location.r:
    android.os.HandlerThread a -> a
    android.os.HandlerThread a() -> a
com.baidu.location.s -> com.baidu.location.s:
    int int -> int
    java.lang.String b -> b
    double c -> c
    double d -> d
    int e -> e
    float f -> f
    long g -> g
    int h -> h
    java.lang.String i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    long m -> m
    int a -> a
    int b() -> b
    void a(int) -> a
    java.lang.String getGeofenceId() -> getGeofenceId
    double case() -> case
    double a() -> a
    float do() -> do
    void a(float) -> a
    long goto() -> goto
    java.lang.String int() -> int
    boolean byte() -> byte
    void do(boolean) -> do
    boolean for() -> for
    void if(boolean) -> if
    boolean if() -> if
    void a(boolean) -> a
    long else() -> else
    void a(long) -> a
    int char() -> char
    int new() -> new
    void a(java.lang.String) -> a
    void b(int) -> b
    void a(double,double) -> a
    void b(java.lang.String) -> b
    void b(long) -> b
    java.lang.String c(int) -> c
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.location.t -> com.baidu.location.t:
    boolean do(com.baidu.location.ar$b) -> do
    int try(com.baidu.location.BDLocation) -> try
    void b6() -> b6
com.baidu.location.u -> com.baidu.location.u:
    boolean a -> a
    java.lang.String R -> R
    boolean S -> S
    java.lang.String T -> T
    int U -> U
    int V -> V
    java.lang.String W -> W
    char X -> X
    java.lang.String Y -> Y
    boolean Z -> Z
    int aa -> aa
    double ab -> ab
    double ac -> ac
    java.util.List ad -> ad
    boolean ae -> ae
    int af -> af
    boolean ag -> ag
    java.lang.String kt -> kt
    int ko -> ko
    void a() -> a
    boolean a(java.lang.String) -> a
    boolean cV() -> cV
    int cX() -> cX
    java.lang.String cU() -> cU
    double cW() -> cW
    double cT() -> cT
com.baidu.location.v -> com.baidu.location.v:
    int h4 -> h4
    android.content.Context a -> a
    com.baidu.location.v$a R -> R
    android.os.HandlerThread S -> S
    java.lang.Object T -> T
    com.baidu.location.v U -> U
    com.baidu.location.v for(android.content.Context) -> for
    void if(com.baidu.location.s,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void do(com.baidu.location.s) -> do
    void if(com.baidu.location.s) -> if
    void do(java.lang.String,boolean) -> do
    void if(java.util.List,com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    long a() -> a
    void a(int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> a
    void a(int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> a
    void b() -> b
    void b7() -> b7
    void c() -> c
    int a(com.baidu.location.s,java.lang.String) -> a
    int a(java.util.List) -> a
    void d() -> d
    void e() -> e
    void a(com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> a
    void int(android.content.Context) -> int
    int do(android.content.Context) -> do
    void a(com.baidu.location.v) -> a
    android.content.Context b(com.baidu.location.v) -> b
    void a(com.baidu.location.v,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> a
    com.baidu.location.v$a c(com.baidu.location.v) -> c
    void a(com.baidu.location.v,int,java.lang.String,com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener) -> a
    void a(com.baidu.location.v,int,java.lang.String[],com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> a
    int a(com.baidu.location.v,com.baidu.location.s,java.lang.String) -> a
    int a(com.baidu.location.v,java.util.List) -> a
com.baidu.location.v$a -> com.baidu.location.v$a:
    int if -> if
    int do -> do
    int for -> for
    com.baidu.location.v a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.v$b -> com.baidu.location.v$b:
    com.baidu.location.s R -> R
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener S -> S
    int T -> T
    com.baidu.location.v a -> a
    void T() -> T
    void do(boolean) -> do
    void ag() -> ag
com.baidu.location.v$c -> com.baidu.location.v$c:
    com.baidu.location.s b -> b
    java.lang.String c -> c
    com.baidu.location.GeofenceClient$OnAddBDGeofencesResultListener d -> d
    com.baidu.location.v a -> a
    void run() -> run
com.baidu.location.v$d -> com.baidu.location.v$d:
    java.util.List b -> b
    com.baidu.location.GeofenceClient$OnRemoveBDGeofencesResultListener c -> c
    com.baidu.location.v a -> a
    void run() -> run
com.baidu.location.w -> com.baidu.location.w:
    com.baidu.location.s a -> a
    com.baidu.location.v b -> b
    void run() -> run
com.baidu.location.x -> com.baidu.location.x:
    com.baidu.location.s a -> a
    com.baidu.location.v b -> b
    void run() -> run
com.baidu.location.y -> com.baidu.location.y:
    com.baidu.location.v a -> a
    void run() -> run
com.baidu.location.z -> com.baidu.location.z:
    java.util.ArrayList a -> a
    float R -> R
    com.baidu.location.BDLocation S -> S
    long T -> T
    com.baidu.location.LocationClient U -> U
    android.content.Context V -> V
    int W -> W
    long X -> X
    boolean Y -> Y
    boolean Z -> Z
    android.app.PendingIntent aa -> aa
    android.app.AlarmManager ab -> ab
    com.baidu.location.z$b ac -> ac
    java.lang.String gi -> gi
    com.baidu.location.z$a ad -> ad
    boolean ae -> ae
    void be() -> be
    int do(com.baidu.location.BDNotifyListener) -> do
    void if(com.baidu.location.BDNotifyListener) -> if
    int for(com.baidu.location.BDNotifyListener) -> for
    boolean a() -> a
    void b() -> b
    void a(long) -> a
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.z,com.baidu.location.BDLocation) -> a
    java.util.ArrayList a(com.baidu.location.z) -> a
    com.baidu.location.LocationClient b(com.baidu.location.z) -> b
com.baidu.location.z$a -> com.baidu.location.z$a:
    com.baidu.location.z a -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void a(com.baidu.location.BDLocation) -> a
com.baidu.location.z$b -> com.baidu.location.z$b:
    com.baidu.location.z a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.mapapi.SDKInitializer -> com.baidu.mapapi.SDKInitializer:
    java.lang.String SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR -> SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR
    java.lang.String SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR -> SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR
    java.lang.String SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE -> SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE
    boolean a -> a
    void initialize(java.lang.String,android.content.Context) -> initialize
    void initialize(android.content.Context) -> initialize
com.baidu.mapapi.VersionInfo -> com.baidu.mapapi.VersionInfo:
    java.lang.String VERSION_INFO -> VERSION_INFO
    java.lang.String VERSION_DESC -> VERSION_DESC
    java.lang.String getApiVersion() -> getApiVersion
    java.lang.String getVersionDesc() -> getVersionDesc
com.baidu.mapapi.a -> com.baidu.mapapi.a:
    java.lang.String a -> a
    android.content.Context b -> b
    android.os.Handler c -> c
    com.baidu.platform.comapi.NetworkListener d -> d
    int e -> e
    com.baidu.mapapi.a f -> f
    com.baidu.mapapi.a a() -> a
    void a(android.content.Context) -> a
    void b() -> b
    void c() -> c
    android.content.Context d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Message) -> a
    void a(com.baidu.mapapi.utils.PermissionCheck$b) -> a
com.baidu.mapapi.b -> com.baidu.mapapi.b:
    com.baidu.mapapi.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.cloud.BaseCloudSearchInfo -> com.baidu.mapapi.cloud.BaseCloudSearchInfo:
    java.lang.String q -> q
    java.lang.String tags -> tags
    java.lang.String sortby -> sortby
    java.lang.String filter -> filter
    int pageIndex -> pageIndex
    int pageSize -> pageSize
    java.lang.String a() -> a
com.baidu.mapapi.cloud.BaseSearchInfo -> com.baidu.mapapi.cloud.BaseSearchInfo:
    java.lang.String a -> a
    java.lang.String ak -> ak
    int geoTableId -> geoTableId
    java.lang.String sn -> sn
    java.lang.String a() -> a
com.baidu.mapapi.cloud.BaseSearchResult -> com.baidu.mapapi.cloud.BaseSearchResult:
    int STATUS_CODE_SUCCEED -> STATUS_CODE_SUCCEED
    int STATUS_CODE_SERVER_ERROR -> STATUS_CODE_SERVER_ERROR
    int STATUS_CODE_PARAM_ERROR -> STATUS_CODE_PARAM_ERROR
    int STATUS_CODE_PERMISSION_ERROR -> STATUS_CODE_PERMISSION_ERROR
    int STATUS_CODE_QUOTA_ERROR -> STATUS_CODE_QUOTA_ERROR
    int STATUS_CODE_AK_ERROR -> STATUS_CODE_AK_ERROR
    int STATUS_CODE_SERVICE_DISABLED -> STATUS_CODE_SERVICE_DISABLED
    int STATUS_CODE_SECURITY_CODE_ERROR -> STATUS_CODE_SECURITY_CODE_ERROR
    int STATUS_CODE_PERMISSION_AND_QUOTA_ERROR -> STATUS_CODE_PERMISSION_AND_QUOTA_ERROR
    int status -> status
    int size -> size
    int total -> total
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.BoundSearchInfo -> com.baidu.mapapi.cloud.BoundSearchInfo:
    java.lang.String bound -> bound
    java.lang.String a() -> a
com.baidu.mapapi.cloud.CloudListener -> com.baidu.mapapi.cloud.CloudListener:
    void onGetSearchResult(com.baidu.mapapi.cloud.CloudSearchResult,int) -> onGetSearchResult
    void onGetDetailSearchResult(com.baidu.mapapi.cloud.DetailSearchResult,int) -> onGetDetailSearchResult
com.baidu.mapapi.cloud.CloudManager -> com.baidu.mapapi.cloud.CloudManager:
    java.lang.String a -> a
    android.os.Bundle b -> b
    com.baidu.mapapi.cloud.CloudManager c -> c
    com.baidu.platform.comjni.map.cloud.a d -> d
    android.os.Handler e -> e
    com.baidu.mapapi.cloud.CloudListener f -> f
    com.baidu.mapapi.cloud.CloudManager getInstance() -> getInstance
    void init(com.baidu.mapapi.cloud.CloudListener) -> init
    void destroy() -> destroy
    boolean localSearch(com.baidu.mapapi.cloud.LocalSearchInfo) -> localSearch
    boolean nearbySearch(com.baidu.mapapi.cloud.NearbySearchInfo) -> nearbySearch
    boolean boundSearch(com.baidu.mapapi.cloud.BoundSearchInfo) -> boundSearch
    boolean a(com.baidu.mapapi.cloud.BaseCloudSearchInfo) -> a
    boolean detailSearch(com.baidu.mapapi.cloud.DetailSearchInfo) -> detailSearch
    java.lang.String a(int) -> a
    com.baidu.platform.comjni.map.cloud.a a(com.baidu.mapapi.cloud.CloudManager) -> a
    com.baidu.mapapi.cloud.CloudListener b(com.baidu.mapapi.cloud.CloudManager) -> b
    java.lang.String a(com.baidu.mapapi.cloud.CloudManager,int) -> a
com.baidu.mapapi.cloud.CloudPoiInfo -> com.baidu.mapapi.cloud.CloudPoiInfo:
    int uid -> uid
    int geotableId -> geotableId
    java.lang.String title -> title
    java.lang.String address -> address
    java.lang.String province -> province
    java.lang.String city -> city
    java.lang.String district -> district
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String tags -> tags
    int distance -> distance
    int weight -> weight
    java.util.Map extras -> extras
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.CloudSearchResult -> com.baidu.mapapi.cloud.CloudSearchResult:
    java.util.List poiList -> poiList
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.DetailSearchInfo -> com.baidu.mapapi.cloud.DetailSearchInfo:
    int uid -> uid
    java.lang.String a() -> a
com.baidu.mapapi.cloud.DetailSearchResult -> com.baidu.mapapi.cloud.DetailSearchResult:
    com.baidu.mapapi.cloud.CloudPoiInfo poiInfo -> poiInfo
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.cloud.LocalSearchInfo -> com.baidu.mapapi.cloud.LocalSearchInfo:
    java.lang.String region -> region
    java.lang.String a() -> a
com.baidu.mapapi.cloud.NearbySearchInfo -> com.baidu.mapapi.cloud.NearbySearchInfo:
    java.lang.String location -> location
    int radius -> radius
    java.lang.String a() -> a
com.baidu.mapapi.cloud.a -> com.baidu.mapapi.cloud.a:
    com.baidu.mapapi.cloud.CloudManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.mapapi.map.Arc -> com.baidu.mapapi.map.Arc:
    java.lang.String f -> f
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.ArcOptions -> com.baidu.mapapi.map.ArcOptions:
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.model.LatLng g -> g
    com.baidu.mapapi.model.LatLng h -> h
    com.baidu.mapapi.model.LatLng i -> i
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    com.baidu.mapapi.model.LatLng getStartPoint() -> getStartPoint
    com.baidu.mapapi.model.LatLng getMiddlePoint() -> getMiddlePoint
    com.baidu.mapapi.model.LatLng getEndPoint() -> getEndPoint
    int getWidth() -> getWidth
    com.baidu.mapapi.map.ArcOptions color(int) -> color
    com.baidu.mapapi.map.ArcOptions points(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> points
    com.baidu.mapapi.map.ArcOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.ArcOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.ArcOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.ArcOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.BaiduMap -> com.baidu.mapapi.map.BaiduMap:
    int MAP_TYPE_NORMAL -> MAP_TYPE_NORMAL
    int MAP_TYPE_SATELLITE -> MAP_TYPE_SATELLITE
    java.lang.String b -> b
    com.baidu.mapapi.map.Projection c -> c
    com.baidu.mapapi.map.UiSettings d -> d
    com.baidu.platform.comapi.map.e e -> e
    java.util.List f -> f
    com.baidu.mapapi.map.Overlay$a g -> g
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener h -> h
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener i -> i
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback j -> j
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener k -> k
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener l -> l
    com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener m -> m
    com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener n -> n
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener o -> o
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback p -> p
    com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback q -> q
    com.baidu.mapapi.map.HeatMap r -> r
    java.util.concurrent.locks.Lock s -> s
    com.baidu.mapapi.map.InfoWindow t -> t
    com.baidu.mapapi.map.Marker u -> u
    android.view.View v -> v
    com.baidu.mapapi.map.Marker w -> w
    com.baidu.mapapi.map.MyLocationData x -> x
    com.baidu.mapapi.map.MyLocationConfiguration y -> y
    com.baidu.mapapi.map.MapView a -> a
    boolean z -> z
    com.baidu.mapapi.map.Overlay addOverlay(com.baidu.mapapi.map.OverlayOptions) -> addOverlay
    void clear() -> clear
    void setMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> setMapStatus
    com.baidu.mapapi.map.MapStatus getMapStatus() -> getMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate,int) -> animateMapStatus
    void animateMapStatus(com.baidu.mapapi.map.MapStatusUpdate) -> animateMapStatus
    com.baidu.platform.comapi.map.y a(com.baidu.mapapi.map.MapStatusUpdate) -> a
    void setMapType(int) -> setMapType
    int getMapType() -> getMapType
    float getMaxZoomLevel() -> getMaxZoomLevel
    void setMaxAndMinZoomLevel(float,float) -> setMaxAndMinZoomLevel
    float getMinZoomLevel() -> getMinZoomLevel
    com.baidu.mapapi.map.Projection getProjection() -> getProjection
    com.baidu.mapapi.map.UiSettings getUiSettings() -> getUiSettings
    void setBuildingsEnabled(boolean) -> setBuildingsEnabled
    boolean isBuildingsEnabled() -> isBuildingsEnabled
    void setMyLocationEnabled(boolean) -> setMyLocationEnabled
    boolean isMyLocationEnabled() -> isMyLocationEnabled
    void setMyLocationData(com.baidu.mapapi.map.MyLocationData) -> setMyLocationData
    com.baidu.mapapi.map.MyLocationData getLocationData() -> getLocationData
    void setMyLocationConfigeration(com.baidu.mapapi.map.MyLocationConfiguration) -> setMyLocationConfigeration
    com.baidu.mapapi.map.MyLocationConfiguration getLocationConfigeration() -> getLocationConfigeration
    void a(com.baidu.mapapi.map.MyLocationData,com.baidu.mapapi.map.MyLocationConfiguration) -> a
    void addHeatMap(com.baidu.mapapi.map.HeatMap) -> addHeatMap
    void a(com.baidu.mapapi.map.HeatMap) -> a
    void a() -> a
    void setTrafficEnabled(boolean) -> setTrafficEnabled
    boolean isTrafficEnabled() -> isTrafficEnabled
    void snapshot(com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback) -> snapshot
    void showInfoWindow(com.baidu.mapapi.map.InfoWindow) -> showInfoWindow
    void hideInfoWindow() -> hideInfoWindow
    void setOnMapStatusChangeListener(com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener) -> setOnMapStatusChangeListener
    void setOnMapClickListener(com.baidu.mapapi.map.BaiduMap$OnMapClickListener) -> setOnMapClickListener
    void setOnMapLoadedCallback(com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback) -> setOnMapLoadedCallback
    void setOnMapDoubleClickListener(com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener) -> setOnMapDoubleClickListener
    void setOnMapLongClickListener(com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener) -> setOnMapLongClickListener
    void setOnMarkerClickListener(com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener) -> setOnMarkerClickListener
    void setOnMarkerDragListener(com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener) -> setOnMarkerDragListener
    void setOnMyLocationClickListener(com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener) -> setOnMyLocationClickListener
    void setOnMapDrawFrameCallback(com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback) -> setOnMapDrawFrameCallback
    java.util.List a(com.baidu.mapapi.map.BaiduMap) -> a
    com.baidu.platform.comapi.map.e b(com.baidu.mapapi.map.BaiduMap) -> b
    android.view.View c(com.baidu.mapapi.map.BaiduMap) -> c
    com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener d(com.baidu.mapapi.map.BaiduMap) -> d
    com.baidu.mapapi.map.BaiduMap$OnMapClickListener e(com.baidu.mapapi.map.BaiduMap) -> e
    com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener f(com.baidu.mapapi.map.BaiduMap) -> f
    com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener g(com.baidu.mapapi.map.BaiduMap) -> g
    com.baidu.mapapi.map.Projection a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Projection) -> a
    boolean a(com.baidu.mapapi.map.BaiduMap,boolean) -> a
    com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback h(com.baidu.mapapi.map.BaiduMap) -> h
    com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback i(com.baidu.mapapi.map.BaiduMap) -> i
    com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener j(com.baidu.mapapi.map.BaiduMap) -> j
    com.baidu.mapapi.map.InfoWindow k(com.baidu.mapapi.map.BaiduMap) -> k
    com.baidu.mapapi.map.Marker l(com.baidu.mapapi.map.BaiduMap) -> l
    com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener m(com.baidu.mapapi.map.BaiduMap) -> m
    com.baidu.mapapi.map.Marker n(com.baidu.mapapi.map.BaiduMap) -> n
    com.baidu.mapapi.map.Projection o(com.baidu.mapapi.map.BaiduMap) -> o
    com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener p(com.baidu.mapapi.map.BaiduMap) -> p
    com.baidu.mapapi.map.Marker a(com.baidu.mapapi.map.BaiduMap,com.baidu.mapapi.map.Marker) -> a
    java.util.concurrent.locks.Lock q(com.baidu.mapapi.map.BaiduMap) -> q
    com.baidu.mapapi.map.HeatMap r(com.baidu.mapapi.map.BaiduMap) -> r
    com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback s(com.baidu.mapapi.map.BaiduMap) -> s
com.baidu.mapapi.map.BaiduMap$1 -> com.baidu.mapapi.map.BaiduMap$1:
    int[] a -> a
com.baidu.mapapi.map.BaiduMap$OnMapClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapClickListener:
    void onMapClick(com.baidu.mapapi.model.LatLng) -> onMapClick
    boolean onMapPoiClick(com.baidu.mapapi.map.MapPoi) -> onMapPoiClick
com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapDoubleClickListener:
    void onMapDoubleClick(com.baidu.mapapi.model.LatLng) -> onMapDoubleClick
com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback -> com.baidu.mapapi.map.BaiduMap$OnMapDrawFrameCallback:
    void onMapDrawFrame(javax.microedition.khronos.opengles.GL10,com.baidu.mapapi.map.MapStatus) -> onMapDrawFrame
com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback -> com.baidu.mapapi.map.BaiduMap$OnMapLoadedCallback:
    void onMapLoaded() -> onMapLoaded
com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener -> com.baidu.mapapi.map.BaiduMap$OnMapLongClickListener:
    void onMapLongClick(com.baidu.mapapi.model.LatLng) -> onMapLongClick
com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener -> com.baidu.mapapi.map.BaiduMap$OnMapStatusChangeListener:
    void onMapStatusChangeStart(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeStart
    void onMapStatusChange(com.baidu.mapapi.map.MapStatus) -> onMapStatusChange
    void onMapStatusChangeFinish(com.baidu.mapapi.map.MapStatus) -> onMapStatusChangeFinish
com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerClickListener:
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener -> com.baidu.mapapi.map.BaiduMap$OnMarkerDragListener:
    void onMarkerDrag(com.baidu.mapapi.map.Marker) -> onMarkerDrag
    void onMarkerDragEnd(com.baidu.mapapi.map.Marker) -> onMarkerDragEnd
    void onMarkerDragStart(com.baidu.mapapi.map.Marker) -> onMarkerDragStart
com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener -> com.baidu.mapapi.map.BaiduMap$OnMyLocationClickListener:
    boolean onMyLocationClick() -> onMyLocationClick
com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback -> com.baidu.mapapi.map.BaiduMap$SnapshotReadyCallback:
    void onSnapshotReady(android.graphics.Bitmap) -> onSnapshotReady
com.baidu.mapapi.map.BaiduMapOptions -> com.baidu.mapapi.map.BaiduMapOptions:
    com.baidu.mapapi.map.MapStatus a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.baidu.mapapi.map.BaiduMapOptions mapStatus(com.baidu.mapapi.map.MapStatus) -> mapStatus
    com.baidu.mapapi.map.BaiduMapOptions compassEnabled(boolean) -> compassEnabled
    com.baidu.mapapi.map.BaiduMapOptions mapType(int) -> mapType
    com.baidu.mapapi.map.BaiduMapOptions rotateGesturesEnabled(boolean) -> rotateGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scrollGesturesEnabled(boolean) -> scrollGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions overlookingGesturesEnabled(boolean) -> overlookingGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomControlsEnabled(boolean) -> zoomControlsEnabled
    com.baidu.mapapi.map.BaiduMapOptions zoomGesturesEnabled(boolean) -> zoomGesturesEnabled
    com.baidu.mapapi.map.BaiduMapOptions scaleControlEnabled(boolean) -> scaleControlEnabled
    com.baidu.platform.comapi.map.x a() -> a
com.baidu.mapapi.map.BitmapDescriptor -> com.baidu.mapapi.map.BitmapDescriptor:
    android.graphics.Bitmap a -> a
    android.graphics.Bitmap a(android.graphics.Bitmap,int,int) -> a
    byte[] a() -> a
    android.os.Bundle b() -> b
    void recycle() -> recycle
com.baidu.mapapi.map.BitmapDescriptorFactory -> com.baidu.mapapi.map.BitmapDescriptorFactory:
    com.baidu.mapapi.map.BitmapDescriptor fromAsset(java.lang.String) -> fromAsset
    com.baidu.mapapi.map.BitmapDescriptor fromBitmap(android.graphics.Bitmap) -> fromBitmap
    com.baidu.mapapi.map.BitmapDescriptor fromFile(java.lang.String) -> fromFile
    com.baidu.mapapi.map.BitmapDescriptor fromPath(java.lang.String) -> fromPath
    com.baidu.mapapi.map.BitmapDescriptor fromResource(int) -> fromResource
    com.baidu.mapapi.map.BitmapDescriptor fromView(android.view.View) -> fromView
com.baidu.mapapi.map.Circle -> com.baidu.mapapi.map.Circle:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.Stroke d -> d
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setFillColor(int) -> setFillColor
    void setRadius(int) -> setRadius
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.CircleOptions -> com.baidu.mapapi.map.CircleOptions:
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    com.baidu.mapapi.map.Stroke h -> h
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getFillColor() -> getFillColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.CircleOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.CircleOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.CircleOptions radius(int) -> radius
    com.baidu.mapapi.map.CircleOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.CircleOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.CircleOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.CircleOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Dot -> com.baidu.mapapi.map.Dot:
    com.baidu.mapapi.model.LatLng a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    void setCenter(com.baidu.mapapi.model.LatLng) -> setCenter
    void setColor(int) -> setColor
    void setRadius(int) -> setRadius
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.DotOptions -> com.baidu.mapapi.map.DotOptions:
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    int getColor() -> getColor
    int getRadius() -> getRadius
    com.baidu.mapapi.map.DotOptions center(com.baidu.mapapi.model.LatLng) -> center
    com.baidu.mapapi.map.DotOptions color(int) -> color
    com.baidu.mapapi.map.DotOptions radius(int) -> radius
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.DotOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.DotOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.DotOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Gradient -> com.baidu.mapapi.map.Gradient:
    int a -> a
    int[] b -> b
    float[] c -> c
    java.util.HashMap a() -> a
    int[] a(double) -> a
    int a(int,int,float) -> a
com.baidu.mapapi.map.Gradient$1 -> com.baidu.mapapi.map.Gradient$1:
com.baidu.mapapi.map.Gradient$a -> com.baidu.mapapi.map.Gradient$a:
    int b -> b
    int c -> c
    float d -> d
    com.baidu.mapapi.map.Gradient a -> a
    float a(com.baidu.mapapi.map.Gradient$a) -> a
    int b(com.baidu.mapapi.map.Gradient$a) -> b
    int c(com.baidu.mapapi.map.Gradient$a) -> c
com.baidu.mapapi.map.GroundOverlay -> com.baidu.mapapi.map.GroundOverlay:
    java.lang.String o -> o
    int a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    com.baidu.mapapi.model.LatLng c -> c
    int d -> d
    int e -> e
    float f -> f
    float g -> g
    com.baidu.mapapi.model.LatLngBounds h -> h
    float i -> i
    void setImage(com.baidu.mapapi.map.BitmapDescriptor) -> setImage
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setDimensions(int) -> setDimensions
    void setDimensions(int,int) -> setDimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setPositionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> setPositionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    void setTransparency(float) -> setTransparency
    float getTransparency() -> getTransparency
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.GroundOverlayOptions -> com.baidu.mapapi.map.GroundOverlayOptions:
    com.baidu.mapapi.map.BitmapDescriptor d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    float h -> h
    float i -> i
    com.baidu.mapapi.model.LatLngBounds j -> j
    float k -> k
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.GroundOverlayOptions image(com.baidu.mapapi.map.BitmapDescriptor) -> image
    com.baidu.mapapi.map.BitmapDescriptor getImage() -> getImage
    com.baidu.mapapi.map.GroundOverlayOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int) -> dimensions
    com.baidu.mapapi.map.GroundOverlayOptions dimensions(int,int) -> dimensions
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.baidu.mapapi.map.GroundOverlayOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.GroundOverlayOptions positionFromBounds(com.baidu.mapapi.model.LatLngBounds) -> positionFromBounds
    com.baidu.mapapi.model.LatLngBounds getBounds() -> getBounds
    com.baidu.mapapi.map.GroundOverlayOptions transparency(float) -> transparency
    float getTransparency() -> getTransparency
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.GroundOverlayOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.GroundOverlayOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.GroundOverlayOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.HeatMap -> com.baidu.mapapi.map.HeatMap:
    java.lang.String b -> b
    android.util.SparseIntArray c -> c
    int[] d -> d
    float[] e -> e
    com.baidu.mapapi.map.i f -> f
    java.util.Collection g -> g
    int h -> h
    com.baidu.mapapi.map.Gradient i -> i
    double j -> j
    com.baidu.mapapi.map.d k -> k
    int[] l -> l
    double[] m -> m
    double[] n -> n
    java.util.HashMap o -> o
    java.util.concurrent.ExecutorService p -> p
    java.util.HashSet q -> q
    com.baidu.mapapi.map.BaiduMap a -> a
    int DEFAULT_RADIUS -> DEFAULT_RADIUS
    double DEFAULT_OPACITY -> DEFAULT_OPACITY
    com.baidu.mapapi.map.Gradient DEFAULT_GRADIENT -> DEFAULT_GRADIENT
    void removeHeatMap() -> removeHeatMap
    void b(java.util.Collection) -> b
    java.util.Collection c(java.util.Collection) -> c
    com.baidu.mapapi.map.j a(int,int,int) -> a
    boolean a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a() -> a
    com.baidu.mapapi.map.j c(java.lang.String) -> c
    void a(java.lang.String,com.baidu.mapapi.map.j) -> a
    void d() -> d
    void b() -> b
    void c() -> c
    void b(int,int,int) -> b
    void a(com.baidu.mapapi.map.Gradient) -> a
    double[] a(int) -> a
    com.baidu.mapapi.map.j a(android.graphics.Bitmap) -> a
    com.baidu.mapapi.map.d d(java.util.Collection) -> d
    double[] a(int,double) -> a
    double[][] a(double[][],double[]) -> a
    android.graphics.Bitmap a(double[][],int[],double) -> a
    double a(java.util.Collection,com.baidu.mapapi.map.d,int,int) -> a
    java.util.Collection a(java.util.Collection) -> a
    void a(com.baidu.mapapi.map.HeatMap,int,int,int) -> a
com.baidu.mapapi.map.HeatMap$Builder -> com.baidu.mapapi.map.HeatMap$Builder:
    java.util.Collection a -> a
    int b -> b
    com.baidu.mapapi.map.Gradient c -> c
    double d -> d
    com.baidu.mapapi.map.HeatMap$Builder data(java.util.Collection) -> data
    com.baidu.mapapi.map.HeatMap$Builder weightedData(java.util.Collection) -> weightedData
    com.baidu.mapapi.map.HeatMap$Builder radius(int) -> radius
    com.baidu.mapapi.map.HeatMap$Builder gradient(com.baidu.mapapi.map.Gradient) -> gradient
    com.baidu.mapapi.map.HeatMap$Builder opacity(double) -> opacity
    com.baidu.mapapi.map.HeatMap build() -> build
    java.util.Collection a(com.baidu.mapapi.map.HeatMap$Builder) -> a
    int b(com.baidu.mapapi.map.HeatMap$Builder) -> b
    com.baidu.mapapi.map.Gradient c(com.baidu.mapapi.map.HeatMap$Builder) -> c
    double d(com.baidu.mapapi.map.HeatMap$Builder) -> d
com.baidu.mapapi.map.InfoWindow -> com.baidu.mapapi.map.InfoWindow:
    com.baidu.mapapi.map.BitmapDescriptor a -> a
    android.view.View b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener d -> d
    int e -> e
com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener -> com.baidu.mapapi.map.InfoWindow$OnInfoWindowClickListener:
    void onInfoWindowClick() -> onInfoWindowClick
com.baidu.mapapi.map.MapFragment -> com.baidu.mapapi.map.MapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.MapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.MapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.MapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.MapPoi -> com.baidu.mapapi.map.MapPoi:
    java.lang.String c -> c
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void a(org.json.JSONObject) -> a
com.baidu.mapapi.map.MapStatus -> com.baidu.mapapi.map.MapStatus:
    float rotate -> rotate
    com.baidu.mapapi.model.LatLng target -> target
    float overlook -> overlook
    float zoom -> zoom
    android.graphics.Point targetScreen -> targetScreen
    com.baidu.platform.comapi.map.y a -> a
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.y) -> a
    com.baidu.platform.comapi.map.y a() -> a
    com.baidu.platform.comapi.map.y b(com.baidu.platform.comapi.map.y) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.MapStatus$Builder -> com.baidu.mapapi.map.MapStatus$Builder:
    float a -> a
    com.baidu.mapapi.model.LatLng b -> b
    float c -> c
    float d -> d
    android.graphics.Point e -> e
    com.baidu.mapapi.map.MapStatus$Builder rotate(float) -> rotate
    com.baidu.mapapi.map.MapStatus$Builder target(com.baidu.mapapi.model.LatLng) -> target
    com.baidu.mapapi.map.MapStatus$Builder overlook(float) -> overlook
    com.baidu.mapapi.map.MapStatus$Builder zoom(float) -> zoom
    com.baidu.mapapi.map.MapStatus$Builder targetScreen(android.graphics.Point) -> targetScreen
    com.baidu.mapapi.map.MapStatus build() -> build
com.baidu.mapapi.map.MapStatusUpdate -> com.baidu.mapapi.map.MapStatusUpdate:
    java.lang.String l -> l
    int a -> a
    com.baidu.mapapi.map.MapStatus b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.model.LatLngBounds d -> d
    int e -> e
    int f -> f
    float g -> g
    int h -> h
    int i -> i
    float j -> j
    android.graphics.Point k -> k
    com.baidu.mapapi.map.MapStatus a(com.baidu.platform.comapi.map.e,com.baidu.mapapi.map.MapStatus) -> a
com.baidu.mapapi.map.MapStatusUpdateFactory -> com.baidu.mapapi.map.MapStatusUpdateFactory:
    com.baidu.mapapi.map.MapStatusUpdate newMapStatus(com.baidu.mapapi.map.MapStatus) -> newMapStatus
    com.baidu.mapapi.map.MapStatusUpdate newLatLng(com.baidu.mapapi.model.LatLng) -> newLatLng
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngBounds(com.baidu.mapapi.model.LatLngBounds,int,int) -> newLatLngBounds
    com.baidu.mapapi.map.MapStatusUpdate newLatLngZoom(com.baidu.mapapi.model.LatLng,float) -> newLatLngZoom
    com.baidu.mapapi.map.MapStatusUpdate scrollBy(int,int) -> scrollBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomBy(float,android.graphics.Point) -> zoomBy
    com.baidu.mapapi.map.MapStatusUpdate zoomIn() -> zoomIn
    com.baidu.mapapi.map.MapStatusUpdate zoomOut() -> zoomOut
    com.baidu.mapapi.map.MapStatusUpdate zoomTo(float) -> zoomTo
com.baidu.mapapi.map.MapView -> com.baidu.mapapi.map.MapView:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.e b -> b
    com.baidu.mapapi.map.BaiduMap c -> c
    android.widget.ImageView d -> d
    android.graphics.Bitmap e -> e
    android.widget.ZoomControls f -> f
    android.graphics.Point g -> g
    android.graphics.Point h -> h
    android.widget.RelativeLayout i -> i
    android.widget.TextView j -> j
    android.widget.TextView k -> k
    android.widget.ImageView l -> l
    android.util.SparseArray m -> m
    float n -> n
    com.baidu.platform.comapi.map.g o -> o
    void a(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> a
    void b(android.content.Context,com.baidu.mapapi.map.BaiduMapOptions) -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void b() -> b
    void c(android.content.Context) -> c
    com.baidu.mapapi.map.BaiduMap getMap() -> getMap
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void a(android.view.View) -> a
    void showZoomControls(boolean) -> showZoomControls
    void setZoomControlsPosition(android.graphics.Point) -> setZoomControlsPosition
    void showScaleControl(boolean) -> showScaleControl
    void setScaleControlPosition(android.graphics.Point) -> setScaleControlPosition
    com.baidu.platform.comapi.map.e a(com.baidu.mapapi.map.MapView) -> a
    float b(com.baidu.mapapi.map.MapView) -> b
    android.util.SparseArray a() -> a
    android.widget.ImageView c(com.baidu.mapapi.map.MapView) -> c
    android.widget.TextView d(com.baidu.mapapi.map.MapView) -> d
    android.widget.TextView e(com.baidu.mapapi.map.MapView) -> e
    float a(com.baidu.mapapi.map.MapView,float) -> a
    void f(com.baidu.mapapi.map.MapView) -> f
com.baidu.mapapi.map.MapViewLayoutParams -> com.baidu.mapapi.map.MapViewLayoutParams:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    com.baidu.mapapi.model.LatLng a -> a
    android.graphics.Point b -> b
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode c -> c
    float d -> d
    float e -> e
    int f -> f
com.baidu.mapapi.map.MapViewLayoutParams$Builder -> com.baidu.mapapi.map.MapViewLayoutParams$Builder:
    int a -> a
    int b -> b
    com.baidu.mapapi.model.LatLng c -> c
    android.graphics.Point d -> d
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode e -> e
    int f -> f
    int g -> g
    int h -> h
    com.baidu.mapapi.map.MapViewLayoutParams build() -> build
    com.baidu.mapapi.map.MapViewLayoutParams$Builder width(int) -> width
    com.baidu.mapapi.map.MapViewLayoutParams$Builder height(int) -> height
    com.baidu.mapapi.map.MapViewLayoutParams$Builder align(int,int) -> align
    com.baidu.mapapi.map.MapViewLayoutParams$Builder position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.MapViewLayoutParams$Builder point(android.graphics.Point) -> point
    com.baidu.mapapi.map.MapViewLayoutParams$Builder layoutMode(com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode) -> layoutMode
    com.baidu.mapapi.map.MapViewLayoutParams$Builder yOffset(int) -> yOffset
com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode -> com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode:
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode mapMode -> mapMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode absoluteMode -> absoluteMode
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] $VALUES -> $VALUES
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode[] values() -> values
    com.baidu.mapapi.map.MapViewLayoutParams$ELayoutMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.Marker -> com.baidu.mapapi.map.Marker:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.map.BitmapDescriptor b -> b
    float c -> c
    float d -> d
    boolean e -> e
    boolean f -> f
    float g -> g
    java.lang.String h -> h
    int i -> i
    void setIcon(com.baidu.mapapi.map.BitmapDescriptor) -> setIcon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    void setPerspective(boolean) -> setPerspective
    boolean isPerspective() -> isPerspective
    void setDraggable(boolean) -> setDraggable
    boolean isDraggable() -> isDraggable
    void setAnchor(float,float) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    void setRotate(float) -> setRotate
    float getRotate() -> getRotate
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.MarkerOptions -> com.baidu.mapapi.map.MarkerOptions:
    com.baidu.mapapi.model.LatLng d -> d
    com.baidu.mapapi.map.BitmapDescriptor e -> e
    float f -> f
    float g -> g
    boolean h -> h
    boolean i -> i
    float j -> j
    java.lang.String k -> k
    int l -> l
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    com.baidu.mapapi.map.MarkerOptions icon(com.baidu.mapapi.map.BitmapDescriptor) -> icon
    com.baidu.mapapi.map.BitmapDescriptor getIcon() -> getIcon
    com.baidu.mapapi.map.MarkerOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    com.baidu.mapapi.map.MarkerOptions perspective(boolean) -> perspective
    boolean isPerspective() -> isPerspective
    com.baidu.mapapi.map.MarkerOptions a(int) -> a
    com.baidu.mapapi.map.MarkerOptions draggable(boolean) -> draggable
    boolean isDraggable() -> isDraggable
    com.baidu.mapapi.map.MarkerOptions anchor(float,float) -> anchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
    com.baidu.mapapi.map.MarkerOptions rotate(float) -> rotate
    float getRotate() -> getRotate
    com.baidu.mapapi.map.MarkerOptions title(java.lang.String) -> title
    java.lang.String getTitle() -> getTitle
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.MarkerOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.MarkerOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.MarkerOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.MyLocationConfiguration -> com.baidu.mapapi.map.MyLocationConfiguration:
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode locationMode -> locationMode
    boolean enableDirection -> enableDirection
    com.baidu.mapapi.map.BitmapDescriptor customMarker -> customMarker
com.baidu.mapapi.map.MyLocationConfiguration$LocationMode -> com.baidu.mapapi.map.MyLocationConfiguration$LocationMode:
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode NORMAL -> NORMAL
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode FOLLOWING -> FOLLOWING
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode COMPASS -> COMPASS
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] a -> a
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode[] values() -> values
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.map.MyLocationData -> com.baidu.mapapi.map.MyLocationData:
    double latitude -> latitude
    double longitude -> longitude
    float speed -> speed
    float direction -> direction
    float accuracy -> accuracy
    int satellitesNum -> satellitesNum
com.baidu.mapapi.map.MyLocationData$Builder -> com.baidu.mapapi.map.MyLocationData$Builder:
    double a -> a
    double b -> b
    float c -> c
    float d -> d
    float e -> e
    int f -> f
    com.baidu.mapapi.map.MyLocationData$Builder latitude(double) -> latitude
    com.baidu.mapapi.map.MyLocationData$Builder longitude(double) -> longitude
    com.baidu.mapapi.map.MyLocationData$Builder speed(float) -> speed
    com.baidu.mapapi.map.MyLocationData$Builder direction(float) -> direction
    com.baidu.mapapi.map.MyLocationData$Builder accuracy(float) -> accuracy
    com.baidu.mapapi.map.MyLocationData$Builder satellitesNum(int) -> satellitesNum
    com.baidu.mapapi.map.MyLocationData build() -> build
com.baidu.mapapi.map.Overlay -> com.baidu.mapapi.map.Overlay:
    java.lang.String j -> j
    com.baidu.platform.comapi.map.d k -> k
    int l -> l
    boolean m -> m
    android.os.Bundle n -> n
    com.baidu.mapapi.map.Overlay$a listener -> listener
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    int getZIndex() -> getZIndex
    void setZIndex(int) -> setZIndex
    android.os.Bundle getExtraInfo() -> getExtraInfo
    void setExtraInfo(android.os.Bundle) -> setExtraInfo
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
    void remove() -> remove
    void a(int,android.os.Bundle) -> a
    void a(java.util.List,android.os.Bundle) -> a
com.baidu.mapapi.map.Overlay$a -> com.baidu.mapapi.map.Overlay$a:
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.OverlayOptions -> com.baidu.mapapi.map.OverlayOptions:
    com.baidu.mapapi.map.Overlay a() -> a
com.baidu.mapapi.map.Polygon -> com.baidu.mapapi.map.Polygon:
    com.baidu.mapapi.map.Stroke a -> a
    int b -> b
    java.util.List c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    void setFillColor(int) -> setFillColor
    void setPoints(java.util.List) -> setPoints
    void setStroke(com.baidu.mapapi.map.Stroke) -> setStroke
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolygonOptions -> com.baidu.mapapi.map.PolygonOptions:
    com.baidu.mapapi.map.Stroke d -> d
    int e -> e
    java.util.List f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getFillColor() -> getFillColor
    java.util.List getPoints() -> getPoints
    com.baidu.mapapi.map.Stroke getStroke() -> getStroke
    com.baidu.mapapi.map.PolygonOptions fillColor(int) -> fillColor
    com.baidu.mapapi.map.PolygonOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolygonOptions stroke(com.baidu.mapapi.map.Stroke) -> stroke
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolygonOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolygonOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolygonOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Polyline -> com.baidu.mapapi.map.Polyline:
    int a -> a
    java.util.List b -> b
    int c -> c
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    void setColor(int) -> setColor
    void setPoints(java.util.List) -> setPoints
    void setWidth(int) -> setWidth
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.PolylineOptions -> com.baidu.mapapi.map.PolylineOptions:
    int d -> d
    java.util.List e -> e
    int f -> f
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    int getColor() -> getColor
    java.util.List getPoints() -> getPoints
    int getWidth() -> getWidth
    com.baidu.mapapi.map.PolylineOptions color(int) -> color
    com.baidu.mapapi.map.PolylineOptions points(java.util.List) -> points
    com.baidu.mapapi.map.PolylineOptions width(int) -> width
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.PolylineOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.PolylineOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.PolylineOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.Projection -> com.baidu.mapapi.map.Projection:
    com.baidu.platform.comapi.map.e a -> a
    com.baidu.mapapi.model.LatLng fromScreenLocation(android.graphics.Point) -> fromScreenLocation
    android.graphics.Point toScreenLocation(com.baidu.mapapi.model.LatLng) -> toScreenLocation
    android.graphics.PointF toOpenGLLocation(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.map.MapStatus) -> toOpenGLLocation
    float metersToEquatorPixels(float) -> metersToEquatorPixels
com.baidu.mapapi.map.Stroke -> com.baidu.mapapi.map.Stroke:
    int strokeWidth -> strokeWidth
    int color -> color
    android.os.Bundle a(android.os.Bundle) -> a
com.baidu.mapapi.map.SupportMapFragment -> com.baidu.mapapi.map.SupportMapFragment:
    java.lang.String a -> a
    com.baidu.mapapi.map.MapView b -> b
    com.baidu.mapapi.map.BaiduMapOptions c -> c
    com.baidu.mapapi.map.SupportMapFragment newInstance() -> newInstance
    com.baidu.mapapi.map.SupportMapFragment newInstance(com.baidu.mapapi.map.BaiduMapOptions) -> newInstance
    com.baidu.mapapi.map.BaiduMap getBaiduMap() -> getBaiduMap
    com.baidu.mapapi.map.MapView getMapView() -> getMapView
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void onDetach() -> onDetach
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.mapapi.map.Text -> com.baidu.mapapi.map.Text:
    java.lang.String p -> p
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    int d -> d
    int e -> e
    android.graphics.Typeface f -> f
    int g -> g
    int h -> h
    float i -> i
    int o -> o
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    void setText(java.lang.String) -> setText
    void setPosition(com.baidu.mapapi.model.LatLng) -> setPosition
    void setBgColor(int) -> setBgColor
    void setFontColor(int) -> setFontColor
    void setFontSize(int) -> setFontSize
    void setTypeface(android.graphics.Typeface) -> setTypeface
    void setAlign(int,int) -> setAlign
    void setRotate(float) -> setRotate
    android.os.Bundle a(android.os.Bundle) -> a
    android.os.Bundle a() -> a
com.baidu.mapapi.map.TextOptions -> com.baidu.mapapi.map.TextOptions:
    int ALIGN_LEFT -> ALIGN_LEFT
    int ALIGN_RIGHT -> ALIGN_RIGHT
    int ALIGN_CENTER_HORIZONTAL -> ALIGN_CENTER_HORIZONTAL
    int ALIGN_TOP -> ALIGN_TOP
    int ALIGN_BOTTOM -> ALIGN_BOTTOM
    int ALIGN_CENTER_VERTICAL -> ALIGN_CENTER_VERTICAL
    java.lang.String d -> d
    com.baidu.mapapi.model.LatLng e -> e
    int f -> f
    int g -> g
    int h -> h
    android.graphics.Typeface i -> i
    int j -> j
    int k -> k
    float l -> l
    int a -> a
    boolean b -> b
    android.os.Bundle c -> c
    java.lang.String getText() -> getText
    com.baidu.mapapi.model.LatLng getPosition() -> getPosition
    int getBgColor() -> getBgColor
    int getFontColor() -> getFontColor
    int getFontSize() -> getFontSize
    android.graphics.Typeface getTypeface() -> getTypeface
    float getAlignX() -> getAlignX
    float getAlignY() -> getAlignY
    float getRotate() -> getRotate
    com.baidu.mapapi.map.TextOptions text(java.lang.String) -> text
    com.baidu.mapapi.map.TextOptions position(com.baidu.mapapi.model.LatLng) -> position
    com.baidu.mapapi.map.TextOptions bgColor(int) -> bgColor
    com.baidu.mapapi.map.TextOptions fontColor(int) -> fontColor
    com.baidu.mapapi.map.TextOptions fontSize(int) -> fontSize
    com.baidu.mapapi.map.TextOptions typeface(android.graphics.Typeface) -> typeface
    com.baidu.mapapi.map.TextOptions align(int,int) -> align
    com.baidu.mapapi.map.TextOptions rotate(float) -> rotate
    com.baidu.mapapi.map.Overlay a() -> a
    com.baidu.mapapi.map.TextOptions visible(boolean) -> visible
    boolean isVisible() -> isVisible
    com.baidu.mapapi.map.TextOptions zIndex(int) -> zIndex
    int getZIndex() -> getZIndex
    com.baidu.mapapi.map.TextOptions extraInfo(android.os.Bundle) -> extraInfo
    android.os.Bundle getExtraInfo() -> getExtraInfo
com.baidu.mapapi.map.UiSettings -> com.baidu.mapapi.map.UiSettings:
    com.baidu.platform.comapi.map.e a -> a
    boolean isCompassEnabled() -> isCompassEnabled
    boolean isRotateGesturesEnabled() -> isRotateGesturesEnabled
    boolean isScrollGesturesEnabled() -> isScrollGesturesEnabled
    boolean isOverlookingGesturesEnabled() -> isOverlookingGesturesEnabled
    boolean isZoomGesturesEnabled() -> isZoomGesturesEnabled
    void setAllGesturesEnabled(boolean) -> setAllGesturesEnabled
    void setCompassEnabled(boolean) -> setCompassEnabled
    void setCompassPosition(android.graphics.Point) -> setCompassPosition
    void setRotateGesturesEnabled(boolean) -> setRotateGesturesEnabled
    void setScrollGesturesEnabled(boolean) -> setScrollGesturesEnabled
    void setOverlookingGesturesEnabled(boolean) -> setOverlookingGesturesEnabled
    void setZoomGesturesEnabled(boolean) -> setZoomGesturesEnabled
com.baidu.mapapi.map.WeightedLatLng -> com.baidu.mapapi.map.WeightedLatLng:
    android.graphics.Point a -> a
    double DEFAULT_INTENSITY -> DEFAULT_INTENSITY
    double intensity -> intensity
    com.baidu.mapapi.model.LatLng latLng -> latLng
    android.graphics.Point a() -> a
com.baidu.mapapi.map.a -> com.baidu.mapapi.map.a:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a(com.baidu.mapapi.map.Overlay) -> a
    void b(com.baidu.mapapi.map.Overlay) -> b
com.baidu.mapapi.map.b -> com.baidu.mapapi.map.b:
    com.baidu.mapapi.map.BaiduMap a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.map.y) -> a
    void b(com.baidu.platform.comapi.map.y) -> b
    void c(com.baidu.platform.comapi.map.y) -> c
    void a(com.baidu.platform.comapi.a.b) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.platform.comapi.a.b) -> d
    void e(com.baidu.platform.comapi.a.b) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.y) -> a
    void d() -> d
    void e() -> e
com.baidu.mapapi.map.c -> com.baidu.mapapi.map.c:
    com.baidu.mapapi.map.BaiduMap a -> a
    android.os.Bundle a(int,int,int) -> a
com.baidu.mapapi.map.d -> com.baidu.mapapi.map.d:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    boolean a(double,double) -> a
    boolean a(android.graphics.Point) -> a
    boolean a(double,double,double,double) -> a
    boolean a(com.baidu.mapapi.map.d) -> a
    boolean b(com.baidu.mapapi.map.d) -> b
    java.lang.String toString() -> toString
com.baidu.mapapi.map.e -> com.baidu.mapapi.map.e:
    int a -> a
    int b -> b
    int c -> c
    com.baidu.mapapi.map.HeatMap d -> d
    void run() -> run
com.baidu.mapapi.map.f -> com.baidu.mapapi.map.f:
    com.baidu.mapapi.map.MapView a -> a
    void a() -> a
    void a(com.baidu.platform.comapi.a.b) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(com.baidu.platform.comapi.map.y) -> a
    void b(com.baidu.platform.comapi.map.y) -> b
    void c(com.baidu.platform.comapi.map.y) -> c
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void d(com.baidu.platform.comapi.a.b) -> d
    void e(com.baidu.platform.comapi.a.b) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.y) -> a
    void d() -> d
    void e() -> e
com.baidu.mapapi.map.g -> com.baidu.mapapi.map.g:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.h -> com.baidu.mapapi.map.h:
    com.baidu.mapapi.map.MapView a -> a
    void onClick(android.view.View) -> onClick
com.baidu.mapapi.map.i -> com.baidu.mapapi.map.i:
    com.baidu.mapapi.map.d a -> a
    int b -> b
    java.util.List c -> c
    java.util.List d -> d
    void a(com.baidu.mapapi.map.i$a) -> a
    void a(double,double,com.baidu.mapapi.map.i$a) -> a
    void a() -> a
    java.util.Collection a(com.baidu.mapapi.map.d) -> a
    void a(com.baidu.mapapi.map.d,java.util.Collection) -> a
com.baidu.mapapi.map.i$a -> com.baidu.mapapi.map.i$a:
    android.graphics.Point a() -> a
com.baidu.mapapi.map.j -> com.baidu.mapapi.map.j:
    byte[] a -> a
    int b -> b
    int c -> c
    android.os.Bundle a() -> a
com.baidu.mapapi.map.offline.MKOLSearchRecord -> com.baidu.mapapi.map.offline.MKOLSearchRecord:
    int cityID -> cityID
    int size -> size
    java.lang.String cityName -> cityName
    int cityType -> cityType
    java.util.ArrayList childCities -> childCities
com.baidu.mapapi.map.offline.MKOLUpdateElement -> com.baidu.mapapi.map.offline.MKOLUpdateElement:
    int UNDEFINED -> UNDEFINED
    int DOWNLOADING -> DOWNLOADING
    int WAITING -> WAITING
    int SUSPENDED -> SUSPENDED
    int FINISHED -> FINISHED
    int eOLDSMd5Error -> eOLDSMd5Error
    int eOLDSNetError -> eOLDSNetError
    int eOLDSIOError -> eOLDSIOError
    int eOLDSWifiError -> eOLDSWifiError
    int eOLDSMissData -> eOLDSMissData
    int cityID -> cityID
    java.lang.String cityName -> cityName
    int ratio -> ratio
    int status -> status
    com.baidu.mapapi.model.LatLng geoPt -> geoPt
    int size -> size
    int serversize -> serversize
    int level -> level
    boolean update -> update
com.baidu.mapapi.map.offline.MKOfflineMap -> com.baidu.mapapi.map.offline.MKOfflineMap:
    java.lang.String a -> a
    int TYPE_NEW_OFFLINE -> TYPE_NEW_OFFLINE
    int TYPE_DOWNLOAD_UPDATE -> TYPE_DOWNLOAD_UPDATE
    int TYPE_VER_UPDATE -> TYPE_VER_UPDATE
    com.baidu.platform.comapi.map.p b -> b
    com.baidu.mapapi.map.offline.MKOfflineMapListener c -> c
    boolean init(com.baidu.mapapi.map.offline.MKOfflineMapListener) -> init
    boolean start(int) -> start
    boolean pause(int) -> pause
    void destroy() -> destroy
    boolean remove(int) -> remove
    java.util.ArrayList getHotCityList() -> getHotCityList
    java.util.ArrayList getOfflineCityList() -> getOfflineCityList
    java.util.ArrayList searchCity(java.lang.String) -> searchCity
    java.util.ArrayList getAllUpdateInfo() -> getAllUpdateInfo
    com.baidu.mapapi.map.offline.MKOLUpdateElement getUpdateInfo(int) -> getUpdateInfo
    int importOfflineData() -> importOfflineData
    int importOfflineData(boolean) -> importOfflineData
    com.baidu.mapapi.map.offline.MKOfflineMapListener a(com.baidu.mapapi.map.offline.MKOfflineMap) -> a
com.baidu.mapapi.map.offline.MKOfflineMapListener -> com.baidu.mapapi.map.offline.MKOfflineMapListener:
    void onGetOfflineMapState(int,int) -> onGetOfflineMapState
com.baidu.mapapi.map.offline.a -> com.baidu.mapapi.map.offline.a:
    com.baidu.mapapi.map.offline.MKOfflineMap a -> a
    void a(int,int) -> a
com.baidu.mapapi.model.LatLng -> com.baidu.mapapi.model.LatLng:
    java.lang.String a -> a
    double latitude -> latitude
    double longitude -> longitude
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds -> com.baidu.mapapi.model.LatLngBounds:
    com.baidu.mapapi.model.LatLng northeast -> northeast
    com.baidu.mapapi.model.LatLng southwest -> southwest
    boolean contains(com.baidu.mapapi.model.LatLng) -> contains
    com.baidu.mapapi.model.LatLng getCenter() -> getCenter
    java.lang.String toString() -> toString
com.baidu.mapapi.model.LatLngBounds$Builder -> com.baidu.mapapi.model.LatLngBounds$Builder:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    boolean e -> e
    com.baidu.mapapi.model.LatLngBounds build() -> build
    com.baidu.mapapi.model.LatLngBounds$Builder include(com.baidu.mapapi.model.LatLng) -> include
com.baidu.mapapi.model.a -> com.baidu.mapapi.model.a:
    android.os.Bundle a -> a
    double[] b -> b
    double[] c -> c
    double[][] d -> d
    double[][] e -> e
    com.baidu.mapapi.model.a$a a(com.baidu.mapapi.model.a$a,double[]) -> a
    com.baidu.mapapi.model.LatLng a(com.baidu.platform.comapi.a.b) -> a
    com.baidu.platform.comapi.a.b a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.platform.comapi.a.d b(com.baidu.mapapi.model.LatLng) -> b
    int a(com.baidu.mapapi.model.LatLng,int) -> a
    com.baidu.mapapi.model.LatLng a(java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(java.lang.String) -> b
    java.util.List c(java.lang.String) -> c
    com.baidu.platform.comapi.a.d a(float,float,java.lang.String) -> a
    java.util.List d(java.lang.String) -> d
com.baidu.mapapi.model.a$a -> com.baidu.mapapi.model.a$a:
    double a -> a
    double b -> b
com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException -> com.baidu.mapapi.navi.BaiduMapAppNotSupportNaviException:
com.baidu.mapapi.navi.BaiduMapNavigation -> com.baidu.mapapi.navi.BaiduMapNavigation:
    int a(android.content.Context) -> a
    void openBaiduMapNavi(com.baidu.mapapi.navi.NaviPara,android.content.Context) -> openBaiduMapNavi
    void openWebBaiduMapNavi(com.baidu.mapapi.navi.NaviPara,android.content.Context) -> openWebBaiduMapNavi
    java.lang.String a(com.baidu.mapapi.navi.NaviPara) -> a
    void getLatestBaiduMapApp(android.content.Context) -> getLatestBaiduMapApp
    java.lang.String b(android.content.Context) -> b
com.baidu.mapapi.navi.IllegalNaviArgumentException -> com.baidu.mapapi.navi.IllegalNaviArgumentException:
com.baidu.mapapi.navi.NaviPara -> com.baidu.mapapi.navi.NaviPara:
    com.baidu.mapapi.model.LatLng startPoint -> startPoint
    java.lang.String startName -> startName
    com.baidu.mapapi.model.LatLng endPoint -> endPoint
    java.lang.String endName -> endName
com.baidu.mapapi.overlayutil.BusLineOverlay -> com.baidu.mapapi.overlayutil.BusLineOverlay:
    com.baidu.mapapi.search.busline.BusLineResult c -> c
    void setData(com.baidu.mapapi.search.busline.BusLineResult) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    boolean onBusStationClick(int) -> onBusStationClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.DrivingRouteOverlay -> com.baidu.mapapi.overlayutil.DrivingRouteOverlay:
    com.baidu.mapapi.search.route.DrivingRouteLine c -> c
    java.util.List getOverlayOptions() -> getOverlayOptions
    void setData(com.baidu.mapapi.search.route.DrivingRouteLine) -> setData
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.OverlayManager -> com.baidu.mapapi.overlayutil.OverlayManager:
    com.baidu.mapapi.map.BaiduMap a -> a
    java.util.List c -> c
    java.util.List b -> b
    java.util.List getOverlayOptions() -> getOverlayOptions
    void addToMap() -> addToMap
    void removeFromMap() -> removeFromMap
    void zoomToSpan() -> zoomToSpan
com.baidu.mapapi.overlayutil.PoiOverlay -> com.baidu.mapapi.overlayutil.PoiOverlay:
    com.baidu.mapapi.search.poi.PoiResult c -> c
    void setData(com.baidu.mapapi.search.poi.PoiResult) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.search.poi.PoiResult getPoiResult() -> getPoiResult
    boolean onPoiClick(int) -> onPoiClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.TransitRouteOverlay -> com.baidu.mapapi.overlayutil.TransitRouteOverlay:
    com.baidu.mapapi.search.route.TransitRouteLine c -> c
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.map.BitmapDescriptor a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep) -> a
    void setData(com.baidu.mapapi.search.route.TransitRouteLine) -> setData
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.overlayutil.TransitRouteOverlay$1 -> com.baidu.mapapi.overlayutil.TransitRouteOverlay$1:
    int[] a -> a
com.baidu.mapapi.overlayutil.WalkingRouteOverlay -> com.baidu.mapapi.overlayutil.WalkingRouteOverlay:
    com.baidu.mapapi.search.route.WalkingRouteLine c -> c
    void setData(com.baidu.mapapi.search.route.WalkingRouteLine) -> setData
    java.util.List getOverlayOptions() -> getOverlayOptions
    com.baidu.mapapi.map.BitmapDescriptor getStartMarker() -> getStartMarker
    com.baidu.mapapi.map.BitmapDescriptor getTerminalMarker() -> getTerminalMarker
    boolean onRouteNodeClick(int) -> onRouteNodeClick
    boolean onMarkerClick(com.baidu.mapapi.map.Marker) -> onMarkerClick
com.baidu.mapapi.search.busline.BusLineResult -> com.baidu.mapapi.search.busline.BusLineResult:
    java.lang.String a -> a
    java.lang.String b -> b
    boolean c -> c
    java.util.Date d -> d
    java.util.Date e -> e
    java.lang.String f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.lang.String getBusCompany() -> getBusCompany
    java.lang.String getBusLineName() -> getBusLineName
    void a(java.lang.String) -> a
    boolean isMonthTicket() -> isMonthTicket
    void a(boolean) -> a
    java.util.Date getStartTime() -> getStartTime
    void a(java.util.Date) -> a
    java.util.Date getEndTime() -> getEndTime
    void b(java.util.Date) -> b
    java.util.List getStations() -> getStations
    void a(java.util.List) -> a
    java.util.List getSteps() -> getSteps
    void b(java.util.List) -> b
    java.lang.String getUid() -> getUid
    void b(java.lang.String) -> b
com.baidu.mapapi.search.busline.BusLineResult$BusStation -> com.baidu.mapapi.search.busline.BusLineResult$BusStation:
com.baidu.mapapi.search.busline.BusLineResult$BusStep -> com.baidu.mapapi.search.busline.BusLineResult$BusStep:
com.baidu.mapapi.search.busline.BusLineSearch -> com.baidu.mapapi.search.busline.BusLineSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.busline.BusLineSearch newInstance() -> newInstance
    boolean searchBusLine(com.baidu.mapapi.search.busline.BusLineSearchOption) -> searchBusLine
    void setOnGetBusLineSearchResultListener(com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener) -> setOnGetBusLineSearchResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.busline.BusLineSearch) -> a
    com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener b(com.baidu.mapapi.search.busline.BusLineSearch) -> b
com.baidu.mapapi.search.busline.BusLineSearch$1 -> com.baidu.mapapi.search.busline.BusLineSearch$1:
com.baidu.mapapi.search.busline.BusLineSearch$a -> com.baidu.mapapi.search.busline.BusLineSearch$a:
    com.baidu.mapapi.search.busline.BusLineSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.busline.BusLineSearchOption -> com.baidu.mapapi.search.busline.BusLineSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.busline.BusLineSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.busline.BusLineSearchOption uid(java.lang.String) -> uid
com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener -> com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener:
    void onGetBusLineResult(com.baidu.mapapi.search.busline.BusLineResult) -> onGetBusLineResult
com.baidu.mapapi.search.busline.a -> com.baidu.mapapi.search.busline.a:
    com.baidu.mapapi.search.busline.BusLineResult a(java.lang.String) -> a
com.baidu.mapapi.search.core.CityInfo -> com.baidu.mapapi.search.core.CityInfo:
    java.lang.String city -> city
    int num -> num
com.baidu.mapapi.search.core.PoiInfo -> com.baidu.mapapi.search.core.PoiInfo:
    java.lang.String name -> name
    java.lang.String uid -> uid
    java.lang.String address -> address
    java.lang.String city -> city
    java.lang.String phoneNum -> phoneNum
    java.lang.String postCode -> postCode
    com.baidu.mapapi.search.core.PoiInfo$POITYPE type -> type
    com.baidu.mapapi.model.LatLng location -> location
    boolean hasCaterDetails -> hasCaterDetails
    boolean isPano -> isPano
com.baidu.mapapi.search.core.PoiInfo$POITYPE -> com.baidu.mapapi.search.core.PoiInfo$POITYPE:
    com.baidu.mapapi.search.core.PoiInfo$POITYPE POINT -> POINT
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_STATION -> BUS_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE BUS_LINE -> BUS_LINE
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_STATION -> SUBWAY_STATION
    com.baidu.mapapi.search.core.PoiInfo$POITYPE SUBWAY_LINE -> SUBWAY_LINE
    int a -> a
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.PoiInfo$POITYPE[] values() -> values
    com.baidu.mapapi.search.core.PoiInfo$POITYPE valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
    com.baidu.mapapi.search.core.PoiInfo$POITYPE fromInt(int) -> fromInt
com.baidu.mapapi.search.core.RouteLine -> com.baidu.mapapi.search.core.RouteLine:
    com.baidu.mapapi.search.core.RouteNode a -> a
    com.baidu.mapapi.search.core.RouteNode b -> b
    java.lang.String c -> c
    java.util.List d -> d
    int e -> e
    int f -> f
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    com.baidu.mapapi.search.core.RouteNode getStarting() -> getStarting
    void setStarting(com.baidu.mapapi.search.core.RouteNode) -> setStarting
    com.baidu.mapapi.search.core.RouteNode getTerminal() -> getTerminal
    void setTerminal(com.baidu.mapapi.search.core.RouteNode) -> setTerminal
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void setSteps(java.util.List) -> setSteps
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.core.RouteNode -> com.baidu.mapapi.search.core.RouteNode:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.core.RouteNode titleAndLocation(java.lang.String,com.baidu.mapapi.model.LatLng) -> titleAndLocation
    com.baidu.mapapi.search.core.RouteNode location(com.baidu.mapapi.model.LatLng) -> location
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void setLocation(com.baidu.mapapi.model.LatLng) -> setLocation
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
com.baidu.mapapi.search.core.RouteStep -> com.baidu.mapapi.search.core.RouteStep:
    int a -> a
    int b -> b
    java.util.List mWayPoints -> mWayPoints
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    java.util.List getWayPoints() -> getWayPoints
    void setWayPoints(java.util.List) -> setWayPoints
com.baidu.mapapi.search.core.SearchResult -> com.baidu.mapapi.search.core.SearchResult:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO error -> error
com.baidu.mapapi.search.core.SearchResult$ERRORNO -> com.baidu.mapapi.search.core.SearchResult$ERRORNO:
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NO_ERROR -> NO_ERROR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO RESULT_NOT_FOUND -> RESULT_NOT_FOUND
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_KEYWORD -> AMBIGUOUS_KEYWORD
    com.baidu.mapapi.search.core.SearchResult$ERRORNO AMBIGUOUS_ROURE_ADDR -> AMBIGUOUS_ROURE_ADDR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS -> NOT_SUPPORT_BUS
    com.baidu.mapapi.search.core.SearchResult$ERRORNO NOT_SUPPORT_BUS_2CITY -> NOT_SUPPORT_BUS_2CITY
    com.baidu.mapapi.search.core.SearchResult$ERRORNO ST_EN_TOO_NEAR -> ST_EN_TOO_NEAR
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] $VALUES -> $VALUES
    com.baidu.mapapi.search.core.SearchResult$ERRORNO[] values() -> values
    com.baidu.mapapi.search.core.SearchResult$ERRORNO valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.core.TaxiInfo -> com.baidu.mapapi.search.core.TaxiInfo:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    int e -> e
    int getTotalPrice() -> getTotalPrice
    void setTotalPrice(int) -> setTotalPrice
    java.lang.String getDesc() -> getDesc
    void setDesc(java.lang.String) -> setDesc
    int getDistance() -> getDistance
    void setDistance(int) -> setDistance
    int getDuration() -> getDuration
    void setDuration(int) -> setDuration
    int getPerKMPrice() -> getPerKMPrice
    void setPerKMPrice(int) -> setPerKMPrice
com.baidu.mapapi.search.core.VehicleInfo -> com.baidu.mapapi.search.core.VehicleInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    int getPassStationNum() -> getPassStationNum
    void setPassStationNum(int) -> setPassStationNum
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    int getZonePrice() -> getZonePrice
    void setZonePrice(int) -> setZonePrice
    int getTotalPrice() -> getTotalPrice
    void setTotalPrice(int) -> setTotalPrice
com.baidu.mapapi.search.geocode.GeoCodeOption -> com.baidu.mapapi.search.geocode.GeoCodeOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.GeoCodeOption city(java.lang.String) -> city
    com.baidu.mapapi.search.geocode.GeoCodeOption address(java.lang.String) -> address
com.baidu.mapapi.search.geocode.GeoCodeResult -> com.baidu.mapapi.search.geocode.GeoCodeResult:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.lang.String getAddress() -> getAddress
    void setAddress(java.lang.String) -> setAddress
com.baidu.mapapi.search.geocode.GeoCoder -> com.baidu.mapapi.search.geocode.GeoCoder:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.geocode.GeoCoder newInstance() -> newInstance
    boolean geocode(com.baidu.mapapi.search.geocode.GeoCodeOption) -> geocode
    boolean reverseGeoCode(com.baidu.mapapi.search.geocode.ReverseGeoCodeOption) -> reverseGeoCode
    void setOnGetGeoCodeResultListener(com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener) -> setOnGetGeoCodeResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.geocode.GeoCoder) -> a
    com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener b(com.baidu.mapapi.search.geocode.GeoCoder) -> b
    int c(com.baidu.mapapi.search.geocode.GeoCoder) -> c
com.baidu.mapapi.search.geocode.GeoCoder$1 -> com.baidu.mapapi.search.geocode.GeoCoder$1:
com.baidu.mapapi.search.geocode.GeoCoder$a -> com.baidu.mapapi.search.geocode.GeoCoder$a:
    com.baidu.mapapi.search.geocode.GeoCoder a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener -> com.baidu.mapapi.search.geocode.OnGetGeoCoderResultListener:
    void onGetGeoCodeResult(com.baidu.mapapi.search.geocode.GeoCodeResult) -> onGetGeoCodeResult
    void onGetReverseGeoCodeResult(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult) -> onGetReverseGeoCodeResult
com.baidu.mapapi.search.geocode.ReverseGeoCodeOption -> com.baidu.mapapi.search.geocode.ReverseGeoCodeOption:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.search.geocode.ReverseGeoCodeOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent c -> c
    com.baidu.mapapi.model.LatLng d -> d
    java.util.List e -> e
    java.lang.String getBusinessCircle() -> getBusinessCircle
    void a(java.lang.String) -> a
    java.lang.String getAddress() -> getAddress
    void b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent getAddressDetail() -> getAddressDetail
    void a(com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent) -> a
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    void a(com.baidu.mapapi.model.LatLng) -> a
    java.util.List getPoiList() -> getPoiList
    void a(java.util.List) -> a
com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent -> com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent:
    java.lang.String streetNumber -> streetNumber
    java.lang.String street -> street
    java.lang.String district -> district
    java.lang.String city -> city
    java.lang.String province -> province
com.baidu.mapapi.search.geocode.a -> com.baidu.mapapi.search.geocode.a:
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult a(java.lang.String) -> a
    com.baidu.mapapi.search.geocode.GeoCodeResult b(java.lang.String) -> b
    com.baidu.mapapi.search.geocode.ReverseGeoCodeResult$AddressComponent a(org.json.JSONObject,java.lang.String) -> a
    com.baidu.mapapi.model.LatLng b(org.json.JSONObject,java.lang.String) -> b
    java.util.List c(org.json.JSONObject,java.lang.String) -> c
com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener -> com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener:
    void onGetPoiResult(com.baidu.mapapi.search.poi.PoiResult) -> onGetPoiResult
    void onGetPoiDetailResult(com.baidu.mapapi.search.poi.PoiDetailResult) -> onGetPoiDetailResult
com.baidu.mapapi.search.poi.PoiBoundSearchOption -> com.baidu.mapapi.search.poi.PoiBoundSearchOption:
    com.baidu.mapapi.model.LatLngBounds a -> a
    java.lang.String b -> b
    float c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.poi.PoiBoundSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiBoundSearchOption bound(com.baidu.mapapi.model.LatLngBounds) -> bound
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiBoundSearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiCitySearchOption -> com.baidu.mapapi.search.poi.PoiCitySearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    float c -> c
    com.baidu.mapapi.model.LatLng d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiCitySearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.poi.PoiCitySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiCitySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiDetailResult -> com.baidu.mapapi.search.poi.PoiDetailResult:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.model.LatLng d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    double k -> k
    double l -> l
    double m -> m
    double n -> n
    double o -> o
    double p -> p
    double q -> q
    double r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    java.lang.String x -> x
    java.lang.String getName() -> getName
    com.baidu.mapapi.model.LatLng getLocation() -> getLocation
    java.lang.String getAddress() -> getAddress
    java.lang.String getTelephone() -> getTelephone
    java.lang.String getUid() -> getUid
    java.lang.String getTag() -> getTag
    java.lang.String getDetailUrl() -> getDetailUrl
    java.lang.String getType() -> getType
    double getPrice() -> getPrice
    double getOverallRating() -> getOverallRating
    double getTasteRating() -> getTasteRating
    double getServiceRating() -> getServiceRating
    double getEnvironmentRating() -> getEnvironmentRating
    double getFacilityRating() -> getFacilityRating
    double getHygieneRating() -> getHygieneRating
    double getTechnologyRating() -> getTechnologyRating
    int getImageNum() -> getImageNum
    int getGrouponNum() -> getGrouponNum
    int getCommentNum() -> getCommentNum
    int getFavoriteNum() -> getFavoriteNum
    int getCheckinNum() -> getCheckinNum
    java.lang.String getShopHours() -> getShopHours
    boolean a(java.lang.String) -> a
com.baidu.mapapi.search.poi.PoiDetailSearchOption -> com.baidu.mapapi.search.poi.PoiDetailSearchOption:
    java.lang.String a -> a
    boolean b -> b
    com.baidu.mapapi.search.poi.PoiDetailSearchOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.poi.PoiNearbySearchOption -> com.baidu.mapapi.search.poi.PoiNearbySearchOption:
    java.lang.String a -> a
    com.baidu.mapapi.model.LatLng b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.search.poi.PoiNearbySearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.poi.PoiNearbySearchOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.poi.PoiNearbySearchOption radius(int) -> radius
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageNum(int) -> pageNum
    com.baidu.mapapi.search.poi.PoiNearbySearchOption pageCapacity(int) -> pageCapacity
com.baidu.mapapi.search.poi.PoiResult -> com.baidu.mapapi.search.poi.PoiResult:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    java.util.List e -> e
    java.util.List f -> f
    int getCurrentPageNum() -> getCurrentPageNum
    void a(int) -> a
    int getTotalPageNum() -> getTotalPageNum
    void b(int) -> b
    int getCurrentPageCapacity() -> getCurrentPageCapacity
    void c(int) -> c
    int getTotalPoiNum() -> getTotalPoiNum
    void d(int) -> d
    java.util.List getAllPoi() -> getAllPoi
    void a(java.util.List) -> a
    java.util.List getSuggestCityList() -> getSuggestCityList
    void b(java.util.List) -> b
com.baidu.mapapi.search.poi.PoiSearch -> com.baidu.mapapi.search.poi.PoiSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    boolean f -> f
    int g -> g
    com.baidu.mapapi.search.poi.PoiSearch newInstance() -> newInstance
    void setOnGetPoiSearchResultListener(com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener) -> setOnGetPoiSearchResultListener
    boolean searchInCity(com.baidu.mapapi.search.poi.PoiCitySearchOption) -> searchInCity
    boolean searchNearby(com.baidu.mapapi.search.poi.PoiNearbySearchOption) -> searchNearby
    boolean searchInBound(com.baidu.mapapi.search.poi.PoiBoundSearchOption) -> searchInBound
    boolean searchPoiDetail(com.baidu.mapapi.search.poi.PoiDetailSearchOption) -> searchPoiDetail
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.poi.PoiSearch) -> a
    com.baidu.mapapi.search.poi.OnGetPoiSearchResultListener b(com.baidu.mapapi.search.poi.PoiSearch) -> b
    int c(com.baidu.mapapi.search.poi.PoiSearch) -> c
    int d(com.baidu.mapapi.search.poi.PoiSearch) -> d
com.baidu.mapapi.search.poi.PoiSearch$1 -> com.baidu.mapapi.search.poi.PoiSearch$1:
com.baidu.mapapi.search.poi.PoiSearch$a -> com.baidu.mapapi.search.poi.PoiSearch$a:
    com.baidu.mapapi.search.poi.PoiSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.poi.a -> com.baidu.mapapi.search.poi.a:
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String,int) -> a
    com.baidu.mapapi.search.poi.PoiResult a(java.lang.String) -> a
com.baidu.mapapi.search.route.DrivingRouteLine -> com.baidu.mapapi.search.route.DrivingRouteLine:
    boolean a -> a
    java.util.List b -> b
    boolean isSupportTraffic() -> isSupportTraffic
    void a(boolean) -> a
    java.util.List getWayPoints() -> getWayPoints
    void a(java.util.List) -> a
com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep -> com.baidu.mapapi.search.route.DrivingRouteLine$DrivingStep:
    int c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    void a(java.lang.String) -> a
    java.lang.String getEntraceInstructions() -> getEntraceInstructions
    void b(java.lang.String) -> b
    java.lang.String getExitInstructions() -> getExitInstructions
    void c(java.lang.String) -> c
    java.lang.String getInstructions() -> getInstructions
    void d(java.lang.String) -> d
    int getNumTurns() -> getNumTurns
    void b(int) -> b
com.baidu.mapapi.search.route.DrivingRoutePlanOption -> com.baidu.mapapi.search.route.DrivingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy c -> c
    java.util.List d -> d
    com.baidu.mapapi.search.route.DrivingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.DrivingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.DrivingRoutePlanOption passBy(java.util.List) -> passBy
    com.baidu.mapapi.search.route.DrivingRoutePlanOption policy(com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy) -> policy
com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy -> com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy:
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_AVOID_JAM -> ECAR_AVOID_JAM
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_TIME_FIRST -> ECAR_TIME_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_DIS_FIRST -> ECAR_DIS_FIRST
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy ECAR_FEE_FIRST -> ECAR_FEE_FIRST
    int a -> a
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] b -> b
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy[] values() -> values
    com.baidu.mapapi.search.route.DrivingRoutePlanOption$DrivingPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.DrivingRouteResult -> com.baidu.mapapi.search.route.DrivingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.OnGetRoutePlanResultListener -> com.baidu.mapapi.search.route.OnGetRoutePlanResultListener:
    void onGetWalkingRouteResult(com.baidu.mapapi.search.route.WalkingRouteResult) -> onGetWalkingRouteResult
    void onGetTransitRouteResult(com.baidu.mapapi.search.route.TransitRouteResult) -> onGetTransitRouteResult
    void onGetDrivingRouteResult(com.baidu.mapapi.search.route.DrivingRouteResult) -> onGetDrivingRouteResult
com.baidu.mapapi.search.route.PlanNode -> com.baidu.mapapi.search.route.PlanNode:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.model.LatLng a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    com.baidu.mapapi.search.route.PlanNode withLocation(com.baidu.mapapi.model.LatLng) -> withLocation
    com.baidu.mapapi.search.route.PlanNode withCityNameAndPlaceName(java.lang.String,java.lang.String) -> withCityNameAndPlaceName
com.baidu.mapapi.search.route.RoutePlanSearch -> com.baidu.mapapi.search.route.RoutePlanSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.route.RoutePlanSearch newInstance() -> newInstance
    void setOnGetRoutePlanResultListener(com.baidu.mapapi.search.route.OnGetRoutePlanResultListener) -> setOnGetRoutePlanResultListener
    boolean transitSearch(com.baidu.mapapi.search.route.TransitRoutePlanOption) -> transitSearch
    boolean walkingSearch(com.baidu.mapapi.search.route.WalkingRoutePlanOption) -> walkingSearch
    boolean drivingSearch(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> drivingSearch
    java.util.ArrayList a(com.baidu.mapapi.search.route.DrivingRoutePlanOption) -> a
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.route.RoutePlanSearch) -> a
    com.baidu.mapapi.search.route.OnGetRoutePlanResultListener b(com.baidu.mapapi.search.route.RoutePlanSearch) -> b
    int c(com.baidu.mapapi.search.route.RoutePlanSearch) -> c
com.baidu.mapapi.search.route.RoutePlanSearch$1 -> com.baidu.mapapi.search.route.RoutePlanSearch$1:
com.baidu.mapapi.search.route.RoutePlanSearch$a -> com.baidu.mapapi.search.route.RoutePlanSearch$a:
    com.baidu.mapapi.search.route.RoutePlanSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.route.SuggestAddrInfo -> com.baidu.mapapi.search.route.SuggestAddrInfo:
    java.util.List a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.util.List getSuggestStartNode() -> getSuggestStartNode
    void a(java.util.List) -> a
    java.util.List getSuggestEndNode() -> getSuggestEndNode
    void b(java.util.List) -> b
    java.util.List getSuggestWpNode() -> getSuggestWpNode
    void c(java.util.List) -> c
    java.util.List getSuggestStartCity() -> getSuggestStartCity
    void d(java.util.List) -> d
    java.util.List getSuggestEndCity() -> getSuggestEndCity
    void e(java.util.List) -> e
    java.util.List getSuggestWpCity() -> getSuggestWpCity
    void f(java.util.List) -> f
com.baidu.mapapi.search.route.TransitRouteLine -> com.baidu.mapapi.search.route.TransitRouteLine:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxitInfo() -> getTaxitInfo
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep:
    com.baidu.mapapi.search.core.VehicleInfo c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String getInstructions() -> getInstructions
    void a(com.baidu.mapapi.search.core.VehicleInfo) -> a
    void a(java.lang.String) -> a
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType getStepType() -> getStepType
    void a(com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType) -> a
    void b(java.lang.String) -> b
    java.util.List getWayPoints() -> getWayPoints
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    com.baidu.mapapi.search.core.VehicleInfo getVehicleInfo() -> getVehicleInfo
com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType -> com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType:
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType BUSLINE -> BUSLINE
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType SUBWAY -> SUBWAY
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType WAKLING -> WAKLING
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] $VALUES -> $VALUES
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType[] values() -> values
    com.baidu.mapapi.search.route.TransitRouteLine$TransitStep$TransitRouteStepType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.search.route.TransitRoutePlanOption -> com.baidu.mapapi.search.route.TransitRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy d -> d
    com.baidu.mapapi.search.route.TransitRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.TransitRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
    com.baidu.mapapi.search.route.TransitRoutePlanOption city(java.lang.String) -> city
    com.baidu.mapapi.search.route.TransitRoutePlanOption policy(com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy) -> policy
com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy -> com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy:
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TIME_FIRST -> EBUS_TIME_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_TRANSFER_FIRST -> EBUS_TRANSFER_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_WALK_FIRST -> EBUS_WALK_FIRST
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy EBUS_NO_SUBWAY -> EBUS_NO_SUBWAY
    int a -> a
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] b -> b
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy[] values() -> values
    com.baidu.mapapi.search.route.TransitRoutePlanOption$TransitPolicy valueOf(java.lang.String) -> valueOf
    int getInt() -> getInt
com.baidu.mapapi.search.route.TransitRouteResult -> com.baidu.mapapi.search.route.TransitRouteResult:
    com.baidu.mapapi.search.core.TaxiInfo a -> a
    java.util.List b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    void a(java.util.List) -> a
    java.util.List getRouteLines() -> getRouteLines
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.WalkingRouteLine -> com.baidu.mapapi.search.route.WalkingRouteLine:
    java.util.List getAllStep() -> getAllStep
com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep -> com.baidu.mapapi.search.route.WalkingRouteLine$WalkingStep:
    int c -> c
    com.baidu.mapapi.search.core.RouteNode d -> d
    com.baidu.mapapi.search.core.RouteNode e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.util.List getWayPoints() -> getWayPoints
    int getDirection() -> getDirection
    void a(int) -> a
    com.baidu.mapapi.search.core.RouteNode getEntrace() -> getEntrace
    void a(com.baidu.mapapi.search.core.RouteNode) -> a
    com.baidu.mapapi.search.core.RouteNode getExit() -> getExit
    void b(com.baidu.mapapi.search.core.RouteNode) -> b
    void a(java.lang.String) -> a
    java.lang.String getEntraceInstructions() -> getEntraceInstructions
    void b(java.lang.String) -> b
    java.lang.String getExitInstructions() -> getExitInstructions
    void c(java.lang.String) -> c
    java.lang.String getInstructions() -> getInstructions
    void d(java.lang.String) -> d
com.baidu.mapapi.search.route.WalkingRoutePlanOption -> com.baidu.mapapi.search.route.WalkingRoutePlanOption:
    com.baidu.mapapi.search.route.PlanNode a -> a
    com.baidu.mapapi.search.route.PlanNode b -> b
    com.baidu.mapapi.search.route.WalkingRoutePlanOption from(com.baidu.mapapi.search.route.PlanNode) -> from
    com.baidu.mapapi.search.route.WalkingRoutePlanOption to(com.baidu.mapapi.search.route.PlanNode) -> to
com.baidu.mapapi.search.route.WalkingRouteResult -> com.baidu.mapapi.search.route.WalkingRouteResult:
    java.util.List a -> a
    com.baidu.mapapi.search.core.TaxiInfo b -> b
    com.baidu.mapapi.search.route.SuggestAddrInfo c -> c
    java.util.List getRouteLines() -> getRouteLines
    void a(java.util.List) -> a
    com.baidu.mapapi.search.core.TaxiInfo getTaxiInfo() -> getTaxiInfo
    void a(com.baidu.mapapi.search.core.TaxiInfo) -> a
    com.baidu.mapapi.search.route.SuggestAddrInfo getSuggestAddrInfo() -> getSuggestAddrInfo
    void a(com.baidu.mapapi.search.route.SuggestAddrInfo) -> a
com.baidu.mapapi.search.route.a -> com.baidu.mapapi.search.route.a:
    com.baidu.mapapi.search.route.TransitRouteResult a(java.lang.String) -> a
    com.baidu.mapapi.search.route.DrivingRouteResult b(java.lang.String) -> b
    com.baidu.mapapi.search.route.WalkingRouteResult c(java.lang.String) -> c
    com.baidu.mapapi.search.core.TaxiInfo d(java.lang.String) -> d
    com.baidu.mapapi.search.core.VehicleInfo e(java.lang.String) -> e
    com.baidu.mapapi.search.core.RouteNode b(org.json.JSONObject,java.lang.String) -> b
    java.util.List c(org.json.JSONObject,java.lang.String) -> c
    com.baidu.mapapi.search.route.SuggestAddrInfo f(java.lang.String) -> f
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
    java.util.List a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    java.lang.String g(java.lang.String) -> g
com.baidu.mapapi.search.share.LocationShareURLOption -> com.baidu.mapapi.search.share.LocationShareURLOption:
    com.baidu.mapapi.model.LatLng a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.mapapi.search.share.LocationShareURLOption location(com.baidu.mapapi.model.LatLng) -> location
    com.baidu.mapapi.search.share.LocationShareURLOption name(java.lang.String) -> name
    com.baidu.mapapi.search.share.LocationShareURLOption snippet(java.lang.String) -> snippet
com.baidu.mapapi.search.share.OnGetShareUrlResultListener -> com.baidu.mapapi.search.share.OnGetShareUrlResultListener:
    void onGetPoiDetailShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetPoiDetailShareUrlResult
    void onGetLocationShareUrlResult(com.baidu.mapapi.search.share.ShareUrlResult) -> onGetLocationShareUrlResult
com.baidu.mapapi.search.share.PoiDetailShareURLOption -> com.baidu.mapapi.search.share.PoiDetailShareURLOption:
    java.lang.String a -> a
    com.baidu.mapapi.search.share.PoiDetailShareURLOption poiUid(java.lang.String) -> poiUid
com.baidu.mapapi.search.share.ShareUrlResult -> com.baidu.mapapi.search.share.ShareUrlResult:
    java.lang.String a -> a
    int b -> b
    java.lang.String getUrl() -> getUrl
    void a(java.lang.String) -> a
    void a(int) -> a
com.baidu.mapapi.search.share.ShareUrlSearch -> com.baidu.mapapi.search.share.ShareUrlSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.baidu.mapapi.search.share.ShareUrlSearch newInstance() -> newInstance
    boolean requestPoiDetailShareUrl(com.baidu.mapapi.search.share.PoiDetailShareURLOption) -> requestPoiDetailShareUrl
    boolean requestLocationShareUrl(com.baidu.mapapi.search.share.LocationShareURLOption) -> requestLocationShareUrl
    void setOnGetShareUrlResultListener(com.baidu.mapapi.search.share.OnGetShareUrlResultListener) -> setOnGetShareUrlResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.share.ShareUrlSearch) -> a
    com.baidu.mapapi.search.share.OnGetShareUrlResultListener b(com.baidu.mapapi.search.share.ShareUrlSearch) -> b
    int c(com.baidu.mapapi.search.share.ShareUrlSearch) -> c
com.baidu.mapapi.search.share.ShareUrlSearch$1 -> com.baidu.mapapi.search.share.ShareUrlSearch$1:
com.baidu.mapapi.search.share.ShareUrlSearch$a -> com.baidu.mapapi.search.share.ShareUrlSearch$a:
    com.baidu.mapapi.search.share.ShareUrlSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.share.a -> com.baidu.mapapi.search.share.a:
    com.baidu.mapapi.search.share.ShareUrlResult a(java.lang.String) -> a
com.baidu.mapapi.search.sug.OnGetSuggestionResultListener -> com.baidu.mapapi.search.sug.OnGetSuggestionResultListener:
    void onGetSuggestionResult(com.baidu.mapapi.search.sug.SuggestionResult) -> onGetSuggestionResult
com.baidu.mapapi.search.sug.SuggestionResult -> com.baidu.mapapi.search.sug.SuggestionResult:
    java.util.ArrayList a -> a
    java.util.List getAllSuggestions() -> getAllSuggestions
    void a(java.util.ArrayList) -> a
com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo -> com.baidu.mapapi.search.sug.SuggestionResult$SuggestionInfo:
    java.lang.String key -> key
    java.lang.String city -> city
    java.lang.String district -> district
com.baidu.mapapi.search.sug.SuggestionSearch -> com.baidu.mapapi.search.sug.SuggestionSearch:
    com.baidu.platform.comapi.b.d a -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b -> b
    boolean c -> c
    com.baidu.mapapi.search.sug.SuggestionSearch newInstance() -> newInstance
    boolean requestSuggestion(com.baidu.mapapi.search.sug.SuggestionSearchOption) -> requestSuggestion
    void setOnGetSuggestionResultListener(com.baidu.mapapi.search.sug.OnGetSuggestionResultListener) -> setOnGetSuggestionResultListener
    void destroy() -> destroy
    boolean a(com.baidu.mapapi.search.sug.SuggestionSearch) -> a
    com.baidu.mapapi.search.sug.OnGetSuggestionResultListener b(com.baidu.mapapi.search.sug.SuggestionSearch) -> b
com.baidu.mapapi.search.sug.SuggestionSearch$1 -> com.baidu.mapapi.search.sug.SuggestionSearch$1:
com.baidu.mapapi.search.sug.SuggestionSearch$a -> com.baidu.mapapi.search.sug.SuggestionSearch$a:
    com.baidu.mapapi.search.sug.SuggestionSearch a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.mapapi.search.sug.SuggestionSearchOption -> com.baidu.mapapi.search.sug.SuggestionSearchOption:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.mapapi.model.LatLng c -> c
    com.baidu.mapapi.search.sug.SuggestionSearchOption city(java.lang.String) -> city
    com.baidu.mapapi.search.sug.SuggestionSearchOption keyword(java.lang.String) -> keyword
    com.baidu.mapapi.search.sug.SuggestionSearchOption location(com.baidu.mapapi.model.LatLng) -> location
com.baidu.mapapi.search.sug.a -> com.baidu.mapapi.search.sug.a:
    com.baidu.mapapi.search.sug.SuggestionResult a(java.lang.String) -> a
com.baidu.mapapi.utils.CoordinateConverter -> com.baidu.mapapi.utils.CoordinateConverter:
    com.baidu.mapapi.model.LatLng a -> a
    com.baidu.mapapi.utils.CoordinateConverter$CoordType b -> b
    com.baidu.mapapi.utils.CoordinateConverter coord(com.baidu.mapapi.model.LatLng) -> coord
    com.baidu.mapapi.utils.CoordinateConverter from(com.baidu.mapapi.utils.CoordinateConverter$CoordType) -> from
    com.baidu.mapapi.model.LatLng convert() -> convert
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng) -> a
    com.baidu.mapapi.model.LatLng b(com.baidu.mapapi.model.LatLng) -> b
    com.baidu.mapapi.model.LatLng a(com.baidu.mapapi.model.LatLng,java.lang.String) -> a
com.baidu.mapapi.utils.CoordinateConverter$1 -> com.baidu.mapapi.utils.CoordinateConverter$1:
    int[] a -> a
com.baidu.mapapi.utils.CoordinateConverter$CoordType -> com.baidu.mapapi.utils.CoordinateConverter$CoordType:
    com.baidu.mapapi.utils.CoordinateConverter$CoordType GPS -> GPS
    com.baidu.mapapi.utils.CoordinateConverter$CoordType COMMON -> COMMON
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] $VALUES -> $VALUES
    com.baidu.mapapi.utils.CoordinateConverter$CoordType[] values() -> values
    com.baidu.mapapi.utils.CoordinateConverter$CoordType valueOf(java.lang.String) -> valueOf
com.baidu.mapapi.utils.DistanceUtil -> com.baidu.mapapi.utils.DistanceUtil:
    double getDistance(com.baidu.mapapi.model.LatLng,com.baidu.mapapi.model.LatLng) -> getDistance
com.baidu.mapapi.utils.PermissionCheck -> com.baidu.mapapi.utils.PermissionCheck:
    java.lang.String a -> a
    android.content.Context b -> b
    java.util.Hashtable c -> c
    com.baidu.lbsapi.auth.LBSAuthManager d -> d
    com.baidu.lbsapi.auth.LBSAuthManagerListener e -> e
    com.baidu.mapapi.utils.PermissionCheck$c f -> f
    void setPermissionCheckResultListener(com.baidu.mapapi.utils.PermissionCheck$c) -> setPermissionCheckResultListener
    void init(android.content.Context) -> init
    int permissionCheck() -> permissionCheck
    void destory() -> destory
    com.baidu.mapapi.utils.PermissionCheck$c a() -> a
com.baidu.mapapi.utils.PermissionCheck$1 -> com.baidu.mapapi.utils.PermissionCheck$1:
com.baidu.mapapi.utils.PermissionCheck$a -> com.baidu.mapapi.utils.PermissionCheck$a:
    void onAuthResult(int,java.lang.String) -> onAuthResult
com.baidu.mapapi.utils.PermissionCheck$b -> com.baidu.mapapi.utils.PermissionCheck$b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String toString() -> toString
com.baidu.mapapi.utils.PermissionCheck$c -> com.baidu.mapapi.utils.PermissionCheck$c:
    void a(com.baidu.mapapi.utils.PermissionCheck$b) -> a
com.baidu.mapapi.utils.a -> com.baidu.mapapi.utils.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.mapapi.utils.a$a -> com.baidu.mapapi.utils.a$a:
    java.lang.String a(byte[]) -> a
com.baidu.mapapi.utils.b -> com.baidu.mapapi.utils.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    com.baidu.mapapi.utils.e g -> g
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    int e() -> e
    int f() -> f
com.baidu.mapapi.utils.c -> com.baidu.mapapi.utils.c:
    com.baidu.mapapi.map.offline.MKOLSearchRecord a(com.baidu.platform.comapi.map.o) -> a
    com.baidu.mapapi.map.offline.MKOLUpdateElement a(com.baidu.platform.comapi.map.r) -> a
com.baidu.mapapi.utils.d -> com.baidu.mapapi.utils.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean equals(java.lang.Object) -> equals
com.baidu.mapapi.utils.e -> com.baidu.mapapi.utils.e:
    com.baidu.mapapi.utils.e a -> a
    boolean b -> b
    boolean c -> c
    java.util.List d -> d
    com.baidu.mapapi.utils.d e -> e
    java.lang.String f -> f
    com.baidu.mapapi.utils.e a() -> a
    void a(android.content.Context) -> a
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    com.baidu.mapapi.utils.d b() -> b
    com.baidu.mapapi.utils.d b(android.content.Context) -> b
    boolean a(android.content.Context,com.baidu.mapapi.utils.d) -> a
    boolean a(java.lang.String) -> a
com.baidu.mtjstatsdk.BasicStoreTools -> com.baidu.mtjstatsdk.BasicStoreTools:
    java.lang.String LAST_SEND_TIME -> LAST_SEND_TIME
    java.lang.String SEND_LOG_TYPE -> SEND_LOG_TYPE
    java.lang.String TIME_INTERVAL -> TIME_INTERVAL
    java.lang.String ONLY_WIFI -> ONLY_WIFI
    java.lang.String APP_ANALYSIS_EXCEPTION -> APP_ANALYSIS_EXCEPTION
    java.lang.String DEVICE_ID -> DEVICE_ID
    java.lang.String DEVICE_CUID -> DEVICE_CUID
    java.lang.String APP_ANALYSIS_EXCEPTION_TAG -> APP_ANALYSIS_EXCEPTION_TAG
    java.lang.String APP_SET_CHANNEL_WITH_CODE -> APP_SET_CHANNEL_WITH_CODE
    java.lang.String APP_SET_CHANNEL -> APP_SET_CHANNEL
    java.lang.String APP_SET_CHANNEL_APPKEY -> APP_SET_CHANNEL_APPKEY
    com.baidu.mtjstatsdk.BasicStoreTools a -> a
    com.baidu.mtjstatsdk.BasicStoreTools getInstance() -> getInstance
    void setExceptionTurn(android.content.Context,boolean) -> setExceptionTurn
    boolean loadExceptionTurn(android.content.Context) -> loadExceptionTurn
    void setExceptionHeadTag(android.content.Context,java.lang.String) -> setExceptionHeadTag
    java.lang.String loadExceptionHeadTag(android.content.Context) -> loadExceptionHeadTag
    void setSendStrategy(android.content.Context,int) -> setSendStrategy
    int loadSendStrategy(android.content.Context) -> loadSendStrategy
    void setSendStrategyTime(android.content.Context,int) -> setSendStrategyTime
    int loadSendStrategyTime(android.content.Context) -> loadSendStrategyTime
    void setOnlyWifi(android.content.Context,boolean) -> setOnlyWifi
    boolean loadOnlyWifiChannel(android.content.Context) -> loadOnlyWifiChannel
    void setLastSendTime(android.content.Context,long) -> setLastSendTime
    long loadLastSendTime(android.content.Context) -> loadLastSendTime
    void setGenerateDeviceId(android.content.Context,java.lang.String) -> setGenerateDeviceId
    java.lang.String loadGenerateDeviceId(android.content.Context) -> loadGenerateDeviceId
    void setGenerateDeviceCUID(android.content.Context,java.lang.String) -> setGenerateDeviceCUID
    java.lang.String loadGenerateDeviceCUID(android.content.Context) -> loadGenerateDeviceCUID
    void setAppChannelWithPreference(android.content.Context,java.lang.String) -> setAppChannelWithPreference
    java.lang.String loadAppChannelWithPreference(android.content.Context) -> loadAppChannelWithPreference
    void setAppChannelWithPreferenceAndAppKey(android.content.Context,java.lang.String,java.lang.String,boolean) -> setAppChannelWithPreferenceAndAppKey
    java.lang.String loadAppChannelWithPreferenceAndAppKey(android.content.Context,java.lang.String) -> loadAppChannelWithPreferenceAndAppKey
com.baidu.mtjstatsdk.BasicStoreToolsBase -> com.baidu.mtjstatsdk.BasicStoreToolsBase:
    java.lang.String a -> a
    android.content.SharedPreferences b -> b
    android.content.SharedPreferences c -> c
    android.content.SharedPreferences a(android.content.Context) -> a
    android.content.SharedPreferences b(android.content.Context) -> b
    java.lang.String getSharedString(android.content.Context,java.lang.String,java.lang.String) -> getSharedString
    void putSharedString(android.content.Context,java.lang.String,java.lang.String) -> putSharedString
    int getSharedInt(android.content.Context,java.lang.String,int) -> getSharedInt
    void putSharedInt(android.content.Context,java.lang.String,int) -> putSharedInt
    long getSharedLong(android.content.Context,java.lang.String,long) -> getSharedLong
    void putSharedLong(android.content.Context,java.lang.String,long) -> putSharedLong
    boolean getSharedBoolean(android.content.Context,java.lang.String,boolean) -> getSharedBoolean
    void putSharedBoolean(android.content.Context,java.lang.String,boolean) -> putSharedBoolean
    void removeShare(android.content.Context,java.lang.String) -> removeShare
    boolean getBoolean(android.content.Context,java.lang.String,boolean) -> getBoolean
    void putBoolean(android.content.Context,java.lang.String,boolean) -> putBoolean
    int getInt(android.content.Context,java.lang.String,int) -> getInt
    void putInt(android.content.Context,java.lang.String,int) -> putInt
    long getLong(android.content.Context,java.lang.String,long) -> getLong
    void putLong(android.content.Context,java.lang.String,long) -> putLong
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> getString
    void putString(android.content.Context,java.lang.String,java.lang.String) -> putString
    boolean updateShareInt(android.content.Intent,android.app.Activity,java.lang.String,int) -> updateShareInt
    boolean updateShareBoolean(android.content.Intent,android.app.Activity,java.lang.String) -> updateShareBoolean
    boolean updateShareBoolean(android.content.Intent,android.app.Activity,java.lang.String,boolean) -> updateShareBoolean
    boolean updateShareString(android.content.Intent,android.app.Activity,java.lang.String) -> updateShareString
com.baidu.mtjstatsdk.DataCoreObject -> com.baidu.mtjstatsdk.DataCoreObject:
    int i -> i
    int a -> a
    org.json.JSONObject b -> b
    org.json.JSONArray c -> c
    org.json.JSONArray d -> d
    org.json.JSONArray e -> e
    org.json.JSONArray f -> f
    boolean g -> g
    com.baidu.mtjstatsdk.HeadObject h -> h
    void a(int) -> a
    int a() -> a
    java.lang.String a(android.content.Context) -> a
com.baidu.mtjstatsdk.HeadObject -> com.baidu.mtjstatsdk.HeadObject:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    int j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    void setCuid(java.lang.String) -> setCuid
    java.lang.String getCuid() -> getCuid
    void setAppKey(java.lang.String) -> setAppKey
    java.lang.String getAppKey() -> getAppKey
    void setAppChannel(java.lang.String) -> setAppChannel
    java.lang.String getappChannel() -> getappChannel
    void setAppVersionName(java.lang.String) -> setAppVersionName
    java.lang.String getAppVersionName() -> getAppVersionName
    void constructHeader(android.content.Context,java.lang.String) -> constructHeader
    void installHeader(android.content.Context,org.json.JSONObject,java.lang.String) -> installHeader
    java.lang.String a(java.lang.String,android.content.Context) -> a
    java.lang.String a(android.content.Context) -> a
com.baidu.mtjstatsdk.LoadCacheAnalysis -> com.baidu.mtjstatsdk.LoadCacheAnalysis:
    java.util.HashMap a -> a
    com.baidu.mtjstatsdk.LoadCacheAnalysis b -> b
    android.content.Context c -> c
    com.baidu.mtjstatsdk.LoadCacheAnalysis getInstance() -> getInstance
    void a(android.content.Context,java.lang.String) -> a
    void checkLoadCacheFinished(android.content.Context,java.lang.String) -> checkLoadCacheFinished
    void checkStartLoadCache(android.content.Context,java.lang.String) -> checkStartLoadCache
    com.baidu.mtjstatsdk.i getLoadCacheObject(android.content.Context,java.lang.String) -> getLoadCacheObject
    boolean isStart(java.lang.String) -> isStart
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void initLoadCacheParams(java.lang.String) -> initLoadCacheParams
    boolean isFinished(java.lang.String) -> isFinished
    void a(com.baidu.mtjstatsdk.LoadCacheAnalysis,java.lang.String) -> a
com.baidu.mtjstatsdk.SessionAnalysisObject -> com.baidu.mtjstatsdk.SessionAnalysisObject:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    java.lang.ref.WeakReference e -> e
    java.lang.ref.WeakReference f -> f
    java.lang.ref.WeakReference g -> g
    com.baidu.mtjstatsdk.a.b h -> h
    int i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    java.lang.String o -> o
    int getSessionPeriod() -> getSessionPeriod
    void setSessionPeriod(int) -> setSessionPeriod
    boolean isFirstResume() -> isFirstResume
    void setFirstResume(boolean) -> setFirstResume
    void setSessionCounted() -> setSessionCounted
    long getSessionStartTime() -> getSessionStartTime
    void flushSession(android.content.Context,long,java.lang.String) -> flushSession
com.baidu.mtjstatsdk.StatSDKService -> com.baidu.mtjstatsdk.StatSDKService:
    boolean a(java.lang.Class,java.lang.String) -> a
    void onResume(android.content.Context,java.lang.String) -> onResume
    void onResume(android.support.v4.app.Fragment,java.lang.String) -> onResume
    void onResume(java.lang.Object,java.lang.String) -> onResume
    void onPageStart(android.content.Context,java.lang.String,java.lang.String) -> onPageStart
    void onPageEnd(android.content.Context,java.lang.String,java.lang.String) -> onPageEnd
    void onPause(android.content.Context,java.lang.String) -> onPause
    void onPause(android.support.v4.app.Fragment,java.lang.String) -> onPause
    void onPause(java.lang.Object,java.lang.String) -> onPause
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onEvent
    void onEventStart(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onEventStart
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onEventEnd
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long,java.lang.String) -> onEventDuration
    boolean a(android.content.Context,java.lang.String) -> a
    void setAppChannel(android.content.Context,java.lang.String,boolean,java.lang.String) -> setAppChannel
    void setLogSenderDelayed(int,java.lang.String) -> setLogSenderDelayed
    java.lang.String getCuid(android.content.Context) -> getCuid
    void b(android.content.Context,java.lang.String) -> b
    void setDebugOn(boolean,java.lang.String) -> setDebugOn
    void setAppVersionName(java.lang.String,java.lang.String) -> setAppVersionName
com.baidu.mtjstatsdk.a -> com.baidu.mtjstatsdk.a:
    java.util.HashMap a -> a
    com.baidu.mtjstatsdk.a b -> b
    com.baidu.mtjstatsdk.a a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(int,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,boolean,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(org.json.JSONObject,boolean,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(org.json.JSONObject,boolean,java.lang.String) -> b
    void a(java.lang.String,java.lang.String,int,long,long,java.lang.String) -> a
    void c(org.json.JSONObject,boolean,java.lang.String) -> c
    void a(android.content.Context,java.lang.String) -> a
    void a(boolean,java.lang.String) -> a
    boolean d(java.lang.String) -> d
    void b(android.content.Context,java.lang.String) -> b
    void c(android.content.Context,java.lang.String) -> c
    boolean d(android.content.Context,java.lang.String) -> d
    boolean c(java.lang.String) -> c
com.baidu.mtjstatsdk.a.a -> com.baidu.mtjstatsdk.a.a:
    com.baidu.mtjstatsdk.a.a a -> a
    com.baidu.mtjstatsdk.a.a b -> b
    com.baidu.mtjstatsdk.a.a c -> c
    com.baidu.mtjstatsdk.a.a[] d -> d
    com.baidu.mtjstatsdk.a.a[] a() -> a
com.baidu.mtjstatsdk.a.b -> com.baidu.mtjstatsdk.a.b:
    long b -> b
    long c -> c
    int d -> d
    java.util.List a -> a
    void a(java.lang.String,long,long) -> a
    void a(long) -> a
    long a() -> a
    void b(long) -> b
    void b() -> b
    org.json.JSONObject c() -> c
    void a(int) -> a
    int d() -> d
com.baidu.mtjstatsdk.a.c -> com.baidu.mtjstatsdk.a.c:
    java.lang.String b -> b
    long c -> c
    long d -> d
    com.baidu.mtjstatsdk.a.b a -> a
    java.lang.String a() -> a
    long b() -> b
    long c() -> c
com.baidu.mtjstatsdk.b -> com.baidu.mtjstatsdk.b:
    android.os.HandlerThread c -> c
    android.os.Handler d -> d
    com.baidu.mtjstatsdk.b e -> e
    java.util.HashMap a -> a
    java.lang.String b -> b
    com.baidu.mtjstatsdk.b a() -> a
    void a(android.content.Context,java.lang.String,java.lang.String,int,long,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,long,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String,long,java.lang.String) -> b
    void c(android.content.Context,java.lang.String,java.lang.String,long,java.lang.String) -> c
    java.lang.String a(java.lang.String,java.lang.String) -> a
com.baidu.mtjstatsdk.b.a -> com.baidu.mtjstatsdk.b.a:
    int a -> a
    java.util.Map b -> b
    boolean a(java.lang.String) -> a
com.baidu.mtjstatsdk.b.b -> com.baidu.mtjstatsdk.b.b:
    java.net.Proxy a -> a
    java.net.Proxy b -> b
    java.lang.String a(boolean,android.content.Context,java.lang.String) -> a
    void a(boolean,android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    byte[] b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    boolean a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.String b(java.lang.String) -> b
    java.net.HttpURLConnection a(android.content.Context,java.lang.String,int,int) -> a
    void d(android.content.Context,java.lang.String) -> d
    boolean e(android.content.Context,java.lang.String) -> e
    void c(java.lang.String) -> c
com.baidu.mtjstatsdk.b.c -> com.baidu.mtjstatsdk.b.c:
    boolean a -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.mtjstatsdk.b.d -> com.baidu.mtjstatsdk.b.d:
    android.text.format.DateFormat a -> a
    void a() -> a
    void b(java.lang.String,java.lang.String) -> b
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    boolean a(java.lang.String,int) -> a
    boolean a(int) -> a
    int a(java.lang.String) -> a
    int a(java.lang.Throwable) -> a
    int a(java.lang.Object[]) -> a
    int a(java.lang.String,java.lang.String) -> a
    int a(java.lang.String,java.lang.Throwable) -> a
    java.lang.String d(java.lang.Object[]) -> d
    int b(java.lang.String) -> b
    int b(java.lang.Object[]) -> b
    int c(java.lang.Object[]) -> c
    int c(java.lang.String) -> c
com.baidu.mtjstatsdk.b.e -> com.baidu.mtjstatsdk.b.e:
    java.lang.String a(android.content.Context,java.lang.String) -> a
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,int,int) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    android.util.DisplayMetrics h(android.content.Context) -> h
com.baidu.mtjstatsdk.c -> com.baidu.mtjstatsdk.c:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    long f -> f
    com.baidu.mtjstatsdk.b g -> g
    void run() -> run
com.baidu.mtjstatsdk.d -> com.baidu.mtjstatsdk.d:
    android.content.Context a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.baidu.mtjstatsdk.b f -> f
    void run() -> run
com.baidu.mtjstatsdk.e -> com.baidu.mtjstatsdk.e:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    long e -> e
    com.baidu.mtjstatsdk.b f -> f
    void run() -> run
com.baidu.mtjstatsdk.f -> com.baidu.mtjstatsdk.f:
    android.content.Context a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.baidu.mtjstatsdk.b f -> f
    void run() -> run
com.baidu.mtjstatsdk.g -> com.baidu.mtjstatsdk.g:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    com.baidu.mtjstatsdk.b d -> d
com.baidu.mtjstatsdk.h -> com.baidu.mtjstatsdk.h:
    java.lang.String b -> b
    android.content.Context c -> c
    com.baidu.mtjstatsdk.LoadCacheAnalysis a -> a
    void run() -> run
com.baidu.mtjstatsdk.i -> com.baidu.mtjstatsdk.i:
    android.content.Context a -> a
    boolean b -> b
    boolean c -> c
    java.lang.String d -> d
    com.baidu.mtjstatsdk.h e -> e
    com.baidu.mtjstatsdk.LoadCacheAnalysis f -> f
com.baidu.mtjstatsdk.j -> com.baidu.mtjstatsdk.j:
    android.os.HandlerThread a -> a
    boolean b -> b
    com.baidu.mtjstatsdk.a.a c -> c
    int d -> d
    java.util.Timer e -> e
    java.lang.ref.WeakReference f -> f
    android.os.Handler g -> g
    com.baidu.mtjstatsdk.j h -> h
    com.baidu.mtjstatsdk.j a() -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context,long,int,java.lang.String) -> a
    void a(android.content.Context,boolean,java.lang.String) -> a
    java.util.Timer a(com.baidu.mtjstatsdk.j) -> a
    java.util.Timer a(com.baidu.mtjstatsdk.j,java.util.Timer) -> a
    com.baidu.mtjstatsdk.a.a a(com.baidu.mtjstatsdk.j,com.baidu.mtjstatsdk.a.a) -> a
    int a(com.baidu.mtjstatsdk.j,int) -> a
    boolean a(com.baidu.mtjstatsdk.j,boolean) -> a
    com.baidu.mtjstatsdk.a.a b(com.baidu.mtjstatsdk.j) -> b
    boolean c(com.baidu.mtjstatsdk.j) -> c
    android.os.Handler b() -> b
com.baidu.mtjstatsdk.k -> com.baidu.mtjstatsdk.k:
    android.content.Context a -> a
    java.lang.String b -> b
    com.baidu.mtjstatsdk.j c -> c
    void run() -> run
com.baidu.mtjstatsdk.l -> com.baidu.mtjstatsdk.l:
    com.baidu.mtjstatsdk.k a -> a
    void run() -> run
com.baidu.mtjstatsdk.m -> com.baidu.mtjstatsdk.m:
    java.lang.String a -> a
    android.content.Context b -> b
    com.baidu.mtjstatsdk.j c -> c
    void run() -> run
com.baidu.mtjstatsdk.n -> com.baidu.mtjstatsdk.n:
    java.util.HashMap a -> a
    android.os.HandlerThread b -> b
    android.os.Handler c -> c
    com.baidu.mtjstatsdk.n d -> d
    com.baidu.mtjstatsdk.n a(java.lang.String) -> a
    java.util.HashMap a() -> a
    void b(java.lang.String) -> b
    void a(android.content.Context,long,java.lang.String) -> a
    void a(android.content.Context,long,java.lang.String,java.lang.String) -> a
    void a(android.support.v4.app.Fragment,long,java.lang.String) -> a
    void a(java.lang.Object,long,java.lang.String) -> a
    void b(android.content.Context,long,java.lang.String) -> b
    void b(android.content.Context,long,java.lang.String,java.lang.String) -> b
    void b(android.support.v4.app.Fragment,long,java.lang.String) -> b
    void b(java.lang.Object,long,java.lang.String) -> b
    void a(android.content.Context,java.lang.String) -> a
    android.content.Context a(java.lang.Object) -> a
    void a(com.baidu.mtjstatsdk.n,android.content.Context,java.lang.String) -> a
com.baidu.mtjstatsdk.o -> com.baidu.mtjstatsdk.o:
    android.content.Context a -> a
    java.lang.String b -> b
    com.baidu.mtjstatsdk.n c -> c
    void run() -> run
com.baidu.mtjstatsdk.p -> com.baidu.mtjstatsdk.p:
    android.content.Context a -> a
    java.lang.String b -> b
    com.baidu.mtjstatsdk.n c -> c
    void run() -> run
com.baidu.mtjstatsdk.q -> com.baidu.mtjstatsdk.q:
    android.support.v4.app.Fragment a -> a
    java.lang.String b -> b
    com.baidu.mtjstatsdk.n c -> c
    void run() -> run
com.baidu.mtjstatsdk.r -> com.baidu.mtjstatsdk.r:
    java.lang.Object a -> a
    java.lang.String b -> b
    com.baidu.mtjstatsdk.n c -> c
    void run() -> run
com.baidu.mtjstatsdk.s -> com.baidu.mtjstatsdk.s:
    long b -> b
    java.lang.ref.WeakReference c -> c
    java.lang.ref.WeakReference d -> d
    java.lang.ref.WeakReference e -> e
    long f -> f
    java.lang.ref.WeakReference g -> g
    java.lang.ref.WeakReference h -> h
    java.lang.ref.WeakReference i -> i
    int j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    com.baidu.mtjstatsdk.n a -> a
    void run() -> run
com.baidu.mtjstatsdk.t -> com.baidu.mtjstatsdk.t:
    long b -> b
    long c -> c
    java.lang.ref.WeakReference d -> d
    java.lang.ref.WeakReference e -> e
    java.lang.ref.WeakReference f -> f
    int g -> g
    java.lang.String h -> h
    com.baidu.mtjstatsdk.n a -> a
    void run() -> run
com.baidu.navi.location.BDErrorReport -> com.baidu.navi.location.BDErrorReport:
    java.lang.String a -> a
    void onReportResult(boolean) -> onReportResult
    int setErrorInfo(boolean,double,double,boolean,java.lang.String,double,double,java.lang.String,java.lang.String) -> setErrorInfo
    android.os.Bundle getErrorInfo() -> getErrorInfo
com.baidu.navi.location.BDGeofence -> com.baidu.navi.location.BDGeofence:
    int GEOFENCE_TRANSITION_ENTER -> GEOFENCE_TRANSITION_ENTER
    java.lang.String COORD_TYPE_BD09 -> COORD_TYPE_BD09
    java.lang.String COORD_TYPE_BD09LL -> COORD_TYPE_BD09LL
    java.lang.String COORD_TYPE_GCJ -> COORD_TYPE_GCJ
    int RADIUS_TYPE_SMALL -> RADIUS_TYPE_SMALL
    int RADIUS_TYPE_MIDDELE -> RADIUS_TYPE_MIDDELE
    int RADIUS_TYPE_LARGE -> RADIUS_TYPE_LARGE
    java.lang.String getGeofenceId() -> getGeofenceId
com.baidu.navi.location.BDGeofence$Builder -> com.baidu.navi.location.BDGeofence$Builder:
    java.lang.String do -> do
    double for -> for
    double try -> try
    int a -> a
    boolean new -> new
    long if -> if
    java.lang.String int -> int
    com.baidu.navi.location.BDGeofence$Builder setExpirationDruation(long) -> setExpirationDruation
    com.baidu.navi.location.BDGeofence$Builder setCircularRegion(double,double,int) -> setCircularRegion
    com.baidu.navi.location.BDGeofence$Builder setGeofenceId(java.lang.String) -> setGeofenceId
    com.baidu.navi.location.BDGeofence$Builder setCoordType(java.lang.String) -> setCoordType
    com.baidu.navi.location.BDGeofence build() -> build
com.baidu.navi.location.BDLocation -> com.baidu.navi.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int gN -> gN
    java.lang.String g3 -> g3
    double gW -> gW
    double gP -> gP
    boolean g2 -> g2
    double g5 -> g5
    boolean gQ -> gQ
    float gR -> gR
    boolean gS -> gS
    float gY -> gY
    boolean g0 -> g0
    int gO -> gO
    float gV -> gV
    java.lang.String gX -> gX
    java.lang.String gT -> gT
    boolean gZ -> gZ
    boolean gU -> gU
    java.lang.String gM -> gM
    boolean g4 -> g4
    com.baidu.navi.location.BDLocation$a g6 -> g6
    java.lang.String g1 -> g1
    java.lang.String g7 -> g7
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toJsonString() -> toJsonString
    void if(java.lang.Boolean) -> if
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    com.baidu.navi.location.BDLocation toNewLocation(java.lang.String) -> toNewLocation
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    void setDerect(float) -> setDerect
    float getDerect() -> getDerect
    boolean hasSateNumber() -> hasSateNumber
    boolean hasPoi() -> hasPoi
    java.lang.String getPoi() -> getPoi
    void setPoi(java.lang.String) -> setPoi
    boolean hasAddr() -> hasAddr
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
    java.lang.String getFloor() -> getFloor
    java.lang.String getNetworkLocationType() -> getNetworkLocationType
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.baidu.navi.location.BDLocation$1 -> com.baidu.navi.location.BDLocation$1:
    com.baidu.navi.location.BDLocation a(android.os.Parcel) -> a
    com.baidu.navi.location.BDLocation[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.navi.location.BDLocation$a -> com.baidu.navi.location.BDLocation$a:
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String try -> try
    com.baidu.navi.location.BDLocation a -> a
com.baidu.navi.location.BDLocationListener -> com.baidu.navi.location.BDLocationListener:
    void onReceiveLocation(com.baidu.navi.location.BDLocation) -> onReceiveLocation
    void onReceivePoi(com.baidu.navi.location.BDLocation) -> onReceivePoi
com.baidu.navi.location.BDLocationStatusCodes -> com.baidu.navi.location.BDLocationStatusCodes:
    int SUCCESS -> SUCCESS
    int ERROR -> ERROR
    int GEOFENCE_NOT_AVAIABLE -> GEOFENCE_NOT_AVAIABLE
    int GEOFENCE_TOO_MANY_GEOFENCES -> GEOFENCE_TOO_MANY_GEOFENCES
    int GEOFENCE_SERVICE_NO_ALIVIABLE -> GEOFENCE_SERVICE_NO_ALIVIABLE
    int getStatusCode(int) -> getStatusCode
com.baidu.navi.location.BDNotifyListener -> com.baidu.navi.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.navi.location.y mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.navi.location.BDLocation,float) -> onNotify
com.baidu.navi.location.GeofenceClient -> com.baidu.navi.location.GeofenceClient:
    int bj -> bj
    java.lang.String BUNDLE_FOR_GEOFENCE_ID -> BUNDLE_FOR_GEOFENCE_ID
    android.content.Context bf -> bf
    boolean bl -> bl
    android.os.Messenger bk -> bk
    com.baidu.navi.location.GeofenceClient$a bm -> bm
    android.os.Messenger bi -> bi
    com.baidu.navi.location.GeofenceClient$OnGeofenceTriggerListener bg -> bg
    android.content.ServiceConnection bh -> bh
    void start() -> start
    void long() -> long
    boolean isStarted() -> isStarted
    void registerGeofenceTriggerListener(com.baidu.navi.location.GeofenceClient$OnGeofenceTriggerListener) -> registerGeofenceTriggerListener
    void addBDGeofence(com.baidu.navi.location.BDGeofence,com.baidu.navi.location.GeofenceClient$OnAddBDGeofencesResultListener) -> addBDGeofence
    void removeBDGeofences(java.util.List,com.baidu.navi.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> removeBDGeofences
    void for(java.lang.String) -> for
    void startGeofenceScann() -> startGeofenceScann
    void stop() -> stop
    void void() -> void
    android.os.Messenger if(com.baidu.navi.location.GeofenceClient,android.os.Messenger) -> if
    android.os.Messenger if(com.baidu.navi.location.GeofenceClient) -> if
    boolean if(com.baidu.navi.location.GeofenceClient,boolean) -> if
    void if(com.baidu.navi.location.GeofenceClient,java.lang.String) -> if
    void do(com.baidu.navi.location.GeofenceClient) -> do
com.baidu.navi.location.GeofenceClient$1 -> com.baidu.navi.location.GeofenceClient$1:
    com.baidu.navi.location.GeofenceClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.navi.location.GeofenceClient$OnAddBDGeofencesResultListener -> com.baidu.navi.location.GeofenceClient$OnAddBDGeofencesResultListener:
    void onAddBDGeofencesResult(int,java.lang.String) -> onAddBDGeofencesResult
com.baidu.navi.location.GeofenceClient$OnGeofenceTriggerListener -> com.baidu.navi.location.GeofenceClient$OnGeofenceTriggerListener:
    void onGeofenceTrigger(java.lang.String) -> onGeofenceTrigger
com.baidu.navi.location.GeofenceClient$OnRemoveBDGeofencesResultListener -> com.baidu.navi.location.GeofenceClient$OnRemoveBDGeofencesResultListener:
    void onRemoveBDGeofencesByRequestIdsResult(int,java.lang.String[]) -> onRemoveBDGeofencesByRequestIdsResult
com.baidu.navi.location.GeofenceClient$a -> com.baidu.navi.location.GeofenceClient$a:
    com.baidu.navi.location.GeofenceClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navi.location.Jni -> com.baidu.navi.location.Jni:
    int fo -> fo
    int fm -> fm
    int fn -> fn
    int fj -> fj
    int fk -> fk
    int fh -> fh
    int fg -> fg
    int fi -> fi
    boolean fl -> fl
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String c(byte[],int) -> c
    java.lang.String g(byte[]) -> g
    void f(byte[],byte[]) -> f
    java.lang.String l(java.lang.String) -> l
    java.lang.String o(java.lang.String) -> o
    java.lang.String m(java.lang.String) -> m
    double[] if(double,double,java.lang.String) -> if
    void int(java.lang.String,java.lang.String) -> int
    java.lang.String n(java.lang.String) -> n
com.baidu.navi.location.LLSInterface -> com.baidu.navi.location.LLSInterface:
    void onCreate(android.content.Context) -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnBind(android.content.Intent) -> onUnBind
    void onDestroy() -> onDestroy
    double getVersion() -> getVersion
com.baidu.navi.location.LocationClient -> com.baidu.navi.location.LocationClient:
    java.lang.String jU -> jU
    java.lang.String ka -> ka
    java.lang.String j7 -> j7
    int jX -> jX
    int ko -> ko
    int j6 -> j6
    int kB -> kB
    int kk -> kk
    int kn -> kn
    int ke -> ke
    int j8 -> j8
    int kc -> kc
    int jS -> jS
    int ky -> ky
    int kl -> kl
    int j2 -> j2
    int kr -> kr
    long kq -> kq
    long j0 -> j0
    java.lang.String kA -> kA
    com.baidu.navi.location.LocationClientOption kj -> kj
    boolean kp -> kp
    android.content.Context kg -> kg
    android.os.Messenger kh -> kh
    com.baidu.navi.location.LocationClient$a jT -> jT
    android.os.Messenger kf -> kf
    java.util.ArrayList kC -> kC
    com.baidu.navi.location.BDLocation kx -> kx
    boolean kb -> kb
    boolean kv -> kv
    boolean kd -> kd
    com.baidu.navi.location.LocationClient$b jY -> jY
    boolean jR -> jR
    java.lang.Object jV -> jV
    long ki -> ki
    long ks -> ks
    com.baidu.navi.location.y j1 -> j1
    boolean kw -> kw
    com.baidu.navi.location.BDLocationListener j9 -> j9
    java.lang.String kz -> kz
    java.lang.String ku -> ku
    boolean j5 -> j5
    java.lang.Boolean j4 -> j4
    java.lang.Boolean jZ -> jZ
    java.lang.Boolean km -> km
    java.lang.String PREF_FILE_NAME -> PREF_FILE_NAME
    java.lang.String PREF_KEY_NAME -> PREF_KEY_NAME
    android.content.ServiceConnection kt -> kt
    long j3 -> j3
    com.baidu.navi.location.BDErrorReport jW -> jW
    com.baidu.navi.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.navi.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void cE() -> cE
    int requestLocation() -> requestLocation
    int requestPoi() -> requestPoi
    boolean isStarted() -> isStarted
    com.baidu.navi.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void cB() -> cB
    void stop() -> stop
    void cC() -> cC
    void registerNotify(com.baidu.navi.location.BDNotifyListener) -> registerNotify
    void n(android.os.Message) -> n
    void removeNotifyEvent(com.baidu.navi.location.BDNotifyListener) -> removeNotifyEvent
    void r(android.os.Message) -> r
    void p(android.os.Message) -> p
    android.os.Bundle cz() -> cz
    android.os.Bundle cy() -> cy
    void registerNotifyLocationListener(com.baidu.navi.location.BDLocationListener) -> registerNotifyLocationListener
    void t(android.os.Message) -> t
    void registerLocationListener(com.baidu.navi.location.BDLocationListener) -> registerLocationListener
    void s(android.os.Message) -> s
    void unRegisterLocationListener(com.baidu.navi.location.BDLocationListener) -> unRegisterLocationListener
    void o(android.os.Message) -> o
    void cD() -> cD
    void cF() -> cF
    void cA() -> cA
    void if(android.os.Message,int) -> if
    void q(android.os.Message) -> q
    void case(int) -> case
    void setForBaiduMap(boolean) -> setForBaiduMap
    boolean notifyError() -> notifyError
    int reportErrorWithInfo(com.baidu.navi.location.BDErrorReport) -> reportErrorWithInfo
    void cancleError() -> cancleError
    void char(boolean) -> char
    boolean baiduMapStartIndoorMode() -> baiduMapStartIndoorMode
    boolean baiduMapStopIndoorMode() -> baiduMapStopIndoorMode
    boolean char(int) -> char
    void setAccessKey(java.lang.String) -> setAccessKey
    android.os.Messenger if(com.baidu.navi.location.LocationClient,android.os.Messenger) -> if
    android.os.Messenger char(com.baidu.navi.location.LocationClient) -> char
    boolean do(com.baidu.navi.location.LocationClient,boolean) -> do
    android.os.Messenger long(com.baidu.navi.location.LocationClient) -> long
    android.os.Bundle new(com.baidu.navi.location.LocationClient) -> new
    com.baidu.navi.location.LocationClientOption else(com.baidu.navi.location.LocationClient) -> else
    java.lang.Boolean int(com.baidu.navi.location.LocationClient) -> int
    java.lang.Boolean if(com.baidu.navi.location.LocationClient,java.lang.Boolean) -> if
    com.baidu.navi.location.LocationClient$a do(com.baidu.navi.location.LocationClient) -> do
    java.lang.Object goto(com.baidu.navi.location.LocationClient) -> goto
    boolean int(com.baidu.navi.location.LocationClient,boolean) -> int
    java.util.ArrayList try(com.baidu.navi.location.LocationClient) -> try
    void for(com.baidu.navi.location.LocationClient,android.os.Message) -> for
    void int(com.baidu.navi.location.LocationClient,android.os.Message) -> int
    void new(com.baidu.navi.location.LocationClient,android.os.Message) -> new
    void try(com.baidu.navi.location.LocationClient,android.os.Message) -> try
    void byte(com.baidu.navi.location.LocationClient,android.os.Message) -> byte
    void do(com.baidu.navi.location.LocationClient,android.os.Message) -> do
    void case(com.baidu.navi.location.LocationClient) -> case
    void h(com.baidu.navi.location.LocationClient) -> h
    void if(com.baidu.navi.location.LocationClient) -> if
    void for(com.baidu.navi.location.LocationClient) -> for
    void byte(com.baidu.navi.location.LocationClient) -> byte
    void void(com.baidu.navi.location.LocationClient) -> void
    boolean if(com.baidu.navi.location.LocationClient,boolean) -> if
    void if(com.baidu.navi.location.LocationClient,android.os.Message,int) -> if
    void if(com.baidu.navi.location.LocationClient,android.os.Message) -> if
    void for(com.baidu.navi.location.LocationClient,boolean) -> for
com.baidu.navi.location.LocationClient$1 -> com.baidu.navi.location.LocationClient$1:
    com.baidu.navi.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.navi.location.LocationClient$a -> com.baidu.navi.location.LocationClient$a:
    com.baidu.navi.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navi.location.LocationClient$b -> com.baidu.navi.location.LocationClient$b:
    com.baidu.navi.location.LocationClient a -> a
    void run() -> run
com.baidu.navi.location.LocationClientOption -> com.baidu.navi.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int GpsFirst -> GpsFirst
    int NetWorkFirst -> NetWorkFirst
    java.lang.String do -> do
    java.lang.String case -> case
    boolean for -> for
    int int -> int
    int void -> void
    java.lang.String if -> if
    int c -> c
    boolean char -> char
    boolean a -> a
    boolean new -> new
    boolean b -> b
    float long -> long
    int else -> else
    java.lang.String try -> try
    boolean goto -> goto
    boolean byte -> byte
    boolean equals(com.baidu.navi.location.LocationClientOption) -> equals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setAddrType(java.lang.String) -> setAddrType
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    java.lang.String getServiceName() -> getServiceName
    void setServiceName(java.lang.String) -> setServiceName
    void setPoiDistance(float) -> setPoiDistance
    float getPoiDistance() -> getPoiDistance
    void setPoiNumber(int) -> setPoiNumber
    int getPoiNumber() -> getPoiNumber
    void setPoiExtraInfo(boolean) -> setPoiExtraInfo
    boolean getPoiExtranInfo() -> getPoiExtranInfo
    void disableCache(boolean) -> disableCache
    boolean isDisableCache() -> isDisableCache
    void SetIgnoreCacheException(boolean) -> SetIgnoreCacheException
    void setIgnoreKillProcess(boolean) -> setIgnoreKillProcess
com.baidu.navi.location.LogHelper -> com.baidu.navi.location.LogHelper:
    java.lang.Boolean lu -> lu
    java.lang.Boolean lp -> lp
    char lq -> lq
    java.lang.String lr -> lr
    int lt -> lt
    java.lang.String lo -> lo
    java.text.SimpleDateFormat lv -> lv
    java.text.SimpleDateFormat ls -> ls
    void w(java.lang.String,java.lang.Object) -> w
    void e(java.lang.String,java.lang.Object) -> e
    void d(java.lang.String,java.lang.Object) -> d
    void i(java.lang.String,java.lang.Object) -> i
    void v(java.lang.String,java.lang.Object) -> v
    void w(java.lang.String,java.lang.String) -> w
    void e(java.lang.String,java.lang.String) -> e
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void v(java.lang.String,java.lang.String) -> v
    void if(java.lang.String,java.lang.String,char) -> if
    void int(java.lang.String,java.lang.String,java.lang.String) -> int
    void delFile() -> delFile
    java.util.Date c4() -> c4
com.baidu.navi.location.a -> com.baidu.navi.location.a:
    boolean a -> a
com.baidu.navi.location.a.a -> com.baidu.navi.location.a.a:
    java.lang.String else -> else
    java.lang.String if -> if
    java.lang.String do -> do
    java.lang.String case -> case
    java.lang.String for -> for
    java.lang.String try -> try
    java.lang.String char -> char
    java.lang.String a -> a
    java.lang.String void -> void
    java.lang.String new -> new
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String long -> long
    java.lang.String goto -> goto
com.baidu.navi.location.a.b -> com.baidu.navi.location.a.b:
    java.lang.String a -> a
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String for -> for
    java.lang.String int -> int
    java.lang.String do -> do
com.baidu.navi.location.aa -> com.baidu.navi.location.aa:
    com.baidu.navi.location.aa$a gH -> gH
    android.os.Messenger gJ -> gJ
    android.content.Context gF -> gF
    boolean gG -> gG
    android.os.Looper gK -> gK
    android.os.HandlerThread gE -> gE
    boolean gI -> gI
    long gL -> gL
    void onCreate(android.content.Context) -> onCreate
    void bp() -> bp
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void bo() -> bo
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.Handler bn() -> bn
    long bm() -> bm
    void h(android.os.Message) -> h
    void void(android.os.Message) -> void
    void j(android.os.Message) -> j
    void long(android.os.Message) -> long
    boolean onUnBind(android.content.Intent) -> onUnBind
    double getVersion() -> getVersion
    void int(com.baidu.navi.location.aa,android.os.Message) -> int
    void for(com.baidu.navi.location.aa,android.os.Message) -> for
    void if(com.baidu.navi.location.aa,android.os.Message) -> if
    void do(com.baidu.navi.location.aa,android.os.Message) -> do
    void if(com.baidu.navi.location.aa) -> if
    void do(com.baidu.navi.location.aa) -> do
com.baidu.navi.location.aa$a -> com.baidu.navi.location.aa$a:
    com.baidu.navi.location.aa a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navi.location.ab -> com.baidu.navi.location.ab:
    boolean Q -> Q
    boolean R -> R
    boolean S -> S
com.baidu.navi.location.ac -> com.baidu.navi.location.ac:
    int kU -> kU
    int kF -> kF
    android.hardware.SensorManager kR -> kR
    android.hardware.Sensor kE -> kE
    android.hardware.Sensor kK -> kK
    android.os.Handler kM -> kM
    com.baidu.navi.location.ac kN -> kN
    boolean kL -> kL
    boolean kJ -> kJ
    boolean kH -> kH
    boolean kG -> kG
    java.lang.StringBuffer kS -> kS
    java.lang.StringBuffer kQ -> kQ
    java.lang.Runnable kT -> kT
    java.lang.Runnable kD -> kD
    int kP -> kP
    int kI -> kI
    boolean kO -> kO
    com.baidu.navi.location.ac cH() -> cH
    void else(int) -> else
    boolean goto(int) -> goto
    void if(java.io.RandomAccessFile,int) -> if
    void void(int) -> void
    boolean cU() -> cU
    boolean if(java.io.File) -> if
    java.lang.String long(int) -> long
    java.lang.String h(int) -> h
    java.lang.String cV() -> cV
    boolean if(java.io.File,int) -> if
    java.lang.String cR() -> cR
    java.lang.String cM() -> cM
    java.lang.String cL() -> cL
    void cS() -> cS
    void cP() -> cP
    void cO() -> cO
    void cT() -> cT
    void cK() -> cK
    void cQ() -> cQ
    void cJ() -> cJ
    void cN() -> cN
    void cG() -> cG
    void cI() -> cI
    void do(java.lang.StringBuffer) -> do
    void if(java.lang.StringBuffer) -> if
    void if(java.lang.StringBuffer,java.lang.StringBuffer,java.lang.String) -> if
    void if(java.lang.StringBuffer,java.io.File) -> if
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    java.lang.Runnable do(com.baidu.navi.location.ac) -> do
    android.os.Handler for(com.baidu.navi.location.ac) -> for
    java.lang.Runnable if(com.baidu.navi.location.ac) -> if
com.baidu.navi.location.ac$1 -> com.baidu.navi.location.ac$1:
    com.baidu.navi.location.ac a -> a
    void run() -> run
com.baidu.navi.location.ac$2 -> com.baidu.navi.location.ac$2:
    com.baidu.navi.location.ac a -> a
    void run() -> run
com.baidu.navi.location.ac$3 -> com.baidu.navi.location.ac$3:
    com.baidu.navi.location.ac a -> a
    void run() -> run
com.baidu.navi.location.ac$a -> com.baidu.navi.location.ac$a:
    boolean if -> if
    java.lang.StringBuffer do -> do
    com.baidu.navi.location.ac a -> a
    void if() -> if
    void a() -> a
    void do() -> do
com.baidu.navi.location.ac$b -> com.baidu.navi.location.ac$b:
    com.baidu.navi.location.ac a -> a
com.baidu.navi.location.ad -> com.baidu.navi.location.ad:
    boolean hl -> hl
    boolean hc -> hc
    com.baidu.navi.location.ad g8 -> g8
    long hf -> hf
    boolean hh -> hh
    com.baidu.navi.location.ad$e hk -> hk
    com.baidu.navi.location.ai hg -> hg
    com.baidu.navi.location.ad$a hd -> hd
    com.baidu.navi.location.ad$c hb -> hb
    long ha -> ha
    boolean he -> he
    boolean g9 -> g9
    long hj -> hj
    int hi -> hi
    com.baidu.navi.location.ad br() -> br
    void bs() -> bs
    void bu() -> bu
    boolean bv() -> bv
    boolean bt() -> bt
    void bq() -> bq
    void k(android.os.Message) -> k
    void new(com.baidu.navi.location.ad) -> new
    void if(com.baidu.navi.location.ad,android.os.Message) -> if
    boolean try(com.baidu.navi.location.ad) -> try
    long if(com.baidu.navi.location.ad) -> if
    com.baidu.navi.location.ai int(com.baidu.navi.location.ad) -> int
    boolean if(com.baidu.navi.location.ad,boolean) -> if
    long for(com.baidu.navi.location.ad) -> for
    boolean do(com.baidu.navi.location.ad) -> do
com.baidu.navi.location.ad$a -> com.baidu.navi.location.ad$a:
    boolean do -> do
    long if -> if
    com.baidu.navi.location.ad a -> a
    void run() -> run
    boolean a(com.baidu.navi.location.ad$a,boolean) -> a
com.baidu.navi.location.ad$b -> com.baidu.navi.location.ad$b:
    double do -> do
    double if -> if
    long new -> new
    int for -> for
    boolean int -> int
    com.baidu.navi.location.ad a -> a
    double for() -> for
    double do() -> do
    void if(double) -> if
    void a(double) -> a
    long int() -> int
    int a() -> a
    boolean if() -> if
    void a(boolean) -> a
    int a(com.baidu.navi.location.ad$b) -> a
    float do(com.baidu.navi.location.ad$b) -> do
    boolean if(com.baidu.navi.location.ad$b) -> if
com.baidu.navi.location.ad$c -> com.baidu.navi.location.ad$c:
    boolean dB -> dB
    boolean dy -> dy
    java.lang.String dx -> dx
    java.lang.String dD -> dD
    com.baidu.navi.location.ad$d dC -> dC
    com.baidu.navi.location.ad$f dz -> dz
    int dA -> dA
    com.baidu.navi.location.ad dw -> dw
    void Y() -> Y
    void do(boolean) -> do
    void am() -> am
    boolean if(com.baidu.navi.location.aq$b,double) -> if
    void al() -> al
com.baidu.navi.location.ad$d -> com.baidu.navi.location.ad$d:
    double do -> do
    double if -> if
    java.util.HashMap int -> int
    double for -> for
    com.baidu.navi.location.ad a -> a
    double a(com.baidu.navi.location.ad$d) -> a
    java.util.HashMap if() -> if
    double a() -> a
com.baidu.navi.location.ad$e -> com.baidu.navi.location.ad$e:
    com.baidu.navi.location.ad a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navi.location.ad$f -> com.baidu.navi.location.ad$f:
    int do -> do
    com.baidu.navi.location.ad$b[] if -> if
    int int -> int
    int for -> for
    com.baidu.navi.location.ad a -> a
    com.baidu.navi.location.ad$b a() -> a
    void do(com.baidu.navi.location.ad$b) -> do
    boolean a(com.baidu.navi.location.ad$b) -> a
    boolean if() -> if
    boolean int() -> int
    boolean try() -> try
    com.baidu.navi.location.ad$b a(int) -> a
    int do() -> do
    java.util.ArrayList new() -> new
    void for() -> for
    java.lang.String toString() -> toString
    boolean if(com.baidu.navi.location.ad$b) -> if
com.baidu.navi.location.ae -> com.baidu.navi.location.ae:
    com.baidu.navi.location.aq$b eu -> eu
    com.baidu.navi.location.s$a er -> er
    boolean ep -> ep
    boolean et -> et
    boolean es -> es
    boolean en -> en
    java.lang.String eo -> eo
    android.os.Handler eq -> eq
    void byte(android.os.Message) -> byte
    void ay() -> ay
    java.lang.String j(java.lang.String) -> j
com.baidu.navi.location.ae$a -> com.baidu.navi.location.ae$a:
    java.lang.String dG -> dG
    java.lang.String dF -> dF
    com.baidu.navi.location.ae dE -> dE
    void Y() -> Y
    void do(boolean) -> do
    void void(java.lang.String) -> void
com.baidu.navi.location.ae$b -> com.baidu.navi.location.ae$b:
    com.baidu.navi.location.ae a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navi.location.af -> com.baidu.navi.location.af:
    com.baidu.navi.location.af ew -> ew
    int ev -> ev
    int eF -> eF
    boolean eB -> eB
    com.baidu.navi.location.ar ex -> ex
    com.baidu.navi.location.ae$a eA -> eA
    java.lang.String eC -> eC
    com.baidu.navi.location.BDLocation ez -> ez
    com.baidu.navi.location.BDLocation eI -> eI
    com.baidu.navi.location.aq$b eK -> eK
    com.baidu.navi.location.s$a eG -> eG
    boolean ey -> ey
    boolean eJ -> eJ
    boolean eH -> eH
    long eE -> eE
    long eD -> eD
    android.os.Handler eq -> eq
    com.baidu.navi.location.af az() -> az
    void case(android.os.Message) -> case
    void aG() -> aG
    void aD() -> aD
    void char(android.os.Message) -> char
    boolean if(com.baidu.navi.location.aq$b) -> if
    boolean aA() -> aA
    boolean aF() -> aF
    boolean if(com.baidu.navi.location.s$a) -> if
    void aI() -> aI
    void aC() -> aC
    void byte(android.os.Message) -> byte
    void ay() -> ay
    void aE() -> aE
    void for(com.baidu.navi.location.BDLocation) -> for
    void aB() -> aB
    void aH() -> aH
    boolean if(com.baidu.navi.location.af) -> if
    boolean if(com.baidu.navi.location.af,boolean) -> if
    void do(com.baidu.navi.location.af) -> do
com.baidu.navi.location.af$1 -> com.baidu.navi.location.af$1:
com.baidu.navi.location.af$a -> com.baidu.navi.location.af$a:
    com.baidu.navi.location.af a -> a
    void run() -> run
com.baidu.navi.location.ag -> com.baidu.navi.location.ag:
    com.baidu.navi.location.ag hn -> hn
    android.os.Handler ho -> ho
    boolean hm -> hm
    boolean hp -> hp
    com.baidu.navi.location.ag bz() -> bz
    void bw() -> bw
    void by() -> by
    void bx() -> bx
    void if(com.baidu.navi.location.ag) -> if
    boolean if(com.baidu.navi.location.ag,boolean) -> if
    boolean for(com.baidu.navi.location.ag) -> for
    android.os.Handler do(com.baidu.navi.location.ag) -> do
com.baidu.navi.location.ag$1 -> com.baidu.navi.location.ag$1:
    com.baidu.navi.location.ag a -> a
    void run() -> run
com.baidu.navi.location.ag$2 -> com.baidu.navi.location.ag$2:
    com.baidu.navi.location.ag a -> a
    void run() -> run
com.baidu.navi.location.ah -> com.baidu.navi.location.ah:
    int hs -> hs
    int hD -> hD
    int hr -> hr
    boolean hx -> hx
    long hB -> hB
    android.location.Location hv -> hv
    int ht -> ht
    int hy -> hy
    java.lang.StringBuilder hA -> hA
    long hw -> hw
    java.lang.String hq -> hq
    com.baidu.navi.location.ah$a hu -> hu
    android.os.Handler hC -> hC
    boolean hz -> hz
    com.baidu.navi.location.ah bB() -> bB
    void else(android.location.Location) -> else
    void goto(android.location.Location) -> goto
    void char(android.location.Location) -> char
    void bA() -> bA
    byte[] t(java.lang.String) -> t
    void bC() -> bC
    void if(com.baidu.navi.location.ah,android.location.Location) -> if
    int for(com.baidu.navi.location.ah,int) -> for
    int do(com.baidu.navi.location.ah,int) -> do
    int if(com.baidu.navi.location.ah,int) -> if
    byte[] s(java.lang.String) -> s
    void for(com.baidu.navi.location.ah) -> for
    int if(com.baidu.navi.location.ah) -> if
    android.os.Handler do(com.baidu.navi.location.ah) -> do
com.baidu.navi.location.ah$1 -> com.baidu.navi.location.ah$1:
    android.location.Location if -> if
    com.baidu.navi.location.ah a -> a
    void run() -> run
com.baidu.navi.location.ah$2 -> com.baidu.navi.location.ah$2:
    com.baidu.navi.location.ah a -> a
    void run() -> run
com.baidu.navi.location.ah$a -> com.baidu.navi.location.ah$a:
    java.lang.String dI -> dI
    com.baidu.navi.location.ah dH -> dH
    void Y() -> Y
    void do(boolean) -> do
    void h(java.lang.String) -> h
    void an() -> an
com.baidu.navi.location.ah$b -> com.baidu.navi.location.ah$b:
    com.baidu.navi.location.ah a -> a
com.baidu.navi.location.ai -> com.baidu.navi.location.ai:
    android.hardware.SensorManager h2 -> h2
    boolean h3 -> h3
    int hR -> hR
    android.hardware.Sensor hT -> hT
    long hH -> hH
    int hW -> hW
    int hG -> hG
    float h0 -> h0
    float hJ -> hJ
    float hZ -> hZ
    int hU -> hU
    float[] hI -> hI
    float[] hV -> hV
    int hX -> hX
    double[] hY -> hY
    int h1 -> h1
    int hE -> hE
    java.util.Timer hQ -> hQ
    int hS -> hS
    double[] hM -> hM
    int hO -> hO
    double hL -> hL
    int hF -> hF
    long hP -> hP
    int hK -> hK
    android.hardware.SensorEventListener hN -> hN
    void bH() -> bH
    void bI() -> bI
    void bG() -> bG
    void do(double) -> do
    boolean if(double) -> if
    float[] if(float,float,float) -> if
    double if(double[]) -> if
    void byte(int) -> byte
    int bF() -> bF
    int bD() -> bD
    void bE() -> bE
    float[] if(com.baidu.navi.location.ai,float[]) -> if
    float[] if(com.baidu.navi.location.ai,float,float,float) -> if
    int for(com.baidu.navi.location.ai) -> for
    int do(com.baidu.navi.location.ai) -> do
    int if(com.baidu.navi.location.ai,int) -> if
    void if(com.baidu.navi.location.ai) -> if
com.baidu.navi.location.ai$1 -> com.baidu.navi.location.ai$1:
    com.baidu.navi.location.ai a -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.navi.location.ai$2 -> com.baidu.navi.location.ai$2:
    com.baidu.navi.location.ai a -> a
    void run() -> run
com.baidu.navi.location.aj -> com.baidu.navi.location.aj:
    com.baidu.navi.location.aj goto -> goto
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String else -> else
    java.lang.String new -> new
    boolean a -> a
    java.lang.String case -> case
    java.lang.String do -> do
    com.baidu.navi.location.aj$a try -> try
    long char -> char
    long for -> for
    long if -> if
    com.baidu.navi.location.aj if() -> if
    void do() -> do
    void a() -> a
    void a(android.os.Message) -> a
    void a(java.lang.String) -> a
    void if(java.lang.String) -> if
    java.lang.String if(com.baidu.navi.location.aj) -> if
    java.lang.String if(com.baidu.navi.location.aj,java.lang.String) -> if
    java.lang.String do(com.baidu.navi.location.aj) -> do
    java.lang.String a(com.baidu.navi.location.aj,java.lang.String) -> a
    long for(com.baidu.navi.location.aj) -> for
    long a(com.baidu.navi.location.aj) -> a
    long a(com.baidu.navi.location.aj,long) -> a
com.baidu.navi.location.aj$a -> com.baidu.navi.location.aj$a:
    boolean dM -> dM
    java.lang.String dK -> dK
    android.os.Messenger dL -> dL
    com.baidu.navi.location.aj dJ -> dJ
    void Y() -> Y
    void do(boolean) -> do
    void try(android.os.Message) -> try
com.baidu.navi.location.ak -> com.baidu.navi.location.ak:
com.baidu.navi.location.al -> com.baidu.navi.location.al:
    java.lang.String h6 -> h6
    double ib -> ib
    int ia -> ia
    java.lang.String h9 -> h9
    java.lang.String h7 -> h7
    java.lang.String[] h5 -> h5
    java.lang.String[] h8 -> h8
    com.baidu.navi.location.al h4 -> h4
    com.baidu.navi.location.al bM() -> bM
    void new(com.baidu.navi.location.BDLocation) -> new
    com.baidu.navi.location.al$a bO() -> bO
    void bP() -> bP
    double bQ() -> bQ
    double bK() -> bK
    double bJ() -> bJ
    long bL() -> bL
    boolean bN() -> bN
    int bR() -> bR
com.baidu.navi.location.al$a -> com.baidu.navi.location.al$a:
    double int -> int
    double try -> try
    double if -> if
    long new -> new
    boolean for -> for
    int do -> do
    com.baidu.navi.location.al a -> a
com.baidu.navi.location.am -> com.baidu.navi.location.am:
    java.lang.Object a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object,java.lang.Object) -> a
    void a(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void if(boolean,java.lang.Object) -> if
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void if(boolean) -> if
com.baidu.navi.location.an -> com.baidu.navi.location.an:
    android.os.HandlerThread a -> a
    android.os.HandlerThread a() -> a
com.baidu.navi.location.ao -> com.baidu.navi.location.ao:
    com.baidu.navi.location.ao if() -> if
    void do() -> do
    void a() -> a
com.baidu.navi.location.ap -> com.baidu.navi.location.ap:
    int d -> d
    long void -> void
    int int -> int
    int e -> e
    java.lang.String for -> for
    java.lang.String byte -> byte
    int else -> else
    int case -> case
    int h -> h
    java.lang.String do -> do
    double goto -> goto
    double try -> try
    int a -> a
    float b -> b
    long long -> long
    int c -> c
    java.lang.String new -> new
    boolean f -> f
    boolean char -> char
    boolean if -> if
    long g -> g
    java.lang.String getGeofenceId() -> getGeofenceId
    double byte() -> byte
    double a() -> a
    float do() -> do
    void a(float) -> a
    long else() -> else
    java.lang.String int() -> int
    boolean try() -> try
    void do(boolean) -> do
    boolean for() -> for
    void if(boolean) -> if
    boolean if() -> if
    void a(boolean) -> a
    long char() -> char
    void a(long) -> a
    int case() -> case
    int new() -> new
    void if(java.lang.String) -> if
    void if(int) -> if
    void a(double,double) -> a
    void a(java.lang.String) -> a
    void if(long) -> if
    java.lang.String a(int) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.navi.location.aq -> com.baidu.navi.location.aq:
    int id -> id
    long ic -> ic
    long ij -> ij
    long il -> il
    com.baidu.navi.location.aq in -> in
    android.net.wifi.WifiManager im -> im
    com.baidu.navi.location.aq$a ir -> ir
    com.baidu.navi.location.aq$b ih -> ih
    long ik -> ik
    long iq -> iq
    boolean ip -> ip
    java.lang.Object ii -> ii
    java.lang.reflect.Method io -> io
    boolean ie -> ie
    long ig -> ig
    com.baidu.navi.location.aq bS() -> bS
    void b0() -> b0
    void bT() -> bT
    boolean b1() -> b1
    boolean bX() -> bX
    boolean b4() -> b4
    boolean bU() -> bU
    java.lang.String b2() -> b2
    com.baidu.navi.location.aq$b bV() -> bV
    com.baidu.navi.location.aq$b b5() -> b5
    com.baidu.navi.location.aq$b b3() -> b3
    void bW() -> bW
    boolean bY() -> bY
    boolean if(com.baidu.navi.location.aq$b,com.baidu.navi.location.aq$b,float) -> if
    double if(com.baidu.navi.location.aq$b,com.baidu.navi.location.aq$b) -> if
    java.lang.String bZ() -> bZ
    boolean u(java.lang.String) -> u
    long if(com.baidu.navi.location.aq,long) -> if
    void if(com.baidu.navi.location.aq) -> if
    boolean if(com.baidu.navi.location.aq,java.lang.String) -> if
    long do(com.baidu.navi.location.aq) -> do
com.baidu.navi.location.aq$1 -> com.baidu.navi.location.aq$1:
com.baidu.navi.location.aq$a -> com.baidu.navi.location.aq$a:
    com.baidu.navi.location.aq a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.navi.location.aq$b -> com.baidu.navi.location.aq$b:
    java.util.List for -> for
    long if -> if
    long int -> int
    boolean do -> do
    boolean new -> new
    com.baidu.navi.location.aq a -> a
    java.lang.String int() -> int
    int try() -> try
    java.lang.String char() -> char
    java.lang.String byte() -> byte
    java.lang.String a(int) -> a
    java.lang.String else() -> else
    void a() -> a
    java.lang.String if(int) -> if
    boolean do(com.baidu.navi.location.aq$b) -> do
    boolean a(com.baidu.navi.location.aq$b) -> a
    boolean if(com.baidu.navi.location.aq$b) -> if
    int do() -> do
    boolean case() -> case
    boolean for() -> for
    boolean new() -> new
    boolean if() -> if
com.baidu.navi.location.ar -> com.baidu.navi.location.ar:
    java.util.List iv -> iv
    long is -> is
    java.util.Queue iu -> iu
    android.location.Location it -> it
    void b6() -> b6
    boolean do(com.baidu.navi.location.aq$b) -> do
    int try(com.baidu.navi.location.BDLocation) -> try
com.baidu.navi.location.as -> com.baidu.navi.location.as:
    boolean k6 -> k6
    java.lang.String k5 -> k5
    boolean ld -> ld
    java.lang.String k1 -> k1
    int k7 -> k7
    int k9 -> k9
    java.lang.String lb -> lb
    char k4 -> k4
    java.lang.String lc -> lc
    boolean k8 -> k8
    int kW -> kW
    double k3 -> k3
    double kZ -> kZ
    java.util.List kX -> kX
    boolean k2 -> k2
    int la -> la
    boolean kY -> kY
    java.lang.String k0 -> k0
    int kV -> kV
    void cW() -> cW
    boolean B(java.lang.String) -> B
    boolean cZ() -> cZ
    int c1() -> c1
    java.lang.String cY() -> cY
    double c0() -> c0
    double cX() -> cX
com.baidu.navi.location.at -> com.baidu.navi.location.at:
    int iz -> iz
    java.lang.String h -> h
    java.lang.String ix -> ix
    java.lang.String iA -> iA
    java.lang.String iC -> iC
    java.lang.String iE -> iE
    java.lang.String iB -> iB
    java.lang.String iL -> iL
    int iJ -> iJ
    int iI -> iI
    int iy -> iy
    int iH -> iH
    android.content.Context iw -> iw
    com.baidu.navi.location.at$a iK -> iK
    android.os.HandlerThread iG -> iG
    java.lang.Object iD -> iD
    com.baidu.navi.location.at iF -> iF
    java.lang.String b7() -> b7
    com.baidu.navi.location.at for(android.content.Context) -> for
    void if(com.baidu.navi.location.ap,com.baidu.navi.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(com.baidu.navi.location.ap) -> if
    void x(java.lang.String) -> x
    void if(java.util.List,com.baidu.navi.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    long cd() -> cd
    void if(int,java.lang.String,com.baidu.navi.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(int,java.lang.String[],com.baidu.navi.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    void cb() -> cb
    void b8() -> b8
    void cc() -> cc
    int if(com.baidu.navi.location.ap,java.lang.String) -> if
    int do(java.util.List) -> do
    void ca() -> ca
    void b9() -> b9
    void if(com.baidu.navi.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> if
    void int(android.content.Context) -> int
    int do(android.content.Context) -> do
    void for(com.baidu.navi.location.at) -> for
    android.content.Context do(com.baidu.navi.location.at) -> do
    java.lang.String int(com.baidu.navi.location.at) -> int
    void if(com.baidu.navi.location.at,com.baidu.navi.location.GeofenceClient$OnAddBDGeofencesResultListener,int,java.lang.String) -> if
    com.baidu.navi.location.at$a if(com.baidu.navi.location.at) -> if
    void if(com.baidu.navi.location.at,int,java.lang.String,com.baidu.navi.location.GeofenceClient$OnAddBDGeofencesResultListener) -> if
    void if(com.baidu.navi.location.at,int,java.lang.String[],com.baidu.navi.location.GeofenceClient$OnRemoveBDGeofencesResultListener) -> if
    int if(com.baidu.navi.location.at,com.baidu.navi.location.ap,java.lang.String) -> if
    int if(com.baidu.navi.location.at,java.util.List) -> if
com.baidu.navi.location.at$1 -> com.baidu.navi.location.at$1:
    com.baidu.navi.location.ap if -> if
    com.baidu.navi.location.at a -> a
    void run() -> run
com.baidu.navi.location.at$2 -> com.baidu.navi.location.at$2:
    com.baidu.navi.location.at a -> a
    void run() -> run
com.baidu.navi.location.at$a -> com.baidu.navi.location.at$a:
    int if -> if
    int do -> do
    int for -> for
    com.baidu.navi.location.at a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navi.location.at$b -> com.baidu.navi.location.at$b:
    java.lang.String dS -> dS
    java.lang.String dQ -> dQ
    java.lang.String dV -> dV
    java.lang.String dR -> dR
    java.lang.String dX -> dX
    java.lang.String dT -> dT
    java.lang.String dO -> dO
    int dP -> dP
    com.baidu.navi.location.ap dY -> dY
    com.baidu.navi.location.GeofenceClient$OnAddBDGeofencesResultListener dN -> dN
    int dW -> dW
    com.baidu.navi.location.at dU -> dU
    void Y() -> Y
    void do(boolean) -> do
    void ao() -> ao
com.baidu.navi.location.at$c -> com.baidu.navi.location.at$c:
    com.baidu.navi.location.ap do -> do
    java.lang.String if -> if
    com.baidu.navi.location.GeofenceClient$OnAddBDGeofencesResultListener for -> for
    com.baidu.navi.location.at a -> a
    void run() -> run
com.baidu.navi.location.at$d -> com.baidu.navi.location.at$d:
    java.util.List if -> if
    com.baidu.navi.location.GeofenceClient$OnRemoveBDGeofencesResultListener do -> do
    com.baidu.navi.location.at a -> a
    void run() -> run
com.baidu.navi.location.au -> com.baidu.navi.location.au:
    void if() -> if
    void a() -> a
com.baidu.navi.location.av -> com.baidu.navi.location.av:
    boolean for -> for
    java.lang.String if -> if
    com.baidu.navi.location.av$a do -> do
    com.baidu.navi.location.av a -> a
    com.baidu.navi.location.av a() -> a
    void for() -> for
    void do() -> do
    java.lang.String if() -> if
    boolean int() -> int
    boolean a(com.baidu.navi.location.av,boolean) -> a
    java.lang.String a(com.baidu.navi.location.av,java.lang.String) -> a
    boolean a(com.baidu.navi.location.av) -> a
com.baidu.navi.location.av$a -> com.baidu.navi.location.av$a:
    com.baidu.navi.location.av a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.navi.location.aw -> com.baidu.navi.location.aw:
    java.lang.String h -> h
    java.lang.String H -> H
    int E -> E
    int byte -> byte
    int for -> for
    int j -> j
    int q -> q
    int N -> N
    int c -> c
    int K -> K
    int P -> P
    int else -> else
    int D -> D
    int goto -> goto
    int p -> p
    int J -> J
    int F -> F
    int n -> n
    int void -> void
    int do -> do
    int char -> char
    int o -> o
    int m -> m
    int g -> g
    int w -> w
    int d -> d
    int case -> case
    int B -> B
    int e -> e
    int C -> C
    int z -> z
    int A -> A
    int y -> y
    int l -> l
    int L -> L
    int t -> t
    int r -> r
    int M -> M
    int G -> G
    int v -> v
    int x -> x
    int u -> u
    int try -> try
    int k -> k
    int f -> f
    int int -> int
    int s -> s
    int long -> long
    int if -> if
    int b -> b
    int O -> O
    int i -> i
    int I -> I
    int new -> new
com.baidu.navi.location.ax -> com.baidu.navi.location.ax:
    com.baidu.navi.location.ax iQ -> iQ
    java.lang.String ja -> ja
    boolean i2 -> i2
    boolean i8 -> i8
    boolean iR -> iR
    java.lang.String iS -> iS
    int i6 -> i6
    double iZ -> iZ
    double iY -> iY
    double i3 -> i3
    double iW -> iW
    double iV -> iV
    long iT -> iT
    boolean i0 -> i0
    boolean i4 -> i4
    int iU -> iU
    int i9 -> i9
    java.lang.String iX -> iX
    java.lang.String i7 -> i7
    java.lang.String i5 -> i5
    boolean i1 -> i1
    com.baidu.navi.location.ax cj() -> cj
    void l(android.os.Message) -> l
    void ci() -> ci
    void ch() -> ch
    void m(android.os.Message) -> m
    com.baidu.navi.location.BDLocation try(boolean) -> try
    void for(com.baidu.navi.location.aq$b) -> for
    void if(com.baidu.navi.location.aq$b,com.baidu.navi.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
    void cf() -> cf
    void if(java.lang.String,com.baidu.navi.location.s$a,com.baidu.navi.location.aq$b,com.baidu.navi.location.BDLocation) -> if
    void y(java.lang.String) -> y
    void if(java.lang.String,com.baidu.navi.location.s$a,android.database.sqlite.SQLiteDatabase) -> if
    void cg() -> cg
    java.lang.String byte(boolean) -> byte
    void ce() -> ce
    void if(com.baidu.navi.location.ax) -> if
    boolean if(com.baidu.navi.location.ax,boolean) -> if
    java.lang.String do(com.baidu.navi.location.ax) -> do
    void if(com.baidu.navi.location.ax,java.lang.String,com.baidu.navi.location.s$a,android.database.sqlite.SQLiteDatabase) -> if
    void if(com.baidu.navi.location.ax,com.baidu.navi.location.aq$b,com.baidu.navi.location.BDLocation,android.database.sqlite.SQLiteDatabase) -> if
com.baidu.navi.location.ax$1 -> com.baidu.navi.location.ax$1:
    com.baidu.navi.location.ax a -> a
    void run() -> run
com.baidu.navi.location.ax$a -> com.baidu.navi.location.ax$a:
    com.baidu.navi.location.ax a -> a
    java.lang.Boolean a(java.lang.Boolean[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.navi.location.ax$b -> com.baidu.navi.location.ax$b:
    com.baidu.navi.location.ax a -> a
    java.lang.Boolean a(java.lang.Object[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.baidu.navi.location.ay -> com.baidu.navi.location.ay:
    com.baidu.navi.location.ay jm -> jm
    java.lang.String jg -> jg
    java.lang.String jk -> jk
    java.lang.String ji -> ji
    android.hardware.SensorManager jd -> jd
    int je -> je
    int jc -> jc
    android.hardware.Sensor jj -> jj
    java.lang.String jb -> jb
    java.lang.String jh -> jh
    java.lang.String jl -> jl
    java.lang.String jf -> jf
    com.baidu.navi.location.ay co() -> co
    void cn() -> cn
    void cq() -> cq
    void try(java.lang.String,java.lang.String) -> try
    java.lang.String cl() -> cl
    java.lang.String cp() -> cp
    java.lang.String cm() -> cm
    java.lang.String ck() -> ck
    java.lang.String z(java.lang.String) -> z
    java.lang.String case(boolean) -> case
    java.lang.String if(boolean,java.lang.String) -> if
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.navi.location.az -> com.baidu.navi.location.az:
    int jo -> jo
    int jE -> jE
    int jp -> jp
    int jG -> jG
    long jx -> jx
    int jr -> jr
    java.lang.String jL -> jL
    java.lang.String jD -> jD
    java.lang.String jO -> jO
    java.lang.String jy -> jy
    java.lang.String jK -> jK
    java.lang.String jn -> jn
    java.lang.String ju -> ju
    boolean js -> js
    java.util.List jP -> jP
    android.os.PowerManager$WakeLock jC -> jC
    android.os.HandlerThread jH -> jH
    com.baidu.navi.location.az$d jw -> jw
    com.baidu.navi.location.az$c jB -> jB
    boolean jt -> jt
    java.lang.String jv -> jv
    java.lang.String jA -> jA
    com.baidu.navi.location.aq$b jQ -> jQ
    com.baidu.navi.location.aq$b jN -> jN
    java.lang.String jq -> jq
    java.lang.String jM -> jM
    android.os.Messenger jJ -> jJ
    int jF -> jF
    com.baidu.navi.location.az jI -> jI
    android.os.Handler jz -> jz
    com.baidu.navi.location.az cw() -> cw
    void cv() -> cv
    void cu() -> cu
    void ct() -> ct
    void do(com.baidu.navi.location.ap) -> do
    java.util.List cx() -> cx
    boolean cs() -> cs
    void new(android.content.Context) -> new
    void cr() -> cr
    void if(android.content.Context,android.os.Message) -> if
    void try(android.content.Context) -> try
    void byte(android.content.Context) -> byte
    void if(android.content.Context,int) -> if
    java.util.List A(java.lang.String) -> A
    java.util.List for(java.util.List) -> for
    boolean if(com.baidu.navi.location.az,boolean) -> if
    java.lang.String do(com.baidu.navi.location.az,java.lang.String) -> do
    com.baidu.navi.location.aq$b if(com.baidu.navi.location.az,com.baidu.navi.location.aq$b) -> if
    android.os.Messenger for(com.baidu.navi.location.az) -> for
    java.lang.String if(com.baidu.navi.location.az,java.lang.String) -> if
    java.util.List if(com.baidu.navi.location.az,java.util.List) -> if
    void if(com.baidu.navi.location.az) -> if
    void new(com.baidu.navi.location.az) -> new
    void if(com.baidu.navi.location.az,android.content.Context) -> if
    com.baidu.navi.location.az$d do(com.baidu.navi.location.az) -> do
    android.os.Handler int(com.baidu.navi.location.az) -> int
com.baidu.navi.location.az$1 -> com.baidu.navi.location.az$1:
com.baidu.navi.location.az$a -> com.baidu.navi.location.az$a:
    java.lang.String d0 -> d0
    java.lang.String d3 -> d3
    java.lang.String d2 -> d2
    java.lang.String d4 -> d4
    java.lang.String d6 -> d6
    com.baidu.navi.location.ap d1 -> d1
    java.lang.String d5 -> d5
    com.baidu.navi.location.az dZ -> dZ
    void Y() -> Y
    void do(boolean) -> do
    void ap() -> ap
com.baidu.navi.location.az$b -> com.baidu.navi.location.az$b:
    com.baidu.navi.location.az eL -> eL
    void byte(android.os.Message) -> byte
    void ay() -> ay
com.baidu.navi.location.az$c -> com.baidu.navi.location.az$c:
    com.baidu.navi.location.az a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.navi.location.az$d -> com.baidu.navi.location.az$d:
    com.baidu.navi.location.az ln -> ln
    void run() -> run
com.baidu.navi.location.b -> com.baidu.navi.location.b:
    boolean a3 -> a3
    boolean am -> am
    boolean ah -> ah
    int al -> al
    java.lang.String aN -> aN
    java.lang.String Y -> Y
    java.lang.String a1 -> a1
    java.lang.String aY -> aY
    java.lang.String aE -> aE
    boolean aG -> aG
    boolean aA -> aA
    boolean aC -> aC
    java.lang.String aL -> aL
    java.lang.Process aP -> aP
    java.lang.String aw -> aw
    java.lang.String bc -> bc
    boolean a7 -> a7
    int aM -> aM
    double a9 -> a9
    double an -> an
    double aH -> aH
    double ac -> ac
    int ak -> ak
    byte[] aB -> aB
    boolean ar -> ar
    int ai -> ai
    float ae -> ae
    float aR -> aR
    float ag -> ag
    float aT -> aT
    int aI -> aI
    int W -> W
    int aJ -> aJ
    int X -> X
    int aa -> aa
    int ax -> ax
    int a4 -> a4
    float be -> be
    float bb -> bb
    float ap -> ap
    float a0 -> a0
    int aX -> aX
    float ab -> ab
    int at -> at
    float aU -> aU
    float bd -> bd
    float ba -> ba
    int a8 -> a8
    int a6 -> a6
    int aj -> aj
    boolean az -> az
    boolean aZ -> aZ
    int av -> av
    int as -> as
    int ay -> ay
    long aQ -> aQ
    long aK -> aK
    long ad -> ad
    long ao -> ao
    long aS -> aS
    long aD -> aD
    int a5 -> a5
    int aV -> aV
    int aW -> aW
    int aO -> aO
    float a2 -> a2
    float af -> af
    float Z -> Z
    int aq -> aq
    int aF -> aF
    int au -> au
    int do(java.lang.String,java.lang.String,java.lang.String) -> do
    float if(java.lang.String,java.lang.String,java.lang.String) -> if
    double for(java.lang.String,java.lang.String,java.lang.String) -> for
    java.lang.String if(java.lang.String,java.lang.String,java.lang.String,double) -> if
    java.lang.String new() -> new
    java.lang.String if() -> if
    java.lang.String if(com.baidu.navi.location.s$a,com.baidu.navi.location.aq$b,android.location.Location,java.lang.String,int) -> if
    java.lang.String if(com.baidu.navi.location.s$a,com.baidu.navi.location.aq$b,android.location.Location,java.lang.String) -> if
    void char() -> char
    void case() -> case
    void do(java.lang.String,java.lang.String) -> do
    void if(java.lang.String,java.lang.String) -> if
    void if(java.lang.String) -> if
    boolean if(com.baidu.navi.location.BDLocation) -> if
    void do(java.lang.String) -> do
    java.lang.String for() -> for
    java.lang.String try() -> try
    java.lang.String int() -> int
    java.lang.String do() -> do
    java.lang.String byte() -> byte
    java.lang.String else() -> else
    java.lang.String goto() -> goto
com.baidu.navi.location.b.a.a -> com.baidu.navi.location.b.a.a:
    boolean a -> a
    java.lang.String if -> if
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
com.baidu.navi.location.b.a.b -> com.baidu.navi.location.b.a.b:
    java.lang.String do -> do
    boolean a -> a
    java.lang.String int -> int
    java.lang.String for -> for
    java.lang.String if -> if
    java.lang.String a(android.content.Context) -> a
    java.lang.String do(android.content.Context) -> do
    java.lang.String if(android.content.Context) -> if
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.navi.location.b.a.b$a -> com.baidu.navi.location.b.a.b$a:
    java.lang.String do -> do
    java.lang.String if -> if
    boolean a -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.navi.location.b.a.b$a a(android.content.Context) -> a
com.baidu.navi.location.b.a.c -> com.baidu.navi.location.b.a.c:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.navi.location.b.b.a -> com.baidu.navi.location.b.b.a:
    java.lang.String if -> if
    java.lang.String a -> a
    byte[] if(java.lang.String,java.lang.String,byte[]) -> if
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
com.baidu.navi.location.b.b.b -> com.baidu.navi.location.b.b.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.navi.location.c -> com.baidu.navi.location.c:
    java.lang.String c5 -> c5
    java.lang.String c4 -> c4
    java.lang.String c3 -> c3
    android.os.Handler c2 -> c2
    com.baidu.navi.location.c c1 -> c1
    com.baidu.navi.location.c aa() -> aa
    void ae() -> ae
    android.os.Handler ac() -> ac
    void Y() -> Y
    void do(boolean) -> do
    void ad() -> ad
    boolean Z() -> Z
    void ab() -> ab
    boolean for(java.lang.String,java.lang.String) -> for
    void if(java.io.File,java.io.File) -> if
    void for(com.baidu.navi.location.c) -> for
    boolean if(com.baidu.navi.location.c) -> if
    void do(com.baidu.navi.location.c) -> do
com.baidu.navi.location.c$1 -> com.baidu.navi.location.c$1:
    com.baidu.navi.location.c a -> a
    void run() -> run
com.baidu.navi.location.c$2 -> com.baidu.navi.location.c$2:
    com.baidu.navi.location.c a -> a
    void run() -> run
com.baidu.navi.location.c$3 -> com.baidu.navi.location.c$3:
    com.baidu.navi.location.c a -> a
    void run() -> run
com.baidu.navi.location.d -> com.baidu.navi.location.d:
    java.lang.String int -> int
    int for -> for
    com.baidu.navi.location.d if -> if
    int do -> do
    int a -> a
    com.baidu.navi.location.d if() -> if
    void a(int,long) -> a
    long a(int) -> a
    long do() -> do
    void a(long) -> a
    long a() -> a
    void if(long) -> if
com.baidu.navi.location.e -> com.baidu.navi.location.e:
    boolean br -> br
    long bo -> bo
    long bn -> bn
    long bp -> bp
    com.baidu.navi.location.e bq -> bq
    com.baidu.navi.location.e h() -> h
    void j() -> j
    void new(java.lang.String) -> new
    long int(java.lang.String) -> int
com.baidu.navi.location.f -> com.baidu.navi.location.f:
    com.baidu.navi.location.LLSInterface iM -> iM
    com.baidu.navi.location.LLSInterface iO -> iO
    com.baidu.navi.location.LLSInterface iP -> iP
    java.lang.String replaceFileName -> replaceFileName
    java.lang.String iN -> iN
    android.content.Context mC -> mC
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    void onDestroy() -> onDestroy
    float getFrameVersion() -> getFrameVersion
    java.lang.String getJarFileName() -> getJarFileName
    android.content.Context getServiceContext() -> getServiceContext
com.baidu.navi.location.g -> com.baidu.navi.location.g:
    com.baidu.navi.location.g a -> a
    com.baidu.navi.location.g do() -> do
    void int() -> int
    void for() -> for
    void if() -> if
    void a() -> a
com.baidu.navi.location.h -> com.baidu.navi.location.h:
    void a(android.content.Context,android.app.PendingIntent,int) -> a
    void a(android.content.Context,android.app.PendingIntent) -> a
com.baidu.navi.location.i -> com.baidu.navi.location.i:
    double lm -> lm
    double lj -> lj
    boolean lg -> lg
    long ll -> ll
    double le -> le
    double lf -> lf
    int lh -> lh
    int lk -> lk
    com.baidu.navi.location.i li -> li
    com.baidu.navi.location.i c3() -> c3
    void if(boolean,boolean,double,double) -> if
    void byte(com.baidu.navi.location.BDLocation) -> byte
    java.lang.String c2() -> c2
com.baidu.navi.location.j -> com.baidu.navi.location.j:
    com.baidu.navi.location.j bu -> bu
    java.util.ArrayList bt -> bt
    boolean bv -> bv
    boolean bs -> bs
    com.baidu.navi.location.j m() -> m
    void q() -> q
    boolean n() -> n
    void new(android.os.Message) -> new
    void do(android.os.Message) -> do
    boolean int(android.os.Message) -> int
    java.lang.String if(android.os.Message) -> if
    void if(com.baidu.navi.location.BDLocation,int) -> if
    void do(com.baidu.navi.location.BDLocation) -> do
    void try(java.lang.String) -> try
    void if(com.baidu.navi.location.BDLocation,android.os.Message) -> if
    void k() -> k
    java.lang.String r() -> r
    int for(android.os.Message) -> for
    com.baidu.navi.location.j$a if(android.os.Messenger) -> if
    void if(com.baidu.navi.location.j$a) -> if
    void l() -> l
    void o() -> o
    void p() -> p
com.baidu.navi.location.j$a -> com.baidu.navi.location.j$a:
    java.lang.String int -> int
    android.os.Messenger for -> for
    com.baidu.navi.location.LocationClientOption do -> do
    int if -> if
    com.baidu.navi.location.j a -> a
    void a(com.baidu.navi.location.BDLocation) -> a
    void a(com.baidu.navi.location.BDLocation,int) -> a
    void if(com.baidu.navi.location.BDLocation) -> if
    void a() -> a
    void if() -> if
    void a(int) -> a
    void a(int,java.lang.String,com.baidu.navi.location.BDLocation) -> a
    void a(com.baidu.navi.location.j$a,int) -> a
com.baidu.navi.location.k -> com.baidu.navi.location.k:
    java.lang.String bF -> bF
    java.lang.String bY -> bY
    java.io.File bC -> bC
    java.io.File b6 -> b6
    int bJ -> bJ
    int bV -> bV
    int b4 -> b4
    long bx -> bx
    int b0 -> b0
    android.app.AlarmManager bH -> bH
    com.baidu.navi.location.k$a b7 -> b7
    android.app.PendingIntent bI -> bI
    android.content.Context bK -> bK
    long bW -> bW
    long[] bB -> bB
    int bG -> bG
    com.baidu.navi.location.s$a bQ -> bQ
    java.lang.String bL -> bL
    java.lang.String bM -> bM
    int b2 -> b2
    boolean bE -> bE
    boolean bO -> bO
    boolean b3 -> b3
    android.os.Handler bz -> bz
    int bS -> bS
    boolean bD -> bD
    long bR -> bR
    int b1 -> b1
    long bP -> bP
    long bN -> bN
    long bZ -> bZ
    java.lang.String by -> by
    boolean bA -> bA
    com.baidu.navi.location.k$c bw -> bw
    java.util.ArrayList bX -> bX
    java.util.ArrayList bU -> bU
    long b5 -> b5
    java.lang.String bT -> bT
    void y() -> y
    void z() -> z
    void if(boolean) -> if
    void x() -> x
    void s() -> s
    java.lang.String u() -> u
    boolean t() -> t
    boolean if(double,double) -> if
    android.os.Handler if(com.baidu.navi.location.k) -> if
com.baidu.navi.location.k$1 -> com.baidu.navi.location.k$1:
    com.baidu.navi.location.k a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navi.location.k$a -> com.baidu.navi.location.k$a:
    com.baidu.navi.location.k a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.navi.location.k$b -> com.baidu.navi.location.k$b:
    double do -> do
    double if -> if
    java.util.HashMap int -> int
    double for -> for
    com.baidu.navi.location.k a -> a
    double a(com.baidu.navi.location.k$b) -> a
    java.util.HashMap if() -> if
    double a() -> a
com.baidu.navi.location.k$c -> com.baidu.navi.location.k$c:
    boolean if -> if
    com.baidu.navi.location.k a -> a
    void a(android.content.Context) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.navi.location.l -> com.baidu.navi.location.l:
    java.lang.String do -> do
    int if -> if
    com.baidu.navi.location.l a -> a
    com.baidu.navi.location.l a(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.navi.location.m -> com.baidu.navi.location.m:
    float V -> V
    java.lang.String T -> T
    int U -> U
com.baidu.navi.location.n -> com.baidu.navi.location.n:
    java.util.ArrayList di -> di
    boolean de -> de
    long dg -> dg
    long dh -> dh
    int df -> df
    android.os.Handler dj -> dj
    int db -> db
    com.baidu.navi.location.n dd -> dd
    com.baidu.navi.location.n$a dc -> dc
    int da -> da
    com.baidu.navi.location.n ai() -> ai
    void do(int) -> do
    void Y() -> Y
    void do(boolean) -> do
    boolean for(boolean) -> for
    void ah() -> ah
    boolean ag() -> ag
    void if(com.baidu.navi.location.n) -> if
    android.os.Handler do(com.baidu.navi.location.n) -> do
com.baidu.navi.location.n$1 -> com.baidu.navi.location.n$1:
    com.baidu.navi.location.n a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navi.location.n$a -> com.baidu.navi.location.n$a:
    java.lang.String c9 -> c9
    int c7 -> c7
    boolean c8 -> c8
    com.baidu.navi.location.n c6 -> c6
    void Y() -> Y
    void do(boolean) -> do
    boolean af() -> af
com.baidu.navi.location.o -> com.baidu.navi.location.o:
    boolean do(com.baidu.navi.location.aq$b) -> do
    int try(com.baidu.navi.location.BDLocation) -> try
    void b6() -> b6
com.baidu.navi.location.p -> com.baidu.navi.location.p:
    java.util.ArrayList cs -> cs
    java.util.ArrayList cj -> cj
    java.util.ArrayList cy -> cy
    java.util.ArrayList cK -> cK
    java.util.ArrayList cu -> cu
    java.util.ArrayList cD -> cD
    java.lang.String cM -> cM
    java.lang.String cH -> cH
    java.lang.String cG -> cG
    java.lang.String cv -> cv
    java.lang.String cB -> cB
    int b9 -> b9
    int ca -> ca
    int cF -> cF
    int co -> co
    int cq -> cq
    int ci -> ci
    java.io.File ch -> ch
    int cf -> cf
    int cJ -> cJ
    int ce -> ce
    int ct -> ct
    int cl -> cl
    int cd -> cd
    int cA -> cA
    int cw -> cw
    double cc -> cc
    double cz -> cz
    double ck -> ck
    double cb -> cb
    int cn -> cn
    int cg -> cg
    int cI -> cI
    android.location.Location cp -> cp
    android.location.Location cC -> cC
    android.location.Location b8 -> b8
    com.baidu.navi.location.aq$b cr -> cr
    com.baidu.navi.location.p$b cx -> cx
    com.baidu.navi.location.p cL -> cL
    int cm -> cm
    long cE -> cE
    com.baidu.navi.location.p C() -> C
    java.lang.String F() -> F
    void do(com.baidu.navi.location.s$a,com.baidu.navi.location.aq$b,android.location.Location,java.lang.String) -> do
    void if(double,double,double,double) -> if
    boolean if(android.location.Location,boolean) -> if
    boolean if(android.location.Location) -> if
    boolean if(android.location.Location,com.baidu.navi.location.aq$b) -> if
    void D() -> D
    void E() -> E
    void I() -> I
    void else(java.lang.String) -> else
    void char(java.lang.String) -> char
    void long(java.lang.String) -> long
    int if(java.util.List,int) -> if
    boolean if(int,int,int,int,long) -> if
    void byte(java.lang.String) -> byte
    void case(java.lang.String) -> case
    void if(int,boolean) -> if
    boolean if(java.lang.String,java.util.List) -> if
    java.lang.String H() -> H
    void A() -> A
    java.lang.String if(int) -> if
    java.lang.String B() -> B
    void if(java.lang.String,int) -> if
    void if(java.lang.String,int,boolean) -> if
    void if(int,int) -> if
    void if(int,int,boolean) -> if
    void G() -> G
    void J() -> J
    void goto(java.lang.String) -> goto
    java.lang.String if(com.baidu.navi.location.s$a,com.baidu.navi.location.aq$b,android.location.Location,java.lang.String,java.lang.String) -> if
com.baidu.navi.location.p$a -> com.baidu.navi.location.p$a:
    java.lang.String dl -> dl
    com.baidu.navi.location.p dk -> dk
    void Y() -> Y
    void do(boolean) -> do
    void aj() -> aj
com.baidu.navi.location.p$b -> com.baidu.navi.location.p$b:
    boolean dn -> dn
    int dr -> dr
    int dq -> dq
    java.util.ArrayList dp -> dp
    com.baidu.navi.location.p dm -> dm
    void Y() -> Y
    void do(boolean) -> do
    void ak() -> ak
com.baidu.navi.location.q -> com.baidu.navi.location.q:
    com.baidu.navi.location.q cO -> cO
    com.baidu.navi.location.k cN -> cN
    android.os.Handler cP -> cP
    com.baidu.navi.location.q O() -> O
    void N() -> N
    void K() -> K
    android.os.Handler L() -> L
    void M() -> M
    void if(com.baidu.navi.location.q) -> if
com.baidu.navi.location.q$a -> com.baidu.navi.location.q$a:
    com.baidu.navi.location.q a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navi.location.r -> com.baidu.navi.location.r:
    boolean cU -> cU
    int cT -> cT
    java.lang.String cX -> cX
    int cZ -> cZ
    java.lang.String cQ -> cQ
    int c0 -> c0
    org.apache.http.HttpEntity cR -> cR
    java.util.List cS -> cS
    java.lang.String cW -> cW
    byte[] cV -> cV
    int cY -> cY
    void Y() -> Y
    void do(boolean) -> do
    void V() -> V
    void S() -> S
    void W() -> W
    void Q() -> Q
    void P() -> P
    int U() -> U
    int if(android.content.Context,android.net.NetworkInfo) -> if
    boolean if(android.content.Context) -> if
    void if(com.baidu.navi.location.r) -> if
    int R() -> R
    java.lang.String T() -> T
    int X() -> X
    boolean if(com.baidu.navi.location.r,boolean) -> if
com.baidu.navi.location.r$1 -> com.baidu.navi.location.r$1:
    com.baidu.navi.location.r a -> a
    void run() -> run
com.baidu.navi.location.r$2 -> com.baidu.navi.location.r$2:
    com.baidu.navi.location.r a -> a
    void run() -> run
com.baidu.navi.location.r$3 -> com.baidu.navi.location.r$3:
    com.baidu.navi.location.r a -> a
    void run() -> run
com.baidu.navi.location.r$4 -> com.baidu.navi.location.r$4:
    com.baidu.navi.location.r a -> a
    void run() -> run
com.baidu.navi.location.s -> com.baidu.navi.location.s:
    com.baidu.navi.location.s ec -> ec
    android.telephony.TelephonyManager ed -> ed
    com.baidu.navi.location.s$a d7 -> d7
    java.util.List eb -> eb
    java.lang.String ee -> ee
    com.baidu.navi.location.s$b ea -> ea
    boolean ek -> ek
    java.lang.reflect.Method ei -> ei
    java.lang.reflect.Method ef -> ef
    java.lang.reflect.Method d9 -> d9
    java.lang.Class em -> em
    long ej -> ej
    int el -> el
    boolean eg -> eg
    int eh -> eh
    int d8 -> d8
    com.baidu.navi.location.s aq() -> aq
    void at() -> at
    void ax() -> ax
    int av() -> av
    java.lang.String au() -> au
    boolean as() -> as
    com.baidu.navi.location.s$a ar() -> ar
    void if(android.telephony.CellLocation) -> if
    long aw() -> aw
    com.baidu.navi.location.s$a for(com.baidu.navi.location.s) -> for
    java.util.List new(com.baidu.navi.location.s) -> new
    int if(com.baidu.navi.location.s) -> if
    int if(com.baidu.navi.location.s,int) -> if
    int int(com.baidu.navi.location.s) -> int
    android.telephony.TelephonyManager do(com.baidu.navi.location.s) -> do
    void if(com.baidu.navi.location.s,android.telephony.CellLocation) -> if
com.baidu.navi.location.s$a -> com.baidu.navi.location.s$a:
    int for -> for
    int try -> try
    int do -> do
    int if -> if
    long byte -> byte
    int int -> int
    char new -> new
    com.baidu.navi.location.s a -> a
    boolean a(com.baidu.navi.location.s$a) -> a
    boolean do() -> do
    boolean for() -> for
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    java.lang.String if() -> if
    java.lang.String int() -> int
com.baidu.navi.location.s$b -> com.baidu.navi.location.s$b:
    com.baidu.navi.location.s a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.navi.location.t -> com.baidu.navi.location.t:
    com.baidu.navi.location.t eM -> eM
    int eN -> eN
    com.baidu.navi.location.BDLocation eP -> eP
    long eO -> eO
    com.baidu.navi.location.ae$a eQ -> eQ
    com.baidu.navi.location.t aJ() -> aJ
    void else(android.os.Message) -> else
    void goto(android.os.Message) -> goto
    void aK() -> aK
    void byte(android.os.Message) -> byte
    void ay() -> ay
com.baidu.navi.location.u -> com.baidu.navi.location.u:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.security.cert.X509Certificate) -> a
    byte[] a(byte[]) -> a
com.baidu.navi.location.u$a -> com.baidu.navi.location.u$a:
    java.lang.String a(byte[]) -> a
com.baidu.navi.location.v -> com.baidu.navi.location.v:
    com.baidu.navi.location.v fe -> fe
    java.lang.String e4 -> e4
    java.io.File eU -> eU
    int eR -> eR
    int e0 -> e0
    int e8 -> e8
    int fb -> fb
    int e7 -> e7
    int e9 -> e9
    int eT -> eT
    int eV -> eV
    java.lang.StringBuffer eS -> eS
    boolean eZ -> eZ
    int e5 -> e5
    int fd -> fd
    long eY -> eY
    long eX -> eX
    long ff -> ff
    double e2 -> e2
    double e3 -> e3
    int eW -> eW
    int e1 -> e1
    int e6 -> e6
    java.lang.String fa -> fa
    boolean fc -> fc
    com.baidu.navi.location.v aP() -> aP
    void aO() -> aO
    void aS() -> aS
    boolean do(android.location.Location) -> do
    boolean if(android.location.Location,int,int) -> if
    boolean aR() -> aR
    boolean k(java.lang.String) -> k
    java.lang.String for(int) -> for
    void aM() -> aM
    void aN() -> aN
    java.lang.String aQ() -> aQ
    boolean aL() -> aL
    boolean if(int,int,int) -> if
com.baidu.navi.location.w -> com.baidu.navi.location.w:
    int fQ -> fQ
    long fM -> fM
    int fV -> fV
    int fL -> fL
    int fB -> fB
    double fz -> fz
    com.baidu.navi.location.w fW -> fW
    android.content.Context fI -> fI
    android.location.LocationManager ft -> ft
    android.location.Location f1 -> f1
    com.baidu.navi.location.w$b fU -> fU
    com.baidu.navi.location.w$c fZ -> fZ
    android.location.GpsStatus fp -> fp
    com.baidu.navi.location.w$a fw -> fw
    int fK -> fK
    long fF -> fF
    long fC -> fC
    boolean fu -> fu
    boolean fR -> fR
    java.lang.String f0 -> f0
    boolean fY -> fY
    long fJ -> fJ
    long f3 -> f3
    java.lang.String fN -> fN
    java.lang.String f7 -> f7
    java.io.File fX -> fX
    android.os.Handler fr -> fr
    int f2 -> f2
    int fs -> fs
    int fO -> fO
    int fx -> fx
    int fS -> fS
    int f4 -> f4
    android.location.Location fv -> fv
    android.location.Location fE -> fE
    android.location.Location fP -> fP
    android.location.Location fH -> fH
    long fT -> fT
    long f8 -> f8
    long f5 -> f5
    long fG -> fG
    java.lang.StringBuilder fy -> fy
    java.lang.String fD -> fD
    int f6 -> f6
    int fq -> fq
    java.util.HashMap fA -> fA
    com.baidu.navi.location.w a2() -> a2
    void aY() -> aY
    void if(java.lang.String,android.location.Location) -> if
    void a7() -> a7
    void a8() -> a8
    void a0() -> a0
    boolean a3() -> a3
    java.lang.String aZ() -> aZ
    void int(boolean) -> int
    java.lang.String a4() -> a4
    java.lang.String case(android.location.Location) -> case
    java.lang.String aT() -> aT
    android.location.Location aW() -> aW
    boolean aX() -> aX
    boolean aV() -> aV
    boolean aU() -> aU
    boolean if(android.location.Location,android.location.Location,boolean) -> if
    void int(android.location.Location) -> int
    void for(android.location.Location) -> for
    void if(double,double,float) -> if
    void new(boolean) -> new
    java.lang.String byte(android.location.Location) -> byte
    java.lang.String new(android.location.Location) -> new
    void try(android.location.Location) -> try
    void a6() -> a6
    java.lang.String if(android.location.GpsSatellite,java.util.HashMap) -> if
    int if(java.util.HashMap) -> if
    java.lang.String a1() -> a1
    double[] if(java.util.List) -> if
    double[] do(double,double) -> do
    double[] for(double,double) -> for
    int if(com.baidu.navi.location.as,int) -> if
    void if(com.baidu.navi.location.w,android.location.Location) -> if
    com.baidu.navi.location.w$a if(com.baidu.navi.location.w) -> if
    void if(com.baidu.navi.location.w,java.lang.String,android.location.Location) -> if
    boolean byte(com.baidu.navi.location.w) -> byte
    long if(com.baidu.navi.location.w,long) -> if
    android.os.Handler new(com.baidu.navi.location.w) -> new
    long for(com.baidu.navi.location.w,long) -> for
    void if(com.baidu.navi.location.w,boolean) -> if
    void do(com.baidu.navi.location.w,android.location.Location) -> do
    boolean do(com.baidu.navi.location.w,boolean) -> do
    long do(com.baidu.navi.location.w,long) -> do
    android.location.LocationManager int(com.baidu.navi.location.w) -> int
    android.location.GpsStatus case(com.baidu.navi.location.w) -> case
    android.location.GpsStatus if(com.baidu.navi.location.w,android.location.GpsStatus) -> if
    java.lang.StringBuilder if(java.lang.StringBuilder) -> if
    int do(com.baidu.navi.location.w,int) -> do
    int if(com.baidu.navi.location.w,int) -> if
    java.util.HashMap if(com.baidu.navi.location.w,java.util.HashMap) -> if
    int try(com.baidu.navi.location.w) -> try
    java.util.HashMap char(com.baidu.navi.location.w) -> char
    java.lang.String if(com.baidu.navi.location.w,android.location.GpsSatellite,java.util.HashMap) -> if
    java.lang.StringBuilder a5() -> a5
    int int(int) -> int
    int do(com.baidu.navi.location.w,java.util.HashMap) -> do
    long for(com.baidu.navi.location.w) -> for
    int do(com.baidu.navi.location.w) -> do
    int if(com.baidu.navi.location.w,com.baidu.navi.location.as,int) -> if
    java.lang.String p(java.lang.String) -> p
com.baidu.navi.location.w$1 -> com.baidu.navi.location.w$1:
    com.baidu.navi.location.w a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navi.location.w$a -> com.baidu.navi.location.w$a:
    long if -> if
    long a -> a
    int char -> char
    boolean try -> try
    boolean byte -> byte
    java.util.List case -> case
    java.lang.String for -> for
    java.lang.String new -> new
    java.lang.String do -> do
    com.baidu.navi.location.w int -> int
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
    void a(java.lang.String) -> a
com.baidu.navi.location.w$b -> com.baidu.navi.location.w$b:
    com.baidu.navi.location.w a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.navi.location.w$c -> com.baidu.navi.location.w$c:
    long if -> if
    com.baidu.navi.location.w a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.navi.location.x -> com.baidu.navi.location.x:
    com.baidu.navi.location.x gi -> gi
    com.baidu.navi.location.x$a gc -> gc
    long gj -> gj
    boolean gf -> gf
    boolean gh -> gh
    boolean gk -> gk
    boolean f9 -> f9
    boolean ga -> ga
    boolean ge -> ge
    int gg -> gg
    java.lang.String gb -> gb
    int gl -> gl
    int gd -> gd
    int gm -> gm
    com.baidu.navi.location.x ba() -> ba
    void bd() -> bd
    void be() -> be
    boolean r(java.lang.String) -> r
    void a9() -> a9
    void bf() -> bf
    void bc() -> bc
    void q(java.lang.String) -> q
    void if(org.apache.http.HttpEntity) -> if
    void do(org.apache.http.HttpEntity) -> do
    void try(int) -> try
    void bb() -> bb
    void bg() -> bg
    void new(int) -> new
    void if(com.baidu.navi.location.x,org.apache.http.HttpEntity) -> if
    void do(com.baidu.navi.location.x,org.apache.http.HttpEntity) -> do
com.baidu.navi.location.x$a -> com.baidu.navi.location.x$a:
    java.lang.String du -> du
    boolean dt -> dt
    boolean dv -> dv
    com.baidu.navi.location.x ds -> ds
    void Y() -> Y
    void do(boolean) -> do
    void if(java.lang.String,boolean) -> if
com.baidu.navi.location.y -> com.baidu.navi.location.y:
    java.util.ArrayList gt -> gt
    float gx -> gx
    com.baidu.navi.location.BDLocation gu -> gu
    long gA -> gA
    com.baidu.navi.location.LocationClient gC -> gC
    android.content.Context go -> go
    int gn -> gn
    long gv -> gv
    boolean gz -> gz
    boolean gy -> gy
    android.app.PendingIntent gs -> gs
    android.app.AlarmManager gp -> gp
    com.baidu.navi.location.y$b gw -> gw
    java.lang.String gr -> gr
    com.baidu.navi.location.y$a gq -> gq
    boolean gB -> gB
    void bi() -> bi
    int if(com.baidu.navi.location.BDNotifyListener) -> if
    void for(com.baidu.navi.location.BDNotifyListener) -> for
    int do(com.baidu.navi.location.BDNotifyListener) -> do
    boolean bj() -> bj
    void bh() -> bh
    void if(long) -> if
    void int(com.baidu.navi.location.BDLocation) -> int
    void if(com.baidu.navi.location.y,com.baidu.navi.location.BDLocation) -> if
    java.util.ArrayList do(com.baidu.navi.location.y) -> do
    com.baidu.navi.location.LocationClient if(com.baidu.navi.location.y) -> if
com.baidu.navi.location.y$a -> com.baidu.navi.location.y$a:
    com.baidu.navi.location.y a -> a
    void onReceiveLocation(com.baidu.navi.location.BDLocation) -> onReceiveLocation
    void onReceivePoi(com.baidu.navi.location.BDLocation) -> onReceivePoi
com.baidu.navi.location.y$b -> com.baidu.navi.location.y$b:
    com.baidu.navi.location.y a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.navi.location.z -> com.baidu.navi.location.z:
    com.baidu.navi.location.z gD -> gD
    com.baidu.navi.location.z bl() -> bl
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void if(java.io.File,java.lang.String,java.lang.String) -> if
    void bk() -> bk
    java.lang.String if(java.lang.Throwable) -> if
    boolean new(java.lang.String,java.lang.String) -> new
com.baidu.navisdk.BNaviEngineManager -> com.baidu.navisdk.BNaviEngineManager:
    com.baidu.navisdk.BNaviEngineManager a -> a
    com.baidu.navisdk.jni.nativeif.JNINaviManager b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    com.baidu.navisdk.model.datastruct.EngineCommonConfig l -> l
    com.baidu.navisdk.BNaviEngineManager getInstance() -> getInstance
    void initEngine(com.baidu.navisdk.model.datastruct.EngineCommonConfig,android.app.Activity,com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener) -> initEngine
    boolean uninit() -> uninit
    boolean reload() -> reload
    int getSubSysHandle(int) -> getSubSysHandle
    int getMapHandle() -> getMapHandle
    int getGuidanceHandle() -> getGuidanceHandle
    int getStatisticsHandle() -> getStatisticsHandle
    int getSearchHandle(int) -> getSearchHandle
    int getDataManagerHandle() -> getDataManagerHandle
    int getFavoriteHandle() -> getFavoriteHandle
    int getTrajectoryHandle() -> getTrajectoryHandle
    boolean isNaviManagerInit() -> isNaviManagerInit
    boolean isDataManagerManagerInit() -> isDataManagerManagerInit
    void initNaviStatistics() -> initNaviStatistics
    void changeNaviStatisticsNetworkStatus(int) -> changeNaviStatisticsNetworkStatus
    void uninitNaviStatistics() -> uninitNaviStatistics
    void initBaseEngine(com.baidu.navisdk.model.datastruct.EngineCommonConfig,android.app.Activity,com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener) -> initBaseEngine
    void initGuidanceEngine(android.app.Activity,com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener) -> initGuidanceEngine
    boolean uninitEngine() -> uninitEngine
    void uninitGuidanceEngine() -> uninitGuidanceEngine
    com.baidu.navisdk.jni.nativeif.JNINaviManager a(com.baidu.navisdk.BNaviEngineManager) -> a
    int a(int) -> a
    int a() -> a
com.baidu.navisdk.BNaviEngineManager$InitBaseEngineThread -> com.baidu.navisdk.BNaviEngineManager$InitBaseEngineThread:
    com.baidu.navisdk.model.datastruct.EngineCommonConfig b -> b
    android.app.Activity c -> c
    com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener d -> d
    com.baidu.navisdk.BNaviEngineManager a -> a
    void run() -> run
com.baidu.navisdk.BNaviEngineManager$InitEngineThread -> com.baidu.navisdk.BNaviEngineManager$InitEngineThread:
    com.baidu.navisdk.model.datastruct.EngineCommonConfig b -> b
    android.app.Activity c -> c
    com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener d -> d
    com.baidu.navisdk.BNaviEngineManager a -> a
    void run() -> run
com.baidu.navisdk.BNaviEngineManager$InitGuidanceEngineThread -> com.baidu.navisdk.BNaviEngineManager$InitGuidanceEngineThread:
    com.baidu.navisdk.model.datastruct.EngineCommonConfig b -> b
    android.app.Activity c -> c
    com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener d -> d
    com.baidu.navisdk.BNaviEngineManager a -> a
    void run() -> run
com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener -> com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener:
    void engineInitStart() -> engineInitStart
    void engineInitSuccess() -> engineInitSuccess
    void engineInitFail() -> engineInitFail
com.baidu.navisdk.BNaviModuleManager -> com.baidu.navisdk.BNaviModuleManager:
    android.content.Context a -> a
    void initContext(android.content.Context,com.baidu.lbsapi.auth.LBSAuthManagerListener) -> initContext
    void initContext(android.content.Context,java.lang.String,com.baidu.navisdk.util.verify.BNKeyVerifyListener) -> initContext
    void a(android.content.Context) -> a
    void setupBase(boolean) -> setupBase
    void setupGuidance(int) -> setupGuidance
    void setup(boolean) -> setup
    boolean verify(java.lang.String,com.baidu.navisdk.util.verify.BNKeyVerifyListener) -> verify
    android.content.Context getContext() -> getContext
    void a() -> a
    void destory() -> destory
com.baidu.navisdk.BNaviPoint -> com.baidu.navisdk.BNaviPoint:
    double a -> a
    double b -> b
    java.lang.String c -> c
    com.baidu.navisdk.BNaviPoint$CoordinateType d -> d
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.baidu.navisdk.BNaviPoint$CoordinateType getCoordinateType() -> getCoordinateType
    void setCoordinateType(com.baidu.navisdk.BNaviPoint$CoordinateType) -> setCoordinateType
    com.baidu.nplatform.comapi.basestruct.GeoPoint a() -> a
    com.baidu.navisdk.model.datastruct.RoutePlanNode b() -> b
com.baidu.navisdk.BNaviPoint$CoordinateType -> com.baidu.navisdk.BNaviPoint$CoordinateType:
    com.baidu.navisdk.BNaviPoint$CoordinateType GCJ02 -> GCJ02
    com.baidu.navisdk.BNaviPoint$CoordinateType BD09_MC -> BD09_MC
    com.baidu.navisdk.BNaviPoint$CoordinateType WGS84 -> WGS84
    com.baidu.navisdk.BNaviPoint$CoordinateType[] a -> a
    com.baidu.navisdk.BNaviPoint$CoordinateType[] values() -> values
    com.baidu.navisdk.BNaviPoint$CoordinateType valueOf(java.lang.String) -> valueOf
com.baidu.navisdk.BaiduNaviManager -> com.baidu.navisdk.BaiduNaviManager:
    com.baidu.navisdk.BaiduNaviManager a -> a
    com.baidu.navisdk.util.common.NetworkListener b -> b
    com.baidu.nplatform.comapi.map.MapGLSurfaceView c -> c
    com.baidu.navisdk.ui.widget.RoutePlanObserver d -> d
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS e -> e
    int STRATEGY_FORCE_ONLINE_PRIORITY -> STRATEGY_FORCE_ONLINE_PRIORITY
    int STRATEGY_USER_SETTING -> STRATEGY_USER_SETTING
    com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener f -> f
    com.baidu.navisdk.BaiduNaviManager getInstance() -> getInstance
    boolean a() -> a
    void initEngine(android.app.Activity,java.lang.String,com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener,java.lang.String,com.baidu.navisdk.util.verify.BNKeyVerifyListener) -> initEngine
    void initEngine(android.app.Activity,java.lang.String,com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener,com.baidu.lbsapi.auth.LBSAuthManagerListener) -> initEngine
    void a(android.app.Activity,java.lang.String,com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener) -> a
    void uninitEngine(android.content.Context) -> uninitEngine
    com.baidu.nplatform.comapi.map.MapGLSurfaceView createNMapView(android.content.Context) -> createNMapView
    void destroyNMapView() -> destroyNMapView
    void launchNavigator(android.app.Activity,com.baidu.nplatform.comapi.basestruct.GeoPoint,java.lang.String,com.baidu.nplatform.comapi.basestruct.GeoPoint,java.lang.String,int,boolean,int,com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener) -> launchNavigator
    void a(android.app.Activity,java.util.ArrayList,int,boolean,int,com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener) -> a
    void launchNavigator(android.app.Activity,double,double,java.lang.String,double,double,java.lang.String,int,boolean,int,com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener) -> launchNavigator
    void launchNavigator(android.app.Activity,com.baidu.navisdk.BNaviPoint,com.baidu.navisdk.BNaviPoint,int,boolean,int,com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener) -> launchNavigator
    void launchNavigator(android.app.Activity,java.util.List,int,boolean,int,com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener) -> launchNavigator
    void a(android.content.Context,com.baidu.nplatform.comapi.basestruct.GeoPoint,java.lang.String,com.baidu.nplatform.comapi.basestruct.GeoPoint,java.lang.String,int,boolean,com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener) -> a
    void dismissWaitProgressDialog() -> dismissWaitProgressDialog
    boolean checkEngineStatus(android.content.Context) -> checkEngineStatus
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS a(com.baidu.navisdk.BaiduNaviManager,com.baidu.navisdk.BaiduNaviManager$INIT_STATUS) -> a
    com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener a(com.baidu.navisdk.BaiduNaviManager) -> a
    void a(com.baidu.navisdk.BaiduNaviManager,android.content.Context,com.baidu.nplatform.comapi.basestruct.GeoPoint,java.lang.String,com.baidu.nplatform.comapi.basestruct.GeoPoint,java.lang.String,int,boolean,com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener) -> a
com.baidu.navisdk.BaiduNaviManager$1 -> com.baidu.navisdk.BaiduNaviManager$1:
    android.app.Activity a -> a
    com.baidu.navisdk.BNaviEngineManager$NaviEngineInitListener b -> b
    com.baidu.navisdk.BaiduNaviManager c -> c
    void engineInitSuccess() -> engineInitSuccess
    void engineInitStart() -> engineInitStart
    void engineInitFail() -> engineInitFail
com.baidu.navisdk.BaiduNaviManager$1$1 -> com.baidu.navisdk.BaiduNaviManager$1$1:
    com.baidu.navisdk.BaiduNaviManager$1 a -> a
    void run() -> run
com.baidu.navisdk.BaiduNaviManager$2 -> com.baidu.navisdk.BaiduNaviManager$2:
    com.baidu.navisdk.BaiduNaviManager a -> a
    void onJumpToDownloadOfflineData() -> onJumpToDownloadOfflineData
com.baidu.navisdk.BaiduNaviManager$3 -> com.baidu.navisdk.BaiduNaviManager$3:
    java.util.ArrayList a -> a
    android.app.Activity b -> b
    int c -> c
    boolean d -> d
    com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener e -> e
    com.baidu.navisdk.BaiduNaviManager f -> f
    void onRoutePlanCanceled() -> onRoutePlanCanceled
    void onRoutePlanFail() -> onRoutePlanFail
    void onRoutePlanStart() -> onRoutePlanStart
    void onRoutePlanSuccess() -> onRoutePlanSuccess
    void onRoutePlanYawingFail() -> onRoutePlanYawingFail
    void onRoutePlanYawingSuccess() -> onRoutePlanYawingSuccess
com.baidu.navisdk.BaiduNaviManager$4 -> com.baidu.navisdk.BaiduNaviManager$4:
    int[] a -> a
com.baidu.navisdk.BaiduNaviManager$INIT_STATUS -> com.baidu.navisdk.BaiduNaviManager$INIT_STATUS:
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS NORMAL -> NORMAL
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS INIT_ING -> INIT_ING
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS NO_SDCRAD -> NO_SDCRAD
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS LOAD_LIB_FAIL -> LOAD_LIB_FAIL
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS ACTIVITY_NULL -> ACTIVITY_NULL
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS INIT_ENGINE_FAIL -> INIT_ENGINE_FAIL
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS INIT_ENGINE_SUCCESS -> INIT_ENGINE_SUCCESS
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS[] a -> a
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS[] values() -> values
    com.baidu.navisdk.BaiduNaviManager$INIT_STATUS valueOf(java.lang.String) -> valueOf
com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener -> com.baidu.navisdk.BaiduNaviManager$OnStartNavigationListener:
    void onJumpToNavigator(android.os.Bundle) -> onJumpToNavigator
    void onJumpToDownloader() -> onJumpToDownloader
com.baidu.navisdk.CommonParams -> com.baidu.navisdk.CommonParams:
    int NET_MOD_OFFLINE -> NET_MOD_OFFLINE
    int NAVI_ANIMATION_TIME -> NAVI_ANIMATION_TIME
    java.lang.String PREFERENCES -> PREFERENCES
    java.lang.String KEY_CLOSE_TIPS -> KEY_CLOSE_TIPS
    double BJ_LONGITUDE -> BJ_LONGITUDE
    double BJ_LATITUDE -> BJ_LATITUDE
    int INVALID_LOCATION -> INVALID_LOCATION
    java.lang.String PRODUCT_NAME -> PRODUCT_NAME
    java.lang.String PRODUCT_NAME_SDK_FOR_MAP -> PRODUCT_NAME_SDK_FOR_MAP
com.baidu.navisdk.CommonParams$Action -> com.baidu.navisdk.CommonParams$Action:
    com.baidu.navisdk.CommonParams a -> a
com.baidu.navisdk.CommonParams$Config -> com.baidu.navisdk.CommonParams$Config:
    com.baidu.navisdk.CommonParams a -> a
com.baidu.navisdk.CommonParams$Const -> com.baidu.navisdk.CommonParams$Const:
    java.lang.String WEBVIEW_HOME_PAGE -> WEBVIEW_HOME_PAGE
    java.lang.String WEBVIEW_TITLE -> WEBVIEW_TITLE
    com.baidu.navisdk.CommonParams a -> a
com.baidu.navisdk.CommonParams$Const$ModelName -> com.baidu.navisdk.CommonParams$Const$ModelName:
    java.lang.String POI_SEARCH -> POI_SEARCH
    java.lang.String ROUTE_PLAN -> ROUTE_PLAN
    java.lang.String ROUTE_GUIDE -> ROUTE_GUIDE
    java.lang.String COMMON_TOOL -> COMMON_TOOL
    java.lang.String OFFLINE_DATA -> OFFLINE_DATA
    java.lang.String USER_DATA -> USER_DATA
    com.baidu.navisdk.CommonParams$Const a -> a
com.baidu.navisdk.CommonParams$Const$ModuleName -> com.baidu.navisdk.CommonParams$Const$ModuleName:
    java.lang.String FRAMEWORK -> FRAMEWORK
    java.lang.String COMMON -> COMMON
    java.lang.String MAP -> MAP
    java.lang.String STREETSCAPE -> STREETSCAPE
    java.lang.String POISEARCH -> POISEARCH
    java.lang.String ROUTEPLAN -> ROUTEPLAN
    java.lang.String ROUTEGUIDE -> ROUTEGUIDE
    java.lang.String CRUISE -> CRUISE
    java.lang.String RouteGuideHUD -> RouteGuideHUD
    java.lang.String RouteGuideAR -> RouteGuideAR
    java.lang.String OFFLINEDATA -> OFFLINEDATA
    java.lang.String TRAFFIC -> TRAFFIC
    java.lang.String TTS -> TTS
    java.lang.String ASR -> ASR
    java.lang.String FAVORITE -> FAVORITE
    java.lang.String LOCATION -> LOCATION
    java.lang.String TRAJECTORY -> TRAJECTORY
    com.baidu.navisdk.CommonParams$Const a -> a
com.baidu.navisdk.CommonParams$Const$SubEngineType -> com.baidu.navisdk.CommonParams$Const$SubEngineType:
    int SUB_SYS_TYPE_MAP -> SUB_SYS_TYPE_MAP
    int SUB_SYS_TYPE_GUIDANCE -> SUB_SYS_TYPE_GUIDANCE
    int SUB_SYS_TYPE_SEARCH -> SUB_SYS_TYPE_SEARCH
    int SUB_SYS_TYPE_DATA_MANAGER -> SUB_SYS_TYPE_DATA_MANAGER
    int SUB_SYS_TYPE_FAVORITE -> SUB_SYS_TYPE_FAVORITE
    int SUB_SYS_TYPE_TRAJECTORY -> SUB_SYS_TYPE_TRAJECTORY
    int SUB_SYS_TYPE_STATISTICS -> SUB_SYS_TYPE_STATISTICS
    com.baidu.navisdk.CommonParams$Const a -> a
com.baidu.navisdk.CommonParams$Key -> com.baidu.navisdk.CommonParams$Key:
    java.lang.String SP_COMMON_CHOOSED_SDCARD_PATH -> SP_COMMON_CHOOSED_SDCARD_PATH
    java.lang.String SP_KEY_FIRST_BOOT -> SP_KEY_FIRST_BOOT
    java.lang.String SP_KEY_SHOW_DISCLAIMER -> SP_KEY_SHOW_DISCLAIMER
    java.lang.String SP_KEY_HOME_CARD_ORDER -> SP_KEY_HOME_CARD_ORDER
    java.lang.String NAVI_UPDATE_APK_NOT_ALERT -> NAVI_UPDATE_APK_NOT_ALERT
    java.lang.String NAVI_UPDATE_APK_VERSION -> NAVI_UPDATE_APK_VERSION
    java.lang.String SP_KEY_SCREEN_KEEP_ON -> SP_KEY_SCREEN_KEEP_ON
    com.baidu.navisdk.CommonParams a -> a
com.baidu.navisdk.CommonParams$NE_COORDSYS_CHANGE_TYPE -> com.baidu.navisdk.CommonParams$NE_COORDSYS_CHANGE_TYPE:
    int NE_BDMC2WGSLL_TYPE -> NE_BDMC2WGSLL_TYPE
    int NE_WGSLL2BDMC_TYPE -> NE_WGSLL2BDMC_TYPE
    int NE_BDMC2GCJLL_TYPE -> NE_BDMC2GCJLL_TYPE
    int NE_GCJLL2BDMC_TYPE -> NE_GCJLL2BDMC_TYPE
    int NE_WGSLL2GCJLL_TYPE -> NE_WGSLL2GCJLL_TYPE
    int NE_GCJLL2WGSLL_TYPE -> NE_GCJLL2WGSLL_TYPE
    int NE_BDLL2WGSLL_TYPE -> NE_BDLL2WGSLL_TYPE
    int NE_WGSLL2BDLL_TYPE -> NE_WGSLL2BDLL_TYPE
    int NE_BDLL2GCJLL_TYPE -> NE_BDLL2GCJLL_TYPE
    int NE_GCJLL2BDLL_TYPE -> NE_GCJLL2BDLL_TYPE
    com.baidu.navisdk.CommonParams a -> a
com.baidu.navisdk.CommonParams$NE_NetStatus -> com.baidu.navisdk.CommonParams$NE_NetStatus:
    int NET_STATUS_INVALID -> NET_STATUS_INVALID
    int NET_STATUS_NO_NET -> NET_STATUS_NO_NET
    int NET_STATUS_WIFI_NET -> NET_STATUS_WIFI_NET
    int NET_STATUS_WWAN_NET -> NET_STATUS_WWAN_NET
    com.baidu.navisdk.CommonParams a -> a
com.baidu.navisdk.CommonParams$NL_Net_Mode -> com.baidu.navisdk.CommonParams$NL_Net_Mode:
    int NL_Net_Mode_Invalid -> NL_Net_Mode_Invalid
    int NL_Net_Mode_OffLine -> NL_Net_Mode_OffLine
    int NL_Net_Mode_OnLine -> NL_Net_Mode_OnLine
    int NL_Net_Mode_OffLinePriority -> NL_Net_Mode_OffLinePriority
    int NL_Net_Mode_OnLinePriority -> NL_Net_Mode_OnLinePriority
    com.baidu.navisdk.CommonParams a -> a
com.baidu.navisdk.CommonParams$NL_Ret_Enum -> com.baidu.navisdk.CommonParams$NL_Ret_Enum:
    int NL_Ret_Invalid -> NL_Ret_Invalid
    int NL_Ret_Success -> NL_Ret_Success
    int NL_Ret_Fail -> NL_Ret_Fail
    int NL_Ret_Activate_Fail -> NL_Ret_Activate_Fail
    int NL_Ret_Data_Format_Error -> NL_Ret_Data_Format_Error
    com.baidu.navisdk.CommonParams a -> a
com.baidu.navisdk.CommonParams$NaviStatus -> com.baidu.navisdk.CommonParams$NaviStatus:
    com.baidu.navisdk.CommonParams$NaviStatus NAVI_MAP_BROWSE_MODE -> NAVI_MAP_BROWSE_MODE
    com.baidu.navisdk.CommonParams$NaviStatus NAVI_ROUTE_PLAN_COMPLETE -> NAVI_ROUTE_PLAN_COMPLETE
    com.baidu.navisdk.CommonParams$NaviStatus NAVI_ROUTE_DETAIL_MODE -> NAVI_ROUTE_DETAIL_MODE
    com.baidu.navisdk.CommonParams$NaviStatus NAVI_GPS_GUIDANCE -> NAVI_GPS_GUIDANCE
    com.baidu.navisdk.CommonParams$NaviStatus NAVI_ANALOG_GUIDANCE -> NAVI_ANALOG_GUIDANCE
    com.baidu.navisdk.CommonParams$NaviStatus NAVI_GPS_GUIDE_BROWSE_MODE -> NAVI_GPS_GUIDE_BROWSE_MODE
    com.baidu.navisdk.CommonParams$NaviStatus NAVI_ANALOG_GUIDE_BROWSE_MODE -> NAVI_ANALOG_GUIDE_BROWSE_MODE
    com.baidu.navisdk.CommonParams$NaviStatus NAVI_PICK_POINT -> NAVI_PICK_POINT
    com.baidu.navisdk.CommonParams$NaviStatus SEARCH_BY_CYCLE_OVERVIEW -> SEARCH_BY_CYCLE_OVERVIEW
    com.baidu.navisdk.CommonParams$NaviStatus NAVI_MAP_POI_MODE -> NAVI_MAP_POI_MODE
    com.baidu.navisdk.CommonParams$NaviStatus NAVI_MAP_TRACK_MODE -> NAVI_MAP_TRACK_MODE
    com.baidu.navisdk.CommonParams$NaviStatus[] a -> a
    com.baidu.navisdk.CommonParams$NaviStatus[] values() -> values
    com.baidu.navisdk.CommonParams$NaviStatus valueOf(java.lang.String) -> valueOf
com.baidu.navisdk.CommonParams$NetConnectStatus -> com.baidu.navisdk.CommonParams$NetConnectStatus:
    int NetStatusInvalid -> NetStatusInvalid
    int NetStatusNoNet -> NetStatusNoNet
    int NetStatusWIFINet -> NetStatusWIFINet
    int NetStatusWWANNet -> NetStatusWWANNet
    com.baidu.navisdk.CommonParams a -> a
com.baidu.navisdk.R -> com.baidu.navisdk.R:
com.baidu.navisdk.R$anim -> com.baidu.navisdk.R$anim:
    int nsdk_anim_cycle_interpolator -> nsdk_anim_cycle_interpolator
    int nsdk_anim_fade_in -> nsdk_anim_fade_in
    int nsdk_anim_fade_out -> nsdk_anim_fade_out
    int nsdk_anim_rg_desc_win_enter -> nsdk_anim_rg_desc_win_enter
    int nsdk_anim_rg_desc_win_exit -> nsdk_anim_rg_desc_win_exit
    int nsdk_anim_rg_down_in -> nsdk_anim_rg_down_in
    int nsdk_anim_rg_down_out -> nsdk_anim_rg_down_out
    int nsdk_anim_rg_menu_enter -> nsdk_anim_rg_menu_enter
    int nsdk_anim_rg_menu_exit -> nsdk_anim_rg_menu_exit
    int nsdk_anim_rg_routeinfo_slide_in_top -> nsdk_anim_rg_routeinfo_slide_in_top
    int nsdk_anim_rg_routeinfo_slide_out_top -> nsdk_anim_rg_routeinfo_slide_out_top
    int nsdk_anim_rg_slide_in_left -> nsdk_anim_rg_slide_in_left
    int nsdk_anim_rg_slide_in_top -> nsdk_anim_rg_slide_in_top
    int nsdk_anim_rg_slide_out_left -> nsdk_anim_rg_slide_out_left
    int nsdk_anim_rg_slide_out_top -> nsdk_anim_rg_slide_out_top
com.baidu.navisdk.R$array -> com.baidu.navisdk.R$array:
    int nsdk_rg_space_catalog_id -> nsdk_rg_space_catalog_id
    int nsdk_rg_space_catalog_name -> nsdk_rg_space_catalog_name
com.baidu.navisdk.R$attr -> com.baidu.navisdk.R$attr:
    int fill -> fill
    int inside_interval -> inside_interval
    int max -> max
    int paint_color -> paint_color
    int paint_width -> paint_width
    int text_color -> text_color
com.baidu.navisdk.R$color -> com.baidu.navisdk.R$color:
    int bnav_newer_guide_dialog -> bnav_newer_guide_dialog
    int nsdk_color_common_black -> nsdk_color_common_black
    int nsdk_color_download_btn_text_selector -> nsdk_color_download_btn_text_selector
    int nsdk_color_download_error -> nsdk_color_download_error
    int nsdk_color_download_list_def -> nsdk_color_download_list_def
    int nsdk_color_download_list_press -> nsdk_color_download_list_press
    int nsdk_color_download_list_selector_bg -> nsdk_color_download_list_selector_bg
    int nsdk_color_download_newversion -> nsdk_color_download_newversion
    int nsdk_color_download_normal -> nsdk_color_download_normal
    int nsdk_color_download_suspend -> nsdk_color_download_suspend
    int nsdk_color_download_tab_bar -> nsdk_color_download_tab_bar
    int nsdk_color_downloaded -> nsdk_color_downloaded
    int nsdk_color_downloading -> nsdk_color_downloading
    int nsdk_color_list_section_color -> nsdk_color_list_section_color
    int nsdk_color_od_bg_list_test -> nsdk_color_od_bg_list_test
    int nsdk_color_od_bg_list_transparent -> nsdk_color_od_bg_list_transparent
    int nsdk_color_od_bg_progressbar_blue -> nsdk_color_od_bg_progressbar_blue
    int nsdk_color_od_home_card_text -> nsdk_color_od_home_card_text
    int nsdk_color_od_home_card_text_night -> nsdk_color_od_home_card_text_night
com.baidu.navisdk.R$dimen -> com.baidu.navisdk.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int nsdk_header_footer_left_right_padding -> nsdk_header_footer_left_right_padding
    int nsdk_header_footer_top_bottom_padding -> nsdk_header_footer_top_bottom_padding
    int nsdk_indicator_corner_radius -> nsdk_indicator_corner_radius
    int nsdk_indicator_internal_padding -> nsdk_indicator_internal_padding
    int nsdk_indicator_right_padding -> nsdk_indicator_right_padding
com.baidu.navisdk.R$drawable -> com.baidu.navisdk.R$drawable:
    int nsdk_drawable_bg_texture -> nsdk_drawable_bg_texture
    int nsdk_drawable_common_bg_card_normal -> nsdk_drawable_common_bg_card_normal
    int nsdk_drawable_common_bg_card_projection_night -> nsdk_drawable_common_bg_card_projection_night
    int nsdk_drawable_common_bg_card_projection_night_press -> nsdk_drawable_common_bg_card_projection_night_press
    int nsdk_drawable_common_bg_card_projection_normal -> nsdk_drawable_common_bg_card_projection_normal
    int nsdk_drawable_common_bg_card_projection_press -> nsdk_drawable_common_bg_card_projection_press
    int nsdk_drawable_common_bg_green_ellipse -> nsdk_drawable_common_bg_green_ellipse
    int nsdk_drawable_common_bg_prj_card_night -> nsdk_drawable_common_bg_prj_card_night
    int nsdk_drawable_common_bg_prj_card_selector -> nsdk_drawable_common_bg_prj_card_selector
    int nsdk_drawable_common_bg_red_ellipse -> nsdk_drawable_common_bg_red_ellipse
    int nsdk_drawable_common_btn_back_black -> nsdk_drawable_common_btn_back_black
    int nsdk_drawable_common_btn_back_black_night -> nsdk_drawable_common_btn_back_black_night
    int nsdk_drawable_common_btn_back_pressed -> nsdk_drawable_common_btn_back_pressed
    int nsdk_drawable_common_btn_blue_normal -> nsdk_drawable_common_btn_blue_normal
    int nsdk_drawable_common_btn_blue_pressed -> nsdk_drawable_common_btn_blue_pressed
    int nsdk_drawable_common_btn_blue_selector -> nsdk_drawable_common_btn_blue_selector
    int nsdk_drawable_common_btn_white_normal -> nsdk_drawable_common_btn_white_normal
    int nsdk_drawable_common_btn_white_pressed -> nsdk_drawable_common_btn_white_pressed
    int nsdk_drawable_common_btn_white_selector -> nsdk_drawable_common_btn_white_selector
    int nsdk_drawable_common_ic_close -> nsdk_drawable_common_ic_close
    int nsdk_drawable_common_ic_map_back -> nsdk_drawable_common_ic_map_back
    int nsdk_drawable_common_ic_map_back_night -> nsdk_drawable_common_ic_map_back_night
    int nsdk_drawable_common_ic_map_its_off -> nsdk_drawable_common_ic_map_its_off
    int nsdk_drawable_common_ic_map_its_off_night -> nsdk_drawable_common_ic_map_its_off_night
    int nsdk_drawable_common_ic_map_its_on -> nsdk_drawable_common_ic_map_its_on
    int nsdk_drawable_common_ic_map_its_on_night -> nsdk_drawable_common_ic_map_its_on_night
    int nsdk_drawable_common_ic_set_point_blue -> nsdk_drawable_common_ic_set_point_blue
    int nsdk_drawable_common_ic_set_point_white -> nsdk_drawable_common_ic_set_point_white
    int nsdk_drawable_common_line_horizontal -> nsdk_drawable_common_line_horizontal
    int nsdk_drawable_common_line_horizontal_night -> nsdk_drawable_common_line_horizontal_night
    int nsdk_drawable_common_loading -> nsdk_drawable_common_loading
    int nsdk_drawable_common_loading_box -> nsdk_drawable_common_loading_box
    int nsdk_drawable_common_loading_circle -> nsdk_drawable_common_loading_circle
    int nsdk_drawable_common_loading_drop -> nsdk_drawable_common_loading_drop
    int nsdk_drawable_common_text_color_selector -> nsdk_drawable_common_text_color_selector
    int nsdk_drawable_rg_assist_accident -> nsdk_drawable_rg_assist_accident
    int nsdk_drawable_rg_assist_blindbend_continuous -> nsdk_drawable_rg_assist_blindbend_continuous
    int nsdk_drawable_rg_assist_blindbend_left -> nsdk_drawable_rg_assist_blindbend_left
    int nsdk_drawable_rg_assist_blindbend_right -> nsdk_drawable_rg_assist_blindbend_right
    int nsdk_drawable_rg_assist_blindslope -> nsdk_drawable_rg_assist_blindslope
    int nsdk_drawable_rg_assist_blindslope_down -> nsdk_drawable_rg_assist_blindslope_down
    int nsdk_drawable_rg_assist_blindslope_up -> nsdk_drawable_rg_assist_blindslope_up
    int nsdk_drawable_rg_assist_bridge -> nsdk_drawable_rg_assist_bridge
    int nsdk_drawable_rg_assist_children -> nsdk_drawable_rg_assist_children
    int nsdk_drawable_rg_assist_honk -> nsdk_drawable_rg_assist_honk
    int nsdk_drawable_rg_assist_joint_left -> nsdk_drawable_rg_assist_joint_left
    int nsdk_drawable_rg_assist_joint_main -> nsdk_drawable_rg_assist_joint_main
    int nsdk_drawable_rg_assist_joint_right -> nsdk_drawable_rg_assist_joint_right
    int nsdk_drawable_rg_assist_limitcamera -> nsdk_drawable_rg_assist_limitcamera
    int nsdk_drawable_rg_assist_narrow_both -> nsdk_drawable_rg_assist_narrow_both
    int nsdk_drawable_rg_assist_narrow_left -> nsdk_drawable_rg_assist_narrow_left
    int nsdk_drawable_rg_assist_narrow_right -> nsdk_drawable_rg_assist_narrow_right
    int nsdk_drawable_rg_assist_othercamera -> nsdk_drawable_rg_assist_othercamera
    int nsdk_drawable_rg_assist_overtakeforbidden -> nsdk_drawable_rg_assist_overtakeforbidden
    int nsdk_drawable_rg_assist_peccanrycamera -> nsdk_drawable_rg_assist_peccanrycamera
    int nsdk_drawable_rg_assist_railway -> nsdk_drawable_rg_assist_railway
    int nsdk_drawable_rg_assist_rockfall -> nsdk_drawable_rg_assist_rockfall
    int nsdk_drawable_rg_assist_rockfall_left -> nsdk_drawable_rg_assist_rockfall_left
    int nsdk_drawable_rg_assist_rockfall_right -> nsdk_drawable_rg_assist_rockfall_right
    int nsdk_drawable_rg_assist_slip -> nsdk_drawable_rg_assist_slip
    int nsdk_drawable_rg_assist_trafficlightcamera -> nsdk_drawable_rg_assist_trafficlightcamera
    int nsdk_drawable_rg_assist_tunnel -> nsdk_drawable_rg_assist_tunnel
    int nsdk_drawable_rg_assist_turn_inferry -> nsdk_drawable_rg_assist_turn_inferry
    int nsdk_drawable_rg_assist_turn_outferry -> nsdk_drawable_rg_assist_turn_outferry
    int nsdk_drawable_rg_assist_uneven -> nsdk_drawable_rg_assist_uneven
    int nsdk_drawable_rg_assist_viliage -> nsdk_drawable_rg_assist_viliage
    int nsdk_drawable_rg_bg_ar -> nsdk_drawable_rg_bg_ar
    int nsdk_drawable_rg_bg_assist_progress -> nsdk_drawable_rg_bg_assist_progress
    int nsdk_drawable_rg_bg_enlargeroadmap_distance -> nsdk_drawable_rg_bg_enlargeroadmap_distance
    int nsdk_drawable_rg_bg_enlargeroadmap_road_name -> nsdk_drawable_rg_bg_enlargeroadmap_road_name
    int nsdk_drawable_rg_bg_fullview_prj_right_normal -> nsdk_drawable_rg_bg_fullview_prj_right_normal
    int nsdk_drawable_rg_bg_fullview_prj_right_normal_night -> nsdk_drawable_rg_bg_fullview_prj_right_normal_night
    int nsdk_drawable_rg_bg_fullview_prj_right_pressed -> nsdk_drawable_rg_bg_fullview_prj_right_pressed
    int nsdk_drawable_rg_bg_fullview_prj_right_pressed_night -> nsdk_drawable_rg_bg_fullview_prj_right_pressed_night
    int nsdk_drawable_rg_bg_gps_status -> nsdk_drawable_rg_bg_gps_status
    int nsdk_drawable_rg_bg_net_refresh_newbie -> nsdk_drawable_rg_bg_net_refresh_newbie
    int nsdk_drawable_rg_bg_projection_card_selector -> nsdk_drawable_rg_bg_projection_card_selector
    int nsdk_drawable_rg_bg_space_search_catalog_prj -> nsdk_drawable_rg_bg_space_search_catalog_prj
    int nsdk_drawable_rg_bg_space_search_catalog_prj_night -> nsdk_drawable_rg_bg_space_search_catalog_prj_night
    int nsdk_drawable_rg_bg_space_search_catalog_prj_normal -> nsdk_drawable_rg_bg_space_search_catalog_prj_normal
    int nsdk_drawable_rg_bg_space_search_catalog_prj_pressed -> nsdk_drawable_rg_bg_space_search_catalog_prj_pressed
    int nsdk_drawable_rg_bg_space_search_catalog_prj_pressed_night -> nsdk_drawable_rg_bg_space_search_catalog_prj_pressed_night
    int nsdk_drawable_rg_bg_zoomin_prj_left_normal -> nsdk_drawable_rg_bg_zoomin_prj_left_normal
    int nsdk_drawable_rg_bg_zoomin_prj_left_normal_night -> nsdk_drawable_rg_bg_zoomin_prj_left_normal_night
    int nsdk_drawable_rg_bg_zoomin_prj_left_pressed -> nsdk_drawable_rg_bg_zoomin_prj_left_pressed
    int nsdk_drawable_rg_bg_zoomin_prj_left_pressed_night -> nsdk_drawable_rg_bg_zoomin_prj_left_pressed_night
    int nsdk_drawable_rg_bg_zoomin_prj_left_selector -> nsdk_drawable_rg_bg_zoomin_prj_left_selector
    int nsdk_drawable_rg_bg_zoomin_prj_left_selector_night -> nsdk_drawable_rg_bg_zoomin_prj_left_selector_night
    int nsdk_drawable_rg_bg_zoomout_prj_center_normal -> nsdk_drawable_rg_bg_zoomout_prj_center_normal
    int nsdk_drawable_rg_bg_zoomout_prj_center_normal_night -> nsdk_drawable_rg_bg_zoomout_prj_center_normal_night
    int nsdk_drawable_rg_bg_zoomout_prj_center_pressed -> nsdk_drawable_rg_bg_zoomout_prj_center_pressed
    int nsdk_drawable_rg_bg_zoomout_prj_center_pressed_night -> nsdk_drawable_rg_bg_zoomout_prj_center_pressed_night
    int nsdk_drawable_rg_bg_zoomout_prj_center_selector -> nsdk_drawable_rg_bg_zoomout_prj_center_selector
    int nsdk_drawable_rg_bg_zoomout_prj_center_selector_night -> nsdk_drawable_rg_bg_zoomout_prj_center_selector_night
    int nsdk_drawable_rg_btn_zoom_in_disabled -> nsdk_drawable_rg_btn_zoom_in_disabled
    int nsdk_drawable_rg_btn_zoom_in_disabled_night -> nsdk_drawable_rg_btn_zoom_in_disabled_night
    int nsdk_drawable_rg_btn_zoom_in_normal -> nsdk_drawable_rg_btn_zoom_in_normal
    int nsdk_drawable_rg_btn_zoom_in_normal_night -> nsdk_drawable_rg_btn_zoom_in_normal_night
    int nsdk_drawable_rg_btn_zoom_out_disabled -> nsdk_drawable_rg_btn_zoom_out_disabled
    int nsdk_drawable_rg_btn_zoom_out_disabled_night -> nsdk_drawable_rg_btn_zoom_out_disabled_night
    int nsdk_drawable_rg_btn_zoom_out_normal -> nsdk_drawable_rg_btn_zoom_out_normal
    int nsdk_drawable_rg_btn_zoom_out_normal_night -> nsdk_drawable_rg_btn_zoom_out_normal_night
    int nsdk_drawable_rg_demogps_pause -> nsdk_drawable_rg_demogps_pause
    int nsdk_drawable_rg_demogps_pause_night -> nsdk_drawable_rg_demogps_pause_night
    int nsdk_drawable_rg_demogps_play -> nsdk_drawable_rg_demogps_play
    int nsdk_drawable_rg_demogps_play_night -> nsdk_drawable_rg_demogps_play_night
    int nsdk_drawable_rg_enlargeroadmap_progressbar -> nsdk_drawable_rg_enlargeroadmap_progressbar
    int nsdk_drawable_rg_fullview_prj_right_selector -> nsdk_drawable_rg_fullview_prj_right_selector
    int nsdk_drawable_rg_fullview_prj_right_selector_night -> nsdk_drawable_rg_fullview_prj_right_selector_night
    int nsdk_drawable_rg_gps_progress_bar -> nsdk_drawable_rg_gps_progress_bar
    int nsdk_drawable_rg_gps_progressbar_style -> nsdk_drawable_rg_gps_progressbar_style
    int nsdk_drawable_rg_hud_back -> nsdk_drawable_rg_hud_back
    int nsdk_drawable_rg_hud_card_enter -> nsdk_drawable_rg_hud_card_enter
    int nsdk_drawable_rg_hud_turn_back -> nsdk_drawable_rg_hud_turn_back
    int nsdk_drawable_rg_hud_turn_branch_center -> nsdk_drawable_rg_hud_turn_branch_center
    int nsdk_drawable_rg_hud_turn_branch_left -> nsdk_drawable_rg_hud_turn_branch_left
    int nsdk_drawable_rg_hud_turn_branch_left_straight -> nsdk_drawable_rg_hud_turn_branch_left_straight
    int nsdk_drawable_rg_hud_turn_branch_right -> nsdk_drawable_rg_hud_turn_branch_right
    int nsdk_drawable_rg_hud_turn_branch_right_straight -> nsdk_drawable_rg_hud_turn_branch_right_straight
    int nsdk_drawable_rg_hud_turn_dest -> nsdk_drawable_rg_hud_turn_dest
    int nsdk_drawable_rg_hud_turn_front -> nsdk_drawable_rg_hud_turn_front
    int nsdk_drawable_rg_hud_turn_left -> nsdk_drawable_rg_hud_turn_left
    int nsdk_drawable_rg_hud_turn_left_back -> nsdk_drawable_rg_hud_turn_left_back
    int nsdk_drawable_rg_hud_turn_left_side -> nsdk_drawable_rg_hud_turn_left_side
    int nsdk_drawable_rg_hud_turn_left_side_ic -> nsdk_drawable_rg_hud_turn_left_side_ic
    int nsdk_drawable_rg_hud_turn_left_side_main -> nsdk_drawable_rg_hud_turn_left_side_main
    int nsdk_drawable_rg_hud_turn_right -> nsdk_drawable_rg_hud_turn_right
    int nsdk_drawable_rg_hud_turn_right_back -> nsdk_drawable_rg_hud_turn_right_back
    int nsdk_drawable_rg_hud_turn_right_front -> nsdk_drawable_rg_hud_turn_right_front
    int nsdk_drawable_rg_hud_turn_right_side -> nsdk_drawable_rg_hud_turn_right_side
    int nsdk_drawable_rg_hud_turn_right_side_ic -> nsdk_drawable_rg_hud_turn_right_side_ic
    int nsdk_drawable_rg_hud_turn_right_side_main -> nsdk_drawable_rg_hud_turn_right_side_main
    int nsdk_drawable_rg_hud_turn_tollgate -> nsdk_drawable_rg_hud_turn_tollgate
    int nsdk_drawable_rg_ic_car3d -> nsdk_drawable_rg_ic_car3d
    int nsdk_drawable_rg_ic_car3d_night -> nsdk_drawable_rg_ic_car3d_night
    int nsdk_drawable_rg_ic_fullview -> nsdk_drawable_rg_ic_fullview
    int nsdk_drawable_rg_ic_fullview_night -> nsdk_drawable_rg_ic_fullview_night
    int nsdk_drawable_rg_ic_fullview_off -> nsdk_drawable_rg_ic_fullview_off
    int nsdk_drawable_rg_ic_fullview_off_night -> nsdk_drawable_rg_ic_fullview_off_night
    int nsdk_drawable_rg_ic_get_return -> nsdk_drawable_rg_ic_get_return
    int nsdk_drawable_rg_ic_get_return_horizontal -> nsdk_drawable_rg_ic_get_return_horizontal
    int nsdk_drawable_rg_ic_get_return_horizontal_night -> nsdk_drawable_rg_ic_get_return_horizontal_night
    int nsdk_drawable_rg_ic_get_return_night -> nsdk_drawable_rg_ic_get_return_night
    int nsdk_drawable_rg_ic_its_horizontal -> nsdk_drawable_rg_ic_its_horizontal
    int nsdk_drawable_rg_ic_its_horizontal_night -> nsdk_drawable_rg_ic_its_horizontal_night
    int nsdk_drawable_rg_ic_locate_car_point -> nsdk_drawable_rg_ic_locate_car_point
    int nsdk_drawable_rg_ic_locate_car_point_night -> nsdk_drawable_rg_ic_locate_car_point_night
    int nsdk_drawable_rg_ic_locate_loading -> nsdk_drawable_rg_ic_locate_loading
    int nsdk_drawable_rg_ic_more -> nsdk_drawable_rg_ic_more
    int nsdk_drawable_rg_ic_more_night -> nsdk_drawable_rg_ic_more_night
    int nsdk_drawable_rg_ic_navi_white -> nsdk_drawable_rg_ic_navi_white
    int nsdk_drawable_rg_ic_net_refresh -> nsdk_drawable_rg_ic_net_refresh
    int nsdk_drawable_rg_ic_net_refresh_newbie_close -> nsdk_drawable_rg_ic_net_refresh_newbie_close
    int nsdk_drawable_rg_ic_net_refresh_night -> nsdk_drawable_rg_ic_net_refresh_night
    int nsdk_drawable_rg_ic_north2d -> nsdk_drawable_rg_ic_north2d
    int nsdk_drawable_rg_ic_north2d_night -> nsdk_drawable_rg_ic_north2d_night
    int nsdk_drawable_rg_ic_quit_guidance -> nsdk_drawable_rg_ic_quit_guidance
    int nsdk_drawable_rg_ic_rem_dist -> nsdk_drawable_rg_ic_rem_dist
    int nsdk_drawable_rg_ic_rem_time -> nsdk_drawable_rg_ic_rem_time
    int nsdk_drawable_rg_ic_route_detail -> nsdk_drawable_rg_ic_route_detail
    int nsdk_drawable_rg_ic_route_detail_night -> nsdk_drawable_rg_ic_route_detail_night
    int nsdk_drawable_rg_ic_route_plan -> nsdk_drawable_rg_ic_route_plan
    int nsdk_drawable_rg_ic_route_plan_night -> nsdk_drawable_rg_ic_route_plan_night
    int nsdk_drawable_rg_ic_routedetail_horizontal -> nsdk_drawable_rg_ic_routedetail_horizontal
    int nsdk_drawable_rg_ic_routedetail_horizontal_night -> nsdk_drawable_rg_ic_routedetail_horizontal_night
    int nsdk_drawable_rg_ic_routeplan_horizontal -> nsdk_drawable_rg_ic_routeplan_horizontal
    int nsdk_drawable_rg_ic_routeplan_horizontal_night -> nsdk_drawable_rg_ic_routeplan_horizontal_night
    int nsdk_drawable_rg_ic_satellite_gray -> nsdk_drawable_rg_ic_satellite_gray
    int nsdk_drawable_rg_ic_satellite_green -> nsdk_drawable_rg_ic_satellite_green
    int nsdk_drawable_rg_ic_satellite_red -> nsdk_drawable_rg_ic_satellite_red
    int nsdk_drawable_rg_ic_satellite_yellow -> nsdk_drawable_rg_ic_satellite_yellow
    int nsdk_drawable_rg_ic_scale_indicator -> nsdk_drawable_rg_ic_scale_indicator
    int nsdk_drawable_rg_ic_scale_indicator_night -> nsdk_drawable_rg_ic_scale_indicator_night
    int nsdk_drawable_rg_ic_search_space -> nsdk_drawable_rg_ic_search_space
    int nsdk_drawable_rg_ic_search_space_horizontal -> nsdk_drawable_rg_ic_search_space_horizontal
    int nsdk_drawable_rg_ic_search_space_horizontal_night -> nsdk_drawable_rg_ic_search_space_horizontal_night
    int nsdk_drawable_rg_ic_search_space_night -> nsdk_drawable_rg_ic_search_space_night
    int nsdk_drawable_rg_ic_space_search_night -> nsdk_drawable_rg_ic_space_search_night
    int nsdk_drawable_rg_ic_speed_0 -> nsdk_drawable_rg_ic_speed_0
    int nsdk_drawable_rg_ic_speed_1 -> nsdk_drawable_rg_ic_speed_1
    int nsdk_drawable_rg_ic_speed_1_night -> nsdk_drawable_rg_ic_speed_1_night
    int nsdk_drawable_rg_ic_speed_2 -> nsdk_drawable_rg_ic_speed_2
    int nsdk_drawable_rg_ic_speed_2_night -> nsdk_drawable_rg_ic_speed_2_night
    int nsdk_drawable_rg_ic_speed_3 -> nsdk_drawable_rg_ic_speed_3
    int nsdk_drawable_rg_ic_speed_3_night -> nsdk_drawable_rg_ic_speed_3_night
    int nsdk_drawable_rg_ic_speeding_horizontal -> nsdk_drawable_rg_ic_speeding_horizontal
    int nsdk_drawable_rg_ic_speeding_horizontal_night -> nsdk_drawable_rg_ic_speeding_horizontal_night
    int nsdk_drawable_rg_ic_straight_horizontal -> nsdk_drawable_rg_ic_straight_horizontal
    int nsdk_drawable_rg_ic_straight_horizontal_night -> nsdk_drawable_rg_ic_straight_horizontal_night
    int nsdk_drawable_rg_ic_turn_back -> nsdk_drawable_rg_ic_turn_back
    int nsdk_drawable_rg_ic_turn_back_s -> nsdk_drawable_rg_ic_turn_back_s
    int nsdk_drawable_rg_ic_turn_branch_center -> nsdk_drawable_rg_ic_turn_branch_center
    int nsdk_drawable_rg_ic_turn_branch_center_s -> nsdk_drawable_rg_ic_turn_branch_center_s
    int nsdk_drawable_rg_ic_turn_branch_left -> nsdk_drawable_rg_ic_turn_branch_left
    int nsdk_drawable_rg_ic_turn_branch_left_s -> nsdk_drawable_rg_ic_turn_branch_left_s
    int nsdk_drawable_rg_ic_turn_branch_left_straight -> nsdk_drawable_rg_ic_turn_branch_left_straight
    int nsdk_drawable_rg_ic_turn_branch_left_straight_s -> nsdk_drawable_rg_ic_turn_branch_left_straight_s
    int nsdk_drawable_rg_ic_turn_branch_right -> nsdk_drawable_rg_ic_turn_branch_right
    int nsdk_drawable_rg_ic_turn_branch_right_s -> nsdk_drawable_rg_ic_turn_branch_right_s
    int nsdk_drawable_rg_ic_turn_branch_right_straight -> nsdk_drawable_rg_ic_turn_branch_right_straight
    int nsdk_drawable_rg_ic_turn_branch_right_straight_s -> nsdk_drawable_rg_ic_turn_branch_right_straight_s
    int nsdk_drawable_rg_ic_turn_dest -> nsdk_drawable_rg_ic_turn_dest
    int nsdk_drawable_rg_ic_turn_dest_s -> nsdk_drawable_rg_ic_turn_dest_s
    int nsdk_drawable_rg_ic_turn_front -> nsdk_drawable_rg_ic_turn_front
    int nsdk_drawable_rg_ic_turn_front_s -> nsdk_drawable_rg_ic_turn_front_s
    int nsdk_drawable_rg_ic_turn_inferry -> nsdk_drawable_rg_ic_turn_inferry
    int nsdk_drawable_rg_ic_turn_inferry_s -> nsdk_drawable_rg_ic_turn_inferry_s
    int nsdk_drawable_rg_ic_turn_left -> nsdk_drawable_rg_ic_turn_left
    int nsdk_drawable_rg_ic_turn_left_back -> nsdk_drawable_rg_ic_turn_left_back
    int nsdk_drawable_rg_ic_turn_left_back_s -> nsdk_drawable_rg_ic_turn_left_back_s
    int nsdk_drawable_rg_ic_turn_left_front -> nsdk_drawable_rg_ic_turn_left_front
    int nsdk_drawable_rg_ic_turn_left_front_s -> nsdk_drawable_rg_ic_turn_left_front_s
    int nsdk_drawable_rg_ic_turn_left_s -> nsdk_drawable_rg_ic_turn_left_s
    int nsdk_drawable_rg_ic_turn_left_side -> nsdk_drawable_rg_ic_turn_left_side
    int nsdk_drawable_rg_ic_turn_left_side_ic -> nsdk_drawable_rg_ic_turn_left_side_ic
    int nsdk_drawable_rg_ic_turn_left_side_ic_s -> nsdk_drawable_rg_ic_turn_left_side_ic_s
    int nsdk_drawable_rg_ic_turn_left_side_main -> nsdk_drawable_rg_ic_turn_left_side_main
    int nsdk_drawable_rg_ic_turn_left_side_main_s -> nsdk_drawable_rg_ic_turn_left_side_main_s
    int nsdk_drawable_rg_ic_turn_left_side_s -> nsdk_drawable_rg_ic_turn_left_side_s
    int nsdk_drawable_rg_ic_turn_outferry -> nsdk_drawable_rg_ic_turn_outferry
    int nsdk_drawable_rg_ic_turn_right -> nsdk_drawable_rg_ic_turn_right
    int nsdk_drawable_rg_ic_turn_right_back -> nsdk_drawable_rg_ic_turn_right_back
    int nsdk_drawable_rg_ic_turn_right_back_s -> nsdk_drawable_rg_ic_turn_right_back_s
    int nsdk_drawable_rg_ic_turn_right_front -> nsdk_drawable_rg_ic_turn_right_front
    int nsdk_drawable_rg_ic_turn_right_front_s -> nsdk_drawable_rg_ic_turn_right_front_s
    int nsdk_drawable_rg_ic_turn_right_s -> nsdk_drawable_rg_ic_turn_right_s
    int nsdk_drawable_rg_ic_turn_right_side -> nsdk_drawable_rg_ic_turn_right_side
    int nsdk_drawable_rg_ic_turn_right_side_ic -> nsdk_drawable_rg_ic_turn_right_side_ic
    int nsdk_drawable_rg_ic_turn_right_side_ic_s -> nsdk_drawable_rg_ic_turn_right_side_ic_s
    int nsdk_drawable_rg_ic_turn_right_side_main -> nsdk_drawable_rg_ic_turn_right_side_main
    int nsdk_drawable_rg_ic_turn_right_side_main_s -> nsdk_drawable_rg_ic_turn_right_side_main_s
    int nsdk_drawable_rg_ic_turn_right_side_s -> nsdk_drawable_rg_ic_turn_right_side_s
    int nsdk_drawable_rg_ic_turn_ring -> nsdk_drawable_rg_ic_turn_ring
    int nsdk_drawable_rg_ic_turn_ring_out -> nsdk_drawable_rg_ic_turn_ring_out
    int nsdk_drawable_rg_ic_turn_ring_out_s -> nsdk_drawable_rg_ic_turn_ring_out_s
    int nsdk_drawable_rg_ic_turn_ring_s -> nsdk_drawable_rg_ic_turn_ring_s
    int nsdk_drawable_rg_ic_turn_start -> nsdk_drawable_rg_ic_turn_start
    int nsdk_drawable_rg_ic_turn_start_s -> nsdk_drawable_rg_ic_turn_start_s
    int nsdk_drawable_rg_ic_turn_tollgate -> nsdk_drawable_rg_ic_turn_tollgate
    int nsdk_drawable_rg_ic_turn_tollgate_s -> nsdk_drawable_rg_ic_turn_tollgate_s
    int nsdk_drawable_rg_ic_turn_via_1 -> nsdk_drawable_rg_ic_turn_via_1
    int nsdk_drawable_rg_ic_turn_via_1_s -> nsdk_drawable_rg_ic_turn_via_1_s
    int nsdk_drawable_rg_ic_unselected -> nsdk_drawable_rg_ic_unselected
    int nsdk_drawable_rg_ic_up -> nsdk_drawable_rg_ic_up
    int nsdk_drawable_rg_ic_userinfo -> nsdk_drawable_rg_ic_userinfo
    int nsdk_drawable_rg_ic_view -> nsdk_drawable_rg_ic_view
    int nsdk_drawable_rg_ic_view_small -> nsdk_drawable_rg_ic_view_small
    int nsdk_drawable_rg_ic_voice -> nsdk_drawable_rg_ic_voice
    int nsdk_drawable_rg_ic_voice_mode_horizontal -> nsdk_drawable_rg_ic_voice_mode_horizontal
    int nsdk_drawable_rg_ic_voice_mode_horizontal_night -> nsdk_drawable_rg_ic_voice_mode_horizontal_night
    int nsdk_drawable_rg_line_horizontal -> nsdk_drawable_rg_line_horizontal
    int nsdk_drawable_rg_line_vertical -> nsdk_drawable_rg_line_vertical
    int nsdk_drawable_rg_line_vertical_night -> nsdk_drawable_rg_line_vertical_night
    int nsdk_drawable_rg_loc_progress -> nsdk_drawable_rg_loc_progress
    int nsdk_drawable_rg_loc_progress_bar -> nsdk_drawable_rg_loc_progress_bar
    int nsdk_drawable_rg_main_auxiliary_guide -> nsdk_drawable_rg_main_auxiliary_guide
    int nsdk_drawable_rg_main_auxiliary_switch -> nsdk_drawable_rg_main_auxiliary_switch
    int nsdk_drawable_rg_next_road_progressbar -> nsdk_drawable_rg_next_road_progressbar
    int nsdk_drawable_rg_popup_bg -> nsdk_drawable_rg_popup_bg
    int nsdk_drawable_rg_popup_pointer_button -> nsdk_drawable_rg_popup_pointer_button
    int nsdk_drawable_rg_progressbar_raster_first -> nsdk_drawable_rg_progressbar_raster_first
    int nsdk_drawable_rg_route_desc_bg_above -> nsdk_drawable_rg_route_desc_bg_above
    int nsdk_drawable_rg_route_desc_bg_below -> nsdk_drawable_rg_route_desc_bg_below
    int nsdk_drawable_rg_route_desc_end_point -> nsdk_drawable_rg_route_desc_end_point
    int nsdk_drawable_rg_space_search_gas_station_disabled -> nsdk_drawable_rg_space_search_gas_station_disabled
    int nsdk_drawable_rg_space_search_gas_station_normal -> nsdk_drawable_rg_space_search_gas_station_normal
    int nsdk_drawable_rg_space_search_parking_disabled -> nsdk_drawable_rg_space_search_parking_disabled
    int nsdk_drawable_rg_space_search_parking_normal -> nsdk_drawable_rg_space_search_parking_normal
    int nsdk_drawable_rg_space_search_refresh_disabled -> nsdk_drawable_rg_space_search_refresh_disabled
    int nsdk_drawable_rg_space_search_refresh_normal -> nsdk_drawable_rg_space_search_refresh_normal
    int nsdk_drawable_rg_space_search_service_area_disabled -> nsdk_drawable_rg_space_search_service_area_disabled
    int nsdk_drawable_rg_space_search_service_area_normal -> nsdk_drawable_rg_space_search_service_area_normal
    int nsdk_drawable_rg_space_search_toilet_disabled -> nsdk_drawable_rg_space_search_toilet_disabled
    int nsdk_drawable_rg_space_search_toilet_normal -> nsdk_drawable_rg_space_search_toilet_normal
    int nsdk_drawable_rg_space_search_via_close -> nsdk_drawable_rg_space_search_via_close
    int nsdk_drawable_rg_space_search_via_ic -> nsdk_drawable_rg_space_search_via_ic
    int nsdk_drawable_rg_vector_map_car -> nsdk_drawable_rg_vector_map_car
    int nsdk_drawable_tts_bg_progress_background -> nsdk_drawable_tts_bg_progress_background
    int nsdk_drawable_tts_bg_progress_downloading -> nsdk_drawable_tts_bg_progress_downloading
    int nsdk_drawable_tts_bg_progress_downloading_selector -> nsdk_drawable_tts_bg_progress_downloading_selector
com.baidu.navisdk.R$id -> com.baidu.navisdk.R$id:
    int bnav_rg_assist_top0_progressbar -> bnav_rg_assist_top0_progressbar
    int bnav_rg_assist_top1_progressbar -> bnav_rg_assist_top1_progressbar
    int bnav_rg_assist_top2_progressbar -> bnav_rg_assist_top2_progressbar
    int bnav_rg_assistguide_layout -> bnav_rg_assistguide_layout
    int bnav_rg_back -> bnav_rg_back
    int bnav_rg_back_anim_dest -> bnav_rg_back_anim_dest
    int bnav_rg_back_for_anim -> bnav_rg_back_for_anim
    int bnav_rg_bottom_btns -> bnav_rg_bottom_btns
    int bnav_rg_btn_ar -> bnav_rg_btn_ar
    int bnav_rg_btn_full_view -> bnav_rg_btn_full_view
    int bnav_rg_btn_hud -> bnav_rg_btn_hud
    int bnav_rg_btn_hud_mirror_back -> bnav_rg_btn_hud_mirror_back
    int bnav_rg_btn_its_switch -> bnav_rg_btn_its_switch
    int bnav_rg_btn_location -> bnav_rg_btn_location
    int bnav_rg_btn_more -> bnav_rg_btn_more
    int bnav_rg_btn_net_refresh -> bnav_rg_btn_net_refresh
    int bnav_rg_btn_quit -> bnav_rg_btn_quit
    int bnav_rg_btn_quit_guidance -> bnav_rg_btn_quit_guidance
    int bnav_rg_btn_speed_set -> bnav_rg_btn_speed_set
    int bnav_rg_btn_zoom_in -> bnav_rg_btn_zoom_in
    int bnav_rg_btn_zoom_out -> bnav_rg_btn_zoom_out
    int bnav_rg_enlargeroadmap_carpos_image -> bnav_rg_enlargeroadmap_carpos_image
    int bnav_rg_enlargeroadmap_carpos_layout -> bnav_rg_enlargeroadmap_carpos_layout
    int bnav_rg_enlargeroadmap_image -> bnav_rg_enlargeroadmap_image
    int bnav_rg_enlargeroadmap_info_layout -> bnav_rg_enlargeroadmap_info_layout
    int bnav_rg_enlargeroadmap_layout -> bnav_rg_enlargeroadmap_layout
    int bnav_rg_enlargeroadmap_progress -> bnav_rg_enlargeroadmap_progress
    int bnav_rg_enlargeroadmap_remain_dist -> bnav_rg_enlargeroadmap_remain_dist
    int bnav_rg_enlargeroadmap_road_name -> bnav_rg_enlargeroadmap_road_name
    int bnav_rg_gps -> bnav_rg_gps
    int bnav_rg_hud_dialog_main -> bnav_rg_hud_dialog_main
    int bnav_rg_hud_enter -> bnav_rg_hud_enter
    int bnav_rg_ic_satelite_num -> bnav_rg_ic_satelite_num
    int bnav_rg_ic_satelite_num_text -> bnav_rg_ic_satelite_num_text
    int bnav_rg_item_id -> bnav_rg_item_id
    int bnav_rg_iv_item_image -> bnav_rg_iv_item_image
    int bnav_rg_iv_netrefresh_newbie_close -> bnav_rg_iv_netrefresh_newbie_close
    int bnav_rg_ll_net_refresh_newbie -> bnav_rg_ll_net_refresh_newbie
    int bnav_rg_location_layout -> bnav_rg_location_layout
    int bnav_rg_location_progress -> bnav_rg_location_progress
    int bnav_rg_main_auxiliary_guide -> bnav_rg_main_auxiliary_guide
    int bnav_rg_main_auxiliary_switch -> bnav_rg_main_auxiliary_switch
    int bnav_rg_main_layout -> bnav_rg_main_layout
    int bnav_rg_map_scale_layout -> bnav_rg_map_scale_layout
    int bnav_rg_next_dist -> bnav_rg_next_dist
    int bnav_rg_next_road_name -> bnav_rg_next_road_name
    int bnav_rg_nextroad_progress -> bnav_rg_nextroad_progress
    int bnav_rg_rem_dist_icon -> bnav_rg_rem_dist_icon
    int bnav_rg_rem_time_icon -> bnav_rg_rem_time_icon
    int bnav_rg_remain_dist -> bnav_rg_remain_dist
    int bnav_rg_remain_info_panel -> bnav_rg_remain_info_panel
    int bnav_rg_remain_time -> bnav_rg_remain_time
    int bnav_rg_remain_total_dist -> bnav_rg_remain_total_dist
    int bnav_rg_remain_total_time -> bnav_rg_remain_total_time
    int bnav_rg_route_info_panel -> bnav_rg_route_info_panel
    int bnav_rg_scale_indicator -> bnav_rg_scale_indicator
    int bnav_rg_scale_title -> bnav_rg_scale_title
    int bnav_rg_turn_icon -> bnav_rg_turn_icon
    int bnav_rg_turn_info_panel -> bnav_rg_turn_info_panel
    int bnav_rg_turninfo_card -> bnav_rg_turninfo_card
    int bnav_rg_turninfo_card_and_progress -> bnav_rg_turninfo_card_and_progress
    int bnav_rg_tv_item_name -> bnav_rg_tv_item_name
    int bnav_rg_tv_item_status -> bnav_rg_tv_item_status
    int bnav_rg_ui_container -> bnav_rg_ui_container
    int bnav_rg_virtual_image -> bnav_rg_virtual_image
    int bnav_rg_zoom_and_fullview_panel -> bnav_rg_zoom_and_fullview_panel
    int bnav_rg_zoom_line_left -> bnav_rg_zoom_line_left
    int bnav_rg_zoom_line_right -> bnav_rg_zoom_line_right
    int bottom_bar -> bottom_bar
    int btn_confirm_pickpoint -> btn_confirm_pickpoint
    int btn_pickpoint_back -> btn_pickpoint_back
    int bubble_view -> bubble_view
    int confirm_networking_tv -> confirm_networking_tv
    int content -> content
    int content_message -> content_message
    int dl_offline_data_tv -> dl_offline_data_tv
    int end_image -> end_image
    int first_btn -> first_btn
    int infor_imageview -> infor_imageview
    int iv_dialog_close -> iv_dialog_close
    int left_div -> left_div
    int ll_loading_box -> ll_loading_box
    int mainView -> mainView
    int map_control_panel -> map_control_panel
    int nav_hud_direction -> nav_hud_direction
    int nav_hud_gps_status -> nav_hud_gps_status
    int nav_hud_head_miles -> nav_hud_head_miles
    int nav_hud_road_name -> nav_hud_road_name
    int nav_hud_turn_icon -> nav_hud_turn_icon
    int nav_hud_ui -> nav_hud_ui
    int navi_dialog_root -> navi_dialog_root
    int navi_hud_gps_hint -> navi_hud_gps_hint
    int navi_hud_loading -> navi_hud_loading
    int network_cancle_tv -> network_cancle_tv
    int networking_content -> networking_content
    int nsdk_ptr_gridview -> nsdk_ptr_gridview
    int nsdk_ptr_scrollview -> nsdk_ptr_scrollview
    int nsdk_ptr_webview -> nsdk_ptr_webview
    int nsdk_rg_btn_search_refresh -> nsdk_rg_btn_search_refresh
    int nsdk_rg_space_search_btn_back -> nsdk_rg_space_search_btn_back
    int nsdk_rg_space_search_catalog -> nsdk_rg_space_search_catalog
    int nsdk_rg_space_search_close_via_btn -> nsdk_rg_space_search_close_via_btn
    int nsdk_rg_space_search_gas_station_btn -> nsdk_rg_space_search_gas_station_btn
    int nsdk_rg_space_search_gas_station_tv -> nsdk_rg_space_search_gas_station_tv
    int nsdk_rg_space_search_layout_gas_station -> nsdk_rg_space_search_layout_gas_station
    int nsdk_rg_space_search_layout_parking -> nsdk_rg_space_search_layout_parking
    int nsdk_rg_space_search_layout_resume_nav -> nsdk_rg_space_search_layout_resume_nav
    int nsdk_rg_space_search_layout_service_area -> nsdk_rg_space_search_layout_service_area
    int nsdk_rg_space_search_layout_toilet -> nsdk_rg_space_search_layout_toilet
    int nsdk_rg_space_search_line_iv1 -> nsdk_rg_space_search_line_iv1
    int nsdk_rg_space_search_line_iv2 -> nsdk_rg_space_search_line_iv2
    int nsdk_rg_space_search_line_iv3 -> nsdk_rg_space_search_line_iv3
    int nsdk_rg_space_search_parking_btn -> nsdk_rg_space_search_parking_btn
    int nsdk_rg_space_search_parking_tv -> nsdk_rg_space_search_parking_tv
    int nsdk_rg_space_search_resume_navi -> nsdk_rg_space_search_resume_navi
    int nsdk_rg_space_search_service_area_btn -> nsdk_rg_space_search_service_area_btn
    int nsdk_rg_space_search_service_area_tv -> nsdk_rg_space_search_service_area_tv
    int nsdk_rg_space_search_set_as_via_pt -> nsdk_rg_space_search_set_as_via_pt
    int nsdk_rg_space_search_toilet_btn -> nsdk_rg_space_search_toilet_btn
    int nsdk_rg_space_search_toilet_tv -> nsdk_rg_space_search_toilet_tv
    int nsdk_rg_space_search_via_ic -> nsdk_rg_space_search_via_ic
    int nsdk_rg_space_search_via_poi_desc -> nsdk_rg_space_search_via_poi_desc
    int nsdk_rg_via_tx -> nsdk_rg_via_tx
    int pickpoint_title_layout -> pickpoint_title_layout
    int pickpoint_title_tv -> pickpoint_title_tv
    int progress_cycle_normal -> progress_cycle_normal
    int progress_tip_text -> progress_tip_text
    int right_div -> right_div
    int route_desc_distance -> route_desc_distance
    int route_desc_distance_unit -> route_desc_distance_unit
    int route_desc_end_name -> route_desc_end_name
    int route_desc_time -> route_desc_time
    int second_btn -> second_btn
    int text_view -> text_view
    int titleTV -> titleTV
    int title_bar -> title_bar
    int tts_downloading_percent_tv -> tts_downloading_percent_tv
    int tts_downloading_progress_bar -> tts_downloading_progress_bar
    int tts_downloading_size_tv -> tts_downloading_size_tv
    int tts_message -> tts_message
    int tv_start_navi -> tv_start_navi
com.baidu.navisdk.R$layout -> com.baidu.navisdk.R$layout:
    int nsdk_layout_common_dialog -> nsdk_layout_common_dialog
    int nsdk_layout_common_progress_dialog_animation -> nsdk_layout_common_progress_dialog_animation
    int nsdk_layout_dialog -> nsdk_layout_dialog
    int nsdk_layout_message_dialog -> nsdk_layout_message_dialog
    int nsdk_layout_network_dialog -> nsdk_layout_network_dialog
    int nsdk_layout_newer_guide_dialog -> nsdk_layout_newer_guide_dialog
    int nsdk_layout_rg_bubble_view -> nsdk_layout_rg_bubble_view
    int nsdk_layout_rg_exitdialog_text -> nsdk_layout_rg_exitdialog_text
    int nsdk_layout_rg_hud_dialog -> nsdk_layout_rg_hud_dialog
    int nsdk_layout_rg_hud_view -> nsdk_layout_rg_hud_view
    int nsdk_layout_rg_main_layout -> nsdk_layout_rg_main_layout
    int nsdk_layout_rg_more_horizontal_list_item -> nsdk_layout_rg_more_horizontal_list_item
    int nsdk_layout_rg_route_desc_window -> nsdk_layout_rg_route_desc_window
    int nsdk_layout_rg_selectpt_view -> nsdk_layout_rg_selectpt_view
    int nsdk_layout_rg_space_search -> nsdk_layout_rg_space_search
    int nsdk_layout_rg_ui_layout -> nsdk_layout_rg_ui_layout
    int nsdk_layout_tts_downloading_layout -> nsdk_layout_tts_downloading_layout
com.baidu.navisdk.R$string -> com.baidu.navisdk.R$string:
    int nsdk_string_alert_iknown -> nsdk_string_alert_iknown
    int nsdk_string_common_alert_cancel -> nsdk_string_common_alert_cancel
    int nsdk_string_common_alert_confirm -> nsdk_string_common_alert_confirm
    int nsdk_string_common_alert_delete -> nsdk_string_common_alert_delete
    int nsdk_string_common_alert_download -> nsdk_string_common_alert_download
    int nsdk_string_common_alert_i_know -> nsdk_string_common_alert_i_know
    int nsdk_string_common_alert_notification -> nsdk_string_common_alert_notification
    int nsdk_string_common_alert_setting -> nsdk_string_common_alert_setting
    int nsdk_string_cruise_camera_desc -> nsdk_string_cruise_camera_desc
    int nsdk_string_cruise_camera_distance -> nsdk_string_cruise_camera_distance
    int nsdk_string_cruise_detecting_camera -> nsdk_string_cruise_detecting_camera
    int nsdk_string_cruise_locate_begin -> nsdk_string_cruise_locate_begin
    int nsdk_string_cruise_locate_failed -> nsdk_string_cruise_locate_failed
    int nsdk_string_cruise_locate_network_error -> nsdk_string_cruise_locate_network_error
    int nsdk_string_cruise_mask_save_energy -> nsdk_string_cruise_mask_save_energy
    int nsdk_string_cruise_mileage -> nsdk_string_cruise_mileage
    int nsdk_string_cruise_new_guide_content -> nsdk_string_cruise_new_guide_content
    int nsdk_string_cruise_new_guide_title -> nsdk_string_cruise_new_guide_title
    int nsdk_string_cruise_nogps_tip -> nsdk_string_cruise_nogps_tip
    int nsdk_string_cruise_not_loc -> nsdk_string_cruise_not_loc
    int nsdk_string_cruise_try_locate -> nsdk_string_cruise_try_locate
    int nsdk_string_cruise_unavailable -> nsdk_string_cruise_unavailable
    int nsdk_string_cruise_voice_camera -> nsdk_string_cruise_voice_camera
    int nsdk_string_cruise_voice_camera_close -> nsdk_string_cruise_voice_camera_close
    int nsdk_string_cruise_voice_camera_desc -> nsdk_string_cruise_voice_camera_desc
    int nsdk_string_cruise_voice_camera_open -> nsdk_string_cruise_voice_camera_open
    int nsdk_string_cruise_voice_safe -> nsdk_string_cruise_voice_safe
    int nsdk_string_cruise_voice_safe_close -> nsdk_string_cruise_voice_safe_close
    int nsdk_string_cruise_voice_safe_desc -> nsdk_string_cruise_voice_safe_desc
    int nsdk_string_cruise_voice_safe_open -> nsdk_string_cruise_voice_safe_open
    int nsdk_string_cruise_voice_speed -> nsdk_string_cruise_voice_speed
    int nsdk_string_cruise_voice_speed_close -> nsdk_string_cruise_voice_speed_close
    int nsdk_string_cruise_voice_speed_open -> nsdk_string_cruise_voice_speed_open
    int nsdk_string_dl_current_province -> nsdk_string_dl_current_province
    int nsdk_string_dl_delete -> nsdk_string_dl_delete
    int nsdk_string_dl_download_all -> nsdk_string_dl_download_all
    int nsdk_string_dl_is_added -> nsdk_string_dl_is_added
    int nsdk_string_dl_newerguide_dlg_btn -> nsdk_string_dl_newerguide_dlg_btn
    int nsdk_string_dl_newerguide_dlg_msg -> nsdk_string_dl_newerguide_dlg_msg
    int nsdk_string_dl_newerguide_dlg_tip_0flow -> nsdk_string_dl_newerguide_dlg_tip_0flow
    int nsdk_string_dl_newerguide_dlg_title -> nsdk_string_dl_newerguide_dlg_title
    int nsdk_string_dl_newver_dlg_btn_cancel -> nsdk_string_dl_newver_dlg_btn_cancel
    int nsdk_string_dl_newver_dlg_btn_confirm -> nsdk_string_dl_newver_dlg_btn_confirm
    int nsdk_string_dl_newver_dlg_msg -> nsdk_string_dl_newver_dlg_msg
    int nsdk_string_dl_newver_dlg_title -> nsdk_string_dl_newver_dlg_title
    int nsdk_string_dl_notify_title -> nsdk_string_dl_notify_title
    int nsdk_string_dl_pause_all -> nsdk_string_dl_pause_all
    int nsdk_string_dl_province_list_title -> nsdk_string_dl_province_list_title
    int nsdk_string_dl_search_hint -> nsdk_string_dl_search_hint
    int nsdk_string_dl_state_downloaded -> nsdk_string_dl_state_downloaded
    int nsdk_string_dl_state_downloading -> nsdk_string_dl_state_downloading
    int nsdk_string_dl_state_finished -> nsdk_string_dl_state_finished
    int nsdk_string_dl_state_net_error -> nsdk_string_dl_state_net_error
    int nsdk_string_dl_state_newversion -> nsdk_string_dl_state_newversion
    int nsdk_string_dl_state_paused -> nsdk_string_dl_state_paused
    int nsdk_string_dl_state_requesting -> nsdk_string_dl_state_requesting
    int nsdk_string_dl_state_sdcard_error -> nsdk_string_dl_state_sdcard_error
    int nsdk_string_dl_state_updating -> nsdk_string_dl_state_updating
    int nsdk_string_dl_state_waiting -> nsdk_string_dl_state_waiting
    int nsdk_string_dl_state_waiting_update -> nsdk_string_dl_state_waiting_update
    int nsdk_string_dl_state_wifi_error -> nsdk_string_dl_state_wifi_error
    int nsdk_string_dl_tip_cost -> nsdk_string_dl_tip_cost
    int nsdk_string_dl_tip_pc -> nsdk_string_dl_tip_pc
    int nsdk_string_dl_title_downloaded -> nsdk_string_dl_title_downloaded
    int nsdk_string_dl_title_downloading -> nsdk_string_dl_title_downloading
    int nsdk_string_dl_update -> nsdk_string_dl_update
    int nsdk_string_dl_update_all -> nsdk_string_dl_update_all
    int nsdk_string_dl_waiting_download_all -> nsdk_string_dl_waiting_download_all
    int nsdk_string_dl_waiting_update_all -> nsdk_string_dl_waiting_update_all
    int nsdk_string_nav_node_company -> nsdk_string_nav_node_company
    int nsdk_string_nav_node_home -> nsdk_string_nav_node_home
    int nsdk_string_nav_node_my_position -> nsdk_string_nav_node_my_position
    int nsdk_string_navi_calc_mod_detail_format -> nsdk_string_navi_calc_mod_detail_format
    int nsdk_string_navi_calc_mod_format -> nsdk_string_navi_calc_mod_format
    int nsdk_string_navi_calc_result_detail_format -> nsdk_string_navi_calc_result_detail_format
    int nsdk_string_navi_calc_result_format -> nsdk_string_navi_calc_result_format
    int nsdk_string_navi_destination_bubble_format -> nsdk_string_navi_destination_bubble_format
    int nsdk_string_navi_destination_desc_format -> nsdk_string_navi_destination_desc_format
    int nsdk_string_navi_destination_desc_format_night -> nsdk_string_navi_destination_desc_format_night
    int nsdk_string_navi_dist_const -> nsdk_string_navi_dist_const
    int nsdk_string_navi_from_node_bubble_format -> nsdk_string_navi_from_node_bubble_format
    int nsdk_string_navi_from_node_desc_format -> nsdk_string_navi_from_node_desc_format
    int nsdk_string_navi_from_node_desc_format_night -> nsdk_string_navi_from_node_desc_format_night
    int nsdk_string_navi_navi -> nsdk_string_navi_navi
    int nsdk_string_navi_navi_count_down -> nsdk_string_navi_navi_count_down
    int nsdk_string_navi_no_name_road -> nsdk_string_navi_no_name_road
    int nsdk_string_navi_route_node_bubble_format -> nsdk_string_navi_route_node_bubble_format
    int nsdk_string_navi_route_node_desc_format -> nsdk_string_navi_route_node_desc_format
    int nsdk_string_navi_route_node_desc_format_night -> nsdk_string_navi_route_node_desc_format_night
    int nsdk_string_navi_route_option -> nsdk_string_navi_route_option
    int nsdk_string_navi_time_const -> nsdk_string_navi_time_const
    int nsdk_string_navi_to_node_bubble_format -> nsdk_string_navi_to_node_bubble_format
    int nsdk_string_navi_to_node_desc_format -> nsdk_string_navi_to_node_desc_format
    int nsdk_string_navi_to_node_desc_format_night -> nsdk_string_navi_to_node_desc_format_night
    int nsdk_string_negative -> nsdk_string_negative
    int nsdk_string_net_refresh_newbie_guide -> nsdk_string_net_refresh_newbie_guide
    int nsdk_string_network_connect_failture -> nsdk_string_network_connect_failture
    int nsdk_string_od_add_to_download_queue -> nsdk_string_od_add_to_download_queue
    int nsdk_string_od_alert_back_no_useable_data -> nsdk_string_od_alert_back_no_useable_data
    int nsdk_string_od_alert_data_change_restart -> nsdk_string_od_alert_data_change_restart
    int nsdk_string_od_alert_map_data_download -> nsdk_string_od_alert_map_data_download
    int nsdk_string_od_alert_map_data_iknown -> nsdk_string_od_alert_map_data_iknown
    int nsdk_string_od_alert_useable_finish_restart -> nsdk_string_od_alert_useable_finish_restart
    int nsdk_string_od_cancel_download -> nsdk_string_od_cancel_download
    int nsdk_string_od_del_common_data_notification -> nsdk_string_od_del_common_data_notification
    int nsdk_string_od_del_navi_data_notification -> nsdk_string_od_del_navi_data_notification
    int nsdk_string_od_download_all -> nsdk_string_od_download_all
    int nsdk_string_od_download_all_complete_alert -> nsdk_string_od_download_all_complete_alert
    int nsdk_string_od_download_complete_alert -> nsdk_string_od_download_complete_alert
    int nsdk_string_od_download_complete_toast -> nsdk_string_od_download_complete_toast
    int nsdk_string_od_download_file_md5_error -> nsdk_string_od_download_file_md5_error
    int nsdk_string_od_download_finish -> nsdk_string_od_download_finish
    int nsdk_string_od_download_request_fail -> nsdk_string_od_download_request_fail
    int nsdk_string_od_download_request_net_work -> nsdk_string_od_download_request_net_work
    int nsdk_string_od_download_size -> nsdk_string_od_download_size
    int nsdk_string_od_downloading -> nsdk_string_od_downloading
    int nsdk_string_od_downloading_alert -> nsdk_string_od_downloading_alert
    int nsdk_string_od_has_no_download_data -> nsdk_string_od_has_no_download_data
    int nsdk_string_od_is_wifi_notification -> nsdk_string_od_is_wifi_notification
    int nsdk_string_od_nav_how_to_get_offline_brief -> nsdk_string_od_nav_how_to_get_offline_brief
    int nsdk_string_od_nav_how_to_get_offline_detail -> nsdk_string_od_nav_how_to_get_offline_detail
    int nsdk_string_od_network_unconnected -> nsdk_string_od_network_unconnected
    int nsdk_string_od_offline_data_downloaded -> nsdk_string_od_offline_data_downloaded
    int nsdk_string_od_offline_data_downloaded_list -> nsdk_string_od_offline_data_downloaded_list
    int nsdk_string_od_offline_data_downloading_list -> nsdk_string_od_offline_data_downloading_list
    int nsdk_string_od_offline_data_undownload -> nsdk_string_od_offline_data_undownload
    int nsdk_string_od_pause_all -> nsdk_string_od_pause_all
    int nsdk_string_od_province_and_city -> nsdk_string_od_province_and_city
    int nsdk_string_od_resume_download -> nsdk_string_od_resume_download
    int nsdk_string_od_sdcard_error -> nsdk_string_od_sdcard_error
    int nsdk_string_od_sdcard_status_invalid -> nsdk_string_od_sdcard_status_invalid
    int nsdk_string_od_sdcard_status_valid -> nsdk_string_od_sdcard_status_valid
    int nsdk_string_od_sdcard_storage_deficiency -> nsdk_string_od_sdcard_storage_deficiency
    int nsdk_string_od_suspend_download -> nsdk_string_od_suspend_download
    int nsdk_string_od_suspending_alert -> nsdk_string_od_suspending_alert
    int nsdk_string_od_suspending_all_alert -> nsdk_string_od_suspending_all_alert
    int nsdk_string_od_title_mapdata -> nsdk_string_od_title_mapdata
    int nsdk_string_od_title_mapdata_left -> nsdk_string_od_title_mapdata_left
    int nsdk_string_od_update_complete_alert -> nsdk_string_od_update_complete_alert
    int nsdk_string_od_update_complete_alert0 -> nsdk_string_od_update_complete_alert0
    int nsdk_string_od_update_suspend_alert -> nsdk_string_od_update_suspend_alert
    int nsdk_string_od_updating_alert -> nsdk_string_od_updating_alert
    int nsdk_string_od_waiting_delete_data -> nsdk_string_od_waiting_delete_data
    int nsdk_string_rg_alert_setting -> nsdk_string_rg_alert_setting
    int nsdk_string_rg_ar_button -> nsdk_string_rg_ar_button
    int nsdk_string_rg_ar_route_detail_format -> nsdk_string_rg_ar_route_detail_format
    int nsdk_string_rg_ar_warning -> nsdk_string_rg_ar_warning
    int nsdk_string_rg_exit_check -> nsdk_string_rg_exit_check
    int nsdk_string_rg_gps_not_open_and_set -> nsdk_string_rg_gps_not_open_and_set
    int nsdk_string_rg_guidance_in_process -> nsdk_string_rg_guidance_in_process
    int nsdk_string_rg_hud_button -> nsdk_string_rg_hud_button
    int nsdk_string_rg_its_history_is_on -> nsdk_string_rg_its_history_is_on
    int nsdk_string_rg_its_is_off -> nsdk_string_rg_its_is_off
    int nsdk_string_rg_its_real_is_on -> nsdk_string_rg_its_real_is_on
    int nsdk_string_rg_its_real_offline -> nsdk_string_rg_its_real_offline
    int nsdk_string_rg_kilometer -> nsdk_string_rg_kilometer
    int nsdk_string_rg_last_more_than_twohours -> nsdk_string_rg_last_more_than_twohours
    int nsdk_string_rg_menu_get_return_btn -> nsdk_string_rg_menu_get_return_btn
    int nsdk_string_rg_menu_its_switch -> nsdk_string_rg_menu_its_switch
    int nsdk_string_rg_menu_route_detail_btn -> nsdk_string_rg_menu_route_detail_btn
    int nsdk_string_rg_menu_route_plan_btn -> nsdk_string_rg_menu_route_plan_btn
    int nsdk_string_rg_menu_set_end_pt_btn -> nsdk_string_rg_menu_set_end_pt_btn
    int nsdk_string_rg_menu_set_via_pt_btn -> nsdk_string_rg_menu_set_via_pt_btn
    int nsdk_string_rg_menu_space_search_btn -> nsdk_string_rg_menu_space_search_btn
    int nsdk_string_rg_menu_speed_tip -> nsdk_string_rg_menu_speed_tip
    int nsdk_string_rg_menu_status_off -> nsdk_string_rg_menu_status_off
    int nsdk_string_rg_menu_status_on -> nsdk_string_rg_menu_status_on
    int nsdk_string_rg_menu_straight_tip -> nsdk_string_rg_menu_straight_tip
    int nsdk_string_rg_menu_voice_mode -> nsdk_string_rg_menu_voice_mode
    int nsdk_string_rg_menu_voice_mode_safe -> nsdk_string_rg_menu_voice_mode_safe
    int nsdk_string_rg_menu_voice_mode_silence -> nsdk_string_rg_menu_voice_mode_silence
    int nsdk_string_rg_menu_voice_mode_simple -> nsdk_string_rg_menu_voice_mode_simple
    int nsdk_string_rg_meter -> nsdk_string_rg_meter
    int nsdk_string_rg_minute -> nsdk_string_rg_minute
    int nsdk_string_rg_nav_dialog_cancel -> nsdk_string_rg_nav_dialog_cancel
    int nsdk_string_rg_nav_direction_east -> nsdk_string_rg_nav_direction_east
    int nsdk_string_rg_nav_direction_north -> nsdk_string_rg_nav_direction_north
    int nsdk_string_rg_nav_direction_northeast -> nsdk_string_rg_nav_direction_northeast
    int nsdk_string_rg_nav_direction_northwest -> nsdk_string_rg_nav_direction_northwest
    int nsdk_string_rg_nav_direction_south -> nsdk_string_rg_nav_direction_south
    int nsdk_string_rg_nav_direction_southeast -> nsdk_string_rg_nav_direction_southeast
    int nsdk_string_rg_nav_direction_southwest -> nsdk_string_rg_nav_direction_southwest
    int nsdk_string_rg_nav_direction_unknown -> nsdk_string_rg_nav_direction_unknown
    int nsdk_string_rg_nav_direction_west -> nsdk_string_rg_nav_direction_west
    int nsdk_string_rg_nav_gps_demo_exit -> nsdk_string_rg_nav_gps_demo_exit
    int nsdk_string_rg_nav_gps_demo_over -> nsdk_string_rg_nav_gps_demo_over
    int nsdk_string_rg_nav_gps_exit -> nsdk_string_rg_nav_gps_exit
    int nsdk_string_rg_nav_gps_over -> nsdk_string_rg_nav_gps_over
    int nsdk_string_rg_nav_title_tip -> nsdk_string_rg_nav_title_tip
    int nsdk_string_rg_navi_status_gps_waiting -> nsdk_string_rg_navi_status_gps_waiting
    int nsdk_string_rg_no_gps -> nsdk_string_rg_no_gps
    int nsdk_string_rg_no_name_road -> nsdk_string_rg_no_name_road
    int nsdk_string_rg_open_gps -> nsdk_string_rg_open_gps
    int nsdk_string_rg_overspeed_off -> nsdk_string_rg_overspeed_off
    int nsdk_string_rg_overspeed_on -> nsdk_string_rg_overspeed_on
    int nsdk_string_rg_pick_end_point -> nsdk_string_rg_pick_end_point
    int nsdk_string_rg_pick_point -> nsdk_string_rg_pick_point
    int nsdk_string_rg_pick_via_point -> nsdk_string_rg_pick_via_point
    int nsdk_string_rg_space_search_failed -> nsdk_string_rg_space_search_failed
    int nsdk_string_rg_space_search_ing -> nsdk_string_rg_space_search_ing
    int nsdk_string_rg_space_search_network_error -> nsdk_string_rg_space_search_network_error
    int nsdk_string_rg_space_search_no_result -> nsdk_string_rg_space_search_no_result
    int nsdk_string_rg_space_search_result_tip_head -> nsdk_string_rg_space_search_result_tip_head
    int nsdk_string_rg_space_search_result_tip_tail -> nsdk_string_rg_space_search_result_tip_tail
    int nsdk_string_rg_straight_speak_off -> nsdk_string_rg_straight_speak_off
    int nsdk_string_rg_straight_speak_on -> nsdk_string_rg_straight_speak_on
    int nsdk_string_rg_tip_voice_safe -> nsdk_string_rg_tip_voice_safe
    int nsdk_string_rg_tts_stop_when_music -> nsdk_string_rg_tts_stop_when_music
    int nsdk_string_rg_unknown_road -> nsdk_string_rg_unknown_road
    int nsdk_string_rg_yawing -> nsdk_string_rg_yawing
    int nsdk_string_rg_yawing_tip -> nsdk_string_rg_yawing_tip
    int nsdk_string_route_option_add_via -> nsdk_string_route_option_add_via
    int nsdk_string_route_option_anolog_navi -> nsdk_string_route_option_anolog_navi
    int nsdk_string_route_plan_detail -> nsdk_string_route_plan_detail
    int nsdk_string_route_plan_distance_time -> nsdk_string_route_plan_distance_time
    int nsdk_string_route_plan_from_to -> nsdk_string_route_plan_from_to
    int nsdk_string_route_plan_lack_data_0 -> nsdk_string_route_plan_lack_data_0
    int nsdk_string_route_plan_lack_data_1 -> nsdk_string_route_plan_lack_data_1
    int nsdk_string_route_plan_lack_data_10 -> nsdk_string_route_plan_lack_data_10
    int nsdk_string_route_plan_lack_data_11 -> nsdk_string_route_plan_lack_data_11
    int nsdk_string_route_plan_lack_data_12 -> nsdk_string_route_plan_lack_data_12
    int nsdk_string_route_plan_lack_data_13 -> nsdk_string_route_plan_lack_data_13
    int nsdk_string_route_plan_lack_data_14 -> nsdk_string_route_plan_lack_data_14
    int nsdk_string_route_plan_lack_data_15 -> nsdk_string_route_plan_lack_data_15
    int nsdk_string_route_plan_lack_data_16 -> nsdk_string_route_plan_lack_data_16
    int nsdk_string_route_plan_lack_data_17 -> nsdk_string_route_plan_lack_data_17
    int nsdk_string_route_plan_lack_data_18 -> nsdk_string_route_plan_lack_data_18
    int nsdk_string_route_plan_lack_data_19 -> nsdk_string_route_plan_lack_data_19
    int nsdk_string_route_plan_lack_data_2 -> nsdk_string_route_plan_lack_data_2
    int nsdk_string_route_plan_lack_data_20 -> nsdk_string_route_plan_lack_data_20
    int nsdk_string_route_plan_lack_data_21 -> nsdk_string_route_plan_lack_data_21
    int nsdk_string_route_plan_lack_data_22 -> nsdk_string_route_plan_lack_data_22
    int nsdk_string_route_plan_lack_data_23 -> nsdk_string_route_plan_lack_data_23
    int nsdk_string_route_plan_lack_data_24 -> nsdk_string_route_plan_lack_data_24
    int nsdk_string_route_plan_lack_data_25 -> nsdk_string_route_plan_lack_data_25
    int nsdk_string_route_plan_lack_data_26 -> nsdk_string_route_plan_lack_data_26
    int nsdk_string_route_plan_lack_data_27 -> nsdk_string_route_plan_lack_data_27
    int nsdk_string_route_plan_lack_data_28 -> nsdk_string_route_plan_lack_data_28
    int nsdk_string_route_plan_lack_data_29 -> nsdk_string_route_plan_lack_data_29
    int nsdk_string_route_plan_lack_data_3 -> nsdk_string_route_plan_lack_data_3
    int nsdk_string_route_plan_lack_data_30 -> nsdk_string_route_plan_lack_data_30
    int nsdk_string_route_plan_lack_data_31 -> nsdk_string_route_plan_lack_data_31
    int nsdk_string_route_plan_lack_data_32 -> nsdk_string_route_plan_lack_data_32
    int nsdk_string_route_plan_lack_data_33 -> nsdk_string_route_plan_lack_data_33
    int nsdk_string_route_plan_lack_data_4 -> nsdk_string_route_plan_lack_data_4
    int nsdk_string_route_plan_lack_data_5 -> nsdk_string_route_plan_lack_data_5
    int nsdk_string_route_plan_lack_data_6 -> nsdk_string_route_plan_lack_data_6
    int nsdk_string_route_plan_lack_data_7 -> nsdk_string_route_plan_lack_data_7
    int nsdk_string_route_plan_lack_data_8 -> nsdk_string_route_plan_lack_data_8
    int nsdk_string_route_plan_lack_data_9 -> nsdk_string_route_plan_lack_data_9
    int nsdk_string_route_plan_map_point -> nsdk_string_route_plan_map_point
    int nsdk_string_route_plan_mod_avoid_trafficjam -> nsdk_string_route_plan_mod_avoid_trafficjam
    int nsdk_string_route_plan_mod_recommend -> nsdk_string_route_plan_mod_recommend
    int nsdk_string_route_plan_mod_short -> nsdk_string_route_plan_mod_short
    int nsdk_string_route_plan_mod_toll -> nsdk_string_route_plan_mod_toll
    int nsdk_string_route_plan_node_my_pos -> nsdk_string_route_plan_node_my_pos
    int nsdk_string_route_plan_toll_road -> nsdk_string_route_plan_toll_road
    int nsdk_string_rp_alert_confirm -> nsdk_string_rp_alert_confirm
    int nsdk_string_rp_alert_notification -> nsdk_string_rp_alert_notification
    int nsdk_string_rp_avoid_trafficjam -> nsdk_string_rp_avoid_trafficjam
    int nsdk_string_rp_avoid_trafficjam_error -> nsdk_string_rp_avoid_trafficjam_error
    int nsdk_string_rp_avoid_trafficjam_iknow -> nsdk_string_rp_avoid_trafficjam_iknow
    int nsdk_string_rp_confirm -> nsdk_string_rp_confirm
    int nsdk_string_rp_data_not_exist -> nsdk_string_rp_data_not_exist
    int nsdk_string_rp_lack_data_tips -> nsdk_string_rp_lack_data_tips
    int nsdk_string_rp_lack_of_some_data -> nsdk_string_rp_lack_of_some_data
    int nsdk_string_rp_network_tip -> nsdk_string_rp_network_tip
    int nsdk_string_rp_on2off_network_error -> nsdk_string_rp_on2off_network_error
    int nsdk_string_rp_online_network_error -> nsdk_string_rp_online_network_error
    int nsdk_string_rp_start_or_dest_invalid -> nsdk_string_rp_start_or_dest_invalid
    int nsdk_string_rp_toast_calc_route_failed -> nsdk_string_rp_toast_calc_route_failed
    int nsdk_string_rp_toast_fail_calc_cancel -> nsdk_string_rp_toast_fail_calc_cancel
    int nsdk_string_rp_toast_fail_calc_fail -> nsdk_string_rp_toast_fail_calc_fail
    int nsdk_string_rp_toast_fail_dest1_deviate -> nsdk_string_rp_toast_fail_dest1_deviate
    int nsdk_string_rp_toast_fail_dest2_deviate -> nsdk_string_rp_toast_fail_dest2_deviate
    int nsdk_string_rp_toast_fail_dest3_deviate -> nsdk_string_rp_toast_fail_dest3_deviate
    int nsdk_string_rp_toast_fail_dest4_deviate -> nsdk_string_rp_toast_fail_dest4_deviate
    int nsdk_string_rp_toast_fail_dest5_deviate -> nsdk_string_rp_toast_fail_dest5_deviate
    int nsdk_string_rp_toast_fail_low_version -> nsdk_string_rp_toast_fail_low_version
    int nsdk_string_rp_toast_fail_no_start -> nsdk_string_rp_toast_fail_no_start
    int nsdk_string_rp_toast_fail_no_stop -> nsdk_string_rp_toast_fail_no_stop
    int nsdk_string_rp_toast_fail_start_deviate -> nsdk_string_rp_toast_fail_start_deviate
    int nsdk_string_rp_toast_fail_too_close -> nsdk_string_rp_toast_fail_too_close
    int nsdk_string_rp_toast_fail_wrong_coord -> nsdk_string_rp_toast_fail_wrong_coord
    int nsdk_string_rp_toast_fail_wrong_version -> nsdk_string_rp_toast_fail_wrong_version
    int nsdk_string_rp_toast_loc_invalid -> nsdk_string_rp_toast_loc_invalid
    int nsdk_string_rp_toast_network_unconnected -> nsdk_string_rp_toast_network_unconnected
    int nsdk_string_rp_toast_offline_avoid_tafficjam_error -> nsdk_string_rp_toast_offline_avoid_tafficjam_error
    int nsdk_string_rp_toast_route_node_not_complete -> nsdk_string_rp_toast_route_node_not_complete
    int nsdk_string_rp_toast_set_end_failed -> nsdk_string_rp_toast_set_end_failed
    int nsdk_string_rp_toast_set_start_failed -> nsdk_string_rp_toast_set_start_failed
    int nsdk_string_search_download_offline_data -> nsdk_string_search_download_offline_data
    int nsdk_string_search_network_tip -> nsdk_string_search_network_tip
    int nsdk_string_search_online -> nsdk_string_search_online
com.baidu.navisdk.R$style -> com.baidu.navisdk.R$style:
    int AppBaseTheme -> AppBaseTheme
    int BNDialog -> BNDialog
    int Dialog_Fullscreen -> Dialog_Fullscreen
    int Dialog_Fullscreen_Title -> Dialog_Fullscreen_Title
    int Dialog_NoFullscreen -> Dialog_NoFullscreen
    int ListView -> ListView
    int ListView_defListItem -> ListView_defListItem
    int ListView_defListItemEx -> ListView_defListItemEx
    int ListView_shortcutListEx -> ListView_shortcutListEx
    int LocationProgressStyle -> LocationProgressStyle
    int NSDK_NaviExpandableListStyle -> NSDK_NaviExpandableListStyle
    int NSDK_NewerGuideDialog -> NSDK_NewerGuideDialog
    int NSDK_Text -> NSDK_Text
    int NSDK_Text_downloadManageListHeader -> NSDK_Text_downloadManageListHeader
    int NSDK_Text_provinceCarStatus -> NSDK_Text_provinceCarStatus
    int NSDK_Text_provinceListName -> NSDK_Text_provinceListName
    int NSDK_Text_provinceListStatus -> NSDK_Text_provinceListStatus
    int RGAnimationMenu -> RGAnimationMenu
    int RGRouteDescWinAnimation -> RGRouteDescWinAnimation
    int Text_CurRoadName -> Text_CurRoadName
    int Text_NextDist -> Text_NextDist
    int Text_RoadName -> Text_RoadName
    int Text_TotalInfo -> Text_TotalInfo
    int comm_progressdlg -> comm_progressdlg
    int theme_comm_progressdlg -> theme_comm_progressdlg
com.baidu.navisdk.R$styleable -> com.baidu.navisdk.R$styleable:
    int[] CircleProgressImageView -> CircleProgressImageView
    int CircleProgressImageView_fill -> CircleProgressImageView_fill
    int CircleProgressImageView_inside_interval -> CircleProgressImageView_inside_interval
    int CircleProgressImageView_max -> CircleProgressImageView_max
    int CircleProgressImageView_paint_color -> CircleProgressImageView_paint_color
    int CircleProgressImageView_paint_width -> CircleProgressImageView_paint_width
    int CircleProgressImageView_text_color -> CircleProgressImageView_text_color
com.baidu.navisdk.VersionInfo -> com.baidu.navisdk.VersionInfo:
    java.lang.String getApiVersion() -> getApiVersion
    int getVersionCode() -> getVersionCode
    java.lang.String getVersionDesc() -> getVersionDesc
com.baidu.navisdk.a -> com.baidu.navisdk.a:
    java.lang.String a -> a
    android.content.Context b -> b
    com.baidu.lbsapi.auth.LBSAuthManager c -> c
    com.baidu.lbsapi.auth.LBSAuthManagerListener d -> d
    com.baidu.navisdk.util.verify.BNKeyVerifyListener e -> e
    boolean f -> f
    com.baidu.navisdk.a g -> g
    com.baidu.lbsapi.auth.LBSAuthManagerListener h -> h
    com.baidu.navisdk.a a() -> a
    void a(com.baidu.lbsapi.auth.LBSAuthManagerListener) -> a
    void a(com.baidu.navisdk.util.verify.BNKeyVerifyListener) -> a
    void d() -> d
    boolean b() -> b
    void e() -> e
    void f() -> f
    void a(boolean) -> a
    java.lang.String a(int) -> a
    java.lang.String a(com.baidu.navisdk.a,int) -> a
    java.lang.String c() -> c
    boolean a(com.baidu.navisdk.a,boolean) -> a
    void a(com.baidu.navisdk.a) -> a
    boolean b(com.baidu.navisdk.a) -> b
    void b(com.baidu.navisdk.a,boolean) -> b
    com.baidu.lbsapi.auth.LBSAuthManagerListener c(com.baidu.navisdk.a) -> c
    com.baidu.navisdk.util.verify.BNKeyVerifyListener d(com.baidu.navisdk.a) -> d
com.baidu.navisdk.b -> com.baidu.navisdk.b:
    com.baidu.navisdk.a a -> a
    void onAuthResult(int,java.lang.String) -> onAuthResult
com.baidu.navisdk.comapi.base.BNLogicController -> com.baidu.navisdk.comapi.base.BNLogicController:
com.baidu.navisdk.comapi.base.BNObserver -> com.baidu.navisdk.comapi.base.BNObserver:
    void update(com.baidu.navisdk.comapi.base.BNSubject,int,int,java.lang.Object) -> update
com.baidu.navisdk.comapi.base.BNSubject -> com.baidu.navisdk.comapi.base.BNSubject:
    java.util.ArrayList mObservers -> mObservers
    com.baidu.navisdk.comapi.base.BNObserver mObserver -> mObserver
    void setObserver(com.baidu.navisdk.comapi.base.BNObserver) -> setObserver
    void addObserver(com.baidu.navisdk.comapi.base.BNObserver) -> addObserver
    void deleteObserver(com.baidu.navisdk.comapi.base.BNObserver) -> deleteObserver
    void deleteAllObserver() -> deleteAllObserver
    void notifyObservers(int,int,java.lang.Object) -> notifyObservers
com.baidu.navisdk.comapi.base.MsgHandler -> com.baidu.navisdk.comapi.base.MsgHandler:
    java.util.ArrayList mInterests -> mInterests
    void careAbout() -> careAbout
    void observe(int) -> observe
    void ignore(int) -> ignore
    boolean isObserved(int) -> isObserved
com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper -> com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper:
    java.util.Timer a -> a
    com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper b -> b
    android.os.Handler c -> c
    java.lang.Object d -> d
    boolean e -> e
    android.content.Context f -> f
    com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper$ILocationCallback g -> g
    com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper getInstance() -> getInstance
    void startDayNightTimer() -> startDayNightTimer
    void stopDayNightTimer() -> stopDayNightTimer
    boolean isTimerStart() -> isTimerStart
    void switchDayNightMode() -> switchDayNightMode
    boolean getDayNightMode() -> getDayNightMode
    void a(int,int,java.lang.Object) -> a
    void setLocationListener(com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper$ILocationCallback) -> setLocationListener
com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper$1 -> com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper$1:
    com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper a -> a
    void run() -> run
com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper$2 -> com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper$2:
    int a -> a
    int b -> b
    java.lang.Object c -> c
    com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper d -> d
    void run() -> run
com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper$ILocationCallback -> com.baidu.navisdk.comapi.commontool.BNAutoDayNightHelper$ILocationCallback:
    com.baidu.nplatform.comapi.basestruct.GeoPoint getCurrentLocation() -> getCurrentLocation
com.baidu.navisdk.comapi.commontool.BNDayNightChangedObserver -> com.baidu.navisdk.comapi.commontool.BNDayNightChangedObserver:
    int TYPE_DAY_NIGHT_CHANGE -> TYPE_DAY_NIGHT_CHANGE
com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper -> com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper:
    double a -> a
    double b -> b
    double c -> c
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper d -> d
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper getIntanse() -> getIntanse
    double a(int,int,int,float) -> a
    double a(double) -> a
    double a(double,double) -> a
    double b(double) -> b
    void a(double,int,com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger,com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger) -> a
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunRiseDownHM calulatetm(double,double) -> calulatetm
com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$1 -> com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$1:
com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger -> com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger:
    int a -> a
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper b -> b
    int getInteger() -> getInteger
    void setInteger(int) -> setInteger
com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunRiseDownHM -> com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunRiseDownHM:
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger b -> b
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger c -> c
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger d -> d
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger e -> e
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper a -> a
    int getRiseHour() -> getRiseHour
    int getRiseMin() -> getRiseMin
    int getDownHour() -> getDownHour
    int getDownMin() -> getDownMin
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger a(com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunRiseDownHM) -> a
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger b(com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunRiseDownHM) -> b
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger c(com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunRiseDownHM) -> c
    com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunInteger d(com.baidu.navisdk.comapi.commontool.sunrisedown.BNSunRiseDownTimeHelper$SunRiseDownHM) -> d
com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager -> com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager:
    com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager a -> a
    int LOC_TIME_SET_FOR_NAVI -> LOC_TIME_SET_FOR_NAVI
    int MSG_GPS_SERVICE_EVNET -> MSG_GPS_SERVICE_EVNET
    int GPS_STATUS_OPEN -> GPS_STATUS_OPEN
    int GPS_STATUS_CLOSE -> GPS_STATUS_CLOSE
    int GPS_MIN_SATELITE_COUNT -> GPS_MIN_SATELITE_COUNT
    com.baidu.navi.location.LocationClient b -> b
    android.location.LocationManager c -> c
    android.hardware.SensorManager d -> d
    com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager$BNLocationListener e -> e
    java.util.ArrayList f -> f
    java.util.ArrayList g -> g
    java.util.ArrayList h -> h
    com.baidu.navisdk.model.datastruct.LocData i -> i
    com.baidu.navisdk.model.datastruct.LocData j -> j
    com.baidu.navisdk.model.datastruct.SensorData k -> k
    com.baidu.navisdk.model.datastruct.SensorData l -> l
    com.baidu.navi.location.LocationClientOption m -> m
    com.baidu.nplatform.comapi.basestruct.GeoPoint n -> n
    boolean o -> o
    float[] p -> p
    java.util.List q -> q
    boolean r -> r
    android.location.LocationListener s -> s
    android.hardware.SensorEventListener t -> t
    void registerMessageHandler(android.os.Handler) -> registerMessageHandler
    void unRegisterMessageHandler(android.os.Handler) -> unRegisterMessageHandler
    void b(int,int,int) -> b
    com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager getInstance() -> getInstance
    void destory() -> destory
    void init(android.content.Context) -> init
    void unInit() -> unInit
    void addSensorDataChangeListener(com.baidu.navisdk.comapi.geolocate.ISensorDataChangeListener) -> addSensorDataChangeListener
    void removeSensorDataChangeListener(com.baidu.navisdk.comapi.geolocate.ISensorDataChangeListener) -> removeSensorDataChangeListener
    void addSensorChangeListener(com.baidu.navisdk.comapi.geolocate.ISensorChangeListener) -> addSensorChangeListener
    void removeSensorChangeListener(com.baidu.navisdk.comapi.geolocate.ISensorChangeListener) -> removeSensorChangeListener
    void addLocationChangeLister(com.baidu.navisdk.comapi.geolocate.ILocationChangeListener) -> addLocationChangeLister
    void addNmeaListener(android.location.GpsStatus$NmeaListener) -> addNmeaListener
    void removeLocationChangeLister(com.baidu.navisdk.comapi.geolocate.ILocationChangeListener) -> removeLocationChangeLister
    com.baidu.nplatform.comapi.basestruct.GeoPoint getLastValidLocation() -> getLastValidLocation
    boolean isLocationValid() -> isLocationValid
    com.baidu.navisdk.model.datastruct.LocData getCurLocation() -> getCurLocation
    com.baidu.navisdk.model.datastruct.RoutePlanNode getCurLocationNode() -> getCurLocationNode
    void onResume() -> onResume
    void onPause() -> onPause
    void a() -> a
    void b() -> b
    boolean isGpsEnabled() -> isGpsEnabled
    void startNaviLocate(android.content.Context) -> startNaviLocate
    void stopNaviLocate() -> stopNaviLocate
    void a(android.content.Context) -> a
    void initSensor(android.content.Context) -> initSensor
    void uninitSensor() -> uninitSensor
    void a(int,int,int) -> a
    boolean a(com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager) -> a
    com.baidu.navisdk.model.datastruct.SensorData b(com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager) -> b
    float[] c(com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager) -> c
    com.baidu.navisdk.model.datastruct.SensorData a(com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager,com.baidu.navisdk.model.datastruct.SensorData) -> a
    java.util.ArrayList d(com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager) -> d
    com.baidu.navisdk.model.datastruct.SensorData e(com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager) -> e
    float[] a(com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager,float[]) -> a
    java.util.ArrayList f(com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager) -> f
com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager$1 -> com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager$1:
    com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager$2 -> com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager$2:
    com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager a -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager$BNLocationListener -> com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager$BNLocationListener:
    com.baidu.navisdk.comapi.geolocate.BNGeoLocateManager a -> a
    void onReceiveLocation(com.baidu.navi.location.BDLocation) -> onReceiveLocation
    void onReceivePoi(com.baidu.navi.location.BDLocation) -> onReceivePoi
com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager -> com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager:
    java.lang.String a -> a
    com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager b -> b
    com.baidu.navi.location.LocationClient c -> c
    com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager$BNLocationListener d -> d
    com.baidu.navisdk.model.datastruct.LocData e -> e
    com.baidu.navi.location.LocationClientOption f -> f
    com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager getInstance() -> getInstance
    void destory() -> destory
    void init(android.content.Context) -> init
    void b() -> b
    void uninit() -> uninit
    void startClient() -> startClient
    void stopClient() -> stopClient
    com.baidu.nplatform.comapi.basestruct.GeoPoint getLastValidLocation() -> getLastValidLocation
    boolean isLocationValid() -> isLocationValid
    com.baidu.navisdk.model.datastruct.LocData getCurLocation() -> getCurLocation
    java.lang.String locationTypeToStr(int) -> locationTypeToStr
    com.baidu.navisdk.model.datastruct.LocData a(com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager) -> a
    java.lang.String a() -> a
com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager$1 -> com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager$1:
com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager$BNLocationListener -> com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager$BNLocationListener:
    com.baidu.navisdk.comapi.geolocate.BNLocateSDKManager a -> a
    void onReceiveLocation(com.baidu.navi.location.BDLocation) -> onReceiveLocation
    void onReceivePoi(com.baidu.navi.location.BDLocation) -> onReceivePoi
com.baidu.navisdk.comapi.geolocate.ILocationChangeListener -> com.baidu.navisdk.comapi.geolocate.ILocationChangeListener:
    void onLocationChange(com.baidu.navisdk.model.datastruct.LocData) -> onLocationChange
com.baidu.navisdk.comapi.geolocate.ISensorChangeListener -> com.baidu.navisdk.comapi.geolocate.ISensorChangeListener:
    void onSensorChange(android.hardware.SensorEvent) -> onSensorChange
com.baidu.navisdk.comapi.geolocate.ISensorDataChangeListener -> com.baidu.navisdk.comapi.geolocate.ISensorDataChangeListener:
    void onSensorDataChange(com.baidu.navisdk.model.datastruct.SensorData) -> onSensorDataChange
com.baidu.navisdk.comapi.mapcontrol.BNMapController -> com.baidu.navisdk.comapi.mapcontrol.BNMapController:
    java.lang.String a -> a
    com.baidu.navisdk.comapi.mapcontrol.BNMapController b -> b
    int[] ITS_CITY_ID -> ITS_CITY_ID
    com.baidu.nplatform.comapi.map.MapGLSurfaceView c -> c
    com.baidu.nplatform.comapi.map.MapController d -> d
    android.view.GestureDetector e -> e
    int f -> f
    com.baidu.navisdk.comapi.base.MsgHandler g -> g
    com.baidu.navisdk.comapi.mapcontrol.BNMapController getInstance() -> getInstance
    void destory() -> destory
    void a() -> a
    com.baidu.nplatform.comapi.map.MapGLSurfaceView initMapView(android.content.Context,android.os.Bundle) -> initMapView
    com.baidu.nplatform.comapi.map.MapController getMapController() -> getMapController
    void notifyMapObservers(int,int,java.lang.Object) -> notifyMapObservers
    void setMapStatus(com.baidu.nplatform.comapi.basestruct.MapStatus) -> setMapStatus
    com.baidu.nplatform.comapi.basestruct.MapStatus getMapStatus() -> getMapStatus
    boolean updateLayer(int) -> updateLayer
    boolean UpdataBaseLayers() -> UpdataBaseLayers
    int getZoomLevel() -> getZoomLevel
    double getZoomUnitsInMeter() -> getZoomUnitsInMeter
    int getScreenWidth() -> getScreenWidth
    int getScreenHeight() -> getScreenHeight
    void setLevel(float) -> setLevel
    void locate(int,int) -> locate
    void locateWithAnimation(int,int) -> locateWithAnimation
    boolean zoomIn() -> zoomIn
    boolean zoomOut() -> zoomOut
    void animateTo(com.baidu.nplatform.comapi.basestruct.MapStatus,int) -> animateTo
    void resetCompassPosition(int,int,int) -> resetCompassPosition
    void setOffset(int,int) -> setOffset
    void onResume() -> onResume
    void onPause() -> onPause
    void showTrafficMap(boolean) -> showTrafficMap
    void switchITSMode(boolean) -> switchITSMode
    void SaveCache() -> SaveCache
    void StartMapDataRequest() -> StartMapDataRequest
    void StopMapDataRequest() -> StopMapDataRequest
    boolean switchToStreetScapeWithUID(java.lang.String,java.lang.String) -> switchToStreetScapeWithUID
    boolean switchStreetScapeWithStreedId(java.lang.String) -> switchStreetScapeWithStreedId
    boolean getCurrentStreetInfo(android.os.Bundle,java.lang.String) -> getCurrentStreetInfo
    boolean cancelMapJump() -> cancelMapJump
    java.lang.String getCurrentStreetId() -> getCurrentStreetId
    boolean queryThumbImage(java.lang.String) -> queryThumbImage
    boolean enterStreetScapeWaitingMode() -> enterStreetScapeWaitingMode
    boolean isInStreepScapeMode() -> isInStreepScapeMode
    boolean enterStreetScapeMap() -> enterStreetScapeMap
    boolean setStreetPOIUID(java.lang.String) -> setStreetPOIUID
    boolean exitStreetScapeMap() -> exitStreetScapeMap
    com.baidu.nplatform.comapi.basestruct.GeoPoint getGeoPosByScreenPos(int,int) -> getGeoPosByScreenPos
    com.baidu.nplatform.comapi.basestruct.Point getScreenPosByGeoPos(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> getScreenPosByGeoPos
    boolean saveScreen(java.lang.String) -> saveScreen
    void ResetImageRes() -> ResetImageRes
    com.baidu.nplatform.comapi.MapItem getMapItemByGeoPos(int,int,int) -> getMapItemByGeoPos
    boolean saveScreenToBuffer() -> saveScreenToBuffer
    boolean getScreenShot(int,int,int,android.graphics.Bitmap) -> getScreenShot
    boolean getScreenMask(int,int,int,int,boolean,android.graphics.Bitmap) -> getScreenMask
    boolean setDrawHouse(boolean) -> setDrawHouse
    boolean setCharsetEncodeType(boolean) -> setCharsetEncodeType
    int getLayerMode() -> getLayerMode
    void setLayerMode(int) -> setLayerMode
    void initMapStatus(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> initMapStatus
    boolean focusItem(int,int,boolean) -> focusItem
    void setStyleMode(int) -> setStyleMode
    boolean checkRoadConditionSupport(int) -> checkRoadConditionSupport
    void enableTouchEventLookover(boolean) -> enableTouchEventLookover
    boolean showLayer(int,boolean) -> showLayer
    boolean releaseSharedMapData() -> releaseSharedMapData
    boolean updateShareMapData() -> updateShareMapData
    boolean zoomToTrajectory() -> zoomToTrajectory
    void setDrawNaviLogo(boolean) -> setDrawNaviLogo
    com.baidu.nplatform.comapi.map.MapController a(com.baidu.navisdk.comapi.mapcontrol.BNMapController) -> a
    android.view.GestureDetector b(com.baidu.navisdk.comapi.mapcontrol.BNMapController) -> b
com.baidu.navisdk.comapi.mapcontrol.BNMapController$1 -> com.baidu.navisdk.comapi.mapcontrol.BNMapController$1:
    com.baidu.navisdk.comapi.mapcontrol.BNMapController a -> a
    void handleMessage(android.os.Message) -> handleMessage
    void careAbout() -> careAbout
com.baidu.navisdk.comapi.mapcontrol.BNMapController$BNMapConfigParams -> com.baidu.navisdk.comapi.mapcontrol.BNMapController$BNMapConfigParams:
    java.lang.String KEY_SCREEN_WIDTH -> KEY_SCREEN_WIDTH
    java.lang.String KEY_SCREEN_HEIGHT -> KEY_SCREEN_HEIGHT
    com.baidu.navisdk.comapi.mapcontrol.BNMapController a -> a
com.baidu.navisdk.comapi.mapcontrol.BNMapController$NavMapViewListener -> com.baidu.navisdk.comapi.mapcontrol.BNMapController$NavMapViewListener:
    com.baidu.navisdk.comapi.mapcontrol.BNMapController a -> a
    void onMapAnimationFinish() -> onMapAnimationFinish
    void onMapNetworkingChanged(boolean) -> onMapNetworkingChanged
    void onMapObviousMove() -> onMapObviousMove
    void onClickedBaseLayer() -> onClickedBaseLayer
    void onClickedCompassLayer() -> onClickedCompassLayer
    void onClickedPopupLayer() -> onClickedPopupLayer
    void onClickedBasePOILayer(com.baidu.nplatform.comapi.MapItem) -> onClickedBasePOILayer
    void onClickedFavPoiLayer(com.baidu.nplatform.comapi.MapItem) -> onClickedFavPoiLayer
    void onClickedPOIBkgLayer(com.baidu.nplatform.comapi.MapItem) -> onClickedPOIBkgLayer
    void onClickedStreetPopup(java.lang.String) -> onClickedStreetPopup
    void onClickedBackground(int,int) -> onClickedBackground
    void onClickedStreetIndoorPoi(com.baidu.nplatform.comapi.map.MapObj) -> onClickedStreetIndoorPoi
    void onClickStreetArrow(com.baidu.nplatform.comapi.streetscape.model.StreetscapeInfoModel) -> onClickStreetArrow
    void onDoubleFingerZoom() -> onDoubleFingerZoom
    void onDoubleFingerRotate() -> onDoubleFingerRotate
    void onClickedPOILayer(com.baidu.nplatform.comapi.MapItem) -> onClickedPOILayer
com.baidu.navisdk.comapi.mapcontrol.BNMapController$OnMapGestureListener -> com.baidu.navisdk.comapi.mapcontrol.BNMapController$OnMapGestureListener:
    com.baidu.navisdk.comapi.mapcontrol.BNMapController a -> a
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.baidu.navisdk.comapi.mapcontrol.BNMapController$OnMapTouchListener -> com.baidu.navisdk.comapi.mapcontrol.BNMapController$OnMapTouchListener:
    com.baidu.navisdk.comapi.mapcontrol.BNMapController a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay -> com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay:
    com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay$OnTapListener a -> a
    com.baidu.nplatform.comapi.map.MapGLSurfaceView b -> b
    com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay getInstance() -> getInstance
    com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay$OnTapListener getOnTapListener() -> getOnTapListener
    void setOnTapListener(com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay$OnTapListener) -> setOnTapListener
    void show() -> show
    void hide() -> hide
    boolean onTap(int) -> onTap
    boolean onTap(com.baidu.nplatform.comapi.basestruct.GeoPoint,com.baidu.nplatform.comapi.map.MapGLSurfaceView) -> onTap
com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay$1 -> com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay$1:
com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay$Holder -> com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay$Holder:
    com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay a -> a
com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay$OnTapListener -> com.baidu.navisdk.comapi.mapcontrol.BNMapItemizedOverlay$OnTapListener:
    boolean onTap(int) -> onTap
    boolean onTap(com.baidu.nplatform.comapi.basestruct.GeoPoint,com.baidu.nplatform.comapi.map.MapGLSurfaceView) -> onTap
com.baidu.navisdk.comapi.mapcontrol.BNMapObserver -> com.baidu.navisdk.comapi.mapcontrol.BNMapObserver:
    int TYPE_MAP_VIEW -> TYPE_MAP_VIEW
    int TYPE_GESTURE -> TYPE_GESTURE
com.baidu.navisdk.comapi.mapcontrol.BNMapObserver$EventGesture -> com.baidu.navisdk.comapi.mapcontrol.BNMapObserver$EventGesture:
    int EVENT_DOUBLE_TAP -> EVENT_DOUBLE_TAP
    int EVENT_SINGLE_TAP -> EVENT_SINGLE_TAP
    int EVENT_DOWN -> EVENT_DOWN
    int EVENT_FLING -> EVENT_FLING
    int EVENT_LONGPRESS -> EVENT_LONGPRESS
    int EVENT_SCROLL -> EVENT_SCROLL
    int EVENT_OBVIOUS_MOVE -> EVENT_OBVIOUS_MOVE
    int EVENT_DOUBLE_FINGER_ZOOM -> EVENT_DOUBLE_FINGER_ZOOM
    int EVENT_DOUBLE_FINGER_ROTATE -> EVENT_DOUBLE_FINGER_ROTATE
com.baidu.navisdk.comapi.mapcontrol.BNMapObserver$EventMapView -> com.baidu.navisdk.comapi.mapcontrol.BNMapObserver$EventMapView:
    int EVENT_MAP_ANIMATION_FINISHED -> EVENT_MAP_ANIMATION_FINISHED
    int EVENT_MAP_NETWORKING_CHANGED -> EVENT_MAP_NETWORKING_CHANGED
    int EVENT_MAP_SAVE_SCREEN -> EVENT_MAP_SAVE_SCREEN
    int EVENT_MAP_SAVE_SCREEN_BUFFER -> EVENT_MAP_SAVE_SCREEN_BUFFER
    int EVENT_CLICKED_BASE_LAYER -> EVENT_CLICKED_BASE_LAYER
    int EVENT_CLICKED_COMPASS_LAYER -> EVENT_CLICKED_COMPASS_LAYER
    int EVENT_CLICKED_POPUP_LAYER -> EVENT_CLICKED_POPUP_LAYER
    int EVENT_CLICKED_BASE_POI_LAYER -> EVENT_CLICKED_BASE_POI_LAYER
    int EVENT_CLICKED_POI_BKG_LAYER -> EVENT_CLICKED_POI_BKG_LAYER
    int EVENT_CLICKED_BACKGROUD -> EVENT_CLICKED_BACKGROUD
    int EVENT_CLICKED_STREET_ARROW -> EVENT_CLICKED_STREET_ARROW
    int EVENT_MAP_ZOOM_UPDATE -> EVENT_MAP_ZOOM_UPDATE
    int EVENT_MAP_GLRENDER -> EVENT_MAP_GLRENDER
    int EVENT_CLICKED_FAV_POI_LAYER -> EVENT_CLICKED_FAV_POI_LAYER
    int EVENT_CLICKED_POI_LAYER -> EVENT_CLICKED_POI_LAYER
com.baidu.navisdk.comapi.mapcontrol.BNMapViewFactory -> com.baidu.navisdk.comapi.mapcontrol.BNMapViewFactory:
    com.baidu.nplatform.comapi.map.MapGLSurfaceView a -> a
    com.baidu.navisdk.comapi.mapcontrol.BNMapViewFactory getInstance() -> getInstance
    void attachMapView(com.baidu.nplatform.comapi.map.MapGLSurfaceView) -> attachMapView
    com.baidu.nplatform.comapi.map.MapGLSurfaceView getMainMapView() -> getMainMapView
    void dettachMapView() -> dettachMapView
com.baidu.navisdk.comapi.mapcontrol.BNMapViewFactory$Holder -> com.baidu.navisdk.comapi.mapcontrol.BNMapViewFactory$Holder:
    com.baidu.navisdk.comapi.mapcontrol.BNMapViewFactory a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams -> com.baidu.navisdk.comapi.mapcontrol.MapParams:
com.baidu.navisdk.comapi.mapcontrol.MapParams$Action -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Action:
    com.baidu.navisdk.comapi.mapcontrol.MapParams a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams$Config -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Config:
    com.baidu.navisdk.comapi.mapcontrol.MapParams a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams$Const -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Const:
    int MAPSTATUS_ANIMATION_TIME -> MAPSTATUS_ANIMATION_TIME
    int MAX_ZOOM_LEVEL -> MAX_ZOOM_LEVEL
    int MIN_ZOOM_LEVEL -> MIN_ZOOM_LEVEL
    int MIN_MERCATOR_X -> MIN_MERCATOR_X
    int MAX_MERCATOR_X -> MAX_MERCATOR_X
    int MIN_MERCATOR_Y -> MIN_MERCATOR_Y
    int MAX_MERCATOR_Y -> MAX_MERCATOR_Y
    java.lang.String SRC_NAME -> SRC_NAME
    java.lang.String DISCOUNT -> DISCOUNT
    java.lang.String DISCOUNT_TITLE -> DISCOUNT_TITLE
    java.lang.String D_DATA_TYPE -> D_DATA_TYPE
    int DEFAULT_MAP_LOACTE_LONGITUDE -> DEFAULT_MAP_LOACTE_LONGITUDE
    int DEFAULT_MAP_LOACTE_LATITUDE -> DEFAULT_MAP_LOACTE_LATITUDE
    int DEFAULT_LOCATED_SCALE_LEVEL -> DEFAULT_LOCATED_SCALE_LEVEL
    int DEFAULT_NOT_LOCATED_SCALE_LEVEL -> DEFAULT_NOT_LOCATED_SCALE_LEVEL
    int DEFAULT_PICKPOINT_SCALE_LEVEL -> DEFAULT_PICKPOINT_SCALE_LEVEL
    int DEFAULT_POI_DETAIL_SCALE_LEVEL -> DEFAULT_POI_DETAIL_SCALE_LEVEL
    int NAV_MIN_SCALE_LEVEL_GUIDE -> NAV_MIN_SCALE_LEVEL_GUIDE
    int NAV_DEFAULT_SCALE_LEVEL_GUIDE -> NAV_DEFAULT_SCALE_LEVEL_GUIDE
    int MAX_WAITING_LOCATION_TIMESPAN -> MAX_WAITING_LOCATION_TIMESPAN
    com.baidu.navisdk.comapi.mapcontrol.MapParams a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$LayerMode -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$LayerMode:
    int MAP_LAYER_MODE_INVALID -> MAP_LAYER_MODE_INVALID
    int MAP_LAYER_MODE_BROWSE_MAP -> MAP_LAYER_MODE_BROWSE_MAP
    int MAP_LAYER_MODE_POI_DETAIL -> MAP_LAYER_MODE_POI_DETAIL
    int MAP_LAYER_MODE_POIPKG -> MAP_LAYER_MODE_POIPKG
    int MAP_LAYER_MODE_ROUTE_GUIDE -> MAP_LAYER_MODE_ROUTE_GUIDE
    int MAP_LAYER_MODE_PICK_POINT -> MAP_LAYER_MODE_PICK_POINT
    int MAP_LAYER_MODE_ROUTE_DETAIL -> MAP_LAYER_MODE_ROUTE_DETAIL
    int MAP_LAYER_MODE_ROUTE_DETAIL_FOR_NAVI -> MAP_LAYER_MODE_ROUTE_DETAIL_FOR_NAVI
    int MAP_LAYER_MODE_CRUISE -> MAP_LAYER_MODE_CRUISE
    int MAP_LAYER_MODE_TRACK -> MAP_LAYER_MODE_TRACK
    com.baidu.navisdk.comapi.mapcontrol.MapParams$Const a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$LayerTag -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$LayerTag:
    java.lang.String DEFAULT_LAYER_TAG -> DEFAULT_LAYER_TAG
    java.lang.String ITSROUTE_LAYER_TAG -> ITSROUTE_LAYER_TAG
    java.lang.String LOCATION_LAYER_TAG -> LOCATION_LAYER_TAG
    java.lang.String POPUP_LAYER_TAG -> POPUP_LAYER_TAG
    java.lang.String STREETPOPUP_LAYER_TAG -> STREETPOPUP_LAYER_TAG
    java.lang.String COMPASS_LAYER_TAG -> COMPASS_LAYER_TAG
    java.lang.String ITEM_LAYER_TAG -> ITEM_LAYER_TAG
    java.lang.String SHARELOCATION_BUBBLE -> SHARELOCATION_BUBBLE
    com.baidu.navisdk.comapi.mapcontrol.MapParams$Const a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$LayerType -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$LayerType:
    int MAP_LAYER_TYPE_INVALID -> MAP_LAYER_TYPE_INVALID
    int MAP_LAYER_TYPE_BASE_MAP -> MAP_LAYER_TYPE_BASE_MAP
    int MAP_LAYER_TYPE_START -> MAP_LAYER_TYPE_START
    int MAP_LAYER_TYPE_END -> MAP_LAYER_TYPE_END
    int MAP_LAYER_TYPE_POI -> MAP_LAYER_TYPE_POI
    int MAP_LAYER_TYPE_POI_BKG -> MAP_LAYER_TYPE_POI_BKG
    int MAP_LAYER_TYPE_SEARCH_CENTER -> MAP_LAYER_TYPE_SEARCH_CENTER
    int MAP_LAYER_TYPE_FAV_POI -> MAP_LAYER_TYPE_FAV_POI
    int MAP_LAYER_TYPE_FAV_MARK -> MAP_LAYER_TYPE_FAV_MARK
    int MAP_LAYER_TYPE_ROUTE_NODE -> MAP_LAYER_TYPE_ROUTE_NODE
    int MAP_LAYER_TYPE_COMPASS -> MAP_LAYER_TYPE_COMPASS
    int MAP_LAYER_TYPE_ROUTE -> MAP_LAYER_TYPE_ROUTE
    int MAP_LAYER_TYPE_POPUP -> MAP_LAYER_TYPE_POPUP
    int MAP_LAYER_TYPE_BASE_POI -> MAP_LAYER_TYPE_BASE_POI
    int MAP_LAYER_TYPE_ROUTE_SPEC -> MAP_LAYER_TYPE_ROUTE_SPEC
    int MAP_LAYER_TYPE_LOCATION -> MAP_LAYER_TYPE_LOCATION
    int MAP_LAYER_TYPE_GUIDELINE -> MAP_LAYER_TYPE_GUIDELINE
    int MAP_LAYER_TYPE_FAVPOI -> MAP_LAYER_TYPE_FAVPOI
    int MAP_LAYER_TYPE_AVOIDLINE -> MAP_LAYER_TYPE_AVOIDLINE
    int MAP_LAYER_TYPE_JUCVVIEW -> MAP_LAYER_TYPE_JUCVVIEW
    int MAP_LAYER_TYPE_TRACK -> MAP_LAYER_TYPE_TRACK
    int MAP_LAYER_TYPE_ITEM -> MAP_LAYER_TYPE_ITEM
    com.baidu.navisdk.comapi.mapcontrol.MapParams$Const a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$LocationMode -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$LocationMode:
    int MAP_LOC_MODE_NEXT -> MAP_LOC_MODE_NEXT
    int MAP_LOC_MODE_NORMAL -> MAP_LOC_MODE_NORMAL
    int MAP_LOC_MODE_FIXED -> MAP_LOC_MODE_FIXED
    int MAP_LOC_MODE_DIR -> MAP_LOC_MODE_DIR
    int MAP_LOC_MODE_CLOSED -> MAP_LOC_MODE_CLOSED
    int MAP_LOC_MODE_INVALID -> MAP_LOC_MODE_INVALID
    com.baidu.navisdk.comapi.mapcontrol.MapParams$Const a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$MapStyleMode -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$MapStyleMode:
    int MAP_STYLE_NOT_SET -> MAP_STYLE_NOT_SET
    int MAP_STYLE_TYPE_DEFAULT -> MAP_STYLE_TYPE_DEFAULT
    int MAP_STYLE_TYPE_DAY -> MAP_STYLE_TYPE_DAY
    int MAP_STYLE_TYPE_NIGHT -> MAP_STYLE_TYPE_NIGHT
    com.baidu.navisdk.comapi.mapcontrol.MapParams$Const a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$NodeType -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$NodeType:
    int START -> START
    int END -> END
    int POI -> POI
    int POIBKG -> POIBKG
    int SEARCH_CENTER -> SEARCH_CENTER
    int FAVORITEPOI -> FAVORITEPOI
    int FAVMARK -> FAVMARK
    int ROUTE_NODE -> ROUTE_NODE
    int BUSSTATION -> BUSSTATION
    int TRAINSTATION -> TRAINSTATION
    int BUSLINE -> BUSLINE
    int TRAINLINE -> TRAINLINE
    int POIADDR -> POIADDR
    int POIRGC -> POIRGC
    int POIRGCSHARE -> POIRGCSHARE
    int POISHARE -> POISHARE
    int BACKGMARK -> BACKGMARK
    int LOCATION -> LOCATION
    int COMPASS -> COMPASS
    int STREETPOPUP -> STREETPOPUP
    int ROUTE_TIP_NODE -> ROUTE_TIP_NODE
    int ITS_EVENT -> ITS_EVENT
    int BUSLINE_STOP -> BUSLINE_STOP
    int INDOORMAPPOI -> INDOORMAPPOI
    int SHARELOCATION -> SHARELOCATION
    int NONE -> NONE
    int REGEO -> REGEO
    int OPENAPI_DETAIL -> OPENAPI_DETAIL
    int OPENAPI_MARK_POI -> OPENAPI_MARK_POI
    int E_STREET_POI -> E_STREET_POI
    int E_STREET_ARROW -> E_STREET_ARROW
    int E_STREET_INTER_POI -> E_STREET_INTER_POI
    com.baidu.navisdk.comapi.mapcontrol.MapParams$Const a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$UpdateType -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Const$UpdateType:
    int EUPDATE_NONE -> EUPDATE_NONE
    int ECOMPULSORY_UPDATE -> ECOMPULSORY_UPDATE
    int EUPDATE_MAPSTATUSCHANGE -> EUPDATE_MAPSTATUSCHANGE
    int EUPDATE_MAPSTATUSCHANGELATER -> EUPDATE_MAPSTATUSCHANGELATER
    int EUPDATE_TIMERESCAP -> EUPDATE_TIMERESCAP
    com.baidu.navisdk.comapi.mapcontrol.MapParams$Const a -> a
com.baidu.navisdk.comapi.mapcontrol.MapParams$Key -> com.baidu.navisdk.comapi.mapcontrol.MapParams$Key:
    java.lang.String SP_ITS_ON_OFF -> SP_ITS_ON_OFF
    java.lang.String SP_ITS_SETTING -> SP_ITS_SETTING
    java.lang.String SP_FIRST_ONLINE_ITS_ON -> SP_FIRST_ONLINE_ITS_ON
    java.lang.String SP_FIRST_HISTORY_ITS_ON -> SP_FIRST_HISTORY_ITS_ON
    java.lang.String SP_LAST_LONGITUDE -> SP_LAST_LONGITUDE
    java.lang.String SP_LAST_LATITUDE -> SP_LAST_LATITUDE
    java.lang.String SP_LAST_SCALE -> SP_LAST_SCALE
    java.lang.String SP_MAP_SHOW_ONLINE_DIALOG -> SP_MAP_SHOW_ONLINE_DIALOG
    java.lang.String RG_MAP_USER_SCALE_LEVEL -> RG_MAP_USER_SCALE_LEVEL
    com.baidu.navisdk.comapi.mapcontrol.MapParams a -> a
com.baidu.navisdk.comapi.offlinedata.OfflineDataParams -> com.baidu.navisdk.comapi.offlinedata.OfflineDataParams:
    java.lang.String[] PROVINCE_NAME -> PROVINCE_NAME
com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$Const -> com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$Const:
    int NE_DM_SUSPEND_ALL_ID -> NE_DM_SUSPEND_ALL_ID
    int COLOR_BLUE -> COLOR_BLUE
    int COLOR_ORANGE -> COLOR_ORANGE
    int COLOR_GREEN -> COLOR_GREEN
    int COLOR_GRAY -> COLOR_GRAY
    int COLOR_BLACK -> COLOR_BLACK
    com.baidu.navisdk.comapi.offlinedata.OfflineDataParams a -> a
com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$EngineDataStatus -> com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$EngineDataStatus:
    int NE_DM_STATUS_UNDOWNLOAD -> NE_DM_STATUS_UNDOWNLOAD
    int NE_DM_STATUS_DOWNLOADING -> NE_DM_STATUS_DOWNLOADING
    int NE_DM_STATUS_DOWNLOADED -> NE_DM_STATUS_DOWNLOADED
    int NE_DM_STATUS_NEED_UPDATE -> NE_DM_STATUS_NEED_UPDATE
    int NE_DM_STATUS_UPDATING -> NE_DM_STATUS_UPDATING
    int NE_DM_STATUS_ALL -> NE_DM_STATUS_ALL
    com.baidu.navisdk.comapi.offlinedata.OfflineDataParams a -> a
com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$FileScanStutus -> com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$FileScanStutus:
    int FILE_SACN_INVALID -> FILE_SACN_INVALID
    int FILE_SACN_NO_DATA -> FILE_SACN_NO_DATA
    int FILE_SACN_DATA_APP_MATCH -> FILE_SACN_DATA_APP_MATCH
    int FILE_SACN_DATA_MATCH_APK_NOTMATCH -> FILE_SACN_DATA_MATCH_APK_NOTMATCH
    int FILE_SACN_DATA_NOTMATCH_APK_MATCH -> FILE_SACN_DATA_NOTMATCH_APK_MATCH
    int FILE_SACN_ALL_NOT_MATCH -> FILE_SACN_ALL_NOT_MATCH
    com.baidu.navisdk.comapi.offlinedata.OfflineDataParams a -> a
com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$Key -> com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$Key:
    java.lang.String PREF_KEY_NAVI_AUTO_CHECK_NEW_DATA -> PREF_KEY_NAVI_AUTO_CHECK_NEW_DATA
    java.lang.String DOWNLOAD_KEY_PROVINCE_ID -> DOWNLOAD_KEY_PROVINCE_ID
    com.baidu.navisdk.comapi.offlinedata.OfflineDataParams a -> a
com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$ProvinceId -> com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$ProvinceId:
    int NE_DM_COMMON_ID -> NE_DM_COMMON_ID
    int NE_DM_MIN_PROVINCE_ID -> NE_DM_MIN_PROVINCE_ID
    int NE_DM_MAX_PROVINCE_ID -> NE_DM_MAX_PROVINCE_ID
    com.baidu.navisdk.comapi.offlinedata.OfflineDataParams a -> a
com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$UiStatus -> com.baidu.navisdk.comapi.offlinedata.OfflineDataParams$UiStatus:
    int UI_STATUS_UNDOWNLOAD -> UI_STATUS_UNDOWNLOAD
    int UI_STATUS_DOWNLOADING -> UI_STATUS_DOWNLOADING
    int UI_STATUS_WAITING -> UI_STATUS_WAITING
    int UI_STATUS_SUSPEND -> UI_STATUS_SUSPEND
    int UI_STATUS_FINISHED -> UI_STATUS_FINISHED
    int UI_STATUS_NET_ERROR -> UI_STATUS_NET_ERROR
    int UI_STATUS_WIFI_ERROR -> UI_STATUS_WIFI_ERROR
    int UI_STATUS_SDCARD_ERROR -> UI_STATUS_SDCARD_ERROR
    int UI_STATUS_NEED_UPDATE -> UI_STATUS_NEED_UPDATE
    int UI_STATUS_WAITE_UPDATE -> UI_STATUS_WAITE_UPDATE
    int UI_STATUS_UPDATING -> UI_STATUS_UPDATING
    int UI_STATUS_SUSPENDED_UPDATE -> UI_STATUS_SUSPENDED_UPDATE
    int UI_STATUS_UPDATE_FINISHED -> UI_STATUS_UPDATE_FINISHED
    int UI_STATUS_UPDATE_RESTART -> UI_STATUS_UPDATE_RESTART
    com.baidu.navisdk.comapi.offlinedata.OfflineDataParams a -> a
com.baidu.navisdk.comapi.poisearch.BNPoiSearcher -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcher:
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcher a -> a
    com.baidu.navisdk.jni.control.SearchControl b -> b
    java.lang.Thread c -> c
    java.lang.Thread d -> d
    java.lang.Thread e -> e
    boolean f -> f
    java.util.ArrayList g -> g
    java.util.ArrayList h -> h
    com.baidu.navisdk.model.datastruct.SearchPoi i -> i
    android.os.Handler j -> j
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcher getInstance() -> getInstance
    boolean isCreateSuccess(int) -> isCreateSuccess
    boolean asynNameSearchByKey(java.lang.String,int,int,int) -> asynNameSearchByKey
    boolean asynSpaceSearchByKey(java.lang.String,int,com.baidu.navisdk.model.datastruct.SearchCircle,int,int) -> asynSpaceSearchByKey
    boolean asynSpaceSearchByKey(java.lang.String,com.baidu.navisdk.model.datastruct.SearchCircle,int,int) -> asynSpaceSearchByKey
    boolean asynSpaceSearchByCatalog(int,int,com.baidu.navisdk.model.datastruct.SearchCircle,int,int) -> asynSpaceSearchByCatalog
    boolean asynSpaceSearchByCatalog(int,com.baidu.navisdk.model.datastruct.SearchCircle,int,int) -> asynSpaceSearchByCatalog
    boolean initInputSug(int,int) -> initInputSug
    boolean releaseInputSug(int) -> releaseInputSug
    boolean asynGetInputSug(java.lang.String,int) -> asynGetInputSug
    com.baidu.navisdk.model.datastruct.DistrictInfo getDistrictByPoint(com.baidu.nplatform.comapi.basestruct.GeoPoint,int) -> getDistrictByPoint
    boolean asynGetPoiByPoint(com.baidu.nplatform.comapi.basestruct.GeoPoint,int) -> asynGetPoiByPoint
    com.baidu.navisdk.model.datastruct.DistrictInfo getTopDistrict() -> getTopDistrict
    com.baidu.navisdk.model.datastruct.DistrictInfo getParentDistrict(int) -> getParentDistrict
    int getChildDistrict(int,java.util.ArrayList) -> getChildDistrict
    com.baidu.navisdk.model.datastruct.DistrictInfo getDistrictById(int) -> getDistrictById
    boolean updatePoiCache(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> updatePoiCache
    boolean updatePoiCacheWithList(java.util.ArrayList) -> updatePoiCacheWithList
    boolean clearPoiCache() -> clearPoiCache
    boolean updateFavPoiCache(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> updateFavPoiCache
    boolean updateBkgCache(java.util.ArrayList,int) -> updateBkgCache
    boolean clearBkgCache() -> clearBkgCache
    boolean cancelQuery() -> cancelQuery
    int parseBkgLayerId(java.lang.String) -> parseBkgLayerId
    void quickSortByDistance(com.baidu.nplatform.comapi.basestruct.GeoPoint,java.util.ArrayList) -> quickSortByDistance
    int searchSubPoi(int,int,int,java.util.ArrayList,java.util.ArrayList) -> searchSubPoi
    boolean a(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher) -> a
    boolean a(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher,boolean) -> a
    java.util.ArrayList b(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher) -> b
    java.util.ArrayList c(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher) -> c
    com.baidu.navisdk.model.datastruct.SearchPoi d(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher) -> d
    com.baidu.navisdk.model.datastruct.SearchPoi a(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher,com.baidu.navisdk.model.datastruct.SearchPoi) -> a
    com.baidu.navisdk.jni.control.SearchControl e(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher) -> e
    android.os.Handler f(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher) -> f
    java.lang.Thread g(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher) -> g
    java.lang.Thread h(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher) -> h
    java.lang.Thread i(com.baidu.navisdk.comapi.poisearch.BNPoiSearcher) -> i
com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$1 -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$1:
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcher a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$2 -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$2:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcher f -> f
    void run() -> run
com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$3 -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$3:
    java.lang.String a -> a
    int b -> b
    com.baidu.navisdk.model.datastruct.SearchCircle c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcher g -> g
    void run() -> run
com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$4 -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$4:
    java.lang.String a -> a
    com.baidu.navisdk.model.datastruct.SearchCircle b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcher f -> f
    void run() -> run
com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$5 -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$5:
    int a -> a
    int b -> b
    com.baidu.navisdk.model.datastruct.SearchCircle c -> c
    int d -> d
    int e -> e
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcher f -> f
    void run() -> run
com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$6 -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$6:
    int a -> a
    com.baidu.navisdk.model.datastruct.SearchCircle b -> b
    int c -> c
    int d -> d
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcher e -> e
    void run() -> run
com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$7 -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$7:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcher d -> d
    void run() -> run
com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$8 -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcher$8:
    com.baidu.nplatform.comapi.basestruct.GeoPoint a -> a
    int b -> b
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcher c -> c
    void run() -> run
com.baidu.navisdk.comapi.poisearch.BNPoiSearcherObserver -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcherObserver:
    int TYPE_NAME_SEARCH -> TYPE_NAME_SEARCH
    int TYPE_SPACE_KEY_SEARCH -> TYPE_SPACE_KEY_SEARCH
    int TYPE_SPACE_CATALOG_SEARCH -> TYPE_SPACE_CATALOG_SEARCH
    int TYPE_SUG -> TYPE_SUG
    int TYPE_ANTI_GEO_POI -> TYPE_ANTI_GEO_POI
    int EVENT_BEFORE -> EVENT_BEFORE
    int EVENT_SUCCUSS -> EVENT_SUCCUSS
    int EVENT_FAIL -> EVENT_FAIL
com.baidu.navisdk.comapi.poisearch.BNPoiSearcherObserver$AntiGeoArg -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcherObserver$AntiGeoArg:
    com.baidu.nplatform.comapi.basestruct.GeoPoint mPoint -> mPoint
    int mNetMode -> mNetMode
    com.baidu.navisdk.model.datastruct.SearchPoi mAntiGeoPoi -> mAntiGeoPoi
com.baidu.navisdk.comapi.poisearch.BNPoiSearcherObserver$SearchArg -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcherObserver$SearchArg:
    java.lang.Object mKey -> mKey
    int mDistrictId -> mDistrictId
    int mNetMode -> mNetMode
    java.util.ArrayList mPoiList -> mPoiList
com.baidu.navisdk.comapi.poisearch.BNPoiSearcherObserver$SugArg -> com.baidu.navisdk.comapi.poisearch.BNPoiSearcherObserver$SugArg:
    java.lang.String mPrefix -> mPrefix
    int mNetMode -> mNetMode
    java.util.ArrayList mSugList -> mSugList
com.baidu.navisdk.comapi.poisearch.PoiSearchParams -> com.baidu.navisdk.comapi.poisearch.PoiSearchParams:
    int MAX_ONLINE_SEARCH_COUNT -> MAX_ONLINE_SEARCH_COUNT
    int MAX_OFFLINE_SEARCH_COUNT -> MAX_OFFLINE_SEARCH_COUNT
    int DEFAULT_SPACE_SEARCH_RADIUS -> DEFAULT_SPACE_SEARCH_RADIUS
    int SUG_PREFIX_MAX_LENGTH -> SUG_PREFIX_MAX_LENGTH
    int MAX_SUB_POI_TYPE_NUM -> MAX_SUB_POI_TYPE_NUM
    int BKG_TYPE_NUM -> BKG_TYPE_NUM
    int SUB_POI_TYPE_NUM -> SUB_POI_TYPE_NUM
com.baidu.navisdk.comapi.poisearch.PoiSearchParams$BkgType -> com.baidu.navisdk.comapi.poisearch.PoiSearchParams$BkgType:
    int TYPE_NONE -> TYPE_NONE
    int TYPE_GAS_STATION -> TYPE_GAS_STATION
    int TYPE_TOILET -> TYPE_TOILET
    int TYPE_PARKING -> TYPE_PARKING
    int TYPE_SERVICE -> TYPE_SERVICE
    com.baidu.navisdk.comapi.poisearch.PoiSearchParams a -> a
com.baidu.navisdk.comapi.poisearch.PoiSearchParams$SubPoiType -> com.baidu.navisdk.comapi.poisearch.PoiSearchParams$SubPoiType:
    int TYPE_DOOR -> TYPE_DOOR
    int TYPE_PARK -> TYPE_PARK
    int TYPE_IN -> TYPE_IN
    int TYPE_OUT -> TYPE_OUT
    int TYPE_IN_OUT -> TYPE_IN_OUT
    com.baidu.navisdk.comapi.poisearch.PoiSearchParams a -> a
com.baidu.navisdk.comapi.routeguide.BNRouteGuider -> com.baidu.navisdk.comapi.routeguide.BNRouteGuider:
    com.baidu.navisdk.comapi.routeguide.BNRouteGuider a -> a
    com.baidu.navisdk.jni.control.GuidanceControl b -> b
    boolean c -> c
    com.baidu.navisdk.comapi.routeguide.IRGInfoListener d -> d
    com.baidu.navisdk.comapi.routeguide.IRGSubStatusListener e -> e
    com.baidu.navisdk.comapi.routeguide.IGpsStatusListener f -> f
    com.baidu.navisdk.comapi.base.MsgHandler g -> g
    java.util.Vector h -> h
    com.baidu.navisdk.comapi.routeguide.BNRouteGuider getInstance() -> getInstance
    void destory() -> destory
    void a() -> a
    void setRouteGuideInfoListener(com.baidu.navisdk.comapi.routeguide.IRGInfoListener) -> setRouteGuideInfoListener
    void setRGSubStatusListener(com.baidu.navisdk.comapi.routeguide.IRGSubStatusListener) -> setRGSubStatusListener
    void setGpsStatusListener(com.baidu.navisdk.comapi.routeguide.IGpsStatusListener) -> setGpsStatusListener
    void turnOnEnlargeRoadMap() -> turnOnEnlargeRoadMap
    void turnOffEnlargeRoadMap() -> turnOffEnlargeRoadMap
    boolean setLocateMode(int) -> setLocateMode
    int getLocateMode() -> getLocateMode
    boolean refreshRoute() -> refreshRoute
    boolean startRouteGuide() -> startRouteGuide
    boolean stopRouteGuide() -> stopRouteGuide
    boolean pauseRouteGuide() -> pauseRouteGuide
    boolean resumeRouteGuide() -> resumeRouteGuide
    boolean setBrowseStatus(boolean) -> setBrowseStatus
    boolean isBrowseStatus() -> isBrowseStatus
    boolean setGuidanceSpeed(int) -> setGuidanceSpeed
    boolean getSimpleMapInfo(android.os.Bundle) -> getSimpleMapInfo
    boolean getCurRoadName(android.os.Bundle) -> getCurRoadName
    boolean triggerGPSDataChange(int,int,float,float,float,float) -> triggerGPSDataChange
    boolean setRotateMode(int) -> setRotateMode
    boolean removeRoute() -> removeRoute
    void setRasterExpandMapPath(java.lang.String) -> setRasterExpandMapPath
    boolean isImageInResPack(java.lang.String) -> isImageInResPack
    byte[] getRasterExpandMapImage(java.lang.String,int) -> getRasterExpandMapImage
    boolean getRasterExpandMapInfo(android.os.Bundle) -> getRasterExpandMapInfo
    boolean getDirectBoardInfo(android.os.Bundle) -> getDirectBoardInfo
    boolean getVectorExpandMapInfo(android.os.Bundle) -> getVectorExpandMapInfo
    boolean getHUDData(android.os.Bundle) -> getHUDData
    boolean getCarPoint(int[],int[]) -> getCarPoint
    boolean getVehicleInfo(android.os.Bundle) -> getVehicleInfo
    int getAssistRemainDist() -> getAssistRemainDist
    boolean setUserMapScale(int) -> setUserMapScale
    boolean setGpsTrackFile(java.lang.String) -> setGpsTrackFile
    boolean setStartPosFromFile(java.lang.String) -> setStartPosFromFile
    boolean setDestsPosFromFile(java.lang.String) -> setDestsPosFromFile
    double GetCarRotateAngle() -> GetCarRotateAngle
    void UpdateSensor(double,double,double,double,double,double) -> UpdateSensor
    void setHUDEnabled(boolean) -> setHUDEnabled
    void ZoomToFullView(int) -> ZoomToFullView
    void SetFullViewState(boolean) -> SetFullViewState
    void setVoiceMode(int) -> setVoiceMode
    void SetOverspeedSpeak(boolean) -> SetOverspeedSpeak
    void SetOtherCameraSpeak(boolean) -> SetOtherCameraSpeak
    void SetStraightSpeak(boolean) -> SetStraightSpeak
    void EnableRoadCondition(boolean) -> EnableRoadCondition
    void SetTrackData(android.os.Bundle) -> SetTrackData
    boolean startRouteCruise() -> startRouteCruise
    boolean stopRouteCruise() -> stopRouteCruise
    boolean SetCruiseSetting(android.os.Bundle) -> SetCruiseSetting
    void addRGInfoListeners(com.baidu.navisdk.comapi.routeguide.IRGInfoListener) -> addRGInfoListeners
    void removeRGInfoListeners(com.baidu.navisdk.comapi.routeguide.IRGInfoListener) -> removeRGInfoListeners
    com.baidu.navisdk.comapi.routeguide.IRGSubStatusListener a(com.baidu.navisdk.comapi.routeguide.BNRouteGuider) -> a
    com.baidu.navisdk.comapi.routeguide.IRGInfoListener b(com.baidu.navisdk.comapi.routeguide.BNRouteGuider) -> b
    java.util.Vector c(com.baidu.navisdk.comapi.routeguide.BNRouteGuider) -> c
    com.baidu.navisdk.comapi.routeguide.IGpsStatusListener d(com.baidu.navisdk.comapi.routeguide.BNRouteGuider) -> d
com.baidu.navisdk.comapi.routeguide.BNRouteGuider$1 -> com.baidu.navisdk.comapi.routeguide.BNRouteGuider$1:
    com.baidu.navisdk.comapi.routeguide.BNRouteGuider a -> a
    void handleMessage(android.os.Message) -> handleMessage
    void careAbout() -> careAbout
com.baidu.navisdk.comapi.routeguide.BNRouteGuider$OnRGSubStatusListener -> com.baidu.navisdk.comapi.routeguide.BNRouteGuider$OnRGSubStatusListener:
    void onRoutePlanYawing(android.os.Message) -> onRoutePlanYawing
    void onReRouteComplete(android.os.Message) -> onReRouteComplete
    void onArriveDestNear(android.os.Message) -> onArriveDestNear
    void onArriveDest(android.os.Message) -> onArriveDest
com.baidu.navisdk.comapi.routeguide.IGpsStatusListener -> com.baidu.navisdk.comapi.routeguide.IGpsStatusListener:
    void onGpsServiceProcess(android.os.Message) -> onGpsServiceProcess
    void onGpsStatusChange(android.os.Message) -> onGpsStatusChange
com.baidu.navisdk.comapi.routeguide.IRGInfoListener -> com.baidu.navisdk.comapi.routeguide.IRGInfoListener:
    void onSimpleGuideInfoShow(android.os.Message) -> onSimpleGuideInfoShow
    void onSimpleGuideInfoUpdate(android.os.Message) -> onSimpleGuideInfoUpdate
    void onSimpleGuideInfoHide(android.os.Message) -> onSimpleGuideInfoHide
    void onRemainDistTimeUpdate(android.os.Message) -> onRemainDistTimeUpdate
    void onAssistInfoShow(android.os.Message) -> onAssistInfoShow
    void onAssistInfoUpdate(android.os.Message) -> onAssistInfoUpdate
    void onAssistInfoHide(android.os.Message) -> onAssistInfoHide
    void onRasterExpandMapShow(android.os.Message) -> onRasterExpandMapShow
    void onRasterExpandMapUpdate(android.os.Message) -> onRasterExpandMapUpdate
    void onRasterExpandMapHide(android.os.Message) -> onRasterExpandMapHide
    void onDirectBoardShow(android.os.Message) -> onDirectBoardShow
    void onDirectBoardUpdate(android.os.Message) -> onDirectBoardUpdate
    void onDirectBoardHide(android.os.Message) -> onDirectBoardHide
    void onVectorExpandMapShow(android.os.Message) -> onVectorExpandMapShow
    void onVectorExpandMapUpdate(android.os.Message) -> onVectorExpandMapUpdate
    void onVectorExpandMapHide(android.os.Message) -> onVectorExpandMapHide
    void onCurRoadNameUpdate(android.os.Message) -> onCurRoadNameUpdate
    void onHUDUpdate(android.os.Message) -> onHUDUpdate
    void onRGSyncOperation(android.os.Message) -> onRGSyncOperation
com.baidu.navisdk.comapi.routeguide.IRGSubStatusListener -> com.baidu.navisdk.comapi.routeguide.IRGSubStatusListener:
    void onRoutePlanYawing(android.os.Message) -> onRoutePlanYawing
    void onReRouteComplete(android.os.Message) -> onReRouteComplete
    void onArriveDestNear(android.os.Message) -> onArriveDestNear
    void onArriveDest(android.os.Message) -> onArriveDest
com.baidu.navisdk.comapi.routeguide.RouteGuideParams -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams:
    int SUB_NAVI_STATUS_START -> SUB_NAVI_STATUS_START
    int SUB_NAVI_STATUS_YAWING -> SUB_NAVI_STATUS_YAWING
    int SUB_NAVI_STATUS_REROUTE_COMPLETE -> SUB_NAVI_STATUS_REROUTE_COMPLETE
    int SUB_NAVI_STATUS_CLOSE_TO_DEST -> SUB_NAVI_STATUS_CLOSE_TO_DEST
    int SUB_NAVI_STATUS_END -> SUB_NAVI_STATUS_END
    int AUTO_EXIT_TIMEOUT -> AUTO_EXIT_TIMEOUT
    int AUTO_HIDE_UI_TIMEOUT -> AUTO_HIDE_UI_TIMEOUT
    int AUTO_HIDE_UI_TIMEOUT_WHEN_MENU_SHOW -> AUTO_HIDE_UI_TIMEOUT_WHEN_MENU_SHOW
    int AUTO_LOCCAR_TIMEOUT_2D_3D -> AUTO_LOCCAR_TIMEOUT_2D_3D
    int NAV_VOICE_SPEED -> NAV_VOICE_SPEED
    int COUNT_DOWN_TIME -> COUNT_DOWN_TIME
    int EXIT_COUNT_DOWN_TIME -> EXIT_COUNT_DOWN_TIME
    int RETURN_CAR_COUNT_DOWN_TIME -> RETURN_CAR_COUNT_DOWN_TIME
    int VIEW_DISPLAY_TIMEOUT -> VIEW_DISPLAY_TIMEOUT
    int SEARCH_SPACE_RADIUS_WHEN_RG -> SEARCH_SPACE_RADIUS_WHEN_RG
    int SEARCH_SPACE_RADIUS_FOR_SERVICE -> SEARCH_SPACE_RADIUS_FOR_SERVICE
    int HANDLE_MSG_ASSIST_INFO_HIDE_OK -> HANDLE_MSG_ASSIST_INFO_HIDE_OK
    java.lang.String[] gTurnTypeDesc -> gTurnTypeDesc
    java.lang.String[] gTurnIconName -> gTurnIconName
    int ASSIT_TYPE_SPEED_LIMIT -> ASSIT_TYPE_SPEED_LIMIT
    int[] AssistType -> AssistType
    int[] JointType -> JointType
    int[] BlindBendType -> BlindBendType
    int[] NarrowType -> NarrowType
    int[] SlopType -> SlopType
    int[] RockFallType -> RockFallType
    int[] CameraType -> CameraType
    java.lang.String ACTION_QUITNAVI -> ACTION_QUITNAVI
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CompassLocNodeViewLand -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CompassLocNodeViewLand:
    int X -> X
    int Y -> Y
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CompassLocRaster -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CompassLocRaster:
    int X -> X
    int Y -> Y
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CompassLocRasterLand -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CompassLocRasterLand:
    int X -> X
    int Y -> Y
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CompassLocSimpleLand -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CompassLocSimpleLand:
    int X -> X
    int Y -> Y
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CompassPosGuidance -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CompassPosGuidance:
    int SimplePortX -> SimplePortX
    int SimplePortY -> SimplePortY
    int EnlargePortX -> EnlargePortX
    int EnlargePortY -> EnlargePortY
    int SimpleLandX -> SimpleLandX
    int SimpleLandY -> SimpleLandY
    int EnlargeLandX -> EnlargeLandX
    int EnlargeLandY -> EnlargeLandY
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CruiseBundleKey -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$CruiseBundleKey:
    java.lang.String SPEED_LIMIT_KEY -> SPEED_LIMIT_KEY
    java.lang.String ROAD_CAMERA_KEY -> ROAD_CAMERA_KEY
    java.lang.String TRAFFIC_SIGN_KEY -> TRAFFIC_SIGN_KEY
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$FullViewRouteType -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$FullViewRouteType:
    int fullViewSimpleGuidePort -> fullViewSimpleGuidePort
    int fullViewRasterMapGuidePort -> fullViewRasterMapGuidePort
    int fullViewSimpleGuideLand -> fullViewSimpleGuideLand
    int fullViewRasterMapGuideLand -> fullViewRasterMapGuideLand
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$Key -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$Key:
    java.lang.String SP_USER_MAPSTATE -> SP_USER_MAPSTATE
    java.lang.String SP_USER_VOLUME -> SP_USER_VOLUME
    java.lang.String SP_RG_NEWER_GUIDE_CNT -> SP_RG_NEWER_GUIDE_CNT
    java.lang.String SP_RG_MAIN_AUXILIARY_GUIDE -> SP_RG_MAIN_AUXILIARY_GUIDE
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$MenuType -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$MenuType:
    int INVALID -> INVALID
    int JUMP_OUT -> JUMP_OUT
    int INSIDE -> INSIDE
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$NE_SyncCallOpera_Type -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$NE_SyncCallOpera_Type:
    int NE_SyncCallOpera_Type_Invalid -> NE_SyncCallOpera_Type_Invalid
    int NE_SyncCallOpera_Type_SetCalcMode -> NE_SyncCallOpera_Type_SetCalcMode
    int NE_SyncCallOpera_Type_CalcRoute -> NE_SyncCallOpera_Type_CalcRoute
    int NE_SyncCallOpera_Type_RemoveRoute -> NE_SyncCallOpera_Type_RemoveRoute
    int NE_SyncCallOpera_Type_SelectRoute -> NE_SyncCallOpera_Type_SelectRoute
    int NE_SyncCallOpera_Type_StartRouteGuide -> NE_SyncCallOpera_Type_StartRouteGuide
    int NE_SyncCallOpera_Type_StopRouteGuide -> NE_SyncCallOpera_Type_StopRouteGuide
    int NE_SyncCallOpera_Type_StartRouteCruise -> NE_SyncCallOpera_Type_StartRouteCruise
    int NE_SyncCallOpera_Type_StopRouteCruise -> NE_SyncCallOpera_Type_StopRouteCruise
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey:
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey$AssistInfo -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey$AssistInfo:
    java.lang.String UpdateType -> UpdateType
    java.lang.String AssistType -> AssistType
    java.lang.String Speed -> Speed
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey$CurRoadName -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey$CurRoadName:
    java.lang.String CurRoadName -> CurRoadName
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey$HUDInfo -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey$HUDInfo:
    java.lang.String Speed -> Speed
    java.lang.String ResId -> ResId
    java.lang.String NextRoad -> NextRoad
    java.lang.String RemainDist -> RemainDist
    java.lang.String TotalDist -> TotalDist
    java.lang.String TotalTime -> TotalTime
    java.lang.String StartDist -> StartDist
    java.lang.String Direction -> Direction
    java.lang.String GPSLost -> GPSLost
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey$SimpleGuideInfo -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey$SimpleGuideInfo:
    java.lang.String UpdateType -> UpdateType
    java.lang.String ResId -> ResId
    java.lang.String IconName -> IconName
    java.lang.String NextRoad -> NextRoad
    java.lang.String RemainDist -> RemainDist
    java.lang.String StartDist -> StartDist
    java.lang.String TotalDist -> TotalDist
    java.lang.String TotalTime -> TotalTime
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGKey a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGLocationMode -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGLocationMode:
    int NE_Locate_Mode_Invalid -> NE_Locate_Mode_Invalid
    int NE_Locate_Mode_GPS -> NE_Locate_Mode_GPS
    int NE_Locate_Mode_RouteDemoGPS -> NE_Locate_Mode_RouteDemoGPS
    int NE_Locate_Mode_NEMADemoGPS -> NE_Locate_Mode_NEMADemoGPS
    int NE_Locate_Mode_ManualDemoGPS -> NE_Locate_Mode_ManualDemoGPS
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGViewMode -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RGViewMode:
    int ROUTE_GUIDE -> ROUTE_GUIDE
    int ROUTE_FULLVIEW -> ROUTE_FULLVIEW
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RasterType -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RasterType:
    java.lang.String DIRECT_BOARD -> DIRECT_BOARD
    java.lang.String GRID -> GRID
    java.lang.String VECTOR -> VECTOR
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RotateMode -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$RotateMode:
    int EN_Rotate_Mode_Map -> EN_Rotate_Mode_Map
    int EN_Rotate_Mode_Car -> EN_Rotate_Mode_Car
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams a -> a
com.baidu.navisdk.comapi.routeguide.RouteGuideParams$VoiceMode -> com.baidu.navisdk.comapi.routeguide.RouteGuideParams$VoiceMode:
    int VOICE_SAFE -> VOICE_SAFE
    int VOICE_SIMPLE -> VOICE_SIMPLE
    int VOICE_SILENCE -> VOICE_SILENCE
    com.baidu.navisdk.comapi.routeguide.RouteGuideParams a -> a
com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver -> com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver:
    int TYPE_ROUTE_PLAN -> TYPE_ROUTE_PLAN
    int TYPE_OFFLINEDATA_LACK -> TYPE_OFFLINEDATA_LACK
    int TYPE_AVOID_TRAFFICJAM -> TYPE_AVOID_TRAFFICJAM
    int TYPE_ONLINE_NETWORK_ERROR -> TYPE_ONLINE_NETWORK_ERROR
    int EVENT_BEFORE -> EVENT_BEFORE
    int EVENT_RP_SUCCUSS -> EVENT_RP_SUCCUSS
    int EVENT_RP_FAIL -> EVENT_RP_FAIL
    int EVENT_RP_YAWING_SUCCUSS -> EVENT_RP_YAWING_SUCCUSS
    int EVENT_RP_YAWING_FAIL -> EVENT_RP_YAWING_FAIL
    int EVENT_GENERAL_FAIL -> EVENT_GENERAL_FAIL
    int EVENT_ENGINE_FAIL -> EVENT_ENGINE_FAIL
    int EVENT_NETWORK_NOTICE -> EVENT_NETWORK_NOTICE
    int EVENT_NETWORK_CONFIRM -> EVENT_NETWORK_CONFIRM
com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver$ConfirmArg -> com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver$ConfirmArg:
    android.view.View$OnClickListener mConfirmListener -> mConfirmListener
com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver$FailArg -> com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver$FailArg:
    int mFailType -> mFailType
    java.lang.String mFailText -> mFailText
com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver$FailType -> com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver$FailType:
    int ROUTE_PLAN_TOAST_START_OR_DEST_INVALID -> ROUTE_PLAN_TOAST_START_OR_DEST_INVALID
    int ROUTE_PLAN_TOAST_ACTIVATE_NETWORK_UNCONNECTED -> ROUTE_PLAN_TOAST_ACTIVATE_NETWORK_UNCONNECTED
    int ROUTEPLAN_AVOID_TRAFFICJAM_ERROR -> ROUTEPLAN_AVOID_TRAFFICJAM_ERROR
    int ROUTEPLAN_ON2OFF_NETWORK_ERROR -> ROUTEPLAN_ON2OFF_NETWORK_ERROR
    int ROUTE_PLAN_TOAST_ROUTE_NODE_NOT_COMPLETE -> ROUTE_PLAN_TOAST_ROUTE_NODE_NOT_COMPLETE
    int ROUTE_PLAN_TOAST_SET_START_FAILED -> ROUTE_PLAN_TOAST_SET_START_FAILED
    int ROUTE_PLAN_TOAST_SET_END_FAILED -> ROUTE_PLAN_TOAST_SET_END_FAILED
    int ROUTE_PLAN_TOAST_CALC_ROUTE_FAILED -> ROUTE_PLAN_TOAST_CALC_ROUTE_FAILED
    int ROUTE_PLAN_TOAST_LOC_INVALID -> ROUTE_PLAN_TOAST_LOC_INVALID
    int ROUTE_PLAN_TOAST_FAIL_TOO_CLOSE -> ROUTE_PLAN_TOAST_FAIL_TOO_CLOSE
    int ROUTE_PLAN_TOAST_OFFLINE_AVOID_TAFFICJAM_ERROR -> ROUTE_PLAN_TOAST_OFFLINE_AVOID_TAFFICJAM_ERROR
com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver$LackDataArg -> com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver$LackDataArg:
    java.lang.String mLackDataText -> mLackDataText
com.baidu.navisdk.comapi.routeplan.BNRoutePlaner -> com.baidu.navisdk.comapi.routeplan.BNRoutePlaner:
    com.baidu.navisdk.comapi.routeplan.BNRoutePlaner a -> a
    java.lang.ref.WeakReference b -> b
    java.util.ArrayList c -> c
    com.baidu.navisdk.comapi.routeplan.IRouteResultObserver d -> d
    com.baidu.navisdk.jni.control.GuidanceControl e -> e
    int f -> f
    int g -> g
    int h -> h
    java.util.ArrayList i -> i
    java.lang.String j -> j
    com.baidu.navisdk.model.RoutePlanModel k -> k
    com.baidu.navisdk.util.common.Stopwatch l -> l
    boolean m -> m
    com.baidu.navisdk.comapi.base.MsgHandler n -> n
    com.baidu.navisdk.comapi.routeplan.BNRoutePlaner getInstance() -> getInstance
    void destory() -> destory
    void init(android.content.Context) -> init
    void a() -> a
    void setRouteResultObserver(com.baidu.navisdk.comapi.routeplan.IRouteResultObserver) -> setRouteResultObserver
    void deleteRouteResultObserver() -> deleteRouteResultObserver
    void addRouteResultObserver(com.baidu.navisdk.comapi.routeplan.IRouteResultObserver) -> addRouteResultObserver
    void removeRouteResultObserver(com.baidu.navisdk.comapi.routeplan.IRouteResultObserver) -> removeRouteResultObserver
    boolean a(int,int) -> a
    boolean a(java.util.ArrayList) -> a
    int a(int,boolean,com.baidu.navisdk.model.datastruct.RoutePlanTime) -> a
    android.os.Bundle a(int) -> a
    boolean zoomToRouteBound() -> zoomToRouteBound
    boolean zoomToRouteNodeBound(int) -> zoomToRouteNodeBound
    void SetCalcRouteNetMode(int) -> SetCalcRouteNetMode
    int getCalcRouteNetMode() -> getCalcRouteNetMode
    void b(int) -> b
    boolean GetAvoidInfo() -> GetAvoidInfo
    java.lang.String GetAvoidTips() -> GetAvoidTips
    boolean GetRouteTollMode(int) -> GetRouteTollMode
    boolean ManualPlaySound() -> ManualPlaySound
    boolean getRouteData(android.os.Bundle) -> getRouteData
    void EnableRoadCondition(boolean) -> EnableRoadCondition
    void SetRouteSpec(boolean) -> SetRouteSpec
    void setIsMrslRoute(boolean,java.lang.String) -> setIsMrslRoute
    void setNaviPVStat(boolean) -> setNaviPVStat
    void a(java.util.ArrayList,boolean) -> a
    void setPointsToCalcRoute(java.util.ArrayList) -> setPointsToCalcRoute
    void a(java.util.ArrayList,int,boolean) -> a
    void b(java.util.ArrayList,int,boolean) -> b
    boolean setPointsToCalcRoute(java.util.ArrayList,int) -> setPointsToCalcRoute
    void setEndToCalcRoute(com.baidu.navisdk.model.datastruct.RoutePlanNode,com.baidu.navisdk.model.datastruct.RoutePlanNode) -> setEndToCalcRoute
    boolean checkPointDataReady(com.baidu.nplatform.comapi.basestruct.GeoPoint,com.baidu.navisdk.model.datastruct.DistrictInfo) -> checkPointDataReady
    int b(java.util.ArrayList) -> b
    void setCalcMode(int) -> setCalcMode
    int getCalcMode() -> getCalcMode
    void a(android.content.Context,java.util.ArrayList,int,boolean) -> a
    void b(android.content.Context,java.util.ArrayList,int,boolean) -> b
    com.baidu.navisdk.model.datastruct.RoutePlanTime b() -> b
    void cancleCalcRouteRequest() -> cancleCalcRouteRequest
    void c() -> c
    void calcReturnRoute(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> calcReturnRoute
    boolean setViaCalcRoute(com.baidu.navisdk.model.datastruct.RoutePlanNode,com.baidu.navisdk.model.datastruct.SearchPoi) -> setViaCalcRoute
    java.util.ArrayList getRemainedDestList() -> getRemainedDestList
    int getRemainedDests() -> getRemainedDests
    boolean getLackOfData(boolean[]) -> getLackOfData
    java.lang.String c(int) -> c
    java.lang.String d(int) -> d
    java.lang.String a(boolean[]) -> a
    void a(android.content.Context,int) -> a
    void setRoutePlanStatistcsUrl(java.lang.String) -> setRoutePlanStatistcsUrl
    boolean a(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner,boolean) -> a
    java.lang.ref.WeakReference a(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner) -> a
    com.baidu.navisdk.model.RoutePlanModel b(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner) -> b
    int c(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner) -> c
    android.os.Bundle a(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner,int) -> a
    com.baidu.navisdk.comapi.routeplan.IRouteResultObserver d(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner) -> d
    java.util.ArrayList e(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner) -> e
    com.baidu.navisdk.util.common.Stopwatch f(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner) -> f
    int g(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner) -> g
    java.lang.String b(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner,int) -> b
    void a(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner,android.content.Context,int) -> a
    java.lang.String c(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner,int) -> c
    void a(com.baidu.navisdk.comapi.routeplan.BNRoutePlaner,java.util.ArrayList,int,boolean) -> a
com.baidu.navisdk.comapi.routeplan.BNRoutePlaner$1 -> com.baidu.navisdk.comapi.routeplan.BNRoutePlaner$1:
    com.baidu.navisdk.comapi.routeplan.BNRoutePlaner a -> a
    void handleMessage(android.os.Message) -> handleMessage
    void careAbout() -> careAbout
com.baidu.navisdk.comapi.routeplan.BNRoutePlaner$2 -> com.baidu.navisdk.comapi.routeplan.BNRoutePlaner$2:
    java.util.ArrayList a -> a
    int b -> b
    boolean c -> c
    android.content.Context d -> d
    com.baidu.navisdk.comapi.routeplan.BNRoutePlaner e -> e
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.comapi.routeplan.BNRoutePlaner$3 -> com.baidu.navisdk.comapi.routeplan.BNRoutePlaner$3:
    java.util.ArrayList a -> a
    int b -> b
    boolean c -> c
    android.content.Context d -> d
    com.baidu.navisdk.comapi.routeplan.BNRoutePlaner e -> e
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.comapi.routeplan.IRouteResultObserver -> com.baidu.navisdk.comapi.routeplan.IRouteResultObserver:
    void onRoutePlanStart() -> onRoutePlanStart
    void onRoutePlanSuccess() -> onRoutePlanSuccess
    void onRoutePlanFail() -> onRoutePlanFail
    void onRoutePlanYawingSuccess() -> onRoutePlanYawingSuccess
    void onRoutePlanYawingFail() -> onRoutePlanYawingFail
    void onRoutePlanCanceled() -> onRoutePlanCanceled
com.baidu.navisdk.comapi.routeplan.RoutePlanParams -> com.baidu.navisdk.comapi.routeplan.RoutePlanParams:
    int MAX_WAY_POINT -> MAX_WAY_POINT
    int MIN_WAY_POINT -> MIN_WAY_POINT
    int GPS_SET_COUNT_DOWN_TIME -> GPS_SET_COUNT_DOWN_TIME
    java.lang.String KEY_SETTING_MODE -> KEY_SETTING_MODE
    java.lang.String KEY_NAV_NODE -> KEY_NAV_NODE
    int DEFAULT_MODE -> DEFAULT_MODE
    int SET_START_MODE -> SET_START_MODE
    int SET_VIA_MODE -> SET_VIA_MODE
    int SET_DEST_MODE -> SET_DEST_MODE
    int ADD_VIA_MODE -> ADD_VIA_MODE
    java.lang.String CLEAR_ROUTE_INFO -> CLEAR_ROUTE_INFO
    java.lang.String KEY_HOUR -> KEY_HOUR
    java.lang.String KEY_MINUTE -> KEY_MINUTE
    int YAWING_ROUTE_PLAN_RESULT -> YAWING_ROUTE_PLAN_RESULT
    int ROUTE_PLAN_NODE_ERROR -> ROUTE_PLAN_NODE_ERROR
    int ROUTE_PLAN_LACK_DATA -> ROUTE_PLAN_LACK_DATA
    int ROUTE_PLAN_DATA_DOWNLOADED -> ROUTE_PLAN_DATA_DOWNLOADED
    int ROUTE_PLAN_TOAST_FAIL_TOO_CLOSE -> ROUTE_PLAN_TOAST_FAIL_TOO_CLOSE
    int MIN_ROUTE_PLAN_DISTANCE -> MIN_ROUTE_PLAN_DISTANCE
    java.lang.String MY_LOCATION -> MY_LOCATION
    java.lang.String TURN_TYPE_ID_START -> TURN_TYPE_ID_START
    java.lang.String TURN_TYPE_ID_END -> TURN_TYPE_ID_END
    java.lang.String TURN_TYPE_ID_VIA -> TURN_TYPE_ID_VIA
    java.lang.String COUNTRY_OFFLINE_DATA -> COUNTRY_OFFLINE_DATA
    int[] gTurnIconIDSmall -> gTurnIconIDSmall
    int[] mProvince -> mProvince
com.baidu.navisdk.comapi.routeplan.RoutePlanParams$Action -> com.baidu.navisdk.comapi.routeplan.RoutePlanParams$Action:
    int ROUTE_PLAN_NODE_ACTION -> ROUTE_PLAN_NODE_ACTION
    int PICK_FROM_MAP_ACTION -> PICK_FROM_MAP_ACTION
    int MY_LOCATION_ACTION -> MY_LOCATION_ACTION
    int HOME_ADDR_ACTION -> HOME_ADDR_ACTION
    int COMP_ADDR_ACTION -> COMP_ADDR_ACTION
    int SEARCH_CENTER_ACTION -> SEARCH_CENTER_ACTION
    com.baidu.navisdk.comapi.routeplan.RoutePlanParams a -> a
com.baidu.navisdk.comapi.routeplan.RoutePlanParams$BundleKey -> com.baidu.navisdk.comapi.routeplan.RoutePlanParams$BundleKey:
    java.lang.String FROM_FRAGMENT -> FROM_FRAGMENT
    java.lang.String SELECT_POINT_ACTION -> SELECT_POINT_ACTION
    com.baidu.navisdk.comapi.routeplan.RoutePlanParams a -> a
com.baidu.navisdk.comapi.routeplan.RoutePlanParams$NE_RoutePlan_Mode -> com.baidu.navisdk.comapi.routeplan.RoutePlanParams$NE_RoutePlan_Mode:
    int ROUTE_PLAN_MOD_RECOMMEND -> ROUTE_PLAN_MOD_RECOMMEND
    int ROUTE_PLAN_MOD_MIN_TIME -> ROUTE_PLAN_MOD_MIN_TIME
    int ROUTE_PLAN_MOD_MIN_DIST -> ROUTE_PLAN_MOD_MIN_DIST
    int ROUTE_PLAN_MOD_MIN_TOLL -> ROUTE_PLAN_MOD_MIN_TOLL
    int ROUTE_PLAN_MOD_AVOID_TAFFICJAM -> ROUTE_PLAN_MOD_AVOID_TAFFICJAM
    com.baidu.navisdk.comapi.routeplan.RoutePlanParams a -> a
com.baidu.navisdk.comapi.routeplan.RoutePlanParams$NE_RoutePlan_Result -> com.baidu.navisdk.comapi.routeplan.RoutePlanParams$NE_RoutePlan_Result:
    int ROUTEPLAN_RESULT_SUCCESS -> ROUTEPLAN_RESULT_SUCCESS
    int ROUTEPLAN_RESULT_LOW_VERSION -> ROUTEPLAN_RESULT_LOW_VERSION
    int ROUTEPLAN_RESULT_WRONG_VERSION -> ROUTEPLAN_RESULT_WRONG_VERSION
    int ROUTEPLAN_RESULT_FAIL_NO_START -> ROUTEPLAN_RESULT_FAIL_NO_START
    int ROUTEPLAN_RESULT_FAIL_NO_STOP -> ROUTEPLAN_RESULT_FAIL_NO_STOP
    int ROUTEPLAN_RESULT_FAIL_WRONG_COORD -> ROUTEPLAN_RESULT_FAIL_WRONG_COORD
    int ROUTEPLAN_RESULT_FAIL_CALC_FAIL -> ROUTEPLAN_RESULT_FAIL_CALC_FAIL
    int ROUTEPLAN_RESULT_FAIL_SERVER_UNUSUAL -> ROUTEPLAN_RESULT_FAIL_SERVER_UNUSUAL
    int ROUTEPLAN_RESULT_FAIL_PARSE_FAIL -> ROUTEPLAN_RESULT_FAIL_PARSE_FAIL
    int ROUTEPLAN_RESULT_FAIL_WAYPOINT_DUPLICATE -> ROUTEPLAN_RESULT_FAIL_WAYPOINT_DUPLICATE
    int ROUTEPLAN_RESULT_FAIL_NET_ERR -> ROUTEPLAN_RESULT_FAIL_NET_ERR
    int ROUTEPLAN_RESULT_SUCCESS_ONLY_RC -> ROUTEPLAN_RESULT_SUCCESS_ONLY_RC
    int ROUTEPLAN_RESULT_FAIL_CALC_CANCEL -> ROUTEPLAN_RESULT_FAIL_CALC_CANCEL
    int ROUTEPLAN_RESULT_FAIL_START_DEVIATE -> ROUTEPLAN_RESULT_FAIL_START_DEVIATE
    int ROUTEPLAN_RESULT_FAIL_DEST1_DEVIATE -> ROUTEPLAN_RESULT_FAIL_DEST1_DEVIATE
    int ROUTEPLAN_RESULT_FAIL_DEST2_DEVIATE -> ROUTEPLAN_RESULT_FAIL_DEST2_DEVIATE
    int ROUTEPLAN_RESULT_FAIL_DEST3_DEVIATE -> ROUTEPLAN_RESULT_FAIL_DEST3_DEVIATE
    int ROUTEPLAN_RESULT_FAIL_DEST4_DEVIATE -> ROUTEPLAN_RESULT_FAIL_DEST4_DEVIATE
    int ROUTEPLAN_RESULT_FAIL_DEST5_DEVIATE -> ROUTEPLAN_RESULT_FAIL_DEST5_DEVIATE
    int ROUTEPLAN_RESULT_FAIL_TOO_CLOSE -> ROUTEPLAN_RESULT_FAIL_TOO_CLOSE
    int ROUTEPLAN_RESULT_FAIL_DATA_LACK -> ROUTEPLAN_RESULT_FAIL_DATA_LACK
    int ROUTEPLAN_RESULT_INVALID -> ROUTEPLAN_RESULT_INVALID
    com.baidu.navisdk.comapi.routeplan.RoutePlanParams a -> a
com.baidu.navisdk.comapi.routeplan.RoutePlanParams$NodeSelectBundleKey -> com.baidu.navisdk.comapi.routeplan.RoutePlanParams$NodeSelectBundleKey:
    java.lang.String FROM_FRAGMENT -> FROM_FRAGMENT
    java.lang.String SETTING_TYPE -> SETTING_TYPE
    com.baidu.navisdk.comapi.routeplan.RoutePlanParams a -> a
com.baidu.navisdk.comapi.routeplan.RoutePlanParams$NodeSelectFromFragment -> com.baidu.navisdk.comapi.routeplan.RoutePlanParams$NodeSelectFromFragment:
    java.lang.String QUICK_ROUTE_PLAN_FRAGMENT -> QUICK_ROUTE_PLAN_FRAGMENT
    java.lang.String SETTING_FRAGMENT -> SETTING_FRAGMENT
    com.baidu.navisdk.comapi.routeplan.RoutePlanParams a -> a
com.baidu.navisdk.comapi.routeplan.RoutePlanParams$NodeSelectSetingType -> com.baidu.navisdk.comapi.routeplan.RoutePlanParams$NodeSelectSetingType:
    java.lang.String SETING_HOME -> SETING_HOME
    java.lang.String SETTING_COMP -> SETTING_COMP
    com.baidu.navisdk.comapi.routeplan.RoutePlanParams a -> a
com.baidu.navisdk.comapi.routeplan.RoutePlanParams$PickPointType -> com.baidu.navisdk.comapi.routeplan.RoutePlanParams$PickPointType:
    int PICK_POINT_INVALID -> PICK_POINT_INVALID
    int PICK_START_POINT -> PICK_START_POINT
    int PICK_VIA_POINT -> PICK_VIA_POINT
    int PICK_END_POINT -> PICK_END_POINT
    com.baidu.navisdk.comapi.routeplan.RoutePlanParams a -> a
com.baidu.navisdk.comapi.setting.BNSettingManager -> com.baidu.navisdk.comapi.setting.BNSettingManager:
    com.baidu.navisdk.comapi.setting.BNSettingManager a -> a
    com.baidu.navisdk.util.common.PreferenceHelper b -> b
    com.baidu.navisdk.comapi.setting.BNSettingManager getInstance(android.content.Context) -> getInstance
    boolean isNaviDisclaimerShow() -> isNaviDisclaimerShow
    void setNaviDisclaimerShow(boolean) -> setNaviDisclaimerShow
    boolean isNaviAlwaysBright() -> isNaviAlwaysBright
    void setNaviAlwaysBright(boolean) -> setNaviAlwaysBright
    boolean isNaviAutoCheckNewData() -> isNaviAutoCheckNewData
    void setNaviAutoCheckNewData(boolean) -> setNaviAutoCheckNewData
    boolean isNaviAutoUpdateNewData() -> isNaviAutoUpdateNewData
    void setNaviAutoUpdateNewData(boolean) -> setNaviAutoUpdateNewData
    int getNaviDayAndNightMode() -> getNaviDayAndNightMode
    void setNaviDayAndNightMode(int) -> setNaviDayAndNightMode
    int getNaviRoutePlanNetMode() -> getNaviRoutePlanNetMode
    void setNaviRoutePlanNetMode(int) -> setNaviRoutePlanNetMode
    boolean isNaviRealHistoryITS() -> isNaviRealHistoryITS
    void setsNaviRealHistoryITS(boolean) -> setsNaviRealHistoryITS
    boolean isTrackLocateGuide() -> isTrackLocateGuide
    void setTrackLocateGuide(boolean) -> setTrackLocateGuide
    boolean isOtherCameraSpeakEnable() -> isOtherCameraSpeakEnable
    void setOtherCameraSpeakEnable(boolean) -> setOtherCameraSpeakEnable
    boolean isOverSpeedSpeakEnable() -> isOverSpeedSpeakEnable
    void setOverSpeedSpeakEnable(boolean) -> setOverSpeedSpeakEnable
    boolean isStraightSpeakEnable() -> isStraightSpeakEnable
    void setStraightSpeakEnable(boolean) -> setStraightSpeakEnable
    int getVoiceMode() -> getVoiceMode
    void setVoiceMode(int) -> setVoiceMode
    boolean isITSOnOrOff() -> isITSOnOrOff
    void setITSOnOff(boolean) -> setITSOnOff
com.baidu.navisdk.comapi.setting.SettingParams -> com.baidu.navisdk.comapi.setting.SettingParams:
com.baidu.navisdk.comapi.setting.SettingParams$Action -> com.baidu.navisdk.comapi.setting.SettingParams$Action:
    int DAY_NIGHT_MODE_NIGHT -> DAY_NIGHT_MODE_NIGHT
    int DAY_NIGHT_MODE_DAY -> DAY_NIGHT_MODE_DAY
    int DAY_NIGHT_MODE_AUTO -> DAY_NIGHT_MODE_AUTO
    int ROUTE_PLAN_MODE_OFFLINE -> ROUTE_PLAN_MODE_OFFLINE
    int ROUTE_PLAN_MODE_ONLINE -> ROUTE_PLAN_MODE_ONLINE
    boolean ROUTE_STATE_MODE_REAL -> ROUTE_STATE_MODE_REAL
    boolean ROUTE_STATE_MODE_HISTORY -> ROUTE_STATE_MODE_HISTORY
    com.baidu.navisdk.comapi.setting.SettingParams a -> a
com.baidu.navisdk.comapi.setting.SettingParams$Key -> com.baidu.navisdk.comapi.setting.SettingParams$Key:
    java.lang.String NAVI_SHOW_DISCLAIMER -> NAVI_SHOW_DISCLAIMER
    java.lang.String NAVI_ALWAYS_BRIGHT -> NAVI_ALWAYS_BRIGHT
    java.lang.String NAVI_TRACK_RECORD -> NAVI_TRACK_RECORD
    java.lang.String NAVI_AUTO_CHECK_NEW_DATA -> NAVI_AUTO_CHECK_NEW_DATA
    java.lang.String NAVI_AUTO_UPDATE_NEW_DATA -> NAVI_AUTO_UPDATE_NEW_DATA
    java.lang.String NAVI_MODE_DAY_AND_NIGHT -> NAVI_MODE_DAY_AND_NIGHT
    java.lang.String NAVI_RP_NET_MODE -> NAVI_RP_NET_MODE
    java.lang.String NAVI_REAL_HISTORY_ITS -> NAVI_REAL_HISTORY_ITS
    java.lang.String PREF_NAVI_FIRST_USE -> PREF_NAVI_FIRST_USE
    java.lang.String NAVI_ITS_ON_OFF -> NAVI_ITS_ON_OFF
    java.lang.String NAVI_VOICE_MODE -> NAVI_VOICE_MODE
    java.lang.String NAVI_OVERSPEED_SPEAK -> NAVI_OVERSPEED_SPEAK
    java.lang.String NAVI_OTHERCAMERA_SPEAK -> NAVI_OTHERCAMERA_SPEAK
    java.lang.String NAVI_STRAIGHT_SPEAK -> NAVI_STRAIGHT_SPEAK
    java.lang.String NAVI_UPDATE_APK_NOT_ALERT -> NAVI_UPDATE_APK_NOT_ALERT
    java.lang.String NAVI_UPDATE_APK_VERSION -> NAVI_UPDATE_APK_VERSION
    java.lang.String KEY_CHECK_NEW_DATA -> KEY_CHECK_NEW_DATA
    java.lang.String SP_ROUTEPLAN_SHOW_ONLINE_DIALOG -> SP_ROUTEPLAN_SHOW_ONLINE_DIALOG
    java.lang.String SP_ROUTEPLAN_SHOW_AVOID_TRAFFICJAM_DIALOG -> SP_ROUTEPLAN_SHOW_AVOID_TRAFFICJAM_DIALOG
    java.lang.String SP_TRACK_LOCATE_GUIDE -> SP_TRACK_LOCATE_GUIDE
    java.lang.String HOME_CARD_SETTING_ASR -> HOME_CARD_SETTING_ASR
    java.lang.String HOME_CARD_SETTING_STREETSCAPE -> HOME_CARD_SETTING_STREETSCAPE
    java.lang.String HOME_CARD_SETTING_ELECTRONIC_DOG -> HOME_CARD_SETTING_ELECTRONIC_DOG
    java.lang.String HOME_CARD_SETTING_TEST -> HOME_CARD_SETTING_TEST
    java.lang.String SDK_KEY_VERIFY_FAIL -> SDK_KEY_VERIFY_FAIL
    com.baidu.navisdk.comapi.setting.SettingParams a -> a
com.baidu.navisdk.comapi.tts.BNTTSPlayer -> com.baidu.navisdk.comapi.tts.BNTTSPlayer:
    com.baidu.navisdk.comapi.tts.ttsplayer.EJTTSPlayer a -> a
    void initPlayer() -> initPlayer
    int getTTSState() -> getTTSState
    int playTTSText(java.lang.String,int) -> playTTSText
    void stopTTS() -> stopTTS
    void releaseTTSPlayer() -> releaseTTSPlayer
    void setOnTTSStateChangedListener(com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer$OnTTSStateChangedListener) -> setOnTTSStateChangedListener
    void setPhoneIn(boolean) -> setPhoneIn
com.baidu.navisdk.comapi.tts.BNavigatorTTSPlayer -> com.baidu.navisdk.comapi.tts.BNavigatorTTSPlayer:
    com.baidu.navisdk.comapi.tts.IBNTTSPlayerListener a -> a
    boolean b -> b
    void setTTSPlayerListener(com.baidu.navisdk.comapi.tts.IBNTTSPlayerListener) -> setTTSPlayerListener
    int getTTSState() -> getTTSState
    int playTTSText(java.lang.String,int) -> playTTSText
    void setPhoneIn(boolean) -> setPhoneIn
    void pauseVoiceTTSOutput() -> pauseVoiceTTSOutput
    void resumeVoiceTTSOutput() -> resumeVoiceTTSOutput
com.baidu.navisdk.comapi.tts.BTTSLibController -> com.baidu.navisdk.comapi.tts.BTTSLibController:
    java.lang.String a -> a
    com.baidu.navisdk.comapi.tts.BTTSLibController b -> b
    com.baidu.navisdk.comapi.tts.BTTSLibController getInstance(android.content.Context) -> getInstance
    boolean isLibReady() -> isLibReady
    void loadLibrary(int) -> loadLibrary
    void startDownload(android.os.Handler) -> startDownload
com.baidu.navisdk.comapi.tts.IBNTTSPlayerListener -> com.baidu.navisdk.comapi.tts.IBNTTSPlayerListener:
    int PLAYER_STATE_NOT_INIT -> PLAYER_STATE_NOT_INIT
    int PLAYER_STATE_IDLE -> PLAYER_STATE_IDLE
    int PLAYER_STATE_PLAYING -> PLAYER_STATE_PLAYING
    int PLAYER_STATE_PAUSE -> PLAYER_STATE_PAUSE
    int PLAYER_STATE_ERROR -> PLAYER_STATE_ERROR
    int getTTSState() -> getTTSState
    int playTTSText(java.lang.String,int) -> playTTSText
    void phoneCalling() -> phoneCalling
    void phoneHangUp() -> phoneHangUp
com.baidu.navisdk.comapi.tts.ttsplayer.EJTTSPlayer -> com.baidu.navisdk.comapi.tts.ttsplayer.EJTTSPlayer:
    java.lang.String a -> a
    android.content.Context b -> b
    com.sinovoice.ejttsplayer.TTSPlayer c -> c
    com.sinovoice.ejtts.LongInt d -> d
    int NAV_VOICE_SPEED -> NAV_VOICE_SPEED
    int init() -> init
    int getState() -> getState
    int playText(java.lang.String,boolean) -> playText
    void release() -> release
    void stop() -> stop
    void changeTTSPlayerVolume(boolean) -> changeTTSPlayerVolume
    void setPlayModeAsync() -> setPlayModeAsync
    void setPlayModeSync() -> setPlayModeSync
    void playDingWhenYawing() -> playDingWhenYawing
com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer -> com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer:
    android.content.Context a -> a
    com.sinovoice.hcicloudsdk.android.tts.player.TTSPlayer b -> b
    com.sinovoice.hcicloudsdk.common.tts.TtsConfig c -> c
    java.util.Map d -> d
    boolean e -> e
    boolean f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    int m -> m
    android.media.MediaPlayer n -> n
    com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer$OnTTSStateChangedListener o -> o
    int getTTSState() -> getTTSState
    int getVoiceFreq() -> getVoiceFreq
    int getVoiceSpeed() -> getVoiceSpeed
    int getVoiceStyle() -> getVoiceStyle
    void a(com.sinovoice.hcicloudsdk.common.tts.TtsConfig) -> a
    void a(java.lang.String) -> a
    void a() -> a
    void initPlayer(android.content.Context,int) -> initPlayer
    void setOnTTSStateChangedListener(com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer$OnTTSStateChangedListener) -> setOnTTSStateChangedListener
    int playTTSText(java.lang.String,int) -> playTTSText
    void releaseTTSPlayer() -> releaseTTSPlayer
    void resumeTTS() -> resumeTTS
    void setContext(android.content.Context) -> setContext
    void setPhoneIn(boolean) -> setPhoneIn
    void setVoiceFreq(int) -> setVoiceFreq
    void setVoiceSpeed(int) -> setVoiceSpeed
    void setVoiceStyle(int) -> setVoiceStyle
    void stopTTS() -> stopTTS
    void b(com.sinovoice.hcicloudsdk.common.tts.TtsConfig) -> b
    void playDingWhenYawing() -> playDingWhenYawing
    com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer$OnTTSStateChangedListener a(com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer) -> a
com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer$1 -> com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer$1:
    com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer a -> a
    void run() -> run
com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer$2 -> com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer$2:
    com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer a -> a
    void onPlayerEventPlayerError(com.sinovoice.hcicloudsdk.player.TTSCommonPlayer$PlayerEvent,int) -> onPlayerEventPlayerError
    void onPlayerEventProgressChange(com.sinovoice.hcicloudsdk.player.TTSCommonPlayer$PlayerEvent,int,int) -> onPlayerEventProgressChange
    void onPlayerEventStateChange(com.sinovoice.hcicloudsdk.player.TTSCommonPlayer$PlayerEvent) -> onPlayerEventStateChange
com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer$OnTTSStateChangedListener -> com.baidu.navisdk.comapi.tts.ttsplayer.HciCloudTTSPlayer$OnTTSStateChangedListener:
    void onPlayEnd() -> onPlayEnd
com.baidu.navisdk.jni.control.DataManageControl -> com.baidu.navisdk.jni.control.DataManageControl:
com.baidu.navisdk.jni.control.EnvironmentUtil -> com.baidu.navisdk.jni.control.EnvironmentUtil:
    java.lang.String getImei() -> getImei
    java.lang.String getCuid() -> getCuid
    java.lang.String getAppVersion() -> getAppVersion
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getOsVersion() -> getOsVersion
    java.lang.String phonetype() -> phonetype
    int getsensortype() -> getsensortype
    int getNetStatus() -> getNetStatus
    void startSensor() -> startSensor
    void stopSensor() -> stopSensor
com.baidu.navisdk.jni.control.GuidanceControl -> com.baidu.navisdk.jni.control.GuidanceControl:
    com.baidu.navisdk.jni.nativeif.JNIGuidanceControl mJNIGuidance -> mJNIGuidance
    int mGuidanceHandle -> mGuidanceHandle
    boolean setStartPos(int,int) -> setStartPos
    boolean setDestsPos(java.util.ArrayList) -> setDestsPos
    boolean setDestsPosNav(java.util.ArrayList) -> setDestsPosNav
    boolean getDestsRemained(int[]) -> getDestsRemained
    int calcRoute(int,boolean,com.baidu.navisdk.model.datastruct.RoutePlanTime) -> calcRoute
    boolean selectRoute(int) -> selectRoute
    boolean setLocateMode(int) -> setLocateMode
    int getLocateMode() -> getLocateMode
    boolean refreshRoute() -> refreshRoute
    boolean startRouteGuide() -> startRouteGuide
    boolean stopRouteGuide() -> stopRouteGuide
    boolean pauseRouteGuide() -> pauseRouteGuide
    boolean resumeRouteGuide() -> resumeRouteGuide
    boolean setBrowseStatus(boolean) -> setBrowseStatus
    boolean isBrowseStatus() -> isBrowseStatus
    boolean setGuidanceSpeed(int) -> setGuidanceSpeed
    boolean getSimpleMapInfo(android.os.Bundle) -> getSimpleMapInfo
    boolean getCurRoadName(android.os.Bundle) -> getCurRoadName
    boolean triggerGPSDataChange(int,int,float,float,float,float) -> triggerGPSDataChange
    android.os.Bundle getRouteResult(int) -> getRouteResult
    boolean setRotateMode(int) -> setRotateMode
    boolean removeRoute() -> removeRoute
    boolean getLackOfData(boolean[]) -> getLackOfData
    void setRasterExpandMapPath(java.lang.String) -> setRasterExpandMapPath
    boolean isImageInResPack(java.lang.String) -> isImageInResPack
    byte[] getRasterExpandMapImage(java.lang.String,int) -> getRasterExpandMapImage
    boolean getRasterExpandMapInfo(android.os.Bundle) -> getRasterExpandMapInfo
    boolean getDirectBoardInfo(android.os.Bundle) -> getDirectBoardInfo
    boolean getVectorExpandMapInfo(android.os.Bundle) -> getVectorExpandMapInfo
    boolean getHUDData(android.os.Bundle) -> getHUDData
    boolean getCarPoint(int[],int[]) -> getCarPoint
    boolean getVehicleInfo(android.os.Bundle) -> getVehicleInfo
    int getAssistRemainDist() -> getAssistRemainDist
    boolean zoomToRouteBound() -> zoomToRouteBound
    boolean zoomToRouteNodeBound(int) -> zoomToRouteNodeBound
    boolean setUserMapScale(int) -> setUserMapScale
    boolean setGpsTrackFile(java.lang.String) -> setGpsTrackFile
    boolean setStartPosFromFile(java.lang.String) -> setStartPosFromFile
    boolean setDestsPosFromFile(java.lang.String) -> setDestsPosFromFile
    double GetCarRotateAngle() -> GetCarRotateAngle
    void UpdateSensor(double,double,double,double,double,double) -> UpdateSensor
    void setHUDEnabled(boolean) -> setHUDEnabled
    void ZoomToFullView(int) -> ZoomToFullView
    void SetFullViewState(boolean) -> SetFullViewState
    void SetCalcRouteNetMode(int) -> SetCalcRouteNetMode
    void setVoiceMode(int) -> setVoiceMode
    void SetOverspeedSpeak(boolean) -> SetOverspeedSpeak
    void SetOtherCameraSpeak(boolean) -> SetOtherCameraSpeak
    void SetStraightSpeak(boolean) -> SetStraightSpeak
    void EnableRoadCondition(boolean) -> EnableRoadCondition
    void SetRouteSpec(boolean) -> SetRouteSpec
    void CancelCalcRoute(int) -> CancelCalcRoute
    void SetTrackData(android.os.Bundle) -> SetTrackData
    boolean GetAvoidInfo() -> GetAvoidInfo
    java.lang.String GetAvoidTips() -> GetAvoidTips
    boolean GetRouteTollMode(int) -> GetRouteTollMode
    boolean ManualPlaySound() -> ManualPlaySound
    void reload() -> reload
    boolean getRouteData(android.os.Bundle) -> getRouteData
    boolean startRouteCruise() -> startRouteCruise
    boolean stopRouteCruise() -> stopRouteCruise
    boolean setCruiseSetting(android.os.Bundle) -> setCruiseSetting
    boolean setIsMrslRoute(boolean,java.lang.String) -> setIsMrslRoute
    boolean setNaviPVStat(boolean) -> setNaviPVStat
    boolean setRoutePlanStatistcsUrl(java.lang.String) -> setRoutePlanStatistcsUrl
com.baidu.navisdk.jni.control.SearchControl -> com.baidu.navisdk.jni.control.SearchControl:
    int JNI_RET_SUCCESS -> JNI_RET_SUCCESS
    int JNI_RET_FAIL -> JNI_RET_FAIL
    java.lang.String JNI_POI_COUNT -> JNI_POI_COUNT
    java.lang.String JNI_SUG_PREFIX -> JNI_SUG_PREFIX
    java.lang.String JNI_LONGITUDE -> JNI_LONGITUDE
    java.lang.String JNI_LATITUDE -> JNI_LATITUDE
    java.lang.String JNI_NAME -> JNI_NAME
    java.lang.String JNI_DISTRICT_ID -> JNI_DISTRICT_ID
    java.lang.String JNI_ID -> JNI_ID
    java.lang.String JNI_TYPE -> JNI_TYPE
    java.lang.String JNI_GUIDE_LONGITUDE -> JNI_GUIDE_LONGITUDE
    java.lang.String JNI_GUIDE_LATITUDE -> JNI_GUIDE_LATITUDE
    java.lang.String JNI_VIEW_LONGITUDE -> JNI_VIEW_LONGITUDE
    java.lang.String JNI_VIEW_LATITUDE -> JNI_VIEW_LATITUDE
    java.lang.String JNI_PHONE -> JNI_PHONE
    java.lang.String JNI_ADDRESS -> JNI_ADDRESS
    java.lang.String JNI_HAS_CIRCLE -> JNI_HAS_CIRCLE
    java.lang.String JNI_CENTER_X -> JNI_CENTER_X
    java.lang.String JNI_CENTER_Y -> JNI_CENTER_Y
    java.lang.String JNI_RADIUS -> JNI_RADIUS
    java.lang.String JNI_CATALOG_ID -> JNI_CATALOG_ID
    java.lang.String JNI_SUG -> JNI_SUG
    java.lang.String JNI_CHILD_COUNT -> JNI_CHILD_COUNT
    java.lang.String JNI_STREET_ID -> JNI_STREET_ID
    java.lang.String LAYER_POI -> LAYER_POI
    int LAYER_POI_ID -> LAYER_POI_ID
    java.lang.String LAYER_ID_DIVIDER -> LAYER_ID_DIVIDER
    java.lang.String TAG -> TAG
    com.baidu.navisdk.jni.nativeif.JNISearchControl mJNISearchControl -> mJNISearchControl
    com.baidu.navisdk.BNaviEngineManager mNaviManager -> mNaviManager
    boolean isCreateSuccess(int) -> isCreateSuccess
    int nameSearchByKey(java.lang.String,int,int,int,java.util.ArrayList) -> nameSearchByKey
    int spaceSearchByKey(java.lang.String,int,com.baidu.navisdk.model.datastruct.SearchCircle,int,int,java.util.ArrayList) -> spaceSearchByKey
    int spaceSearchByKey(java.lang.String,com.baidu.navisdk.model.datastruct.SearchCircle,int,int,java.util.ArrayList) -> spaceSearchByKey
    int spaceSearchByCatalog(int,int,com.baidu.navisdk.model.datastruct.SearchCircle,int,int,java.util.ArrayList) -> spaceSearchByCatalog
    int spaceSearchByCatalog(int,com.baidu.navisdk.model.datastruct.SearchCircle,int,int,java.util.ArrayList) -> spaceSearchByCatalog
    boolean initInputSug(int,int) -> initInputSug
    boolean releaseInputSug(int) -> releaseInputSug
    int getInputSug(java.lang.String,int,java.util.ArrayList) -> getInputSug
    com.baidu.navisdk.model.datastruct.DistrictInfo getDistrictByPoint(com.baidu.nplatform.comapi.basestruct.GeoPoint,int) -> getDistrictByPoint
    com.baidu.navisdk.model.datastruct.SearchPoi getPoiByPoint(com.baidu.nplatform.comapi.basestruct.GeoPoint,int) -> getPoiByPoint
    com.baidu.navisdk.model.datastruct.DistrictInfo getTopDistrict() -> getTopDistrict
    com.baidu.navisdk.model.datastruct.DistrictInfo getParentDistrict(int) -> getParentDistrict
    int getChildDistrict(int,java.util.ArrayList) -> getChildDistrict
    com.baidu.navisdk.model.datastruct.DistrictInfo getDistrictById(int) -> getDistrictById
    boolean updatePoiCache(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> updatePoiCache
    boolean updatePoiCacheWithList(java.util.ArrayList) -> updatePoiCacheWithList
    boolean clearPoiCache() -> clearPoiCache
    boolean updateFavPoiCache(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> updateFavPoiCache
    boolean updateBkgCache(java.util.ArrayList,int) -> updateBkgCache
    boolean clearBkgCache() -> clearBkgCache
    boolean cancelQuery() -> cancelQuery
    int getCompDistrictId(int) -> getCompDistrictId
    int parseBkgLayerId(java.lang.String) -> parseBkgLayerId
    void quickSortByDistance(com.baidu.nplatform.comapi.basestruct.GeoPoint,java.util.ArrayList) -> quickSortByDistance
    int searchSubPoi(int,int,int,java.util.ArrayList,java.util.ArrayList) -> searchSubPoi
    void quickSortByDistance(java.util.ArrayList,int,int,java.util.ArrayList) -> quickSortByDistance
    com.baidu.navisdk.model.datastruct.DistrictInfo parseDistrictBundle(android.os.Bundle) -> parseDistrictBundle
    com.baidu.navisdk.model.datastruct.SearchPoi parsePoiBundle(android.os.Bundle) -> parsePoiBundle
com.baidu.navisdk.jni.nativeif.JNIGuidanceControl -> com.baidu.navisdk.jni.nativeif.JNIGuidanceControl:
    boolean SetStartPos(int,int,int) -> SetStartPos
    boolean SetDestsPos(int,java.util.ArrayList) -> SetDestsPos
    boolean SetDestsPosNav(int,java.util.ArrayList) -> SetDestsPosNav
    boolean GetDestsRemained(int,int[]) -> GetDestsRemained
    int CalcRoute(int,int,boolean,com.baidu.navisdk.model.datastruct.RoutePlanTime) -> CalcRoute
    boolean SelectRoute(int,int) -> SelectRoute
    boolean SetLocateMode(int,int) -> SetLocateMode
    int GetLocateMode(int) -> GetLocateMode
    boolean RefreshRoute(int) -> RefreshRoute
    boolean StartRouteGuide(int) -> StartRouteGuide
    boolean StopRouteGuide(int) -> StopRouteGuide
    boolean PauseRouteGuide(int) -> PauseRouteGuide
    boolean ResumeRouteGuide(int) -> ResumeRouteGuide
    boolean SetBrowseStatus(int,boolean) -> SetBrowseStatus
    boolean IsBrowseStatus(int) -> IsBrowseStatus
    boolean SetGuidanceSpeed(int,int) -> SetGuidanceSpeed
    boolean GetSimpleMapInfo(int,android.os.Bundle) -> GetSimpleMapInfo
    boolean GetCurRoadName(int,android.os.Bundle) -> GetCurRoadName
    boolean TriggerGPSDataChange(int,int,int,float,float,float,float) -> TriggerGPSDataChange
    boolean GetRouteResult(int,int,android.os.Bundle) -> GetRouteResult
    boolean SetRotateMode(int,int) -> SetRotateMode
    boolean RemoveRoute(int) -> RemoveRoute
    boolean GetLackOfData(int,boolean[]) -> GetLackOfData
    void SetRasterExpandMapPath(int,java.lang.String) -> SetRasterExpandMapPath
    boolean IsImageInResPack(int,java.lang.String) -> IsImageInResPack
    byte[] GetRasterExpandMapImage(int,java.lang.String,int) -> GetRasterExpandMapImage
    boolean GetRasterExpandMapInfo(int,android.os.Bundle) -> GetRasterExpandMapInfo
    boolean GetDirectBoardInfo(int,android.os.Bundle) -> GetDirectBoardInfo
    boolean GetVectorExpandMapInfo(int,android.os.Bundle) -> GetVectorExpandMapInfo
    boolean GetHUDData(int,android.os.Bundle) -> GetHUDData
    boolean GetCarPoint(int,int[],int[]) -> GetCarPoint
    boolean GetVehicleInfo(int,android.os.Bundle) -> GetVehicleInfo
    int GetAssistRemainDist(int) -> GetAssistRemainDist
    boolean ZoomToRouteBound(int) -> ZoomToRouteBound
    boolean ZoomToRouteNodeBound(int,int) -> ZoomToRouteNodeBound
    boolean SetUserMapScale(int,int) -> SetUserMapScale
    boolean SetGpsTrackFile(int,java.lang.String) -> SetGpsTrackFile
    boolean SetStartPosFromFile(int,java.lang.String) -> SetStartPosFromFile
    boolean SetDestsPosFromFile(int,java.lang.String) -> SetDestsPosFromFile
    double GetCarRotateAngle(int) -> GetCarRotateAngle
    void UpdateSensor(int,double,double,double,double,double,double) -> UpdateSensor
    void setHUDEnabled(int,boolean) -> setHUDEnabled
    void ZoomToFullView(int,int) -> ZoomToFullView
    void SetFullViewState(int,boolean) -> SetFullViewState
    void SetCalcRouteNetMode(int,int) -> SetCalcRouteNetMode
    void SetVoiceMode(int,int) -> SetVoiceMode
    void SetOverspeedSpeak(int,boolean) -> SetOverspeedSpeak
    void SetOtherCameraSpeak(int,boolean) -> SetOtherCameraSpeak
    void SetStraightSpeak(int,boolean) -> SetStraightSpeak
    void EnableRoadCondition(int,boolean) -> EnableRoadCondition
    void SetRouteSpec(int,boolean) -> SetRouteSpec
    void CancelCalcRoute(int,int) -> CancelCalcRoute
    boolean SetTrackData(int,android.os.Bundle) -> SetTrackData
    boolean GetAvoidInfo(int) -> GetAvoidInfo
    java.lang.String GetAvoidTips(int) -> GetAvoidTips
    boolean GetRouteTollMode(int,int) -> GetRouteTollMode
    boolean ManualPlaySound(int) -> ManualPlaySound
    boolean GetRouteData(int,android.os.Bundle) -> GetRouteData
    boolean StartRouteCruise(int) -> StartRouteCruise
    boolean StopRouteCruise(int) -> StopRouteCruise
    boolean SetCruiseSetting(int,android.os.Bundle) -> SetCruiseSetting
    boolean SetIsMrslRoute(int,boolean,java.lang.String) -> SetIsMrslRoute
    boolean SetNaviPVStat(int,boolean) -> SetNaviPVStat
    boolean SetRoutePlanStatistcsUrl(int,java.lang.String) -> SetRoutePlanStatistcsUrl
com.baidu.navisdk.jni.nativeif.JNINaviManager -> com.baidu.navisdk.jni.nativeif.JNINaviManager:
    int initNaviManager(java.lang.Object,int[]) -> initNaviManager
    int uninitNaviManager(int) -> uninitNaviManager
    int getSubSysHandle(int,int,int[]) -> getSubSysHandle
    int reloadNaviManager(int,java.lang.String) -> reloadNaviManager
    int reInitSearchEngine(int,java.lang.Object) -> reInitSearchEngine
    void initNaviStatistics(int) -> initNaviStatistics
    void uninitNaviStatistics() -> uninitNaviStatistics
    int initBaseManager(java.lang.Object,int[]) -> initBaseManager
    void uninitBaseManager(int) -> uninitBaseManager
    int initGuidanceManager(java.lang.Object,int[]) -> initGuidanceManager
    void uninitGuidanceManager(int) -> uninitGuidanceManager
com.baidu.navisdk.jni.nativeif.JNISearchControl -> com.baidu.navisdk.jni.nativeif.JNISearchControl:
    int initSugSubSys(int,int) -> initSugSubSys
    int releaseSugSubSys(int) -> releaseSugSubSys
    int getInputSug(int,android.os.Bundle,java.util.ArrayList) -> getInputSug
    int getTopDistrict(int,android.os.Bundle) -> getTopDistrict
    int getChildDistrict(int,int,java.util.ArrayList) -> getChildDistrict
    int getParentDistrict(int,int,android.os.Bundle) -> getParentDistrict
    int getDistrictInfoById(int,int,android.os.Bundle) -> getDistrictInfoById
    int searchByName(int,android.os.Bundle,java.util.ArrayList) -> searchByName
    int searchByFather(int,android.os.Bundle,int[],java.util.ArrayList) -> searchByFather
    int searchByCircle(int,android.os.Bundle,java.util.ArrayList) -> searchByCircle
    int updatePoiCache(int,android.os.Bundle) -> updatePoiCache
    int updatePoiCacheWithList(int,java.util.ArrayList) -> updatePoiCacheWithList
    int UpdateFavPoiCache(int,java.util.ArrayList,int) -> UpdateFavPoiCache
    int updateBkgCache(int,java.util.ArrayList,int) -> updateBkgCache
    int clearPoiCache(int) -> clearPoiCache
    int clearBkgCache(int) -> clearBkgCache
    int getDistrictInfoByPoint(int,android.os.Bundle,android.os.Bundle) -> getDistrictInfoByPoint
    int getNearestPoiByPoint(int,android.os.Bundle,android.os.Bundle) -> getNearestPoiByPoint
    int cancelQuery(int) -> cancelQuery
com.baidu.navisdk.model.AddressSettingModel -> com.baidu.navisdk.model.AddressSettingModel:
    java.lang.String DEFAULT_NAME -> DEFAULT_NAME
    java.lang.String HOME_ADDR_LONGITUDE -> HOME_ADDR_LONGITUDE
    java.lang.String HOME_ADDR_LATITUDE -> HOME_ADDR_LATITUDE
    java.lang.String HOME_ADDR_ADDRESS -> HOME_ADDR_ADDRESS
    java.lang.String HOME_ADDR_NAME -> HOME_ADDR_NAME
    java.lang.String COMP_ADDR_LONGITUDE -> COMP_ADDR_LONGITUDE
    java.lang.String COMP_ADDR_LATITUDE -> COMP_ADDR_LATITUDE
    java.lang.String COMP_ADDR_ADDRESS -> COMP_ADDR_ADDRESS
    java.lang.String COMP_ADDR_NAME -> COMP_ADDR_NAME
    boolean setHomeAddress(android.content.Context,java.lang.String,java.lang.String,int,int) -> setHomeAddress
    boolean setCompAddress(android.content.Context,java.lang.String,java.lang.String,int,int) -> setCompAddress
    boolean removeCompAddress(android.content.Context) -> removeCompAddress
    boolean removeHomeAddress(android.content.Context) -> removeHomeAddress
    int getCompLon(android.content.Context) -> getCompLon
    int getCompLat(android.content.Context) -> getCompLat
    java.lang.String getCompAddress(android.content.Context) -> getCompAddress
    java.lang.String getCompName(android.content.Context) -> getCompName
    int getHomeLon(android.content.Context) -> getHomeLon
    int getHomeLat(android.content.Context) -> getHomeLat
    java.lang.String getHomeAddress(android.content.Context) -> getHomeAddress
    java.lang.String getHomeName(android.content.Context) -> getHomeName
    boolean hasSetCompAddr(android.content.Context) -> hasSetCompAddr
    boolean hasSetHomeAddr(android.content.Context) -> hasSetHomeAddr
    com.baidu.navisdk.model.datastruct.RoutePlanNode getCompAddrNode(android.content.Context) -> getCompAddrNode
    com.baidu.navisdk.model.datastruct.RoutePlanNode getHomeAddrNode(android.content.Context) -> getHomeAddrNode
    boolean setHomeAddress(android.content.Context,com.baidu.navisdk.model.datastruct.RoutePlanNode) -> setHomeAddress
    boolean setCompAddress(android.content.Context,com.baidu.navisdk.model.datastruct.RoutePlanNode) -> setCompAddress
com.baidu.navisdk.model.BaseModel -> com.baidu.navisdk.model.BaseModel:
    void OnCommand() -> OnCommand
    void DumpMemory() -> DumpMemory
    void Release() -> Release
com.baidu.navisdk.model.CommonToolModel -> com.baidu.navisdk.model.CommonToolModel:
    void DumpMemory() -> DumpMemory
    void OnCommand() -> OnCommand
    void Release() -> Release
com.baidu.navisdk.model.GeoLocateModel -> com.baidu.navisdk.model.GeoLocateModel:
    void DumpMemory() -> DumpMemory
    void OnCommand() -> OnCommand
    void Release() -> Release
com.baidu.navisdk.model.MainMapModel -> com.baidu.navisdk.model.MainMapModel:
    boolean bFirstShowLoc -> bFirstShowLoc
    int mCurLongitude -> mCurLongitude
    int mCurLatitude -> mCurLatitude
    int mCurLocMode -> mCurLocMode
    int mLastLocMode -> mLastLocMode
    int mFirstAutoLocMode -> mFirstAutoLocMode
    boolean bFirstLoc -> bFirstLoc
    double mLastLongitude -> mLastLongitude
    double mLastLatitude -> mLastLatitude
    int mLastAngle -> mLastAngle
    int mScreenRotation -> mScreenRotation
    boolean mbFirstMapviewContent -> mbFirstMapviewContent
    boolean haveSensor -> haveSensor
    float mAngleX -> mAngleX
    float mAngleY -> mAngleY
    float mAngleZ -> mAngleZ
    com.baidu.navisdk.model.MainMapModel mInstance -> mInstance
    com.baidu.navisdk.model.MainMapModel getInstance() -> getInstance
    int getNextLocMode() -> getNextLocMode
    int getCurLocMode() -> getCurLocMode
    int setLocMode(int) -> setLocMode
    int changeToNextLocMode() -> changeToNextLocMode
    void OnCommand() -> OnCommand
    void DumpMemory() -> DumpMemory
    void Release() -> Release
com.baidu.navisdk.model.NaviDataEngine -> com.baidu.navisdk.model.NaviDataEngine:
    java.util.Map mModelList -> mModelList
    com.baidu.navisdk.model.NaviDataEngine me -> me
    com.baidu.navisdk.model.NaviDataEngine getInstance() -> getInstance
    void destory() -> destory
    void release() -> release
    com.baidu.navisdk.model.BaseModel instanceModel(java.lang.String) -> instanceModel
    void createModel(java.lang.String) -> createModel
    void removeModel(java.lang.String) -> removeModel
    com.baidu.navisdk.model.BaseModel getModel(java.lang.String) -> getModel
    void dumpMemory(java.lang.String) -> dumpMemory
    void dumpAllMemory() -> dumpAllMemory
    void onCommand(java.lang.String,java.lang.String) -> onCommand
com.baidu.navisdk.model.NaviHistoryModel -> com.baidu.navisdk.model.NaviHistoryModel:
    java.lang.String PLACE_NAME -> PLACE_NAME
    java.lang.String PLACE_DESCRIPTION -> PLACE_DESCRIPTION
    java.lang.String PLACE_FROM -> PLACE_FROM
    java.lang.String PLACE_LATITUDE -> PLACE_LATITUDE
    java.lang.String PLACE_LONGITUDE -> PLACE_LONGITUDE
    android.net.Uri sUri -> sUri
    android.content.ContentResolver mContentResolver -> mContentResolver
    com.baidu.navisdk.model.NaviHistoryModel mInstance -> mInstance
    com.baidu.navisdk.model.NaviHistoryModel getInstance(android.content.Context) -> getInstance
    boolean addNaviHistory(com.baidu.navisdk.model.datastruct.RoutePlanNode) -> addNaviHistory
    boolean deleteNaviHistory(com.baidu.navisdk.model.datastruct.RoutePlanNode) -> deleteNaviHistory
    int getNaviHistories(java.util.ArrayList,int) -> getNaviHistories
com.baidu.navisdk.model.NaviProvider -> com.baidu.navisdk.model.NaviProvider:
    java.lang.String AUTHORITY -> AUTHORITY
    android.net.Uri SEARCH_HISTORY_URI -> SEARCH_HISTORY_URI
    android.net.Uri ROUTE_PLAN_HISTORY_URI -> ROUTE_PLAN_HISTORY_URI
    android.net.Uri CONTINUE_NAVI_HISTORY_URI -> CONTINUE_NAVI_HISTORY_URI
    int SEARCH_HISTORY -> SEARCH_HISTORY
    int ROUTE_PLAN_HISTORY -> ROUTE_PLAN_HISTORY
    int CONTINUE_NAVI_HISTORY -> CONTINUE_NAVI_HISTORY
    android.content.UriMatcher sUriMatcher -> sUriMatcher
    com.baidu.navisdk.model.NaviProvider$SQLiteHelper mSQLiteHelper -> mSQLiteHelper
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    java.lang.String getTableName(android.net.Uri) -> getTableName
com.baidu.navisdk.model.NaviProvider$SQLiteHelper -> com.baidu.navisdk.model.NaviProvider$SQLiteHelper:
    com.baidu.navisdk.model.NaviProvider this$0 -> this$0
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void createTable(android.database.sqlite.SQLiteDatabase) -> createTable
com.baidu.navisdk.model.PoiSearchModel -> com.baidu.navisdk.model.PoiSearchModel:
    java.util.ArrayList mPoiList -> mPoiList
    java.util.ArrayList mSugList -> mSugList
    com.baidu.navisdk.model.datastruct.SearchPoi mAntiGeoPoi -> mAntiGeoPoi
    com.baidu.navisdk.model.datastruct.SearchPoi mMapSearchPoi -> mMapSearchPoi
    com.baidu.nplatform.comapi.basestruct.GeoPoint mAntiGeoPoint -> mAntiGeoPoint
    com.baidu.navisdk.model.datastruct.SearchPoi mSpaceSearchPoi -> mSpaceSearchPoi
    void DumpMemory() -> DumpMemory
    void OnCommand() -> OnCommand
    void Release() -> Release
    void setPoiList(java.util.ArrayList) -> setPoiList
    java.util.ArrayList getPoiList() -> getPoiList
    void setSugList(java.util.ArrayList) -> setSugList
    java.util.ArrayList getSugList() -> getSugList
    void setAntiGeoPoi(com.baidu.navisdk.model.datastruct.SearchPoi) -> setAntiGeoPoi
    com.baidu.navisdk.model.datastruct.SearchPoi getAntiGeoPoi() -> getAntiGeoPoi
    void setAntiGeoPoint(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> setAntiGeoPoint
    com.baidu.nplatform.comapi.basestruct.GeoPoint getAntiGeoPoint() -> getAntiGeoPoint
    com.baidu.navisdk.model.datastruct.SearchPoi getMapSearchPoi() -> getMapSearchPoi
    void setMapSearchPoi(com.baidu.navisdk.model.datastruct.SearchPoi) -> setMapSearchPoi
    void setSpaceSearchPoi(com.baidu.navisdk.model.datastruct.SearchPoi) -> setSpaceSearchPoi
    com.baidu.navisdk.model.datastruct.SearchPoi getSpaceSearchPoi() -> getSpaceSearchPoi
com.baidu.navisdk.model.RouteGuideModel -> com.baidu.navisdk.model.RouteGuideModel:
    void OnCommand() -> OnCommand
    void DumpMemory() -> DumpMemory
    void Release() -> Release
com.baidu.navisdk.model.RoutePlanModel -> com.baidu.navisdk.model.RoutePlanModel:
    java.lang.String TAG -> TAG
    int MSG_AVOID_TRAFFICJAM_ENABLE -> MSG_AVOID_TRAFFICJAM_ENABLE
    int mDistance -> mDistance
    int mTime -> mTime
    int mNodeNum -> mNodeNum
    int mRoutePlanMode -> mRoutePlanMode
    java.util.ArrayList mRouteList -> mRouteList
    java.util.ArrayList mCallBackList -> mCallBackList
    java.util.ArrayList mRoutePlanNodeList -> mRoutePlanNodeList
    com.baidu.navisdk.model.datastruct.PointSelectNode mPointSelectNode -> mPointSelectNode
    boolean sIsSelectNode -> sIsSelectNode
    java.util.ArrayList sNavNodeList -> sNavNodeList
    int mFirstTurnType -> mFirstTurnType
    int mFirstRemainDist -> mFirstRemainDist
    java.lang.String mFirstRoadName -> mFirstRoadName
    com.baidu.navisdk.model.RoutePlanModel$IAvoidTrafficjamEnableListener mAvoidTrafficjamEnableListener -> mAvoidTrafficjamEnableListener
    java.lang.Thread mDistrictThread -> mDistrictThread
    android.os.Handler mHandler -> mHandler
    void addCallBack(com.baidu.navisdk.model.RoutePlanModel$IRouteResultCallBack) -> addCallBack
    void removeCallBack(com.baidu.navisdk.model.RoutePlanModel$IRouteResultCallBack) -> removeCallBack
    java.lang.String getDistance() -> getDistance
    java.lang.String getTotalTime() -> getTotalTime
    int getNodeNum() -> getNodeNum
    java.util.ArrayList getRouteNodeData() -> getRouteNodeData
    void clearRouteResult() -> clearRouteResult
    void callBackAll() -> callBackAll
    void parseRouteResult(android.content.Context,android.os.Bundle,int) -> parseRouteResult
    void clearRouteInput() -> clearRouteInput
    void setRouteInput(java.util.ArrayList) -> setRouteInput
    java.util.ArrayList getRouteInput() -> getRouteInput
    int getRoutePlanMode() -> getRoutePlanMode
    java.lang.String getStartName(android.content.Context,boolean) -> getStartName
    java.lang.String getEndName(android.content.Context,boolean) -> getEndName
    com.baidu.navisdk.model.datastruct.RoutePlanNode getEndNode() -> getEndNode
    com.baidu.navisdk.model.datastruct.RoutePlanNode getStartNode() -> getStartNode
    boolean getAvoidTrafficjamEnable() -> getAvoidTrafficjamEnable
    void cancelDistrictThread() -> cancelDistrictThread
    void setAvoidTrafficjamEnableListener(com.baidu.navisdk.model.RoutePlanModel$IAvoidTrafficjamEnableListener) -> setAvoidTrafficjamEnableListener
    java.lang.String getNodeName(android.content.Context,com.baidu.navisdk.model.datastruct.RoutePlanNode,boolean) -> getNodeName
    void DumpMemory() -> DumpMemory
    void OnCommand() -> OnCommand
    void Release() -> Release
    com.baidu.navisdk.model.datastruct.PointSelectNode getPointSelectNode() -> getPointSelectNode
    com.baidu.navisdk.model.datastruct.RoutePlanNode getRoutePlanNode() -> getRoutePlanNode
    void setPointSelectNode(com.baidu.navisdk.model.datastruct.PointSelectNode) -> setPointSelectNode
    void setPointSelectNode(com.baidu.navisdk.model.datastruct.RoutePlanNode) -> setPointSelectNode
    void setPointSelectNode(com.baidu.navisdk.model.datastruct.RoutePlanNode,int) -> setPointSelectNode
    void setPointSelectNode(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> setPointSelectNode
    void setPointSelectNode(com.baidu.nplatform.comapi.basestruct.GeoPoint,int,java.lang.String,java.lang.String) -> setPointSelectNode
    void setPointSelectNode(com.baidu.navisdk.model.datastruct.SearchPoi) -> setPointSelectNode
    void setPointSelectNode(java.util.ArrayList,com.baidu.navisdk.model.datastruct.SearchPoi) -> setPointSelectNode
    void setPointSelectNode(int,com.baidu.navisdk.model.datastruct.SearchPoi,java.util.ArrayList) -> setPointSelectNode
    void setPointSelectNode(int,com.baidu.navisdk.model.datastruct.SearchPoi) -> setPointSelectNode
    void setPointSelectNode(int,int,int,java.lang.String,java.lang.String) -> setPointSelectNode
    void setPointSelectNode(int,com.baidu.nplatform.comapi.basestruct.GeoPoint,int,java.lang.String,java.lang.String) -> setPointSelectNode
    void setPointSelectNode(int,int,int,int,java.lang.String,java.lang.String) -> setPointSelectNode
    void setPointSelectNodeInfo(int,java.lang.String) -> setPointSelectNodeInfo
    boolean isSelectNode() -> isSelectNode
    void clearSelectNode() -> clearSelectNode
    com.baidu.navisdk.model.datastruct.RoutePlanNode changeToRoutePlanNode(com.baidu.navisdk.comapi.poisearch.BNPoiSearcherObserver$AntiGeoArg) -> changeToRoutePlanNode
    com.baidu.navisdk.model.datastruct.RoutePlanNode changeToRoutePlanNode(com.baidu.navisdk.model.datastruct.SearchPoi) -> changeToRoutePlanNode
    int getTotalDistanceInt() -> getTotalDistanceInt
    int getTotalTimeInt() -> getTotalTimeInt
    int getFirstTurnType() -> getFirstTurnType
    int getFirstRemainDist() -> getFirstRemainDist
    java.lang.String getFirstRoadName() -> getFirstRoadName
    com.baidu.navisdk.model.RoutePlanModel$IAvoidTrafficjamEnableListener access$000(com.baidu.navisdk.model.RoutePlanModel) -> access$000
    android.os.Handler access$100(com.baidu.navisdk.model.RoutePlanModel) -> access$100
com.baidu.navisdk.model.RoutePlanModel$1 -> com.baidu.navisdk.model.RoutePlanModel$1:
    com.baidu.navisdk.model.RoutePlanModel this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.model.RoutePlanModel$2 -> com.baidu.navisdk.model.RoutePlanModel$2:
    java.util.ArrayList val$navNodeList -> val$navNodeList
    com.baidu.navisdk.model.RoutePlanModel this$0 -> this$0
    void run() -> run
com.baidu.navisdk.model.RoutePlanModel$IAvoidTrafficjamEnableListener -> com.baidu.navisdk.model.RoutePlanModel$IAvoidTrafficjamEnableListener:
    void onAvoidTrafficjamEnable(boolean) -> onAvoidTrafficjamEnable
com.baidu.navisdk.model.RoutePlanModel$IRouteResultCallBack -> com.baidu.navisdk.model.RoutePlanModel$IRouteResultCallBack:
    void onRouteResultChanged() -> onRouteResultChanged
com.baidu.navisdk.model.datastruct.ApkInfo -> com.baidu.navisdk.model.datastruct.ApkInfo:
    java.lang.String mUptime -> mUptime
    java.lang.String mApkVer -> mApkVer
    int mApkSize -> mApkSize
    java.lang.String mInfo -> mInfo
com.baidu.navisdk.model.datastruct.CheckNewInfo -> com.baidu.navisdk.model.datastruct.CheckNewInfo:
    boolean mNewApp -> mNewApp
    boolean mNewData -> mNewData
    int mCount -> mCount
com.baidu.navisdk.model.datastruct.DistrictInfo -> com.baidu.navisdk.model.datastruct.DistrictInfo:
    int DISTRICT_TYPE_INVALID -> DISTRICT_TYPE_INVALID
    int DISTRICT_TYPE_WORLD -> DISTRICT_TYPE_WORLD
    int DISTRICT_TYPE_NATION -> DISTRICT_TYPE_NATION
    int DISTRICT_TYPE_PROVINCE -> DISTRICT_TYPE_PROVINCE
    int DISTRICT_TYPE_CITY -> DISTRICT_TYPE_CITY
    int DISTRICT_TYPE_COUNTY -> DISTRICT_TYPE_COUNTY
    int DISTRICT_ID_INVALID -> DISTRICT_ID_INVALID
    int mType -> mType
    int mId -> mId
    java.lang.String mName -> mName
    com.baidu.nplatform.comapi.basestruct.GeoPoint mPoint -> mPoint
    int mChildCount -> mChildCount
    void copy(com.baidu.navisdk.model.datastruct.DistrictInfo) -> copy
com.baidu.navisdk.model.datastruct.EngineCommonConfig -> com.baidu.navisdk.model.datastruct.EngineCommonConfig:
    int mSearchNetMode -> mSearchNetMode
    int mGuidanceNetMode -> mGuidanceNetMode
    int mMapEngineNetMode -> mMapEngineNetMode
    int mOtherEngineNetMode -> mOtherEngineNetMode
    java.lang.String mStrPath -> mStrPath
    java.lang.String mStrProductName -> mStrProductName
    java.lang.String mRootPath -> mRootPath
    java.lang.String mStrMapPath -> mStrMapPath
    java.lang.String mStrAppFolderName -> mStrAppFolderName
com.baidu.navisdk.model.datastruct.LocData -> com.baidu.navisdk.model.datastruct.LocData:
    double LOCDEFAULT -> LOCDEFAULT
    double latitude -> latitude
    double longitude -> longitude
    float speed -> speed
    float direction -> direction
    float accuracy -> accuracy
    int satellitesNum -> satellitesNum
    double altitude -> altitude
    int type -> type
    com.baidu.navisdk.model.datastruct.LocData clone() -> clone
    java.lang.String toString() -> toString
    java.lang.String toLocationOverlayJsonString(boolean) -> toLocationOverlayJsonString
    java.lang.String toLocationOverlayJsonStringNoDir() -> toLocationOverlayJsonStringNoDir
    java.lang.Object clone() -> clone
com.baidu.navisdk.model.datastruct.PointSelectNode -> com.baidu.navisdk.model.datastruct.PointSelectNode:
    long serialVersionUID -> serialVersionUID
    int mPointIndex -> mPointIndex
    java.lang.String mPointDescription -> mPointDescription
    java.lang.String getPointDescription() -> getPointDescription
    void setPointDescription(java.lang.String) -> setPointDescription
    int getPointIndex() -> getPointIndex
    void setPointIndex(int) -> setPointIndex
    com.baidu.navisdk.model.datastruct.RoutePlanNode getRoutePlanNode() -> getRoutePlanNode
    void setRoutePlanNode(com.baidu.navisdk.model.datastruct.RoutePlanNode) -> setRoutePlanNode
    void setRoutePlanNode(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> setRoutePlanNode
    void setRoutePlanNode(int,int,int,java.lang.String,java.lang.String) -> setRoutePlanNode
    void setRoutePlanNode(com.baidu.nplatform.comapi.basestruct.GeoPoint,int,java.lang.String,java.lang.String) -> setRoutePlanNode
    void setRoutePlanNode(com.baidu.nplatform.comapi.basestruct.GeoPoint,com.baidu.nplatform.comapi.basestruct.GeoPoint,int,java.lang.String,java.lang.String) -> setRoutePlanNode
    void setRoutePlanNode(com.baidu.navisdk.model.datastruct.SearchPoi) -> setRoutePlanNode
    void setRoutePlanNode(int,com.baidu.navisdk.model.datastruct.SearchPoi) -> setRoutePlanNode
    void setRoutePlanNode(int,com.baidu.navisdk.model.datastruct.SearchPoi,java.util.ArrayList) -> setRoutePlanNode
    void setRoutePlanNode(com.baidu.navisdk.model.datastruct.SearchPoi,java.util.ArrayList) -> setRoutePlanNode
    void clearSelectNode() -> clearSelectNode
com.baidu.navisdk.model.datastruct.RouteDetailSchemeNode -> com.baidu.navisdk.model.datastruct.RouteDetailSchemeNode:
    java.lang.String mSchemeName -> mSchemeName
    boolean mIsContainsToll -> mIsContainsToll
    boolean mIsChecked -> mIsChecked
com.baidu.navisdk.model.datastruct.RoutePlanNode -> com.baidu.navisdk.model.datastruct.RoutePlanNode:
    long serialVersionUID -> serialVersionUID
    int FROM_UNKNOWN -> FROM_UNKNOWN
    int FROM_MY_POSITION -> FROM_MY_POSITION
    int FROM_HOME -> FROM_HOME
    int FROM_COMPANY -> FROM_COMPANY
    int FROM_MAP_POINT -> FROM_MAP_POINT
    int FROM_POI -> FROM_POI
    int FROM_FAVORITE -> FROM_FAVORITE
    int FROM_NAVI_NEARBY_SEARCH -> FROM_NAVI_NEARBY_SEARCH
    java.lang.String mName -> mName
    java.lang.String mDescription -> mDescription
    com.baidu.nplatform.comapi.basestruct.GeoPoint mGeoPoint -> mGeoPoint
    com.baidu.nplatform.comapi.basestruct.GeoPoint mViewPoint -> mViewPoint
    int mFrom -> mFrom
    java.util.ArrayList mSubPosList -> mSubPosList
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    com.baidu.nplatform.comapi.basestruct.GeoPoint getGeoPoint() -> getGeoPoint
    void setGeoPoint(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> setGeoPoint
    com.baidu.nplatform.comapi.basestruct.GeoPoint getViewPoint() -> getViewPoint
    int getViewtLatitudeE6() -> getViewtLatitudeE6
    int getViewtLongitudeE6() -> getViewtLongitudeE6
    void setViewPoint(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> setViewPoint
    void setName(java.lang.String) -> setName
    void copy(com.baidu.navisdk.model.datastruct.RoutePlanNode) -> copy
    boolean isNodeSettedData() -> isNodeSettedData
    boolean isNodeIntegrated() -> isNodeIntegrated
    int getLatitudeE6() -> getLatitudeE6
    int getLongitudeE6() -> getLongitudeE6
    java.lang.String getName() -> getName
    int getFrom() -> getFrom
    void setFrom(int) -> setFrom
    java.lang.String toString() -> toString
    void setSubPosList(java.util.ArrayList) -> setSubPosList
    java.util.ArrayList getSubPosList() -> getSubPosList
    void clearSubPoiList() -> clearSubPoiList
com.baidu.navisdk.model.datastruct.RoutePlanResultItem -> com.baidu.navisdk.model.datastruct.RoutePlanResultItem:
    int mIconResId -> mIconResId
    java.lang.String mRouteNodeDesc -> mRouteNodeDesc
    java.lang.String mRouteNodeDescNight -> mRouteNodeDescNight
    java.lang.String mBubleDesc -> mBubleDesc
    int mLongitude -> mLongitude
    int mLatitude -> mLatitude
    int getIconResId() -> getIconResId
    java.lang.String getNodeDesc() -> getNodeDesc
    java.lang.String getNodeDescNight() -> getNodeDescNight
    java.lang.String getNextRoadName() -> getNextRoadName
    int getLongitude() -> getLongitude
    int getLatitude() -> getLatitude
com.baidu.navisdk.model.datastruct.RoutePlanTime -> com.baidu.navisdk.model.datastruct.RoutePlanTime:
    int hour -> hour
    int minute -> minute
    boolean valid -> valid
    int getHour() -> getHour
    void setHour(int) -> setHour
    int getMinute() -> getMinute
    void setMinute(int) -> setMinute
    void setValid(boolean) -> setValid
com.baidu.navisdk.model.datastruct.SearchCircle -> com.baidu.navisdk.model.datastruct.SearchCircle:
    com.baidu.nplatform.comapi.basestruct.GeoPoint mCenter -> mCenter
    int mRadius -> mRadius
com.baidu.navisdk.model.datastruct.SearchPoi -> com.baidu.navisdk.model.datastruct.SearchPoi:
    int POI_TYPE_NORMAL -> POI_TYPE_NORMAL
    int POI_TYPE_CITY_LIST -> POI_TYPE_CITY_LIST
    java.lang.String mName -> mName
    java.lang.String mAddress -> mAddress
    java.lang.String mPhone -> mPhone
    com.baidu.nplatform.comapi.basestruct.GeoPoint mGuidePoint -> mGuidePoint
    com.baidu.nplatform.comapi.basestruct.GeoPoint mViewPoint -> mViewPoint
    int mDistrictId -> mDistrictId
    int mType -> mType
    java.lang.String mStreetId -> mStreetId
    int mId -> mId
    void copy(com.baidu.navisdk.model.datastruct.SearchPoi) -> copy
com.baidu.navisdk.model.datastruct.SensorData -> com.baidu.navisdk.model.datastruct.SensorData:
    double accx -> accx
    double accy -> accy
    double accz -> accz
    double heading -> heading
    double pitch -> pitch
    double roll -> roll
    com.baidu.navisdk.model.datastruct.SensorData clone() -> clone
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.baidu.navisdk.model.datastruct.TrackListData -> com.baidu.navisdk.model.datastruct.TrackListData:
    java.lang.String mTrackKey -> mTrackKey
    java.lang.String mTrackName -> mTrackName
    java.lang.String mTrackStart -> mTrackStart
    java.lang.String mTrackEnd -> mTrackEnd
    java.lang.String mTrackMileage -> mTrackMileage
    java.lang.String mTrackTimeLength -> mTrackTimeLength
    java.lang.String mTrackTime -> mTrackTime
    java.lang.String mTrackSpeed -> mTrackSpeed
    java.lang.String toString() -> toString
com.baidu.navisdk.model.params.MsgDefine -> com.baidu.navisdk.model.params.MsgDefine:
    int MSG_TYPE_ZOOM_UPDATE -> MSG_TYPE_ZOOM_UPDATE
    int MSG_NAVI_STATUS_CHANGE -> MSG_NAVI_STATUS_CHANGE
    int MSG_NAVI_ROUTE_PLAN_RESULT -> MSG_NAVI_ROUTE_PLAN_RESULT
    int MSG_NAVI_SIMPLE_MAP_UPDATE -> MSG_NAVI_SIMPLE_MAP_UPDATE
    int MSG_NAVI_RASTER_EXP_MAP_SHOW -> MSG_NAVI_RASTER_EXP_MAP_SHOW
    int MSG_NAVI_RASTER_EXP_MAP_UPDATE -> MSG_NAVI_RASTER_EXP_MAP_UPDATE
    int MSG_NAVI_RASTER_EXP_MAP_HIDE -> MSG_NAVI_RASTER_EXP_MAP_HIDE
    int MSG_NAVI_ASSIST_ICON_SHOW -> MSG_NAVI_ASSIST_ICON_SHOW
    int MSG_NAVI_ASSIST_ICON_UPDATE -> MSG_NAVI_ASSIST_ICON_UPDATE
    int MSG_NAVI_ASSIST_ICON_HIDE -> MSG_NAVI_ASSIST_ICON_HIDE
    int MSG_NAVI_REMAIN_INFO_UPDATE -> MSG_NAVI_REMAIN_INFO_UPDATE
    int MSG_NAVI_ROAD_NAME_CHANGE -> MSG_NAVI_ROAD_NAME_CHANGE
    int MSG_NAVI_DIRECT_BOARD_SHOW -> MSG_NAVI_DIRECT_BOARD_SHOW
    int MSG_NAVI_DIRECT_BOARD_UPDATE -> MSG_NAVI_DIRECT_BOARD_UPDATE
    int MSG_NAVI_DIRECT_BOARD_HIDE -> MSG_NAVI_DIRECT_BOARD_HIDE
    int MSG_NAVI_HIDE_SIMPLE_GUIDE_INFO -> MSG_NAVI_HIDE_SIMPLE_GUIDE_INFO
    int MSG_NAVI_SHOW_SIMPLE_GUIDE_INFO -> MSG_NAVI_SHOW_SIMPLE_GUIDE_INFO
    int MSG_NAVI_HUD_UPDATE -> MSG_NAVI_HUD_UPDATE
    int MSG_NAVI_SYNC_OPERATION -> MSG_NAVI_SYNC_OPERATION
    int MSG_NAVI_GPS_STATUS_CHANGE -> MSG_NAVI_GPS_STATUS_CHANGE
    int MSG_NAVI_GPS_TRACK_PLAN_RESULT -> MSG_NAVI_GPS_TRACK_PLAN_RESULT
    int MSG_NAVI_DOWNLOAD_PROGRESS -> MSG_NAVI_DOWNLOAD_PROGRESS
    int MSG_NAVI_DOWNLOAD_ERROR -> MSG_NAVI_DOWNLOAD_ERROR
    int MSG_NAVI_DOWNLOAD_FINISH -> MSG_NAVI_DOWNLOAD_FINISH
    int MSG_NAVI_DOWNLOAD_START -> MSG_NAVI_DOWNLOAD_START
    int MSG_NAVI_DOWNLOAD_MD5_ERROR -> MSG_NAVI_DOWNLOAD_MD5_ERROR
    int MSG_NAVI_DOWNLOAD_REMOVE_TEMP_FILE -> MSG_NAVI_DOWNLOAD_REMOVE_TEMP_FILE
    int MSG_NAVI_UPDATE_PROGRESS -> MSG_NAVI_UPDATE_PROGRESS
    int MSG_NAVI_UPDATE_SUCCESS -> MSG_NAVI_UPDATE_SUCCESS
    int MSG_NAVI_UPDATE_START -> MSG_NAVI_UPDATE_START
    int MSG_NAVI_DOWNLOAD_APK_PROGRESS -> MSG_NAVI_DOWNLOAD_APK_PROGRESS
    int MSG_NAVI_DOWNLOAD_APK_SUCCESS -> MSG_NAVI_DOWNLOAD_APK_SUCCESS
    int MSG_NAVI_DOWNLOAD_APK_START -> MSG_NAVI_DOWNLOAD_APK_START
    int MSG_NAVI_DOWNLOAD_APK_FAIL -> MSG_NAVI_DOWNLOAD_APK_FAIL
    int MSG_NAVI_DOWNLOAD_APK_NET_ERROR -> MSG_NAVI_DOWNLOAD_APK_NET_ERROR
    int MSG_NAVI_CHECK_NEW_VER_SUCCESS -> MSG_NAVI_CHECK_NEW_VER_SUCCESS
    int MSG_NAVI_CHECK_NEW_VER_FAIL -> MSG_NAVI_CHECK_NEW_VER_FAIL
    int MSG_NAVI_CHECK_NEW_VER_NET_ERROR -> MSG_NAVI_CHECK_NEW_VER_NET_ERROR
    int MSG_NAVI_CHECK_DOWNLOAD_SUCCESS -> MSG_NAVI_CHECK_DOWNLOAD_SUCCESS
    int MSG_NAVI_CHECK_DOWNLOAD_FAIL -> MSG_NAVI_CHECK_DOWNLOAD_FAIL
    int MSG_NAVI_CHECK_DOWNLOAD_NET_ERROR -> MSG_NAVI_CHECK_DOWNLOAD_NET_ERROR
    int MSG_NAVI_TRAFFICLAYER_NEED_REFRESH -> MSG_NAVI_TRAFFICLAYER_NEED_REFRESH
    int MSG_NAVI_MAIN_AUXILIARY_UPDATE -> MSG_NAVI_MAIN_AUXILIARY_UPDATE
    int MSG_NAVI_CRUISE_YAW -> MSG_NAVI_CRUISE_YAW
    int MSG_NAVI_MAIN_AUXILIARY_HIDE -> MSG_NAVI_MAIN_AUXILIARY_HIDE
    int MSG_MAP_GLRENDER -> MSG_MAP_GLRENDER
    int MSG_PARAM_ANIMATION_FINISH -> MSG_PARAM_ANIMATION_FINISH
    int MSG_MAP_REQUEST_START -> MSG_MAP_REQUEST_START
    int MSG_MAP_REQUEST_END -> MSG_MAP_REQUEST_END
    int MSG_SYNC_CLOUDDATA -> MSG_SYNC_CLOUDDATA
    int MSG_APP_SAVESCREEN -> MSG_APP_SAVESCREEN
    int MSG_APP_SAVESCREEN_BUFFER -> MSG_APP_SAVESCREEN_BUFFER
    int MSG_APP_TRAJECTORY_SYNC_RESULT -> MSG_APP_TRAJECTORY_SYNC_RESULT
    int MSG_NAVI_VECTOR_EXPAND_MAP_SHOW -> MSG_NAVI_VECTOR_EXPAND_MAP_SHOW
    int MSG_NAVI_VECTOR_EXPAND_MAP_UPDATE -> MSG_NAVI_VECTOR_EXPAND_MAP_UPDATE
    int MSG_NAVI_VECTOR_EXPAND_MAP_HIDE -> MSG_NAVI_VECTOR_EXPAND_MAP_HIDE
com.baidu.navisdk.model.params.SqliteConstants -> com.baidu.navisdk.model.params.SqliteConstants:
    int DATABASE_VERSION -> DATABASE_VERSION
    java.lang.String DATABASE_NAME -> DATABASE_NAME
com.baidu.navisdk.model.params.SqliteConstants$ContinueNaviNodes -> com.baidu.navisdk.model.params.SqliteConstants$ContinueNaviNodes:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String NAME -> NAME
    java.lang.String DESCRIPTION -> DESCRIPTION
    java.lang.String POINT_LONGITUDE -> POINT_LONGITUDE
    java.lang.String POINT_LATITUDE -> POINT_LATITUDE
    java.lang.String FROM -> FROM
com.baidu.navisdk.model.params.SqliteConstants$NaviNode -> com.baidu.navisdk.model.params.SqliteConstants$NaviNode:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String COLUMNS_NODE_NAME -> COLUMNS_NODE_NAME
com.baidu.navisdk.model.params.SqliteConstants$RoutePlanHistory -> com.baidu.navisdk.model.params.SqliteConstants$RoutePlanHistory:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String NAME -> NAME
    java.lang.String DESCRIPTION -> DESCRIPTION
    java.lang.String POINT_LONGITUDE -> POINT_LONGITUDE
    java.lang.String POINT_LATITUDE -> POINT_LATITUDE
    java.lang.String FROM -> FROM
com.baidu.navisdk.model.params.SqliteConstants$SearchHistory -> com.baidu.navisdk.model.params.SqliteConstants$SearchHistory:
    java.lang.String TABLE_NAME -> TABLE_NAME
    java.lang.String INPUT_STRING -> INPUT_STRING
    java.lang.String CALLED_COUNT -> CALLED_COUNT
com.baidu.navisdk.model.params.TrafficParams -> com.baidu.navisdk.model.params.TrafficParams:
com.baidu.navisdk.model.params.TrafficParams$Action -> com.baidu.navisdk.model.params.TrafficParams$Action:
    com.baidu.navisdk.model.params.TrafficParams this$0 -> this$0
com.baidu.navisdk.model.params.TrafficParams$Const -> com.baidu.navisdk.model.params.TrafficParams$Const:
    java.lang.String ALA_API_URL -> ALA_API_URL
    com.baidu.navisdk.model.params.TrafficParams this$0 -> this$0
com.baidu.navisdk.model.params.TrafficParams$Key -> com.baidu.navisdk.model.params.TrafficParams$Key:
    java.lang.String ALA_REQUEST_PARAM_KEY_TN -> ALA_REQUEST_PARAM_KEY_TN
    java.lang.String ALA_REQUEST_PARAM_KEY_RES_NAME -> ALA_REQUEST_PARAM_KEY_RES_NAME
    java.lang.String ALA_REQUEST_PARAM_KEY_RES_QUERY -> ALA_REQUEST_PARAM_KEY_RES_QUERY
    java.lang.String ALA_REQUEST_PARAM_KEY_RES_ID -> ALA_REQUEST_PARAM_KEY_RES_ID
    com.baidu.navisdk.model.params.TrafficParams this$0 -> this$0
com.baidu.navisdk.model.params.UserCenterParams -> com.baidu.navisdk.model.params.UserCenterParams:
com.baidu.navisdk.model.params.UserCenterParams$Action -> com.baidu.navisdk.model.params.UserCenterParams$Action:
    int DAY_NIGHT_MODE_NIGHT -> DAY_NIGHT_MODE_NIGHT
    com.baidu.navisdk.model.params.UserCenterParams this$0 -> this$0
com.baidu.navisdk.model.params.UserCenterParams$Const -> com.baidu.navisdk.model.params.UserCenterParams$Const:
    com.baidu.navisdk.model.params.UserCenterParams this$0 -> this$0
com.baidu.navisdk.model.params.UserCenterParams$Key -> com.baidu.navisdk.model.params.UserCenterParams$Key:
    java.lang.String FAVORITY_SYN_TIME -> FAVORITY_SYN_TIME
    java.lang.String TRACK_SYN_TIME -> TRACK_SYN_TIME
    com.baidu.navisdk.model.params.UserCenterParams this$0 -> this$0
com.baidu.navisdk.ui.routeguide.BNavConfig -> com.baidu.navisdk.ui.routeguide.BNavConfig:
    java.lang.String KEY_ROUTEGUIDE_VIEW_MODE -> KEY_ROUTEGUIDE_VIEW_MODE
    java.lang.String KEY_ROUTEGUIDE_CALCROUTE_DONE -> KEY_ROUTEGUIDE_CALCROUTE_DONE
    java.lang.String KEY_ROUTEGUIDE_START_X -> KEY_ROUTEGUIDE_START_X
    java.lang.String KEY_ROUTEGUIDE_START_Y -> KEY_ROUTEGUIDE_START_Y
    java.lang.String KEY_ROUTEGUIDE_END_X -> KEY_ROUTEGUIDE_END_X
    java.lang.String KEY_ROUTEGUIDE_END_Y -> KEY_ROUTEGUIDE_END_Y
    java.lang.String KEY_ROUTEGUIDE_START_NAME -> KEY_ROUTEGUIDE_START_NAME
    java.lang.String KEY_ROUTEGUIDE_END_NAME -> KEY_ROUTEGUIDE_END_NAME
    java.lang.String KEY_ROUTEGUIDE_CALCROUTE_MODE -> KEY_ROUTEGUIDE_CALCROUTE_MODE
    java.lang.String KEY_ROUTEGUIDE_LOCATE_MODE -> KEY_ROUTEGUIDE_LOCATE_MODE
    java.lang.String KEY_ROUTEGUIDE_MENU_TYPE -> KEY_ROUTEGUIDE_MENU_TYPE
    java.lang.String KEY_ROUTEGUIDE_NET_FRESH_ENABLE -> KEY_ROUTEGUIDE_NET_FRESH_ENABLE
    java.lang.String KEY_ROUTEGUIDE_ROAD_CONDITION_ENABLE -> KEY_ROUTEGUIDE_ROAD_CONDITION_ENABLE
    int INVALID_INT_VALUE -> INVALID_INT_VALUE
    java.lang.String INVALID_STRING_VALUE -> INVALID_STRING_VALUE
    int pRGViewMode -> pRGViewMode
    int pRGCalcDone -> pRGCalcDone
    int pRGStartX -> pRGStartX
    int pRGStartY -> pRGStartY
    int pRGEndX -> pRGEndX
    int pRGEndY -> pRGEndY
    java.lang.String pRGStartName -> pRGStartName
    java.lang.String pRGEndName -> pRGEndName
    int pRGCalcRouteMode -> pRGCalcRouteMode
    int pRGLocateMode -> pRGLocateMode
    int pRGMenuType -> pRGMenuType
    boolean pRGNetRefreshEnable -> pRGNetRefreshEnable
    boolean pRGRoadConditionEnable -> pRGRoadConditionEnable
    void clear() -> clear
com.baidu.navisdk.ui.routeguide.BNavigator -> com.baidu.navisdk.ui.routeguide.BNavigator:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    android.app.Activity b -> b
    android.content.Context c -> c
    com.baidu.navisdk.ui.routeguide.IBNavigatorListener d -> d
    int VIEW_INDEX_MAPVIEW -> VIEW_INDEX_MAPVIEW
    int VIEW_INDEX_ROUTEGUIDE_UI -> VIEW_INDEX_ROUTEGUIDE_UI
    int VIEW_INDEX_MENU -> VIEW_INDEX_MENU
    int VIEW_INDEX_SPACE_SEARCH -> VIEW_INDEX_SPACE_SEARCH
    int MAP_ZOOM_DELAY -> MAP_ZOOM_DELAY
    android.widget.FrameLayout e -> e
    com.baidu.nplatform.comapi.map.MapGLSurfaceView f -> f
    int CONFIG_VIEW_MODE_INFLATE_MAP -> CONFIG_VIEW_MODE_INFLATE_MAP
    int CONFIG_VIEW_MODE_NOT_INFLATE_MAP -> CONFIG_VIEW_MODE_NOT_INFLATE_MAP
    int CONFIG_CLACROUTE_DONE -> CONFIG_CLACROUTE_DONE
    int CONFIG_CLACROUTE_NOT -> CONFIG_CLACROUTE_NOT
    boolean g -> g
    android.os.Handler h -> h
    android.content.BroadcastReceiver i -> i
    android.content.BroadcastReceiver j -> j
    com.baidu.navisdk.comapi.commontool.BNDayNightChangedObserver k -> k
    com.baidu.navisdk.comapi.geolocate.ISensorDataChangeListener l -> l
    android.location.GpsStatus$NmeaListener m -> m
    com.baidu.navisdk.comapi.geolocate.ILocationChangeListener n -> n
    com.baidu.navisdk.comapi.routeplan.IRouteResultObserver o -> o
    com.baidu.navisdk.ui.routeguide.BNavigator getInstance() -> getInstance
    void destory() -> destory
    void a() -> a
    android.view.View init(android.app.Activity,android.os.Bundle,com.baidu.nplatform.comapi.map.MapGLSurfaceView) -> init
    void setListener(com.baidu.navisdk.ui.routeguide.IBNavigatorListener) -> setListener
    android.view.View getView() -> getView
    android.content.Context getContext() -> getContext
    boolean startNav() -> startNav
    void a(android.os.Bundle) -> a
    void a(com.baidu.nplatform.comapi.map.MapGLSurfaceView) -> a
    void b(com.baidu.nplatform.comapi.map.MapGLSurfaceView) -> b
    void b() -> b
    void updateCompassLocation(android.content.Context) -> updateCompassLocation
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
    void l() -> l
    void m() -> m
    void n() -> n
    void o() -> o
    void p() -> p
    void q() -> q
    void r() -> r
    void s() -> s
    void t() -> t
    void u() -> u
    void v() -> v
    void quitNav() -> quitNav
    void update(com.baidu.navisdk.comapi.base.BNSubject,int,int,java.lang.Object) -> update
    void w() -> w
    void onBackPressed() -> onBackPressed
    void resume() -> resume
    void pause() -> pause
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void a(boolean) -> a
    void x() -> x
    void onGpsServiceProcess(android.os.Message) -> onGpsServiceProcess
    void onGpsStatusChange(android.os.Message) -> onGpsStatusChange
    void onRoutePlanYawing(android.os.Message) -> onRoutePlanYawing
    void onReRouteComplete(android.os.Message) -> onReRouteComplete
    void onArriveDestNear(android.os.Message) -> onArriveDestNear
    void onArriveDest(android.os.Message) -> onArriveDest
    void onSimpleGuideInfoShow(android.os.Message) -> onSimpleGuideInfoShow
    void onSimpleGuideInfoUpdate(android.os.Message) -> onSimpleGuideInfoUpdate
    void onSimpleGuideInfoHide(android.os.Message) -> onSimpleGuideInfoHide
    void onRemainDistTimeUpdate(android.os.Message) -> onRemainDistTimeUpdate
    void onAssistInfoShow(android.os.Message) -> onAssistInfoShow
    void onAssistInfoUpdate(android.os.Message) -> onAssistInfoUpdate
    void onAssistInfoHide(android.os.Message) -> onAssistInfoHide
    void onRasterExpandMapShow(android.os.Message) -> onRasterExpandMapShow
    void onRasterExpandMapUpdate(android.os.Message) -> onRasterExpandMapUpdate
    void onRasterExpandMapHide(android.os.Message) -> onRasterExpandMapHide
    void onDirectBoardShow(android.os.Message) -> onDirectBoardShow
    void onDirectBoardUpdate(android.os.Message) -> onDirectBoardUpdate
    void onDirectBoardHide(android.os.Message) -> onDirectBoardHide
    void onCurRoadNameUpdate(android.os.Message) -> onCurRoadNameUpdate
    void onHUDUpdate(android.os.Message) -> onHUDUpdate
    void onVectorExpandMapShow(android.os.Message) -> onVectorExpandMapShow
    void onVectorExpandMapUpdate(android.os.Message) -> onVectorExpandMapUpdate
    void onVectorExpandMapHide(android.os.Message) -> onVectorExpandMapHide
    void a(android.os.Message) -> a
    void b(android.os.Message) -> b
    void c(android.os.Message) -> c
    void d(android.os.Message) -> d
    void e(android.os.Message) -> e
    void f(android.os.Message) -> f
    void onExitDialogTimeOut() -> onExitDialogTimeOut
    void onExitDialogConfirm() -> onExitDialogConfirm
    void onZoomBtnClick() -> onZoomBtnClick
    void onRouteDescWindowShow() -> onRouteDescWindowShow
    void onRouteDescWindowHide() -> onRouteDescWindowHide
    void onEnlargeRoadMapImgTouch() -> onEnlargeRoadMapImgTouch
    void onEnlargeRoadMapShowStart() -> onEnlargeRoadMapShowStart
    void onEnlargeRoadMapShowEnd() -> onEnlargeRoadMapShowEnd
    void onEnlargeRoadMapHideStart() -> onEnlargeRoadMapHideStart
    void onEnlargeRoadMapHideEnd() -> onEnlargeRoadMapHideEnd
    void onMenuSelectedRoutePlan() -> onMenuSelectedRoutePlan
    void onMenuSelectedRouteDetail() -> onMenuSelectedRouteDetail
    void y() -> y
    void onRGSyncOperation(android.os.Message) -> onRGSyncOperation
    void switchRouteViewMode() -> switchRouteViewMode
    void turnOnEnlargeRoadMap() -> turnOnEnlargeRoadMap
    void turnOffEnlargeRoadMap() -> turnOffEnlargeRoadMap
    android.widget.FrameLayout a(com.baidu.navisdk.ui.routeguide.BNavigator) -> a
    android.content.Context b(com.baidu.navisdk.ui.routeguide.BNavigator) -> b
    android.os.Handler c(com.baidu.navisdk.ui.routeguide.BNavigator) -> c
    void a(com.baidu.navisdk.ui.routeguide.BNavigator,boolean) -> a
    com.baidu.navisdk.ui.routeguide.IBNavigatorListener d(com.baidu.navisdk.ui.routeguide.BNavigator) -> d
    void e(com.baidu.navisdk.ui.routeguide.BNavigator) -> e
com.baidu.navisdk.ui.routeguide.BNavigator$1 -> com.baidu.navisdk.ui.routeguide.BNavigator$1:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void onGlobalLayout() -> onGlobalLayout
com.baidu.navisdk.ui.routeguide.BNavigator$10 -> com.baidu.navisdk.ui.routeguide.BNavigator$10:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.BNavigator$11 -> com.baidu.navisdk.ui.routeguide.BNavigator$11:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.baidu.navisdk.ui.routeguide.BNavigator$12 -> com.baidu.navisdk.ui.routeguide.BNavigator$12:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.BNavigator$13 -> com.baidu.navisdk.ui.routeguide.BNavigator$13:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.BNavigator$14 -> com.baidu.navisdk.ui.routeguide.BNavigator$14:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.BNavigator$15 -> com.baidu.navisdk.ui.routeguide.BNavigator$15:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void onRoutePlanYawingSuccess() -> onRoutePlanYawingSuccess
    void onRoutePlanYawingFail() -> onRoutePlanYawingFail
    void onRoutePlanSuccess() -> onRoutePlanSuccess
    void onRoutePlanFail() -> onRoutePlanFail
    void onRoutePlanCanceled() -> onRoutePlanCanceled
    void onRoutePlanStart() -> onRoutePlanStart
com.baidu.navisdk.ui.routeguide.BNavigator$16 -> com.baidu.navisdk.ui.routeguide.BNavigator$16:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.BNavigator$2 -> com.baidu.navisdk.ui.routeguide.BNavigator$2:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.baidu.navisdk.ui.routeguide.BNavigator$2$1 -> com.baidu.navisdk.ui.routeguide.BNavigator$2$1:
    com.baidu.navisdk.ui.routeguide.BNavigator$2 a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.BNavigator$3 -> com.baidu.navisdk.ui.routeguide.BNavigator$3:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.navisdk.ui.routeguide.BNavigator$4 -> com.baidu.navisdk.ui.routeguide.BNavigator$4:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void update(com.baidu.navisdk.comapi.base.BNSubject,int,int,java.lang.Object) -> update
com.baidu.navisdk.ui.routeguide.BNavigator$5 -> com.baidu.navisdk.ui.routeguide.BNavigator$5:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void onSensorDataChange(com.baidu.navisdk.model.datastruct.SensorData) -> onSensorDataChange
com.baidu.navisdk.ui.routeguide.BNavigator$6 -> com.baidu.navisdk.ui.routeguide.BNavigator$6:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
com.baidu.navisdk.ui.routeguide.BNavigator$7 -> com.baidu.navisdk.ui.routeguide.BNavigator$7:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void onLocationChange(com.baidu.navisdk.model.datastruct.LocData) -> onLocationChange
com.baidu.navisdk.ui.routeguide.BNavigator$8 -> com.baidu.navisdk.ui.routeguide.BNavigator$8:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void onDestState(java.lang.String) -> onDestState
com.baidu.navisdk.ui.routeguide.BNavigator$9 -> com.baidu.navisdk.ui.routeguide.BNavigator$9:
    com.baidu.navisdk.ui.routeguide.BNavigator a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.IBNavigatorListener -> com.baidu.navisdk.ui.routeguide.IBNavigatorListener:
    int PAGE_JUMP_WHEN_GUIDE_END -> PAGE_JUMP_WHEN_GUIDE_END
    int PAGE_JUMP_WHEN_ROUTE_PLAN_FAIL -> PAGE_JUMP_WHEN_ROUTE_PLAN_FAIL
    int PAGE_JUMP_WHEN_ROUTE_PLAN_REQUEST -> PAGE_JUMP_WHEN_ROUTE_PLAN_REQUEST
    int PAGE_JUMP_WHEN_ROUTE_DETAIL_REQUEST -> PAGE_JUMP_WHEN_ROUTE_DETAIL_REQUEST
    void onPageJump(int,java.lang.Object) -> onPageJump
    void notifyStartNav() -> notifyStartNav
    void onYawingRequestStart() -> onYawingRequestStart
    void onYawingRequestSuccess() -> onYawingRequestSuccess
    void notifySensorData(com.baidu.navisdk.model.datastruct.SensorData) -> notifySensorData
    void notifyNmeaData(java.lang.String) -> notifyNmeaData
    void notifyLoacteData(com.baidu.navisdk.model.datastruct.LocData) -> notifyLoacteData
    void notifyGPSStatusData(int) -> notifyGPSStatusData
    void notifyViewModeChanged(int) -> notifyViewModeChanged
com.baidu.navisdk.ui.routeguide.a.a -> com.baidu.navisdk.ui.routeguide.a.a:
    com.baidu.navisdk.ui.routeguide.a.a a -> a
    void a(com.baidu.navisdk.comapi.base.BNObserver) -> a
    void b(com.baidu.navisdk.comapi.base.BNObserver) -> b
    void a() -> a
    com.baidu.navisdk.ui.routeguide.a.a b() -> b
    void c() -> c
    void l() -> l
    void a(int) -> a
    int d() -> d
    void b(int) -> b
    void a(boolean) -> a
    void a(float) -> a
    int e() -> e
    boolean f() -> f
    boolean g() -> g
    int h() -> h
    int c(int) -> c
    double i() -> i
    boolean d(int) -> d
    boolean j() -> j
    com.baidu.nplatform.comapi.basestruct.MapStatus k() -> k
    void a(com.baidu.nplatform.comapi.basestruct.MapStatus,int) -> a
    void b(boolean) -> b
    void a(com.baidu.nplatform.comapi.basestruct.MapStatus) -> a
    boolean a(int,boolean) -> a
    com.baidu.nplatform.comapi.basestruct.GeoPoint a(int,int) -> a
    void c(boolean) -> c
    void d(boolean) -> d
com.baidu.navisdk.ui.routeguide.a.b -> com.baidu.navisdk.ui.routeguide.a.b:
    com.baidu.navisdk.ui.routeguide.a.b a -> a
    boolean b -> b
    boolean c -> c
    com.baidu.navisdk.ui.routeguide.a.b a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    java.lang.String f() -> f
    com.baidu.nplatform.comapi.basestruct.GeoPoint g() -> g
    boolean a(android.content.Context) -> a
    void h() -> h
    void i() -> i
    boolean a(com.baidu.navisdk.model.datastruct.SearchPoi) -> a
    boolean a(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> a
    boolean b(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> b
com.baidu.navisdk.ui.routeguide.a.c -> com.baidu.navisdk.ui.routeguide.a.c:
    com.baidu.navisdk.ui.routeguide.a.c d -> d
    android.app.Activity e -> e
    android.content.Context f -> f
    android.view.ViewGroup g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    com.baidu.navisdk.ui.routeguide.subview.E k -> k
    com.baidu.navisdk.ui.routeguide.subview.c l -> l
    com.baidu.navisdk.ui.routeguide.subview.i m -> m
    com.baidu.navisdk.ui.routeguide.subview.r n -> n
    com.baidu.navisdk.ui.routeguide.subview.y o -> o
    com.baidu.navisdk.ui.routeguide.subview.hud.a p -> p
    com.baidu.navisdk.ui.routeguide.subview.L q -> q
    com.baidu.navisdk.ui.routeguide.subview.u r -> r
    com.baidu.navisdk.ui.routeguide.subview.b s -> s
    com.baidu.navisdk.ui.widget.BNDialog t -> t
    android.widget.TextView u -> u
    int v -> v
    com.baidu.navisdk.ui.widget.BNDialog w -> w
    com.baidu.navisdk.ui.widget.BNDialog x -> x
    com.baidu.navisdk.ui.widget.NewerGuideDialog y -> y
    com.baidu.navisdk.ui.widget.BNCommonProgressDialog z -> z
    android.os.Handler a -> a
    java.lang.Runnable b -> b
    java.lang.Runnable A -> A
    java.lang.Runnable B -> B
    java.lang.Runnable C -> C
    com.baidu.navisdk.ui.routeguide.subview.c$b c -> c
    com.baidu.navisdk.ui.routeguide.a.c a() -> a
    void b() -> b
    void T() -> T
    void a(android.app.Activity,android.view.ViewGroup,com.baidu.nplatform.comapi.map.MapGLSurfaceView,com.baidu.navisdk.ui.routeguide.subview.b) -> a
    void c() -> c
    android.os.Bundle a(android.os.Bundle) -> a
    void d() -> d
    void a(android.content.res.Configuration) -> a
    void e() -> e
    void f() -> f
    void g() -> g
    void U() -> U
    void h() -> h
    void i() -> i
    void j() -> j
    void a(int) -> a
    void k() -> k
    void l() -> l
    void V() -> V
    void m() -> m
    void a(int,int) -> a
    void a(java.lang.String) -> a
    void n() -> n
    void b(android.os.Bundle) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void e(android.os.Bundle) -> e
    void o() -> o
    void p() -> p
    boolean a(java.lang.String,java.lang.String) -> a
    void f(android.os.Bundle) -> f
    void q() -> q
    void r() -> r
    void s() -> s
    void b(int) -> b
    void c(int) -> c
    void t() -> t
    void u() -> u
    void v() -> v
    void w() -> w
    void x() -> x
    void y() -> y
    boolean z() -> z
    void A() -> A
    void B() -> B
    boolean C() -> C
    void d(int) -> d
    void D() -> D
    void E() -> E
    com.baidu.navisdk.ui.widget.BNCommonProgressDialog b(java.lang.String) -> b
    void F() -> F
    void G() -> G
    void H() -> H
    void I() -> I
    void J() -> J
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void e(boolean) -> e
    void e(int) -> e
    void K() -> K
    void L() -> L
    void M() -> M
    void f(int) -> f
    void N() -> N
    void O() -> O
    void f(boolean) -> f
    void g(boolean) -> g
    void P() -> P
    void Q() -> Q
    void R() -> R
    void S() -> S
    int g(int) -> g
    int a(com.baidu.navisdk.ui.routeguide.a.c) -> a
    int b(com.baidu.navisdk.ui.routeguide.a.c) -> b
    void c(com.baidu.navisdk.ui.routeguide.a.c) -> c
    android.widget.TextView d(com.baidu.navisdk.ui.routeguide.a.c) -> d
    com.baidu.navisdk.ui.widget.BNDialog e(com.baidu.navisdk.ui.routeguide.a.c) -> e
    android.app.Activity f(com.baidu.navisdk.ui.routeguide.a.c) -> f
    com.baidu.navisdk.ui.routeguide.subview.c g(com.baidu.navisdk.ui.routeguide.a.c) -> g
    android.content.Context h(com.baidu.navisdk.ui.routeguide.a.c) -> h
    com.baidu.navisdk.ui.routeguide.subview.i i(com.baidu.navisdk.ui.routeguide.a.c) -> i
    com.baidu.navisdk.ui.routeguide.subview.E j(com.baidu.navisdk.ui.routeguide.a.c) -> j
    void k(com.baidu.navisdk.ui.routeguide.a.c) -> k
    com.baidu.navisdk.ui.routeguide.subview.y l(com.baidu.navisdk.ui.routeguide.a.c) -> l
    com.baidu.navisdk.ui.routeguide.subview.r m(com.baidu.navisdk.ui.routeguide.a.c) -> m
com.baidu.navisdk.ui.routeguide.a.d -> com.baidu.navisdk.ui.routeguide.a.d:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.baidu.navisdk.ui.routeguide.a.e -> com.baidu.navisdk.ui.routeguide.a.e:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.a.f -> com.baidu.navisdk.ui.routeguide.a.f:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.a.g -> com.baidu.navisdk.ui.routeguide.a.g:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.a.h -> com.baidu.navisdk.ui.routeguide.a.h:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.a.i -> com.baidu.navisdk.ui.routeguide.a.i:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void a() -> a
com.baidu.navisdk.ui.routeguide.a.j -> com.baidu.navisdk.ui.routeguide.a.j:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.ui.routeguide.a.k -> com.baidu.navisdk.ui.routeguide.a.k:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void onClick() -> onClick
com.baidu.navisdk.ui.routeguide.a.l -> com.baidu.navisdk.ui.routeguide.a.l:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void onClick() -> onClick
com.baidu.navisdk.ui.routeguide.a.m -> com.baidu.navisdk.ui.routeguide.a.m:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void onClick() -> onClick
com.baidu.navisdk.ui.routeguide.a.n -> com.baidu.navisdk.ui.routeguide.a.n:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void onClick() -> onClick
com.baidu.navisdk.ui.routeguide.a.o -> com.baidu.navisdk.ui.routeguide.a.o:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void onClick() -> onClick
com.baidu.navisdk.ui.routeguide.a.p -> com.baidu.navisdk.ui.routeguide.a.p:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.a.q -> com.baidu.navisdk.ui.routeguide.a.q:
    com.baidu.navisdk.ui.routeguide.a.c a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.fsm.RGFSMTable -> com.baidu.navisdk.ui.routeguide.fsm.RGFSMTable:
    java.util.HashMap dictFSM -> dictFSM
    java.util.HashMap dictStateNorth2D -> dictStateNorth2D
    java.util.HashMap dictStateCar3D -> dictStateCar3D
    java.util.HashMap dictStateFullview -> dictStateFullview
    java.util.HashMap dictStateEnlargeRoadmap -> dictStateEnlargeRoadmap
    java.util.HashMap dictStateBrowseMap -> dictStateBrowseMap
    java.util.HashMap dictStateRouteDetail -> dictStateRouteDetail
    java.util.HashMap dictStateHUD -> dictStateHUD
    java.util.HashMap dictStateAR -> dictStateAR
    java.util.HashMap dictStateSpaceSearch -> dictStateSpaceSearch
    java.util.HashMap dictStateRoutePlan -> dictStateRoutePlan
    java.util.HashMap dictStatePickPoint -> dictStatePickPoint
    byte[] a -> a
    void initTransition() -> initTransition
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
    void l() -> l
    java.lang.String queryDestState(java.lang.String,java.lang.String) -> queryDestState
    void destory() -> destory
com.baidu.navisdk.ui.routeguide.fsm.RGFSMTable$FsmEvent -> com.baidu.navisdk.ui.routeguide.fsm.RGFSMTable$FsmEvent:
    java.lang.String BTN_CLICK_NORTH_2D -> BTN_CLICK_NORTH_2D
    java.lang.String BTN_CLICK_CAR_3D -> BTN_CLICK_CAR_3D
    java.lang.String BTN_CLICK_LOC_CAR -> BTN_CLICK_LOC_CAR
    java.lang.String BTN_CLICK_FULL_VIEW -> BTN_CLICK_FULL_VIEW
    java.lang.String BTN_CLICK_HUD_ENTER -> BTN_CLICK_HUD_ENTER
    java.lang.String BTN_CLICK_AR -> BTN_CLICK_AR
    java.lang.String BTN_CLICK_ZOOM -> BTN_CLICK_ZOOM
    java.lang.String BTN_CLICK_BACK -> BTN_CLICK_BACK
    java.lang.String MENU_CLICK_ROUTE_DETAIL -> MENU_CLICK_ROUTE_DETAIL
    java.lang.String MENU_CLICK_ROUTE_PLAN -> MENU_CLICK_ROUTE_PLAN
    java.lang.String MENU_CLICK_PICK_POINT -> MENU_CLICK_PICK_POINT
    java.lang.String MENU_CLICK_SPACE_SEARCH -> MENU_CLICK_SPACE_SEARCH
    java.lang.String MAP_COMPASS_CLICK -> MAP_COMPASS_CLICK
    java.lang.String MAP_MOVE -> MAP_MOVE
    java.lang.String TOUCH_MAP -> TOUCH_MAP
    java.lang.String TOUCH_ENLARGE_ROAD_MAP -> TOUCH_ENLARGE_ROAD_MAP
    java.lang.String MSG_ENLARGE_ROADMAP_SHOW -> MSG_ENLARGE_ROADMAP_SHOW
    java.lang.String MSG_ENLARGE_ROADMAP_HIDE -> MSG_ENLARGE_ROADMAP_HIDE
    java.lang.String MSG_YAWING_START -> MSG_YAWING_START
    java.lang.String MSG_YAWING_REROUTED -> MSG_YAWING_REROUTED
    java.lang.String MSG_AUTO_LOC_CAR_WHEN_TIMEOUT -> MSG_AUTO_LOC_CAR_WHEN_TIMEOUT
    java.lang.String MSG_PORT_LAND_SCREEN_CHANGED -> MSG_PORT_LAND_SCREEN_CHANGED
com.baidu.navisdk.ui.routeguide.fsm.RGFSMTable$FsmState -> com.baidu.navisdk.ui.routeguide.fsm.RGFSMTable$FsmState:
    java.lang.String BACK -> BACK
    java.lang.String North2D -> North2D
    java.lang.String Car3D -> Car3D
    java.lang.String Fullview -> Fullview
    java.lang.String EnlargeRoadmap -> EnlargeRoadmap
    java.lang.String BrowseMap -> BrowseMap
    java.lang.String RouteDetail -> RouteDetail
    java.lang.String HUD -> HUD
    java.lang.String AR -> AR
    java.lang.String SpaceSearch -> SpaceSearch
    java.lang.String RoutePlan -> RoutePlan
    java.lang.String PickPoint -> PickPoint
com.baidu.navisdk.ui.routeguide.fsm.RGState -> com.baidu.navisdk.ui.routeguide.fsm.RGState:
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String CLASS_PREFIX -> CLASS_PREFIX
    java.lang.String METHOD_NAME_ENTER -> METHOD_NAME_ENTER
    java.lang.String METHOD_NAME_EXCUTE -> METHOD_NAME_EXCUTE
    java.lang.String METHOD_NAME_EXIT -> METHOD_NAME_EXIT
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void enter() -> enter
    void excute() -> excute
    void exit() -> exit
com.baidu.navisdk.ui.routeguide.fsm.RGStateAR -> com.baidu.navisdk.ui.routeguide.fsm.RGStateAR:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void excute() -> excute
    void enter() -> enter
    void exit() -> exit
com.baidu.navisdk.ui.routeguide.fsm.RGStateBrowseMap -> com.baidu.navisdk.ui.routeguide.fsm.RGStateBrowseMap:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void excute() -> excute
com.baidu.navisdk.ui.routeguide.fsm.RGStateCar3D -> com.baidu.navisdk.ui.routeguide.fsm.RGStateCar3D:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void excute() -> excute
    void enter() -> enter
    void exit() -> exit
com.baidu.navisdk.ui.routeguide.fsm.RGStateEnlargeRoadmap -> com.baidu.navisdk.ui.routeguide.fsm.RGStateEnlargeRoadmap:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void enter() -> enter
    void excute() -> excute
    void exit() -> exit
com.baidu.navisdk.ui.routeguide.fsm.RGStateFullview -> com.baidu.navisdk.ui.routeguide.fsm.RGStateFullview:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void excute() -> excute
    void exit() -> exit
com.baidu.navisdk.ui.routeguide.fsm.RGStateHUD -> com.baidu.navisdk.ui.routeguide.fsm.RGStateHUD:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void enter() -> enter
    void excute() -> excute
    void exit() -> exit
com.baidu.navisdk.ui.routeguide.fsm.RGStateNorth2D -> com.baidu.navisdk.ui.routeguide.fsm.RGStateNorth2D:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void excute() -> excute
    void enter() -> enter
    void exit() -> exit
com.baidu.navisdk.ui.routeguide.fsm.RGStatePickPoint -> com.baidu.navisdk.ui.routeguide.fsm.RGStatePickPoint:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void excute() -> excute
    void exit() -> exit
com.baidu.navisdk.ui.routeguide.fsm.RGStateRouteDetail -> com.baidu.navisdk.ui.routeguide.fsm.RGStateRouteDetail:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void excute() -> excute
    void exit() -> exit
com.baidu.navisdk.ui.routeguide.fsm.RGStateRoutePlan -> com.baidu.navisdk.ui.routeguide.fsm.RGStateRoutePlan:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void excute() -> excute
com.baidu.navisdk.ui.routeguide.fsm.RGStateSpaceSearch -> com.baidu.navisdk.ui.routeguide.fsm.RGStateSpaceSearch:
    void onActionUI() -> onActionUI
    void onActionNaviEngine() -> onActionNaviEngine
    void onActionLayers() -> onActionLayers
    void onActionMapStatus() -> onActionMapStatus
    void excute() -> excute
    void exit() -> exit
com.baidu.navisdk.ui.routeguide.fsm.RouteGuideFSM -> com.baidu.navisdk.ui.routeguide.fsm.RouteGuideFSM:
    com.baidu.navisdk.ui.routeguide.fsm.RouteGuideFSM a -> a
    java.lang.String b -> b
    java.lang.String mPreviousStateForFullView -> mPreviousStateForFullView
    java.lang.String c -> c
    com.baidu.navisdk.ui.routeguide.fsm.RouteGuideFSM$IFSMDestStateListener d -> d
    void setDestStateListener(com.baidu.navisdk.ui.routeguide.fsm.RouteGuideFSM$IFSMDestStateListener) -> setDestStateListener
    com.baidu.navisdk.ui.routeguide.fsm.RouteGuideFSM getInstance() -> getInstance
    void destory() -> destory
    void a() -> a
    void setInitialState(java.lang.String) -> setInitialState
    void runInitialState() -> runInitialState
    java.lang.String getExitState() -> getExitState
    void run(java.lang.String) -> run
    java.lang.String getCurrentState() -> getCurrentState
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.baidu.navisdk.ui.routeguide.fsm.RouteGuideFSM$IFSMDestStateListener -> com.baidu.navisdk.ui.routeguide.fsm.RouteGuideFSM$IFSMDestStateListener:
    void onDestState(java.lang.String) -> onDestState
com.baidu.navisdk.ui.routeguide.model.ContinueNaviHistoryHelper -> com.baidu.navisdk.ui.routeguide.model.ContinueNaviHistoryHelper:
    com.baidu.navisdk.ui.routeguide.model.ContinueNaviHistoryHelper a -> a
    android.net.Uri b -> b
    android.content.ContentResolver c -> c
    com.baidu.navisdk.ui.routeguide.model.ContinueNaviHistoryHelper getInstance(android.content.Context) -> getInstance
    android.net.Uri addHistory(com.baidu.navisdk.model.datastruct.RoutePlanNode) -> addHistory
    int getHistories(java.util.ArrayList,int) -> getHistories
    void clearAllHistories() -> clearAllHistories
com.baidu.navisdk.ui.routeguide.model.RGARModel -> com.baidu.navisdk.ui.routeguide.model.RGARModel:
    android.os.Bundle a -> a
    java.lang.String getIconName() -> getIconName
    int getRemainDist() -> getRemainDist
    java.lang.String getRoadName() -> getRoadName
    int getIconResId() -> getIconResId
com.baidu.navisdk.ui.routeguide.model.RGAssistGuideModel -> com.baidu.navisdk.ui.routeguide.model.RGAssistGuideModel:
    com.baidu.navisdk.ui.routeguide.model.RGAssistGuideModel a -> a
    com.baidu.navisdk.ui.routeguide.model.RGAssistGuideModel getInstance() -> getInstance
    android.os.Bundle getData(int,int,int) -> getData
com.baidu.navisdk.ui.routeguide.model.RGCacheStatus -> com.baidu.navisdk.ui.routeguide.model.RGCacheStatus:
    int sCurrentVolume -> sCurrentVolume
    int sBeforeNaviVolume -> sBeforeNaviVolume
    int sOrientation -> sOrientation
    int sHeight -> sHeight
    int sWidth -> sWidth
    int sMapScaleLevelByUser -> sMapScaleLevelByUser
    int sLayerMode -> sLayerMode
    boolean sDayNightTimerStart -> sDayNightTimerStart
    int sPickPointType -> sPickPointType
com.baidu.navisdk.ui.routeguide.model.RGDirectBoardModel -> com.baidu.navisdk.ui.routeguide.model.RGDirectBoardModel:
    java.lang.String a -> a
    com.baidu.navisdk.ui.routeguide.model.RGDirectBoardModel b -> b
    com.baidu.navisdk.ui.routeguide.model.RGDirectBoardModel getInstance() -> getInstance
    android.os.Bundle getData(boolean,int,int) -> getData
com.baidu.navisdk.ui.routeguide.model.RGEnlargeRoadMapModel -> com.baidu.navisdk.ui.routeguide.model.RGEnlargeRoadMapModel:
    java.lang.String a -> a
    com.baidu.navisdk.ui.routeguide.model.RGEnlargeRoadMapModel b -> b
    com.baidu.navisdk.ui.routeguide.model.RGEnlargeRoadMapModel getInstance() -> getInstance
    android.os.Bundle getData(boolean,int,int) -> getData
com.baidu.navisdk.ui.routeguide.model.RGHUDDataModel -> com.baidu.navisdk.ui.routeguide.model.RGHUDDataModel:
    int[] a -> a
    com.baidu.navisdk.ui.routeguide.model.RGHUDDataModel b -> b
    com.baidu.navisdk.ui.routeguide.model.RGHUDDataModel getInstance() -> getInstance
    android.os.Bundle getData() -> getData
com.baidu.navisdk.ui.routeguide.model.RGHorizontalMenuNode -> com.baidu.navisdk.ui.routeguide.model.RGHorizontalMenuNode:
    java.lang.String mMenuName -> mMenuName
    int mResId -> mResId
    boolean mIsTopShow -> mIsTopShow
    java.lang.String mButtonName -> mButtonName
com.baidu.navisdk.ui.routeguide.model.RGSimpleGuideModel -> com.baidu.navisdk.ui.routeguide.model.RGSimpleGuideModel:
    java.lang.String b -> b
    com.baidu.navisdk.ui.routeguide.model.RGSimpleGuideModel c -> c
    android.os.Bundle sSimpleGuideBundle -> sSimpleGuideBundle
    android.os.Bundle mSimpleGuideBundle -> mSimpleGuideBundle
    java.lang.String d -> d
    java.lang.String e -> e
    java.util.HashMap a -> a
    com.baidu.navisdk.ui.routeguide.model.RGSimpleGuideModel getInstance() -> getInstance
    android.os.Bundle getData(int,int,int) -> getData
    android.os.Bundle a(int,int) -> a
    android.os.Bundle b(int,int) -> b
    android.os.Bundle getDataFromRouteResult(int,int,java.lang.String,int,int) -> getDataFromRouteResult
    void a(java.lang.String) -> a
com.baidu.navisdk.ui.routeguide.subview.A -> com.baidu.navisdk.ui.routeguide.subview.A:
    com.baidu.navisdk.ui.routeguide.subview.y a -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.baidu.navisdk.ui.routeguide.subview.B -> com.baidu.navisdk.ui.routeguide.subview.B:
    com.baidu.navisdk.ui.routeguide.subview.y a -> a
    void onDismiss() -> onDismiss
com.baidu.navisdk.ui.routeguide.subview.C -> com.baidu.navisdk.ui.routeguide.subview.C:
    com.baidu.navisdk.ui.routeguide.subview.y a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.baidu.navisdk.ui.routeguide.subview.D -> com.baidu.navisdk.ui.routeguide.subview.D:
    android.content.Context a -> a
    android.widget.RelativeLayout b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    void a() -> a
    void b() -> b
    void a(boolean) -> a
com.baidu.navisdk.ui.routeguide.subview.E -> com.baidu.navisdk.ui.routeguide.subview.E:
    boolean c -> c
    android.content.Context d -> d
    android.widget.RelativeLayout e -> e
    android.widget.ProgressBar f -> f
    android.widget.ImageView g -> g
    android.widget.TextView h -> h
    android.view.View i -> i
    android.widget.RelativeLayout j -> j
    android.widget.RelativeLayout k -> k
    android.widget.RelativeLayout l -> l
    android.widget.RelativeLayout m -> m
    android.widget.TextView n -> n
    android.widget.TextView o -> o
    android.widget.TextView p -> p
    android.widget.ImageView q -> q
    android.widget.TextView r -> r
    android.widget.FrameLayout s -> s
    android.widget.RelativeLayout t -> t
    android.widget.ImageView u -> u
    java.util.HashMap b -> b
    int v -> v
    int w -> w
    void l() -> l
    void a() -> a
    void b() -> b
    void a(android.os.Bundle) -> a
    void a(int,int) -> a
    void a(java.lang.Integer) -> a
    void b(android.os.Bundle) -> b
    void m() -> m
    void c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void a(boolean) -> a
    void k() -> k
    android.widget.FrameLayout a(com.baidu.navisdk.ui.routeguide.subview.E) -> a
    android.widget.ImageView b(com.baidu.navisdk.ui.routeguide.subview.E) -> b
    android.content.Context c(com.baidu.navisdk.ui.routeguide.subview.E) -> c
    void d(com.baidu.navisdk.ui.routeguide.subview.E) -> d
    android.widget.TextView e(com.baidu.navisdk.ui.routeguide.subview.E) -> e
com.baidu.navisdk.ui.routeguide.subview.F -> com.baidu.navisdk.ui.routeguide.subview.F:
    com.baidu.navisdk.ui.routeguide.subview.E a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.baidu.navisdk.ui.routeguide.subview.G -> com.baidu.navisdk.ui.routeguide.subview.G:
    com.baidu.navisdk.ui.routeguide.subview.F a -> a
    void a() -> a
    void b() -> b
com.baidu.navisdk.ui.routeguide.subview.H -> com.baidu.navisdk.ui.routeguide.subview.H:
    com.baidu.navisdk.ui.routeguide.subview.E a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.baidu.navisdk.ui.routeguide.subview.I -> com.baidu.navisdk.ui.routeguide.subview.I:
    com.baidu.navisdk.ui.routeguide.subview.E a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.subview.J -> com.baidu.navisdk.ui.routeguide.subview.J:
    com.baidu.navisdk.ui.routeguide.subview.E a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.baidu.navisdk.ui.routeguide.subview.K -> com.baidu.navisdk.ui.routeguide.subview.K:
    com.baidu.navisdk.ui.routeguide.subview.E a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.baidu.navisdk.ui.routeguide.subview.L -> com.baidu.navisdk.ui.routeguide.subview.L:
    android.app.Activity b -> b
    android.view.ViewGroup c -> c
    android.view.View d -> d
    android.widget.LinearLayout e -> e
    android.widget.TextView f -> f
    android.widget.LinearLayout g -> g
    android.widget.RelativeLayout h -> h
    android.widget.ImageView i -> i
    android.widget.TextView j -> j
    android.widget.RelativeLayout k -> k
    android.widget.ImageView l -> l
    android.widget.TextView m -> m
    android.widget.RelativeLayout n -> n
    android.widget.ImageView o -> o
    android.widget.TextView p -> p
    android.widget.RelativeLayout q -> q
    android.widget.ImageView r -> r
    android.widget.TextView s -> s
    android.view.View[] t -> t
    android.widget.RelativeLayout u -> u
    android.widget.TextView v -> v
    android.widget.TextView w -> w
    android.widget.ImageView x -> x
    android.widget.LinearLayout y -> y
    android.widget.ImageButton z -> z
    int A -> A
    java.lang.String[] B -> B
    java.lang.String[] C -> C
    com.baidu.navisdk.model.datastruct.SearchCircle D -> D
    int E -> E
    boolean F -> F
    int G -> G
    com.baidu.navisdk.model.datastruct.SearchPoi H -> H
    boolean I -> I
    com.baidu.navisdk.comapi.poisearch.BNPoiSearcherObserver J -> J
    void d() -> d
    void e() -> e
    void c() -> c
    void onClick(android.view.View) -> onClick
    void i() -> i
    void f() -> f
    void a(java.util.ArrayList) -> a
    void b(java.util.ArrayList) -> b
    void a(int) -> a
    void a(boolean) -> a
    void b(int) -> b
    void j() -> j
    void g() -> g
    void k() -> k
    void l() -> l
    void h() -> h
    void b(boolean) -> b
    void c(boolean) -> c
    void a(com.baidu.navisdk.ui.routeguide.subview.L,java.util.ArrayList) -> a
    boolean a(com.baidu.navisdk.ui.routeguide.subview.L,boolean) -> a
    android.widget.ImageButton a(com.baidu.navisdk.ui.routeguide.subview.L) -> a
    int b(com.baidu.navisdk.ui.routeguide.subview.L) -> b
    android.app.Activity c(com.baidu.navisdk.ui.routeguide.subview.L) -> c
    int d(com.baidu.navisdk.ui.routeguide.subview.L) -> d
    com.baidu.navisdk.model.datastruct.SearchCircle e(com.baidu.navisdk.ui.routeguide.subview.L) -> e
com.baidu.navisdk.ui.routeguide.subview.M -> com.baidu.navisdk.ui.routeguide.subview.M:
    com.baidu.navisdk.ui.routeguide.subview.L a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.N -> com.baidu.navisdk.ui.routeguide.subview.N:
    com.baidu.navisdk.ui.routeguide.subview.L a -> a
    void update(com.baidu.navisdk.comapi.base.BNSubject,int,int,java.lang.Object) -> update
com.baidu.navisdk.ui.routeguide.subview.O -> com.baidu.navisdk.ui.routeguide.subview.O:
    android.content.Context a -> a
    android.widget.RelativeLayout b -> b
    android.widget.ImageView c -> c
    android.widget.ImageView d -> d
    android.widget.ImageView e -> e
    android.view.View f -> f
    android.view.View g -> g
    com.baidu.navisdk.ui.routeguide.subview.O$a h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    android.view.View$OnClickListener l -> l
    android.view.View$OnTouchListener m -> m
    android.os.Handler n -> n
    android.widget.RelativeLayout a() -> a
    void a(com.baidu.navisdk.ui.routeguide.subview.O$a) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void c(boolean) -> c
    void d(boolean) -> d
    void a(boolean) -> a
    void b(boolean) -> b
    android.os.Handler a(com.baidu.navisdk.ui.routeguide.subview.O) -> a
    android.widget.ImageView b(com.baidu.navisdk.ui.routeguide.subview.O) -> b
    android.content.Context c(com.baidu.navisdk.ui.routeguide.subview.O) -> c
    com.baidu.navisdk.ui.routeguide.subview.O$a d(com.baidu.navisdk.ui.routeguide.subview.O) -> d
    android.widget.ImageView e(com.baidu.navisdk.ui.routeguide.subview.O) -> e
    android.widget.ImageView f(com.baidu.navisdk.ui.routeguide.subview.O) -> f
com.baidu.navisdk.ui.routeguide.subview.O$a -> com.baidu.navisdk.ui.routeguide.subview.O$a:
    void a() -> a
    void b() -> b
    void c() -> c
com.baidu.navisdk.ui.routeguide.subview.P -> com.baidu.navisdk.ui.routeguide.subview.P:
    com.baidu.navisdk.ui.routeguide.subview.O a -> a
    void onClick(android.view.View) -> onClick
    void a() -> a
com.baidu.navisdk.ui.routeguide.subview.Q -> com.baidu.navisdk.ui.routeguide.subview.Q:
    com.baidu.navisdk.ui.routeguide.subview.P a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.subview.R -> com.baidu.navisdk.ui.routeguide.subview.R:
    com.baidu.navisdk.ui.routeguide.subview.O a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.baidu.navisdk.ui.routeguide.subview.S -> com.baidu.navisdk.ui.routeguide.subview.S:
    com.baidu.navisdk.ui.routeguide.subview.O a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.ui.routeguide.subview.a -> com.baidu.navisdk.ui.routeguide.subview.a:
    int[] a -> a
    int[] b -> b
    int[] c -> c
    int[] d -> d
    int[] e -> e
    int[] f -> f
    int[] g -> g
    int[] h -> h
com.baidu.navisdk.ui.routeguide.subview.a.a -> com.baidu.navisdk.ui.routeguide.subview.a.a:
    com.baidu.navisdk.ui.routeguide.subview.a.a$b a -> a
    void a(android.view.ViewGroup,android.view.View,int,float,float) -> a
    void a(com.baidu.navisdk.ui.routeguide.subview.a.a$b) -> a
    com.baidu.navisdk.ui.routeguide.subview.a.a$b a() -> a
com.baidu.navisdk.ui.routeguide.subview.a.a$1 -> com.baidu.navisdk.ui.routeguide.subview.a.a$1:
com.baidu.navisdk.ui.routeguide.subview.a.a$a -> com.baidu.navisdk.ui.routeguide.subview.a.a$a:
    int a -> a
    android.view.View b -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.baidu.navisdk.ui.routeguide.subview.a.a$b -> com.baidu.navisdk.ui.routeguide.subview.a.a$b:
    void b() -> b
    void a() -> a
com.baidu.navisdk.ui.routeguide.subview.a.a$c -> com.baidu.navisdk.ui.routeguide.subview.a.a$c:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    boolean f -> f
    android.graphics.Camera g -> g
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.baidu.navisdk.ui.routeguide.subview.a.a$d -> com.baidu.navisdk.ui.routeguide.subview.a.a$d:
    int a -> a
    android.view.View b -> b
    void run() -> run
com.baidu.navisdk.ui.routeguide.subview.a.b -> com.baidu.navisdk.ui.routeguide.subview.a.b:
    com.baidu.navisdk.ui.routeguide.subview.a.a$d a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.baidu.navisdk.ui.routeguide.subview.b -> com.baidu.navisdk.ui.routeguide.subview.b:
    void onMenuSelectedRoutePlan() -> onMenuSelectedRoutePlan
    void onMenuSelectedRouteDetail() -> onMenuSelectedRouteDetail
    void onEnlargeRoadMapImgTouch() -> onEnlargeRoadMapImgTouch
    void onEnlargeRoadMapShowStart() -> onEnlargeRoadMapShowStart
    void onEnlargeRoadMapHideStart() -> onEnlargeRoadMapHideStart
    void onEnlargeRoadMapHideEnd() -> onEnlargeRoadMapHideEnd
    void onRouteDescWindowShow() -> onRouteDescWindowShow
    void onRouteDescWindowHide() -> onRouteDescWindowHide
    void onExitDialogTimeOut() -> onExitDialogTimeOut
    void onExitDialogConfirm() -> onExitDialogConfirm
com.baidu.navisdk.ui.routeguide.subview.c -> com.baidu.navisdk.ui.routeguide.subview.c:
    android.content.Context b -> b
    android.view.View c -> c
    android.widget.RelativeLayout d -> d
    com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView[] e -> e
    int[] f -> f
    android.widget.ImageView g -> g
    android.widget.ImageView h -> h
    com.baidu.navisdk.ui.routeguide.subview.c$b i -> i
    java.util.ArrayList j -> j
    android.util.SparseIntArray k -> k
    android.os.Handler l -> l
    com.baidu.navisdk.comapi.base.MsgHandler m -> m
    void a(com.baidu.navisdk.ui.routeguide.subview.c$b) -> a
    void a() -> a
    void b() -> b
    void a(android.os.Bundle) -> a
    int a(int,int) -> a
    void a(int,int,int,int) -> a
    void a(int,int,int) -> a
    void b(int,int,int) -> b
    int a(int) -> a
    void c(int,int,int) -> c
    void d(int,int,int) -> d
    void b(int,int) -> b
    void c() -> c
    java.lang.String toString() -> toString
    void a(android.content.res.Configuration) -> a
    com.baidu.navisdk.ui.routeguide.subview.c$b a(com.baidu.navisdk.ui.routeguide.subview.c) -> a
    android.content.Context b(com.baidu.navisdk.ui.routeguide.subview.c) -> b
    android.widget.ImageView c(com.baidu.navisdk.ui.routeguide.subview.c) -> c
    android.widget.ImageView d(com.baidu.navisdk.ui.routeguide.subview.c) -> d
    android.os.Handler e(com.baidu.navisdk.ui.routeguide.subview.c) -> e
com.baidu.navisdk.ui.routeguide.subview.c$a -> com.baidu.navisdk.ui.routeguide.subview.c$a:
    int a -> a
    int b -> b
    int c -> c
    int a(com.baidu.navisdk.ui.routeguide.subview.c$a) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.baidu.navisdk.ui.routeguide.subview.c$b -> com.baidu.navisdk.ui.routeguide.subview.c$b:
    void a() -> a
com.baidu.navisdk.ui.routeguide.subview.d -> com.baidu.navisdk.ui.routeguide.subview.d:
    com.baidu.navisdk.ui.routeguide.subview.c a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.e -> com.baidu.navisdk.ui.routeguide.subview.e:
    com.baidu.navisdk.ui.routeguide.subview.c a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.baidu.navisdk.ui.routeguide.subview.f -> com.baidu.navisdk.ui.routeguide.subview.f:
    com.baidu.navisdk.ui.routeguide.subview.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.ui.routeguide.subview.g -> com.baidu.navisdk.ui.routeguide.subview.g:
    com.baidu.navisdk.ui.routeguide.subview.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
    void careAbout() -> careAbout
com.baidu.navisdk.ui.routeguide.subview.h -> com.baidu.navisdk.ui.routeguide.subview.h:
    boolean b -> b
    com.baidu.navisdk.ui.routeguide.subview.b a -> a
    void a() -> a
    void b() -> b
    void d() -> d
    void e() -> e
com.baidu.navisdk.ui.routeguide.subview.hud.RGHUDView -> com.baidu.navisdk.ui.routeguide.subview.hud.RGHUDView:
    boolean a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    android.widget.ImageView e -> e
    android.view.View f -> f
    android.view.View g -> g
    void a() -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a(int) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
com.baidu.navisdk.ui.routeguide.subview.hud.a -> com.baidu.navisdk.ui.routeguide.subview.hud.a:
    com.baidu.navisdk.ui.routeguide.subview.hud.d b -> b
    android.widget.ImageView c -> c
    void c() -> c
    void a() -> a
    void b() -> b
    void f() -> f
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
com.baidu.navisdk.ui.routeguide.subview.hud.b -> com.baidu.navisdk.ui.routeguide.subview.hud.b:
    com.baidu.navisdk.ui.routeguide.subview.hud.a a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.hud.c -> com.baidu.navisdk.ui.routeguide.subview.hud.c:
    com.baidu.navisdk.ui.routeguide.subview.hud.a a -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.baidu.navisdk.ui.routeguide.subview.hud.d -> com.baidu.navisdk.ui.routeguide.subview.hud.d:
    android.app.Activity a -> a
    com.baidu.navisdk.ui.routeguide.subview.hud.RGHUDView b -> b
    android.widget.TextView c -> c
    android.widget.ImageView d -> d
    android.widget.TextView e -> e
    android.widget.TextView f -> f
    boolean g -> g
    android.view.View h -> h
    android.widget.Button i -> i
    android.widget.ImageButton j -> j
    android.widget.Button k -> k
    android.widget.ImageButton l -> l
    android.widget.TextView m -> m
    android.widget.ImageView n -> n
    android.widget.FrameLayout o -> o
    com.baidu.navisdk.ui.routeguide.subview.hud.d$a p -> p
    boolean q -> q
    android.view.animation.Animation$AnimationListener r -> r
    void b() -> b
    void a() -> a
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void show() -> show
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(int) -> a
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void a(com.baidu.navisdk.ui.routeguide.subview.hud.d) -> a
    boolean b(com.baidu.navisdk.ui.routeguide.subview.hud.d) -> b
    boolean c(com.baidu.navisdk.ui.routeguide.subview.hud.d) -> c
    android.view.View d(com.baidu.navisdk.ui.routeguide.subview.hud.d) -> d
    void e(com.baidu.navisdk.ui.routeguide.subview.hud.d) -> e
    com.baidu.navisdk.ui.routeguide.subview.hud.d$a f(com.baidu.navisdk.ui.routeguide.subview.hud.d) -> f
    android.widget.ImageButton g(com.baidu.navisdk.ui.routeguide.subview.hud.d) -> g
    void h(com.baidu.navisdk.ui.routeguide.subview.hud.d) -> h
    void i(com.baidu.navisdk.ui.routeguide.subview.hud.d) -> i
    boolean a(com.baidu.navisdk.ui.routeguide.subview.hud.d,boolean) -> a
    android.widget.TextView j(com.baidu.navisdk.ui.routeguide.subview.hud.d) -> j
com.baidu.navisdk.ui.routeguide.subview.hud.d$a -> com.baidu.navisdk.ui.routeguide.subview.hud.d$a:
    java.lang.ref.WeakReference a -> a
    java.lang.Runnable b -> b
    void handleMessage(android.os.Message) -> handleMessage
    java.lang.ref.WeakReference a(com.baidu.navisdk.ui.routeguide.subview.hud.d$a) -> a
com.baidu.navisdk.ui.routeguide.subview.hud.e -> com.baidu.navisdk.ui.routeguide.subview.hud.e:
    com.baidu.navisdk.ui.routeguide.subview.hud.d a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.baidu.navisdk.ui.routeguide.subview.hud.f -> com.baidu.navisdk.ui.routeguide.subview.hud.f:
    com.baidu.navisdk.ui.routeguide.subview.hud.d a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.baidu.navisdk.ui.routeguide.subview.hud.g -> com.baidu.navisdk.ui.routeguide.subview.hud.g:
    com.baidu.navisdk.ui.routeguide.subview.hud.d a -> a
    void a() -> a
    void b() -> b
com.baidu.navisdk.ui.routeguide.subview.hud.h -> com.baidu.navisdk.ui.routeguide.subview.hud.h:
    com.baidu.navisdk.ui.routeguide.subview.hud.d$a a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.subview.i -> com.baidu.navisdk.ui.routeguide.subview.i:
    android.content.Context b -> b
    com.baidu.navisdk.ui.routeguide.subview.D c -> c
    android.widget.ImageButton d -> d
    android.widget.ProgressBar e -> e
    com.baidu.navisdk.ui.routeguide.subview.O f -> f
    android.widget.ImageButton g -> g
    android.widget.ImageButton h -> h
    android.widget.ImageButton i -> i
    android.widget.LinearLayout j -> j
    android.widget.ImageView k -> k
    android.widget.ImageButton l -> l
    android.widget.ImageButton m -> m
    int n -> n
    int o -> o
    int p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    void c() -> c
    void d() -> d
    void e() -> e
    void g() -> g
    void h() -> h
    void a(int) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    void i() -> i
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void j() -> j
    void f() -> f
    void k() -> k
    void e(boolean) -> e
    void f(boolean) -> f
    void a(android.view.View) -> a
    void l() -> l
    void m() -> m
    int a(com.baidu.navisdk.ui.routeguide.subview.i) -> a
    void b(com.baidu.navisdk.ui.routeguide.subview.i) -> b
    void a(com.baidu.navisdk.ui.routeguide.subview.i,android.content.Context) -> a
    void b(com.baidu.navisdk.ui.routeguide.subview.i,android.content.Context) -> b
    void c(com.baidu.navisdk.ui.routeguide.subview.i) -> c
    void d(com.baidu.navisdk.ui.routeguide.subview.i) -> d
    android.widget.LinearLayout e(com.baidu.navisdk.ui.routeguide.subview.i) -> e
    android.content.Context f(com.baidu.navisdk.ui.routeguide.subview.i) -> f
    void g(com.baidu.navisdk.ui.routeguide.subview.i) -> g
com.baidu.navisdk.ui.routeguide.subview.j -> com.baidu.navisdk.ui.routeguide.subview.j:
    android.content.Context a -> a
    com.baidu.navisdk.ui.routeguide.subview.i b -> b
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.k -> com.baidu.navisdk.ui.routeguide.subview.k:
    com.baidu.navisdk.ui.routeguide.subview.i a -> a
    void a() -> a
    void b() -> b
    void c() -> c
com.baidu.navisdk.ui.routeguide.subview.l -> com.baidu.navisdk.ui.routeguide.subview.l:
    android.content.Context a -> a
    com.baidu.navisdk.ui.routeguide.subview.i b -> b
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.m -> com.baidu.navisdk.ui.routeguide.subview.m:
    android.content.Context a -> a
    com.baidu.navisdk.ui.routeguide.subview.i b -> b
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.n -> com.baidu.navisdk.ui.routeguide.subview.n:
    com.baidu.navisdk.util.common.PreferenceHelper a -> a
    com.baidu.navisdk.ui.routeguide.subview.i b -> b
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.o -> com.baidu.navisdk.ui.routeguide.subview.o:
    com.baidu.navisdk.ui.routeguide.subview.i a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.p -> com.baidu.navisdk.ui.routeguide.subview.p:
    com.baidu.navisdk.ui.routeguide.subview.i a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.q -> com.baidu.navisdk.ui.routeguide.subview.q:
    com.baidu.navisdk.ui.routeguide.subview.i a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.r -> com.baidu.navisdk.ui.routeguide.subview.r:
    java.lang.String b -> b
    boolean c -> c
    android.app.Activity d -> d
    android.content.Context e -> e
    android.view.View f -> f
    android.widget.ImageView g -> g
    android.widget.TextView h -> h
    android.widget.TextView i -> i
    android.widget.ProgressBar j -> j
    android.widget.ImageView k -> k
    android.view.View l -> l
    android.view.View m -> m
    android.widget.ImageView n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    android.graphics.Matrix u -> u
    int v -> v
    int w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    int B -> B
    int C -> C
    int D -> D
    boolean E -> E
    android.graphics.Bitmap F -> F
    android.graphics.Bitmap G -> G
    boolean H -> H
    boolean I -> I
    android.view.animation.Animation$AnimationListener J -> J
    void a() -> a
    void b() -> b
    void c() -> c
    void a(android.os.Bundle) -> a
    void f() -> f
    int h() -> h
    int i() -> i
    void a(boolean,android.os.Bundle) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(int[],int,int) -> a
    void g() -> g
    void j() -> j
    void k() -> k
    void l() -> l
    void m() -> m
    void n() -> n
    void o() -> o
    void a(android.content.res.Configuration) -> a
    boolean a(com.baidu.navisdk.ui.routeguide.subview.r) -> a
    boolean b(com.baidu.navisdk.ui.routeguide.subview.r) -> b
    boolean a(com.baidu.navisdk.ui.routeguide.subview.r,boolean) -> a
    void c(com.baidu.navisdk.ui.routeguide.subview.r) -> c
com.baidu.navisdk.ui.routeguide.subview.s -> com.baidu.navisdk.ui.routeguide.subview.s:
    com.baidu.navisdk.ui.routeguide.subview.r a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.baidu.navisdk.ui.routeguide.subview.t -> com.baidu.navisdk.ui.routeguide.subview.t:
    com.baidu.navisdk.ui.routeguide.subview.r a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.baidu.navisdk.ui.routeguide.subview.u -> com.baidu.navisdk.ui.routeguide.subview.u:
    android.app.Activity b -> b
    android.view.ViewGroup c -> c
    android.view.View d -> d
    boolean e -> e
    com.baidu.navisdk.ui.routeguide.subview.widget.b f -> f
    android.widget.ImageButton g -> g
    android.widget.ImageButton h -> h
    android.widget.RelativeLayout i -> i
    android.widget.TextView j -> j
    com.baidu.navisdk.comapi.mapcontrol.BNMapObserver k -> k
    void d() -> d
    void e() -> e
    void c() -> c
    void onClick(android.view.View) -> onClick
    void a(boolean) -> a
    void a(android.view.MotionEvent) -> a
    void g() -> g
    void h() -> h
    void f() -> f
    void a(com.baidu.navisdk.ui.routeguide.subview.u) -> a
    void a(com.baidu.navisdk.ui.routeguide.subview.u,android.view.MotionEvent) -> a
    void b(com.baidu.navisdk.ui.routeguide.subview.u) -> b
com.baidu.navisdk.ui.routeguide.subview.v -> com.baidu.navisdk.ui.routeguide.subview.v:
    com.baidu.navisdk.ui.routeguide.subview.u a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.w -> com.baidu.navisdk.ui.routeguide.subview.w:
    com.baidu.navisdk.ui.routeguide.subview.u a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView -> com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView:
    com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$b a -> a
    int b -> b
    int c -> c
    int d -> d
    com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$a e -> e
    android.graphics.drawable.Drawable f -> f
    java.lang.String g -> g
    void c() -> c
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    int a(java.lang.String,float) -> a
    void a(android.graphics.Canvas) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void a(int) -> a
    int b() -> b
    void b(int) -> b
    int a(com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView) -> a
    int a(com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView,int) -> a
com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$a -> com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$a:
    android.os.Handler a -> a
    boolean b -> b
    java.util.Timer c -> c
    com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$a$a d -> d
    int e -> e
    int f -> f
    float g -> g
    long i -> i
    com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView h -> h
    void a() -> a
    long a(com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$a,long) -> a
com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$a$a -> com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$a$a:
    com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$a a -> a
    void run() -> run
com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$b -> com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$b:
    android.graphics.RectF a -> a
    boolean b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    android.graphics.Paint h -> h
    android.graphics.Paint i -> i
    android.graphics.Paint j -> j
    android.graphics.Paint k -> k
    com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView l -> l
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void a(boolean) -> a
    void a(int,int) -> a
com.baidu.navisdk.ui.routeguide.subview.widget.a -> com.baidu.navisdk.ui.routeguide.subview.widget.a:
    com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView a -> a
    com.baidu.navisdk.ui.routeguide.subview.widget.CircleProgressImageView$a b -> b
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.ui.routeguide.subview.widget.b -> com.baidu.navisdk.ui.routeguide.subview.widget.b:
    android.view.View b -> b
    android.widget.LinearLayout c -> c
    android.widget.TextView d -> d
    com.baidu.navisdk.ui.routeguide.subview.widget.b$a e -> e
    com.baidu.nplatform.comapi.basestruct.Point f -> f
    com.baidu.nplatform.comapi.basestruct.GeoPoint g -> g
    android.widget.FrameLayout$LayoutParams h -> h
    boolean i -> i
    int j -> j
    int k -> k
    boolean a -> a
    com.baidu.nplatform.comapi.map.MapController l -> l
    int m -> m
    com.baidu.nplatform.comapi.basestruct.GeoPoint a() -> a
    void a(boolean) -> a
    void a(com.baidu.nplatform.comapi.map.MapController) -> a
    void a(com.baidu.nplatform.comapi.basestruct.GeoPoint,java.lang.String,java.lang.String,int,boolean,android.os.Bundle) -> a
    void a(android.os.Bundle) -> a
    void a(com.baidu.nplatform.comapi.basestruct.GeoPoint,int) -> a
    void a(int,int) -> a
    void a(java.lang.String,boolean) -> a
    boolean b() -> b
    void c() -> c
    android.view.View d() -> d
    void onClick(android.view.View) -> onClick
    android.graphics.Bitmap a(int) -> a
    byte[] b(int) -> b
com.baidu.navisdk.ui.routeguide.subview.widget.b$a -> com.baidu.navisdk.ui.routeguide.subview.widget.b$a:
    void a(android.view.View) -> a
com.baidu.navisdk.ui.routeguide.subview.x -> com.baidu.navisdk.ui.routeguide.subview.x:
    com.baidu.navisdk.ui.routeguide.subview.u a -> a
    void update(com.baidu.navisdk.comapi.base.BNSubject,int,int,java.lang.Object) -> update
com.baidu.navisdk.ui.routeguide.subview.y -> com.baidu.navisdk.ui.routeguide.subview.y:
    com.baidu.navisdk.ui.routeguide.subview.b a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    com.baidu.navisdk.ui.widget.AlwaysMarqueeTextView e -> e
    android.content.Context f -> f
    android.view.View g -> g
    android.os.Handler h -> h
    void a() -> a
    void b() -> b
    void dismiss() -> dismiss
    void a(int,int) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String) -> a
    android.content.Context a(com.baidu.navisdk.ui.routeguide.subview.y) -> a
com.baidu.navisdk.ui.routeguide.subview.z -> com.baidu.navisdk.ui.routeguide.subview.z:
    com.baidu.navisdk.ui.routeguide.subview.y a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.ui.util.TipTool -> com.baidu.navisdk.ui.util.TipTool:
    android.widget.Toast a -> a
    void onCreateToastDialog(android.content.Context,java.lang.String) -> onCreateToastDialog
com.baidu.navisdk.ui.util.TipTool$a -> com.baidu.navisdk.ui.util.TipTool$a:
    com.baidu.navisdk.ui.util.TipTool a -> a
com.baidu.navisdk.ui.widget.AlwaysMarqueeTextView -> com.baidu.navisdk.ui.widget.AlwaysMarqueeTextView:
    boolean isFocused() -> isFocused
com.baidu.navisdk.ui.widget.BNBaseDialog -> com.baidu.navisdk.ui.widget.BNBaseDialog:
    android.widget.TextView a -> a
    android.widget.FrameLayout b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    android.widget.LinearLayout e -> e
    android.widget.LinearLayout f -> f
    com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener g -> g
    com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener h -> h
    boolean i -> i
    boolean j -> j
    com.baidu.navisdk.ui.widget.BNBaseDialog setTitleText(java.lang.String) -> setTitleText
    com.baidu.navisdk.ui.widget.BNBaseDialog setFirstBtnText(java.lang.String) -> setFirstBtnText
    com.baidu.navisdk.ui.widget.BNBaseDialog setSecondBtnText(java.lang.String) -> setSecondBtnText
    com.baidu.navisdk.ui.widget.BNBaseDialog setContent(android.view.View) -> setContent
    com.baidu.navisdk.ui.widget.BNBaseDialog setOnFirstBtnClickListener(com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener) -> setOnFirstBtnClickListener
    com.baidu.navisdk.ui.widget.BNBaseDialog setOnFirstBtnClickListener(android.view.View$OnClickListener) -> setOnFirstBtnClickListener
    com.baidu.navisdk.ui.widget.BNBaseDialog setOnSecondBtnClickListener(com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener) -> setOnSecondBtnClickListener
    com.baidu.navisdk.ui.widget.BNBaseDialog setOnSecondBtnClickListener(android.view.View$OnClickListener) -> setOnSecondBtnClickListener
    com.baidu.navisdk.ui.widget.BNBaseDialog setContentWidth(int) -> setContentWidth
    com.baidu.navisdk.ui.widget.BNBaseDialog setContentHeight(int) -> setContentHeight
    com.baidu.navisdk.ui.widget.BNBaseDialog setFirstBtnEnabled(boolean) -> setFirstBtnEnabled
    com.baidu.navisdk.ui.widget.BNBaseDialog setSecondBtnEnabled(boolean) -> setSecondBtnEnabled
    com.baidu.navisdk.ui.widget.BNBaseDialog enableBackKey(boolean) -> enableBackKey
    void a() -> a
    com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener a(com.baidu.navisdk.ui.widget.BNBaseDialog) -> a
    com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener b(com.baidu.navisdk.ui.widget.BNBaseDialog) -> b
com.baidu.navisdk.ui.widget.BNBaseDialog$1 -> com.baidu.navisdk.ui.widget.BNBaseDialog$1:
    com.baidu.navisdk.ui.widget.BNBaseDialog a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.widget.BNBaseDialog$2 -> com.baidu.navisdk.ui.widget.BNBaseDialog$2:
    com.baidu.navisdk.ui.widget.BNBaseDialog a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener -> com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener:
    void onClick() -> onClick
com.baidu.navisdk.ui.widget.BNCommonProgressDialog -> com.baidu.navisdk.ui.widget.BNCommonProgressDialog:
    android.widget.TextView a -> a
    android.widget.ImageView b -> b
    android.content.DialogInterface$OnCancelListener c -> c
    com.baidu.navisdk.ui.widget.BNCommonProgressDialog setMessage(java.lang.String) -> setMessage
    void setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    android.content.DialogInterface$OnCancelListener a(com.baidu.navisdk.ui.widget.BNCommonProgressDialog) -> a
com.baidu.navisdk.ui.widget.BNCommonProgressDialog$1 -> com.baidu.navisdk.ui.widget.BNCommonProgressDialog$1:
    com.baidu.navisdk.ui.widget.BNCommonProgressDialog a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.widget.BNDialog -> com.baidu.navisdk.ui.widget.BNDialog:
    android.widget.TextView a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    android.widget.LinearLayout e -> e
    android.widget.LinearLayout f -> f
    com.baidu.navisdk.ui.widget.BNDialog$OnNaviClickListener g -> g
    com.baidu.navisdk.ui.widget.BNDialog$OnNaviClickListener h -> h
    boolean i -> i
    boolean j -> j
    com.baidu.navisdk.ui.widget.BNDialog setContentMessage(java.lang.String) -> setContentMessage
    com.baidu.navisdk.ui.widget.BNDialog setContentMessage(int) -> setContentMessage
    com.baidu.navisdk.ui.widget.BNDialog setContentMessageFromActivity(int) -> setContentMessageFromActivity
    com.baidu.navisdk.ui.widget.BNDialog setTitleText(java.lang.String) -> setTitleText
    com.baidu.navisdk.ui.widget.BNDialog setTitleText(int) -> setTitleText
    com.baidu.navisdk.ui.widget.BNDialog setTitleTextFromActivity(int) -> setTitleTextFromActivity
    com.baidu.navisdk.ui.widget.BNDialog setFirstBtnText(java.lang.String) -> setFirstBtnText
    com.baidu.navisdk.ui.widget.BNDialog setFirstBtnTextFromActivity(int) -> setFirstBtnTextFromActivity
    com.baidu.navisdk.ui.widget.BNDialog setFirstBtnText(int) -> setFirstBtnText
    com.baidu.navisdk.ui.widget.BNDialog setSecondBtnText(java.lang.String) -> setSecondBtnText
    com.baidu.navisdk.ui.widget.BNDialog setSecondBtnTextFromActivity(int) -> setSecondBtnTextFromActivity
    com.baidu.navisdk.ui.widget.BNDialog setSecondBtnText(int) -> setSecondBtnText
    com.baidu.navisdk.ui.widget.BNDialog setOnFirstBtnClickListener(com.baidu.navisdk.ui.widget.BNDialog$OnNaviClickListener) -> setOnFirstBtnClickListener
    com.baidu.navisdk.ui.widget.BNDialog setOnFirstBtnClickListener(android.view.View$OnClickListener) -> setOnFirstBtnClickListener
    com.baidu.navisdk.ui.widget.BNDialog setOnSecondBtnClickListener(com.baidu.navisdk.ui.widget.BNDialog$OnNaviClickListener) -> setOnSecondBtnClickListener
    com.baidu.navisdk.ui.widget.BNDialog setOnSecondBtnClickListener(android.view.View$OnClickListener) -> setOnSecondBtnClickListener
    com.baidu.navisdk.ui.widget.BNDialog setFirstBtnEnabled(boolean) -> setFirstBtnEnabled
    com.baidu.navisdk.ui.widget.BNDialog setSecondBtnEnabled(boolean) -> setSecondBtnEnabled
    com.baidu.navisdk.ui.widget.BNDialog enableBackKey(boolean) -> enableBackKey
    void a() -> a
    com.baidu.navisdk.ui.widget.BNDialog$OnNaviClickListener a(com.baidu.navisdk.ui.widget.BNDialog) -> a
    com.baidu.navisdk.ui.widget.BNDialog$OnNaviClickListener b(com.baidu.navisdk.ui.widget.BNDialog) -> b
com.baidu.navisdk.ui.widget.BNDialog$1 -> com.baidu.navisdk.ui.widget.BNDialog$1:
    com.baidu.navisdk.ui.widget.BNDialog a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.widget.BNDialog$2 -> com.baidu.navisdk.ui.widget.BNDialog$2:
    com.baidu.navisdk.ui.widget.BNDialog a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.widget.BNDialog$OnNaviClickListener -> com.baidu.navisdk.ui.widget.BNDialog$OnNaviClickListener:
    void onClick() -> onClick
com.baidu.navisdk.ui.widget.BNMessageDialog -> com.baidu.navisdk.ui.widget.BNMessageDialog:
    android.widget.TextView a -> a
    com.baidu.navisdk.ui.widget.BNMessageDialog setMessage(java.lang.String) -> setMessage
    com.baidu.navisdk.ui.widget.BNMessageDialog setMessageWidth(int) -> setMessageWidth
    com.baidu.navisdk.ui.widget.BNMessageDialog setMessageHeight(int) -> setMessageHeight
    com.baidu.navisdk.ui.widget.BNMessageDialog setTitleText(java.lang.String) -> setTitleText
    com.baidu.navisdk.ui.widget.BNMessageDialog setFirstBtnText(java.lang.String) -> setFirstBtnText
    com.baidu.navisdk.ui.widget.BNMessageDialog setSecondBtnText(java.lang.String) -> setSecondBtnText
    com.baidu.navisdk.ui.widget.BNMessageDialog setContent(android.view.View) -> setContent
    com.baidu.navisdk.ui.widget.BNMessageDialog setOnFirstBtnClickListener(com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener) -> setOnFirstBtnClickListener
    com.baidu.navisdk.ui.widget.BNMessageDialog setOnSecondBtnClickListener(com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener) -> setOnSecondBtnClickListener
    com.baidu.navisdk.ui.widget.BNMessageDialog setContentWidth(int) -> setContentWidth
    com.baidu.navisdk.ui.widget.BNMessageDialog setContentHeight(int) -> setContentHeight
    com.baidu.navisdk.ui.widget.BNMessageDialog setFirstBtnEnabled(boolean) -> setFirstBtnEnabled
    com.baidu.navisdk.ui.widget.BNMessageDialog setSecondBtnEnabled(boolean) -> setSecondBtnEnabled
    com.baidu.navisdk.ui.widget.BNMessageDialog enableBackKey(boolean) -> enableBackKey
    com.baidu.navisdk.ui.widget.BNBaseDialog enableBackKey(boolean) -> enableBackKey
    com.baidu.navisdk.ui.widget.BNBaseDialog setSecondBtnEnabled(boolean) -> setSecondBtnEnabled
    com.baidu.navisdk.ui.widget.BNBaseDialog setFirstBtnEnabled(boolean) -> setFirstBtnEnabled
    com.baidu.navisdk.ui.widget.BNBaseDialog setContentHeight(int) -> setContentHeight
    com.baidu.navisdk.ui.widget.BNBaseDialog setContentWidth(int) -> setContentWidth
    com.baidu.navisdk.ui.widget.BNBaseDialog setOnSecondBtnClickListener(com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener) -> setOnSecondBtnClickListener
    com.baidu.navisdk.ui.widget.BNBaseDialog setOnFirstBtnClickListener(com.baidu.navisdk.ui.widget.BNBaseDialog$OnNaviClickListener) -> setOnFirstBtnClickListener
    com.baidu.navisdk.ui.widget.BNBaseDialog setContent(android.view.View) -> setContent
    com.baidu.navisdk.ui.widget.BNBaseDialog setSecondBtnText(java.lang.String) -> setSecondBtnText
    com.baidu.navisdk.ui.widget.BNBaseDialog setFirstBtnText(java.lang.String) -> setFirstBtnText
    com.baidu.navisdk.ui.widget.BNBaseDialog setTitleText(java.lang.String) -> setTitleText
com.baidu.navisdk.ui.widget.BNNetworkingDialog -> com.baidu.navisdk.ui.widget.BNNetworkingDialog:
    android.widget.TextView a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    com.baidu.navisdk.ui.widget.BNNetworkingDialog$OnBackPressedListener e -> e
    com.baidu.navisdk.ui.widget.BNNetworkingDialog setNetworkingContentMessage(java.lang.String) -> setNetworkingContentMessage
    com.baidu.navisdk.ui.widget.BNNetworkingDialog setConfirmNetworkMessage(java.lang.String) -> setConfirmNetworkMessage
    com.baidu.navisdk.ui.widget.BNNetworkingDialog setConfirmNetworkingListener(android.view.View$OnClickListener) -> setConfirmNetworkingListener
    com.baidu.navisdk.ui.widget.BNNetworkingDialog setDownloadListener(android.view.View$OnClickListener) -> setDownloadListener
    com.baidu.navisdk.ui.widget.BNNetworkingDialog setCancleListener(android.view.View$OnClickListener) -> setCancleListener
    com.baidu.navisdk.ui.widget.BNNetworkingDialog setTwoButtonMode(boolean) -> setTwoButtonMode
    com.baidu.navisdk.ui.widget.BNNetworkingDialog setOneButtonMode(boolean) -> setOneButtonMode
    void onBackPressed() -> onBackPressed
    com.baidu.navisdk.ui.widget.BNNetworkingDialog setOnBackPressedListener(com.baidu.navisdk.ui.widget.BNNetworkingDialog$OnBackPressedListener) -> setOnBackPressedListener
com.baidu.navisdk.ui.widget.BNNetworkingDialog$OnBackPressedListener -> com.baidu.navisdk.ui.widget.BNNetworkingDialog$OnBackPressedListener:
    void onBackPressed() -> onBackPressed
com.baidu.navisdk.ui.widget.NewerGuideDialog -> com.baidu.navisdk.ui.widget.NewerGuideDialog:
    android.app.Activity a -> a
    android.widget.RelativeLayout b -> b
    android.widget.ImageView c -> c
    com.baidu.navisdk.ui.widget.NewerGuideDialog addHighLightView(android.view.View,int,boolean) -> addHighLightView
    void dissmss() -> dissmss
com.baidu.navisdk.ui.widget.NewerGuideDialog$1 -> com.baidu.navisdk.ui.widget.NewerGuideDialog$1:
    com.baidu.navisdk.ui.widget.NewerGuideDialog a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.widget.RoutePlanObserver -> com.baidu.navisdk.ui.widget.RoutePlanObserver:
    android.app.Activity a -> a
    com.baidu.navisdk.ui.widget.BNMessageDialog b -> b
    com.baidu.navisdk.ui.widget.BNNetworkingDialog c -> c
    com.baidu.navisdk.ui.widget.BNNetworkingDialog d -> d
    com.baidu.navisdk.ui.widget.BNCommonProgressDialog e -> e
    com.baidu.navisdk.ui.widget.RoutePlanObserver$IJumpToDownloadListener f -> f
    void onRouterPlanTipShow(com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver$FailArg) -> onRouterPlanTipShow
    void onRouterPlanFailReasonShow(com.baidu.navisdk.comapi.routeplan.BNRoutePlanObserver$FailArg) -> onRouterPlanFailReasonShow
    void showMessageDialog(android.content.Context,java.lang.String) -> showMessageDialog
    boolean dismissMessageDialog() -> dismissMessageDialog
    void showRoutePlanNetworkingDialog(android.content.Context,java.lang.String,java.lang.String,android.view.View$OnClickListener,android.view.View$OnClickListener,android.view.View$OnClickListener) -> showRoutePlanNetworkingDialog
    boolean dismissRoutePlanNetworkingDialog() -> dismissRoutePlanNetworkingDialog
    void showRoutePlanAvoidTrafficJamDialog(android.content.Context,java.lang.String,java.lang.String,android.view.View$OnClickListener,android.view.View$OnClickListener) -> showRoutePlanAvoidTrafficJamDialog
    boolean dismissRoutePlanAvoidTrafficJamDialog() -> dismissRoutePlanAvoidTrafficJamDialog
    void showWaitProgressDialog(android.content.Context) -> showWaitProgressDialog
    boolean dismissWaitProgressDialog() -> dismissWaitProgressDialog
    void update(com.baidu.navisdk.comapi.base.BNSubject,int,int,java.lang.Object) -> update
    com.baidu.navisdk.ui.widget.RoutePlanObserver$IJumpToDownloadListener a(com.baidu.navisdk.ui.widget.RoutePlanObserver) -> a
com.baidu.navisdk.ui.widget.RoutePlanObserver$1 -> com.baidu.navisdk.ui.widget.RoutePlanObserver$1:
    com.baidu.navisdk.ui.widget.RoutePlanObserver a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.baidu.navisdk.ui.widget.RoutePlanObserver$2 -> com.baidu.navisdk.ui.widget.RoutePlanObserver$2:
    com.baidu.navisdk.ui.widget.RoutePlanObserver a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.widget.RoutePlanObserver$3 -> com.baidu.navisdk.ui.widget.RoutePlanObserver$3:
    com.baidu.navisdk.ui.widget.RoutePlanObserver a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.widget.RoutePlanObserver$4 -> com.baidu.navisdk.ui.widget.RoutePlanObserver$4:
    com.baidu.navisdk.ui.widget.RoutePlanObserver a -> a
    void onClick(android.view.View) -> onClick
com.baidu.navisdk.ui.widget.RoutePlanObserver$IJumpToDownloadListener -> com.baidu.navisdk.ui.widget.RoutePlanObserver$IJumpToDownloadListener:
    void onJumpToDownloadOfflineData() -> onJumpToDownloadOfflineData
com.baidu.navisdk.util.SysOSAPI -> com.baidu.navisdk.util.SysOSAPI:
    java.lang.String ROOT_FOLDER -> ROOT_FOLDER
    java.lang.String CFG_FOLDER -> CFG_FOLDER
    int DENSITY_DEFAULT -> DENSITY_DEFAULT
    int MAP_MAX_SDCARD -> MAP_MAX_SDCARD
    int DOM_MAX_SDCARD -> DOM_MAX_SDCARD
    int ITS_MAX_SDCARD -> ITS_MAX_SDCARD
    int MAP_MAX -> MAP_MAX
    int DOM_MAX -> DOM_MAX
    int ITS_MAX -> ITS_MAX
    int K_MAP_RES_CONFIG_NORMAL -> K_MAP_RES_CONFIG_NORMAL
    int K_MAP_RES_CONFIG_SIMPLE -> K_MAP_RES_CONFIG_SIMPLE
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    int z -> z
    int A -> A
    int B -> B
    android.app.Activity mActivity -> mActivity
    int sdkVersion -> sdkVersion
    float density -> density
    boolean C -> C
    java.lang.String D -> D
    java.lang.String[] paths -> paths
    java.lang.String[] labels -> labels
    java.lang.String[] sizes -> sizes
    java.lang.String sdcardPath -> sdcardPath
    int E -> E
    int F -> F
    java.lang.String G -> G
    int SDCARD_MODE_STANDARD -> SDCARD_MODE_STANDARD
    int SDCARD_MODE_PRIORITY_EXT -> SDCARD_MODE_PRIORITY_EXT
    int SDCARD_MODE_ANDROID_INTERFACE -> SDCARD_MODE_ANDROID_INTERFACE
    java.lang.String H -> H
    void a(android.content.Context) -> a
    int getVersionCode() -> getVersionCode
    void a(android.app.Activity) -> a
    java.lang.String getStrAppInROM() -> getStrAppInROM
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    java.lang.String getImeiRand(android.content.Context) -> getImeiRand
    java.lang.String e(android.content.Context) -> e
    java.lang.String generateImeiRand() -> generateImeiRand
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
    void updateScreenSize(android.content.Context) -> updateScreenSize
    void initSDcardPath(java.lang.String) -> initSDcardPath
    void init(android.app.Activity) -> init
    void unInit() -> unInit
    void saveSDCardSelection(java.lang.String) -> saveSDCardSelection
    void initEngineRes(android.content.Context) -> initEngineRes
    int a() -> a
    java.lang.String[] b() -> b
    android.os.Bundle initPhoneInfo() -> initPhoneInfo
    void c() -> c
    void releaseComomMemCache() -> releaseComomMemCache
    java.lang.String getSataInfo(boolean,android.graphics.Point) -> getSataInfo
    void updateNetType(java.lang.String) -> updateNetType
    java.lang.String getNetType() -> getNetType
    void updatePhoneInfo() -> updatePhoneInfo
    void updateGLinfo(java.lang.String,java.lang.String) -> updateGLinfo
    java.lang.String GetPhoneType() -> GetPhoneType
    int GetScreenSizeX() -> GetScreenSizeX
    java.lang.String GetSoftWareVer() -> GetSoftWareVer
    int GetScreenSizeY() -> GetScreenSizeY
    java.lang.String GetPhoneOS() -> GetPhoneOS
    int GetDPIX() -> GetDPIX
    int GetDPIY() -> GetDPIY
    int GetDensityDpi() -> GetDensityDpi
    java.lang.String GetImeiNum() -> GetImeiNum
    java.lang.String GetImeiRand() -> GetImeiRand
    java.lang.String GetImsiNum() -> GetImsiNum
    java.lang.String GetAndroidId() -> GetAndroidId
    java.lang.String GetModuleFileName() -> GetModuleFileName
    java.lang.String GetMacNum() -> GetMacNum
    java.lang.String GetIpAddr() -> GetIpAddr
    void setAppFolderName(java.lang.String) -> setAppFolderName
    java.lang.String getAppFolderName() -> getAppFolderName
    java.lang.String GetSDCardPath() -> GetSDCardPath
    java.lang.String GetSDCardCachePath() -> GetSDCardCachePath
    java.lang.String GetCachePath() -> GetCachePath
    java.lang.String getSecondCachePath() -> getSecondCachePath
    int getMapTmpStgMax() -> getMapTmpStgMax
    int getDomTmpStgMax() -> getDomTmpStgMax
    int getItsTmpStgMax() -> getItsTmpStgMax
    java.lang.String GetNetMode() -> GetNetMode
    java.lang.String getCPUProcessor() -> getCPUProcessor
    java.lang.String getGLRenderer() -> getGLRenderer
    void a(java.lang.String) -> a
    java.lang.String getStrSoftWareVer() -> getStrSoftWareVer
    java.lang.String getGLVersion() -> getGLVersion
    void b(java.lang.String) -> b
    int getLocGPSOn() -> getLocGPSOn
    java.lang.String getChannel() -> getChannel
    int getLocNetOn() -> getLocNetOn
    byte[] getPackageSignature(android.content.Context) -> getPackageSignature
    java.lang.String getCuid() -> getCuid
    void setCuid(java.lang.String) -> setCuid
com.baidu.navisdk.util.SysOSAPI$1 -> com.baidu.navisdk.util.SysOSAPI$1:
com.baidu.navisdk.util.SysOSAPI$SingletonObject2 -> com.baidu.navisdk.util.SysOSAPI$SingletonObject2:
    com.baidu.navisdk.util.SysOSAPI$SingletonObject2 getInstance() -> getInstance
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    android.graphics.Bitmap getAvatarByPhoneNumber(android.content.Context,java.lang.String) -> getAvatarByPhoneNumber
    java.lang.String getNameByPhoneNumber(android.content.Context,java.lang.String) -> getNameByPhoneNumber
com.baidu.navisdk.util.SysOSAPI$SingletonObject2$SingletonHolder -> com.baidu.navisdk.util.SysOSAPI$SingletonObject2$SingletonHolder:
    com.baidu.navisdk.util.SysOSAPI$SingletonObject2 a -> a
    com.baidu.navisdk.util.SysOSAPI$SingletonObject2 a() -> a
com.baidu.navisdk.util.common.BNEngineStatistics -> com.baidu.navisdk.util.common.BNEngineStatistics:
    java.lang.String a -> a
    com.baidu.navisdk.util.common.BNEngineStatistics b -> b
    java.util.concurrent.ThreadPoolExecutor c -> c
    android.os.Handler d -> d
    com.baidu.navisdk.util.common.BNEngineStatistics getInstance() -> getInstance
    void init() -> init
    void destory() -> destory
    void c() -> c
    java.lang.String a() -> a
    java.util.concurrent.ThreadPoolExecutor b() -> b
com.baidu.navisdk.util.common.BNEngineStatistics$1 -> com.baidu.navisdk.util.common.BNEngineStatistics$1:
    com.baidu.navisdk.util.common.BNEngineStatistics a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.util.common.BNEngineStatistics$1$1 -> com.baidu.navisdk.util.common.BNEngineStatistics$1$1:
    int a -> a
    com.baidu.navisdk.util.common.BNEngineStatistics$1 b -> b
    void run() -> run
com.baidu.navisdk.util.common.BNStatisticsManager -> com.baidu.navisdk.util.common.BNStatisticsManager:
    com.baidu.navisdk.util.common.IBNStatisticsListener a -> a
    void setStatisticsListener(com.baidu.navisdk.util.common.IBNStatisticsListener) -> setStatisticsListener
    void init(android.content.Context) -> init
    java.lang.String a() -> a
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEventStart(android.content.Context,java.lang.String,java.lang.String) -> onEventStart
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,int) -> onEventDuration
com.baidu.navisdk.util.common.BaseUtils -> com.baidu.navisdk.util.common.BaseUtils:
    int TITLE_HEIGHT -> TITLE_HEIGHT
    java.lang.String mUUID -> mUUID
    java.lang.String getIMEI(android.content.Context) -> getIMEI
    boolean writePrivateFile(android.content.Context,java.lang.String,java.lang.String) -> writePrivateFile
    boolean writePrivateFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> writePrivateFile
    java.lang.String readPrivateFileData(android.content.Context,java.lang.String) -> readPrivateFileData
    java.lang.String readPrivateFileData(android.content.Context,java.lang.String,java.lang.String) -> readPrivateFileData
    boolean writeSDFile(java.lang.String,java.lang.String) -> writeSDFile
    boolean writeSDFile(java.lang.String,java.lang.String,java.lang.String) -> writeSDFile
    java.lang.String readSDFileData(java.lang.String) -> readSDFileData
    java.lang.String readSDFileData(java.lang.String,java.lang.String) -> readSDFileData
    boolean deleteDir(java.io.File) -> deleteDir
    java.lang.String md5Encode(java.lang.String) -> md5Encode
    boolean isVoid(java.lang.String) -> isVoid
    java.lang.String toGbk(java.lang.String) -> toGbk
    java.lang.String utf8Togb2312(java.lang.String) -> utf8Togb2312
    java.lang.String getUniqueCode(android.content.Context) -> getUniqueCode
    boolean isWifi(android.content.Context) -> isWifi
    java.net.Proxy getDefaultProxy() -> getDefaultProxy
    java.lang.String getSystemVersion(android.content.Context) -> getSystemVersion
    java.lang.String getModel(android.content.Context) -> getModel
    void setHasTitle(android.app.Activity,boolean) -> setHasTitle
    boolean getIsFullScreen(android.app.Activity) -> getIsFullScreen
    void setFullScreen(android.app.Activity,boolean) -> setFullScreen
    void expendNotification(android.app.Activity) -> expendNotification
    void setScreenAutoLock(android.app.Activity,boolean) -> setScreenAutoLock
    void blurWindow(android.app.Activity,boolean) -> blurWindow
    boolean getScreenAutoLock(android.app.Activity) -> getScreenAutoLock
    void setRequestedOrientation(android.app.Activity,int) -> setRequestedOrientation
    int getRequestedOrientation(android.app.Activity) -> getRequestedOrientation
    void setScreenBrightness(android.app.Activity,float) -> setScreenBrightness
    float getScreenBrightness(android.app.Activity) -> getScreenBrightness
    float getDensity(android.app.Activity) -> getDensity
    boolean isMediaMounted() -> isMediaMounted
    void setLayoutFlag(android.app.Activity,int) -> setLayoutFlag
    java.lang.String getVersionName(android.content.Context) -> getVersionName
    int getVersionCode(android.content.Context) -> getVersionCode
    void openAppInMarket(android.content.Context) -> openAppInMarket
    void showInputMethod(android.app.Activity) -> showInputMethod
    void hideInputMethod(android.app.Activity) -> hideInputMethod
    boolean isShowInputMethod(android.app.Activity) -> isShowInputMethod
    boolean startWap(java.lang.String,android.content.Context) -> startWap
    void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    java.lang.String getContent(org.apache.http.HttpResponse) -> getContent
    void disableOverScroll(android.view.View) -> disableOverScroll
    void createShortcut(android.app.Activity,int,java.lang.String) -> createShortcut
    int getCpuMaxFreq() -> getCpuMaxFreq
    int getTotalMemory() -> getTotalMemory
com.baidu.navisdk.util.common.CheckSystemFunc -> com.baidu.navisdk.util.common.CheckSystemFunc:
    boolean hasBackCamera -> hasBackCamera
    boolean hasGps -> hasGps
    boolean hasOrientationSensor -> hasOrientationSensor
    boolean telephoneEnable -> telephoneEnable
    boolean voiceEnable -> voiceEnable
    void determineSystemFunc(android.content.Context) -> determineSystemFunc
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
com.baidu.navisdk.util.common.CoordinateTransformUtil -> com.baidu.navisdk.util.common.CoordinateTransformUtil:
com.baidu.navisdk.util.common.DateTimeUtils -> com.baidu.navisdk.util.common.DateTimeUtils:
    java.lang.String[] WEEK -> WEEK
    java.lang.String getDataTime(java.text.SimpleDateFormat) -> getDataTime
    java.lang.String getWeek(java.util.Date) -> getWeek
com.baidu.navisdk.util.common.EglConfigUtils -> com.baidu.navisdk.util.common.EglConfigUtils:
    boolean isSupport24DepthSize() -> isSupport24DepthSize
    boolean isSupportConfig(int,int,int,int,int,int) -> isSupportConfig
com.baidu.navisdk.util.common.EnvironmentUtilities -> com.baidu.navisdk.util.common.EnvironmentUtilities:
    java.lang.String SYSTEM_SEPARATOR -> SYSTEM_SEPARATOR
    boolean isRouteAlertEnable() -> isRouteAlertEnable
    double freePercentage() -> freePercentage
    java.lang.String checkFreeSpaceSdCard() -> checkFreeSpaceSdCard
    long totalSpace() -> totalSpace
    long freeSpace() -> freeSpace
    java.io.File getExternalStorageFile() -> getExternalStorageFile
    java.lang.String getExternalStorageState() -> getExternalStorageState
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    java.lang.String getDownloadCachePath() -> getDownloadCachePath
    boolean externalStorageEnable() -> externalStorageEnable
    boolean writeTestFileToSdcard(java.lang.String) -> writeTestFileToSdcard
    java.lang.String getVersionName(android.content.Context) -> getVersionName
    int getVersionCode(android.content.Context) -> getVersionCode
    int getSystemVersion() -> getSystemVersion
    boolean isEmulator(android.content.Context) -> isEmulator
    boolean getGPSStatus(android.content.Context) -> getGPSStatus
    boolean isCalling(android.content.Context) -> isCalling
    java.lang.String getImei() -> getImei
    java.lang.String getAppVersion() -> getAppVersion
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getOsVersion() -> getOsVersion
    java.lang.String phonetype() -> phonetype
    int getsensortype() -> getsensortype
    int getNetStatus() -> getNetStatus
    void startSensor() -> startSensor
    void stopSensor() -> stopSensor
com.baidu.navisdk.util.common.EnvironmentUtilities$NetConnectStatus -> com.baidu.navisdk.util.common.EnvironmentUtilities$NetConnectStatus:
    int NetStatusInvalid -> NetStatusInvalid
    int NetStatusNoNet -> NetStatusNoNet
    int NetStatusWIFINet -> NetStatusWIFINet
    int NetStatusWWANNet -> NetStatusWWANNet
com.baidu.navisdk.util.common.ForbidDaulClickUtils -> com.baidu.navisdk.util.common.ForbidDaulClickUtils:
    long a -> a
    long b -> b
    boolean isFastDoubleClick() -> isFastDoubleClick
com.baidu.navisdk.util.common.IBNStatisticsListener -> com.baidu.navisdk.util.common.IBNStatisticsListener:
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEventStart(android.content.Context,java.lang.String,java.lang.String) -> onEventStart
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,int) -> onEventDuration
com.baidu.navisdk.util.common.LogUtil -> com.baidu.navisdk.util.common.LogUtil:
    void e(java.lang.String,java.lang.String) -> e
    void f(java.lang.String,java.lang.String) -> f
    java.lang.String a(java.lang.String,java.lang.String,java.lang.StackTraceElement) -> a
com.baidu.navisdk.util.common.MTJStatisticsUtil -> com.baidu.navisdk.util.common.MTJStatisticsUtil:
    long mNaviStartTime -> mNaviStartTime
    long mNaviDuration -> mNaviDuration
    long mARStartTime -> mARStartTime
    long mARDuration -> mARDuration
    int yawingCount -> yawingCount
    int getDurationLevel(long) -> getDurationLevel
com.baidu.navisdk.util.common.MarketChannelHelper -> com.baidu.navisdk.util.common.MarketChannelHelper:
    java.lang.String a -> a
    android.content.Context b -> b
    com.baidu.navisdk.util.common.MarketChannelHelper c -> c
    java.lang.String d -> d
    com.baidu.navisdk.util.common.MarketChannelHelper getInstance(android.content.Context) -> getInstance
    java.lang.String getChannelID() -> getChannelID
    java.lang.String a() -> a
    java.lang.String b() -> b
com.baidu.navisdk.util.common.NaviStatConstants -> com.baidu.navisdk.util.common.NaviStatConstants:
    java.lang.String STAT_EVENT_VERIFY -> STAT_EVENT_VERIFY
    java.lang.String STAT_EVENT_VERIFY_SUCC -> STAT_EVENT_VERIFY_SUCC
    java.lang.String STAT_EVENT_VERIFY_FAILED -> STAT_EVENT_VERIFY_FAILED
    java.lang.String STAT_EVENT_ENTER_NAVI -> STAT_EVENT_ENTER_NAVI
    java.lang.String STAT_EVENT_ENTER_EDOG -> STAT_EVENT_ENTER_EDOG
    java.lang.String STAT_EVENT_NAVI_INIT -> STAT_EVENT_NAVI_INIT
    java.lang.String STAT_EVENT_GUIDANCE_INIT -> STAT_EVENT_GUIDANCE_INIT
    java.lang.String BSTATI_MAP_GESTURE_ZOOMIN -> BSTATI_MAP_GESTURE_ZOOMIN
    java.lang.String BSTATI_MAP_GESTURE_ZOOMOUT -> BSTATI_MAP_GESTURE_ZOOMOUT
    java.lang.String BSTATI_MAP_DOUBLE_CLICK -> BSTATI_MAP_DOUBLE_CLICK
    java.lang.String BSTATI_ITS_BUTTON_CLICK -> BSTATI_ITS_BUTTON_CLICK
    java.lang.String BSTATI_ITS_BUTTON_ON -> BSTATI_ITS_BUTTON_ON
    java.lang.String BSTATI_ITS_BUTTON_OFF -> BSTATI_ITS_BUTTON_OFF
    java.lang.String BSTATI_NAVI_SWITCHTO_TEXTMODE -> BSTATI_NAVI_SWITCHTO_TEXTMODE
    java.lang.String BSTATI_NAVI_SWITCHTO_MAPMODE -> BSTATI_NAVI_SWITCHTO_MAPMODE
    java.lang.String BSTATI_NAVI_CAR_BACK -> BSTATI_NAVI_CAR_BACK
    java.lang.String BSTATI_NAVI_2D_NORTH -> BSTATI_NAVI_2D_NORTH
    java.lang.String BSTATI_NAVI_3D_CAR -> BSTATI_NAVI_3D_CAR
    java.lang.String BSTATI_NAVI_COMPASS -> BSTATI_NAVI_COMPASS
    java.lang.String BSTATI_NAVI_SCALE -> BSTATI_NAVI_SCALE
    java.lang.String BSTATI_NAVI_BTN_ZOOMIN -> BSTATI_NAVI_BTN_ZOOMIN
    java.lang.String BSTATI_NAVI_BTN_ZOOMOUT -> BSTATI_NAVI_BTN_ZOOMOUT
    java.lang.String BSTATI_NAVI_MORE -> BSTATI_NAVI_MORE
    java.lang.String BSTATI_NAVI_MORE_ROUTE -> BSTATI_NAVI_MORE_ROUTE
    java.lang.String BSTATI_NAVI_MORE_EXIT -> BSTATI_NAVI_MORE_EXIT
    java.lang.String BSTATI_NAVI_CLICK_SHOW_REMAININFO -> BSTATI_NAVI_CLICK_SHOW_REMAININFO
    java.lang.String BSTATI_NAVI_HUD -> BSTATI_NAVI_HUD
    java.lang.String BSTATI_NAVI_AR -> BSTATI_NAVI_AR
    java.lang.String BSTATI_NAVI_RouteCondition_CLICK -> BSTATI_NAVI_RouteCondition_CLICK
    java.lang.String BSTATI_NAVI_RouteCondition_ON -> BSTATI_NAVI_RouteCondition_ON
    java.lang.String BSTATI_NAVI_RouteCondition_OFF -> BSTATI_NAVI_RouteCondition_OFF
    java.lang.String BSTATI_NAVI_OVERSPEED_CLICK -> BSTATI_NAVI_OVERSPEED_CLICK
    java.lang.String BSTATI_NAVI_OVERSPEED_OPEN -> BSTATI_NAVI_OVERSPEED_OPEN
    java.lang.String BSTATI_NAVI_OVERSPEED_CLOSE -> BSTATI_NAVI_OVERSPEED_CLOSE
    java.lang.String BSTATI_NAVI_STRAIGHT_CLICK -> BSTATI_NAVI_STRAIGHT_CLICK
    java.lang.String BSTATI_NAVI_STRAIGHT_OPEN -> BSTATI_NAVI_STRAIGHT_OPEN
    java.lang.String BSTATI_NAVI_STRAIGHT_CLOSE -> BSTATI_NAVI_STRAIGHT_CLOSE
    java.lang.String BSTATI_NAVI_SOUNDGUIDANCE_SAFE -> BSTATI_NAVI_SOUNDGUIDANCE_SAFE
    java.lang.String BSTATI_NAVI_SOUNDGUIDANCE_SIMPLE -> BSTATI_NAVI_SOUNDGUIDANCE_SIMPLE
    java.lang.String BSTATI_NAVI_SOUNDGUIDANCE_MUTE -> BSTATI_NAVI_SOUNDGUIDANCE_MUTE
    java.lang.String BSTATI_NAVI_MORE_ROUTEDETAIL -> BSTATI_NAVI_MORE_ROUTEDETAIL
    java.lang.String BSTATI_NAVI_MORE_ROUTE_PLAN -> BSTATI_NAVI_MORE_ROUTE_PLAN
    java.lang.String BSTATI_NAVI_MORE_GETBACK -> BSTATI_NAVI_MORE_GETBACK
    java.lang.String BSTATI_NAVI_MORE_SEARCHAROUND -> BSTATI_NAVI_MORE_SEARCHAROUND
    java.lang.String BSTATI_NAVI_YAW -> BSTATI_NAVI_YAW
    java.lang.String BSTATI_NAVI_YAW_FAIL -> BSTATI_NAVI_YAW_FAIL
    java.lang.String BSTATI_NAVI_DURATION -> BSTATI_NAVI_DURATION
    java.lang.String BSTATI_NAVI_AR_DURATION -> BSTATI_NAVI_AR_DURATION
    java.lang.String BSTATI_NAVI_BACK_QUIT -> BSTATI_NAVI_BACK_QUIT
    java.lang.String BSTATI_NAVI_QUIT_CONFIRM -> BSTATI_NAVI_QUIT_CONFIRM
    java.lang.String BSTATI_NAVI_QUIT_CANCEL -> BSTATI_NAVI_QUIT_CANCEL
    java.lang.String BSTATI_NAVI_AVERAGE_DURATION -> BSTATI_NAVI_AVERAGE_DURATION
    java.lang.String BSTATI_DEMONAVI_PAUSE -> BSTATI_DEMONAVI_PAUSE
    java.lang.String BSTATI_DEMONAVI_RESUME -> BSTATI_DEMONAVI_RESUME
    java.lang.String BSTATI_DEMONAVI_SPEEDCONTROL -> BSTATI_DEMONAVI_SPEEDCONTROL
    java.lang.String BSTATI_DEMONAVI_ENTERCARBUTTON -> BSTATI_DEMONAVI_ENTERCARBUTTON
    java.lang.String BSTATI_DEMONAVI_2D_NORTH -> BSTATI_DEMONAVI_2D_NORTH
    java.lang.String BSTATI_DEMONAVI_3D_CAR -> BSTATI_DEMONAVI_3D_CAR
    java.lang.String BSTATI_CRUISE_SAVE_ENERGY -> BSTATI_CRUISE_SAVE_ENERGY
    java.lang.String BSTATI_CRUISE_MAP_MODE -> BSTATI_CRUISE_MAP_MODE
    java.lang.String BSTATI_CRUISE_VOICE_MODE -> BSTATI_CRUISE_VOICE_MODE
    java.lang.String BSTATI_CRUISE_CAMERA_OPEN -> BSTATI_CRUISE_CAMERA_OPEN
    java.lang.String BSTATI_CRUISE_CAMERA_CLOSE -> BSTATI_CRUISE_CAMERA_CLOSE
    java.lang.String BSTATI_CRUISE_SAFE_OPEN -> BSTATI_CRUISE_SAFE_OPEN
    java.lang.String BSTATI_CRUISE_SAFE_CLOSE -> BSTATI_CRUISE_SAFE_CLOSE
    java.lang.String BSTATI_CRUISE_MAIN_AUXILIARY_SHOW -> BSTATI_CRUISE_MAIN_AUXILIARY_SHOW
    java.lang.String BSTATI_CRUISE_MAIN_AUXILIARY_CLICK -> BSTATI_CRUISE_MAIN_AUXILIARY_CLICK
    java.lang.String BSTATI_RP_COUNT -> BSTATI_RP_COUNT
    java.lang.String BSTATI_RP_SUCCESS -> BSTATI_RP_SUCCESS
    java.lang.String BSTATI_RP_FAIL -> BSTATI_RP_FAIL
    java.lang.String BSTATI_RP_YAWING_SUCCESS -> BSTATI_RP_YAWING_SUCCESS
    java.lang.String BSTATI_RP_YAWING_FAIL -> BSTATI_RP_YAWING_FAIL
    java.lang.String BSTATI_RP_VIA_COUNT -> BSTATI_RP_VIA_COUNT
    java.lang.String BSTATI_RP_ONLINE -> BSTATI_RP_ONLINE
    java.lang.String BSTATI_RP_ONLINE_SUCCESS -> BSTATI_RP_ONLINE_SUCCESS
    java.lang.String BSTATI_RP_ONLINE_YAWING -> BSTATI_RP_ONLINE_YAWING
    java.lang.String BSTATI_RP_OFFLINE_YAWING -> BSTATI_RP_OFFLINE_YAWING
    java.lang.String BSTATI_RP_OFFLINE_RESPONSE_DURATION -> BSTATI_RP_OFFLINE_RESPONSE_DURATION
    java.lang.String BSTATI_RP_ONLINE_RESPONSE_DURATION -> BSTATI_RP_ONLINE_RESPONSE_DURATION
    java.lang.String BSTATI_RP_ONLINE_RECOMMEND -> BSTATI_RP_ONLINE_RECOMMEND
    java.lang.String BSTATI_RP_ONLINE_MIN_TOLL -> BSTATI_RP_ONLINE_MIN_TOLL
    java.lang.String BSTATI_RP_ONLINE_MIN_DIST -> BSTATI_RP_ONLINE_MIN_DIST
    java.lang.String BSTATI_RP_ONLINE_AVOID_TAFFICJAM -> BSTATI_RP_ONLINE_AVOID_TAFFICJAM
    java.lang.String BSTATI_RP_OFFLINE_RECOMMEND -> BSTATI_RP_OFFLINE_RECOMMEND
    java.lang.String BSTATI_RP_OFFLINE_MIN_TOLL -> BSTATI_RP_OFFLINE_MIN_TOLL
    java.lang.String BSTATI_RP_OFFLINE_MIN_DIST -> BSTATI_RP_OFFLINE_MIN_DIST
    java.lang.String BSTATI_RP_OFFLINE_FAIL -> BSTATI_RP_OFFLINE_FAIL
    java.lang.String BSTATI_RP_OFFLINE_RECOMMEND_FAIL -> BSTATI_RP_OFFLINE_RECOMMEND_FAIL
    java.lang.String BSTATI_RP_OFFLINE_MIN_DIST_FAIL -> BSTATI_RP_OFFLINE_MIN_DIST_FAIL
    java.lang.String BSTATI_RP_OFFLINE_MIN_TOLL_FAIL -> BSTATI_RP_OFFLINE_MIN_TOLL_FAIL
    java.lang.String BSTATI_RP_ONLINE_FAIL -> BSTATI_RP_ONLINE_FAIL
    java.lang.String BSTATI_RP_ONLINE_RECOMMEND_FAIL -> BSTATI_RP_ONLINE_RECOMMEND_FAIL
    java.lang.String BSTATI_RP_ONLINE_MIN_DIST_FAIL -> BSTATI_RP_ONLINE_MIN_DIST_FAIL
    java.lang.String BSTATI_RP_ONLINE_MIN_TOLL_FAIL -> BSTATI_RP_ONLINE_MIN_TOLL_FAIL
    java.lang.String BSTATI_RP_ONLINE_AVOID_TAFFICJAM_FAIL -> BSTATI_RP_ONLINE_AVOID_TAFFICJAM_FAIL
    java.lang.String BSTATI_RP_RESULT_FAIL_LOW_VERSION -> BSTATI_RP_RESULT_FAIL_LOW_VERSION
    java.lang.String BSTATI_RP_RESULT_FAIL_WRONG_VERSION -> BSTATI_RP_RESULT_FAIL_WRONG_VERSION
    java.lang.String BSTATI_RP_RESULT_FAIL_NO_START -> BSTATI_RP_RESULT_FAIL_NO_START
    java.lang.String BSTATI_RP_RESULT_FAIL_NO_STOP -> BSTATI_RP_RESULT_FAIL_NO_STOP
    java.lang.String BSTATI_RP_RESULT_FAIL_WRONG_COORD -> BSTATI_RP_RESULT_FAIL_WRONG_COORD
    java.lang.String BSTATI_RP_RESULT_FAIL_CALC_FAIL -> BSTATI_RP_RESULT_FAIL_CALC_FAIL
    java.lang.String BSTATI_RP_RESULT_FAIL_SERVER_UNUSUAL -> BSTATI_RP_RESULT_FAIL_SERVER_UNUSUAL
    java.lang.String BSTATI_RP_RESULT_FAIL_PARSE_FAIL -> BSTATI_RP_RESULT_FAIL_PARSE_FAIL
    java.lang.String BSTATI_RP_RESULT_FAIL_WAYPOINT_DUPLICATE -> BSTATI_RP_RESULT_FAIL_WAYPOINT_DUPLICATE
    java.lang.String BSTATI_RP_RESULT_FAIL_NET_ERR -> BSTATI_RP_RESULT_FAIL_NET_ERR
    java.lang.String BSTATI_RP_RESULT_SUCCESS_ONLY_RC -> BSTATI_RP_RESULT_SUCCESS_ONLY_RC
    java.lang.String BSTATI_RP_RESULT_FAIL_CALC_CANCEL -> BSTATI_RP_RESULT_FAIL_CALC_CANCEL
    java.lang.String BSTATI_RP_RESULT_FAIL_START_DEVIATE -> BSTATI_RP_RESULT_FAIL_START_DEVIATE
    java.lang.String BSTATI_RP_RESULT_FAIL_DEST1_DEVIATE -> BSTATI_RP_RESULT_FAIL_DEST1_DEVIATE
    java.lang.String BSTATI_RP_RESULT_FAIL_DEST2_DEVIATE -> BSTATI_RP_RESULT_FAIL_DEST2_DEVIATE
    java.lang.String BSTATI_RP_RESULT_FAIL_DEST3_DEVIATE -> BSTATI_RP_RESULT_FAIL_DEST3_DEVIATE
    java.lang.String BSTATI_RP_RESULT_FAIL_DEST4_DEVIATE -> BSTATI_RP_RESULT_FAIL_DEST4_DEVIATE
    java.lang.String BSTATI_RP_RESULT_FAIL_DEST5_DEVIATE -> BSTATI_RP_RESULT_FAIL_DEST5_DEVIATE
    java.lang.String BSTATI_RP_RESULT_FAIL_TOO_CLOSE -> BSTATI_RP_RESULT_FAIL_TOO_CLOSE
    java.lang.String BSTATI_RP_RESULT_FAIL_DATA_LACK -> BSTATI_RP_RESULT_FAIL_DATA_LACK
    java.lang.String BSTATI_RP_AVERAGE_DURATION -> BSTATI_RP_AVERAGE_DURATION
    java.lang.String BSTATI_CLICK_UPDATE_DATA -> BSTATI_CLICK_UPDATE_DATA
    java.lang.String BSTATI_DATA_WIFI_CONFIRM -> BSTATI_DATA_WIFI_CONFIRM
    java.lang.String BSTATI_DATA_WIFI_CANCEL -> BSTATI_DATA_WIFI_CANCEL
    java.lang.String OFFLINERES_ENTER_PAGE -> OFFLINERES_ENTER_PAGE
    java.lang.String OFFLINERES_ADDPROVINCETAB_CLICK -> OFFLINERES_ADDPROVINCETAB_CLICK
    java.lang.String OFFLINERES_SUPPENDALL -> OFFLINERES_SUPPENDALL
    java.lang.String OFFLINERES_DOWNLOADALL -> OFFLINERES_DOWNLOADALL
    java.lang.String OFFLINERES_UPDATEALL -> OFFLINERES_UPDATEALL
    java.lang.String OFFLINERES_DOWNLOADINGCELL_CLICK -> OFFLINERES_DOWNLOADINGCELL_CLICK
    java.lang.String OFFLINERES_DOWNLOADINGCELL_CONTINUE_DOWNLOAD -> OFFLINERES_DOWNLOADINGCELL_CONTINUE_DOWNLOAD
    java.lang.String OFFLINERES_DOWNLOADINGCELL_DELETE -> OFFLINERES_DOWNLOADINGCELL_DELETE
    java.lang.String OFFLINERES_DOWNLOADINGCELL_SUPPEND -> OFFLINERES_DOWNLOADINGCELL_SUPPEND
    java.lang.String OFFLINERES_DOWNLOADEDCELL_CLICK -> OFFLINERES_DOWNLOADEDCELL_CLICK
    java.lang.String OFFLINERES_DOWNLOADEDCELL_DELETE -> OFFLINERES_DOWNLOADEDCELL_DELETE
    java.lang.String OFFLINERES_DOWNLOADEDCELL_UPDATE -> OFFLINERES_DOWNLOADEDCELL_UPDATE
    java.lang.String OFFLINERES_2G_TIP_CANCEL -> OFFLINERES_2G_TIP_CANCEL
    java.lang.String OFFLINERES_2G_TIP_OK -> OFFLINERES_2G_TIP_OK
    java.lang.String OFFLINERES_VERSION_UPDATE -> OFFLINERES_VERSION_UPDATE
    java.lang.String OFFLINERES_VERUPDATE_CHECK -> OFFLINERES_VERUPDATE_CHECK
    java.lang.String OFFLINERES_VERUPDATE_IGNORE -> OFFLINERES_VERUPDATE_IGNORE
    java.lang.String OFFLINERES_SEARCH_COUNT -> OFFLINERES_SEARCH_COUNT
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String VERIFY_COUNT -> VERIFY_COUNT
    java.lang.String VERIFY_SUCCESS_COUNT -> VERIFY_SUCCESS_COUNT
    java.lang.String VERIFY_FAIL_COUNT -> VERIFY_FAIL_COUNT
com.baidu.navisdk.util.common.NetUtils -> com.baidu.navisdk.util.common.NetUtils:
    java.lang.String getContent(org.apache.http.HttpResponse) -> getContent
com.baidu.navisdk.util.common.NetworkListener -> com.baidu.navisdk.util.common.NetworkListener:
    int NETWORK_UNKNOWN -> NETWORK_UNKNOWN
    int NETWORK_MOBILE -> NETWORK_MOBILE
    int NETWORK_WIFI -> NETWORK_WIFI
    int NETWORK_GSM -> NETWORK_GSM
    int NETWORK_CDMA -> NETWORK_CDMA
    int NETWORK_UMTS -> NETWORK_UMTS
    int CONNECT_UNKNOWN -> CONNECT_UNKNOWN
    int CONNECT_LOST -> CONNECT_LOST
    int CONNECT_OK -> CONNECT_OK
    int MSG_TYPE_NET_WORK_CHANGE -> MSG_TYPE_NET_WORK_CHANGE
    java.util.List a -> a
    void registerMessageHandler(android.os.Handler) -> registerMessageHandler
    void unRegisterMessageHandler(android.os.Handler) -> unRegisterMessageHandler
    void a(int,int,int) -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
    boolean getConnectStatus() -> getConnectStatus
com.baidu.navisdk.util.common.NetworkUtils -> com.baidu.navisdk.util.common.NetworkUtils:
    int NETYPE_UNKNOWN -> NETYPE_UNKNOWN
    int NETYPE_WIFI -> NETYPE_WIFI
    int NETYPE_2G -> NETYPE_2G
    int NETYPE_3G -> NETYPE_3G
    int NETYPE_4G -> NETYPE_4G
    int NETYPE_TELECOM_2G -> NETYPE_TELECOM_2G
    int NETYPE_MOBILE_UNICOM_2G -> NETYPE_MOBILE_UNICOM_2G
    int NETYPE_TELECOM_3G -> NETYPE_TELECOM_3G
    int NETYPE_MOBILE_3G -> NETYPE_MOBILE_3G
    int NETYPE_UNICOM_3G -> NETYPE_UNICOM_3G
    int NETYPE_4G_UNKNOWN -> NETYPE_4G_UNKNOWN
    int mWifiState -> mWifiState
    int mConnectState -> mConnectState
    boolean mUseProxy -> mUseProxy
    java.lang.String mProxyHost -> mProxyHost
    int mProxyPort -> mProxyPort
    android.net.Uri a -> a
    java.lang.String[] getCurrentApnInUse(android.content.Context) -> getCurrentApnInUse
    java.lang.String getCurrentApnName(android.content.Context) -> getCurrentApnName
    void ChangeGprsConnect(android.content.Context) -> ChangeGprsConnect
    boolean initConnectState() -> initConnectState
    java.lang.String getCurrentNetMode(android.content.Context) -> getCurrentNetMode
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
com.baidu.navisdk.util.common.PhoneStatusReceiver -> com.baidu.navisdk.util.common.PhoneStatusReceiver:
    int MSG_TYPE_PHONE_CHANGE -> MSG_TYPE_PHONE_CHANGE
    int MSG_PHONE_RINGING -> MSG_PHONE_RINGING
    int MSG_PHONE_CALL_OUT -> MSG_PHONE_CALL_OUT
    int MSG_PHONE_OFF_HOOK -> MSG_PHONE_OFF_HOOK
    int MSG_PHONE_IDEL -> MSG_PHONE_IDEL
    java.util.List b -> b
    android.telephony.PhoneStateListener a -> a
    void registerMessageHandler(android.os.Handler) -> registerMessageHandler
    void unRegisterMessageHandler(android.os.Handler) -> unRegisterMessageHandler
    void b(int,int,int) -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(int,int,int) -> a
com.baidu.navisdk.util.common.PhoneStatusReceiver$1 -> com.baidu.navisdk.util.common.PhoneStatusReceiver$1:
    com.baidu.navisdk.util.common.PhoneStatusReceiver a -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.baidu.navisdk.util.common.PreferenceHelper -> com.baidu.navisdk.util.common.PreferenceHelper:
    com.baidu.navisdk.util.common.PreferenceHelper a -> a
    android.content.SharedPreferences b -> b
    android.content.SharedPreferences$Editor c -> c
    com.baidu.navisdk.util.common.PreferenceHelper getInstance(android.content.Context) -> getInstance
    android.content.SharedPreferences getPreferences() -> getPreferences
    java.util.Map getAll() -> getAll
    boolean contains(java.lang.String) -> contains
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    float getFloat(java.lang.String,float) -> getFloat
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    boolean putBoolean(java.lang.String,boolean) -> putBoolean
    boolean putInt(java.lang.String,int) -> putInt
    boolean putFloat(java.lang.String,float) -> putFloat
    boolean putLong(java.lang.String,long) -> putLong
    boolean putString(java.lang.String,java.lang.String) -> putString
    boolean remove(java.lang.String) -> remove
com.baidu.navisdk.util.common.PreferenceHelper$Key -> com.baidu.navisdk.util.common.PreferenceHelper$Key:
    java.lang.String ASR_PROVINCE_ID -> ASR_PROVINCE_ID
    java.lang.String ASR_CITY_ID -> ASR_CITY_ID
    java.lang.String ASR_CITY_NAME -> ASR_CITY_NAME
    java.lang.String ASR_FIRST_TIME -> ASR_FIRST_TIME
com.baidu.navisdk.util.common.RoutePlanTimeUtil -> com.baidu.navisdk.util.common.RoutePlanTimeUtil:
    boolean a -> a
    com.baidu.navisdk.model.datastruct.RoutePlanTime b -> b
    com.baidu.navisdk.util.common.RoutePlanTimeUtil c -> c
    java.util.Calendar d -> d
    com.baidu.navisdk.util.common.RoutePlanTimeUtil getInstance() -> getInstance
    int getCurrerntHour() -> getCurrerntHour
    int getCurrerntMinite() -> getCurrerntMinite
    com.baidu.navisdk.model.datastruct.RoutePlanTime getRoutePlanTime() -> getRoutePlanTime
    void setRoutePlanTime(int,int) -> setRoutePlanTime
    void resetToCurrentTime() -> resetToCurrentTime
    boolean getTimeSetState() -> getTimeSetState
    void setRoutePlanTimeValid(boolean) -> setRoutePlanTimeValid
com.baidu.navisdk.util.common.SDCardListener -> com.baidu.navisdk.util.common.SDCardListener:
    int MSG_TYPE_SDCARD_CHANGE -> MSG_TYPE_SDCARD_CHANGE
    int MSG_SDCARD_MOUNTED -> MSG_SDCARD_MOUNTED
    int MSG_SDCARD_UNMOUNTED -> MSG_SDCARD_UNMOUNTED
    int MSG_SDCARD_BAD_REMOVAL -> MSG_SDCARD_BAD_REMOVAL
    int MSG_SDCARD_EJECT -> MSG_SDCARD_EJECT
    int MSG_SDCARD_REMOVED -> MSG_SDCARD_REMOVED
    java.util.List a -> a
    void registerMessageHandler(android.os.Handler) -> registerMessageHandler
    void unRegisterMessageHandler(android.os.Handler) -> unRegisterMessageHandler
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.navisdk.util.common.ScreenUtil -> com.baidu.navisdk.util.common.ScreenUtil:
    android.view.Display a -> a
    float b -> b
    float getDensity(android.content.Context) -> getDensity
    int dip2px(android.content.Context,int) -> dip2px
    int px2dip(android.content.Context,int) -> px2dip
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getSreenHeight(android.content.Context) -> getSreenHeight
    android.view.Display getDefaultDisplay(android.content.Context) -> getDefaultDisplay
    int getHeight(android.content.Context) -> getHeight
    int getWidth(android.content.Context) -> getWidth
    int getStatusBarHeight(android.app.Activity) -> getStatusBarHeight
    int percentHeight(android.content.Context,float) -> percentHeight
    int percentWidth(android.content.Context,float) -> percentWidth
com.baidu.navisdk.util.common.SensorAlgoFilter -> com.baidu.navisdk.util.common.SensorAlgoFilter:
    float a -> a
    float b -> b
    float execute(float) -> execute
    float a(float,float,float) -> a
com.baidu.navisdk.util.common.Stopwatch -> com.baidu.navisdk.util.common.Stopwatch:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    void reset() -> reset
    void setStart() -> setStart
    void setEnd() -> setEnd
    long getDuration() -> getDuration
    long getNanoSecDuration() -> getNanoSecDuration
    void start() -> start
    void stop() -> stop
    long ElapsedTicks() -> ElapsedTicks
    java.lang.String toString() -> toString
com.baidu.navisdk.util.common.StorageCheck -> com.baidu.navisdk.util.common.StorageCheck:
    java.lang.String TAG -> TAG
    int SDCARD_NORMAL -> SDCARD_NORMAL
    int SDCARD_FULL -> SDCARD_FULL
    int SDCARD_ERROR -> SDCARD_ERROR
    int SDCARD_NOTFOUND -> SDCARD_NOTFOUND
    int MIN_FREE_SIZE -> MIN_FREE_SIZE
    int MIN_CACHE_FREE_SIZE -> MIN_CACHE_FREE_SIZE
    int handleSdcardError(long,boolean) -> handleSdcardError
    int getSdcardState() -> getSdcardState
    android.os.StatFs getSdcardSize() -> getSdcardSize
com.baidu.navisdk.util.common.StorageOptions -> com.baidu.navisdk.util.common.StorageOptions:
    java.lang.String EXTERNAL_SD_CARD -> EXTERNAL_SD_CARD
    java.lang.String INTERNAL_STORAGE -> INTERNAL_STORAGE
    java.lang.String a -> a
    java.util.ArrayList b -> b
    java.util.ArrayList c -> c
    java.lang.String[] labels -> labels
    java.lang.String[] paths -> paths
    java.lang.String[] sizes -> sizes
    int count -> count
    void determineStorageOptions(android.content.Context) -> determineStorageOptions
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    java.lang.String a(java.lang.String) -> a
    boolean a(android.content.Context) -> a
com.baidu.navisdk.util.common.StringUtils -> com.baidu.navisdk.util.common.StringUtils:
    boolean isNotEmpty(java.lang.String) -> isNotEmpty
    boolean isEmpty(java.lang.String) -> isEmpty
com.baidu.navisdk.util.common.TaskQueue -> com.baidu.navisdk.util.common.TaskQueue:
    java.util.concurrent.Executor a -> a
    java.util.concurrent.ThreadPoolExecutor b -> b
    com.baidu.navisdk.util.common.TaskQueue getInstance() -> getInstance
    void runAsync(java.lang.Runnable,java.lang.Object[]) -> runAsync
    void runAsync(java.lang.Runnable) -> runAsync
    void runAsync(com.baidu.navisdk.util.common.TaskQueue$TaskRunnable) -> runAsync
    void execute(java.lang.Runnable) -> execute
    void execute(com.baidu.navisdk.util.common.TaskQueue$TaskRunnable) -> execute
com.baidu.navisdk.util.common.TaskQueue$1 -> com.baidu.navisdk.util.common.TaskQueue$1:
    java.lang.Runnable a -> a
    com.baidu.navisdk.util.common.TaskQueue b -> b
    void OnExecute(java.lang.Object[]) -> OnExecute
com.baidu.navisdk.util.common.TaskQueue$2 -> com.baidu.navisdk.util.common.TaskQueue$2:
    java.lang.Runnable a -> a
    com.baidu.navisdk.util.common.TaskQueue b -> b
    void OnExecute(java.lang.Object[]) -> OnExecute
com.baidu.navisdk.util.common.TaskQueue$3 -> com.baidu.navisdk.util.common.TaskQueue$3:
    java.lang.Runnable a -> a
    com.baidu.navisdk.util.common.TaskQueue b -> b
    void OnExecute(java.lang.Object[]) -> OnExecute
com.baidu.navisdk.util.common.TaskQueue$Holder -> com.baidu.navisdk.util.common.TaskQueue$Holder:
    com.baidu.navisdk.util.common.TaskQueue a -> a
com.baidu.navisdk.util.common.TaskQueue$TaskRunnable -> com.baidu.navisdk.util.common.TaskQueue$TaskRunnable:
    java.lang.Object[] a -> a
    void run() -> run
    void OnExecute(java.lang.Object[]) -> OnExecute
com.baidu.navisdk.util.common.Utils -> com.baidu.navisdk.util.common.Utils:
    int TITLE_HEIGHT -> TITLE_HEIGHT
    java.lang.String mUUID -> mUUID
    java.lang.String getIMEI(android.content.Context) -> getIMEI
    boolean writePrivateFile(android.content.Context,java.lang.String,java.lang.String) -> writePrivateFile
    boolean writePrivateFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> writePrivateFile
    java.lang.String readPrivateFileData(android.content.Context,java.lang.String) -> readPrivateFileData
    java.lang.String readPrivateFileData(android.content.Context,java.lang.String,java.lang.String) -> readPrivateFileData
    boolean writeSDFile(java.lang.String,java.lang.String) -> writeSDFile
    boolean writeSDFile(java.lang.String,java.lang.String,java.lang.String) -> writeSDFile
    java.lang.String readSDFileData(java.lang.String) -> readSDFileData
    java.lang.String readSDFileData(java.lang.String,java.lang.String) -> readSDFileData
    boolean deleteDir(java.io.File) -> deleteDir
    java.lang.String md5Encode(java.lang.String) -> md5Encode
    boolean isVoid(java.lang.String) -> isVoid
    java.lang.String toGbk(java.lang.String) -> toGbk
    java.lang.String utf8Togb2312(java.lang.String) -> utf8Togb2312
    java.lang.String getUniqueCode(android.content.Context) -> getUniqueCode
    boolean isWifi(android.content.Context) -> isWifi
    java.net.Proxy getDefaultProxy() -> getDefaultProxy
    java.lang.String getSystemVersion(android.content.Context) -> getSystemVersion
    java.lang.String getModel(android.content.Context) -> getModel
    void setHasTitle(android.app.Activity,boolean) -> setHasTitle
    boolean getIsFullScreen(android.app.Activity) -> getIsFullScreen
    void setFullScreen(android.app.Activity,boolean) -> setFullScreen
    void expendNotification(android.app.Activity) -> expendNotification
    void setScreenAutoLock(android.app.Activity,boolean) -> setScreenAutoLock
    void blurWindow(android.app.Activity,boolean) -> blurWindow
    boolean getScreenAutoLock(android.app.Activity) -> getScreenAutoLock
    void setRequestedOrientation(android.app.Activity,int) -> setRequestedOrientation
    int getRequestedOrientation(android.app.Activity) -> getRequestedOrientation
    void setScreenBrightness(android.app.Activity,float) -> setScreenBrightness
    float getScreenBrightness(android.app.Activity) -> getScreenBrightness
    float getDensity(android.app.Activity) -> getDensity
    boolean isMediaMounted() -> isMediaMounted
    void setLayoutFlag(android.app.Activity,int) -> setLayoutFlag
    java.lang.String getVersionName(android.content.Context) -> getVersionName
    int getVersionCode(android.content.Context) -> getVersionCode
    void openAppInMarket(android.content.Context) -> openAppInMarket
    void showInputMethod(android.app.Activity) -> showInputMethod
    void hideInputMethod(android.app.Activity) -> hideInputMethod
    boolean isShowInputMethod(android.app.Activity) -> isShowInputMethod
    boolean startWap(java.lang.String,android.content.Context) -> startWap
    void copyFile(java.io.File,java.io.File,boolean) -> copyFile
    void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    java.lang.String getContent(org.apache.http.HttpResponse) -> getContent
    void disableOverScroll(android.view.View) -> disableOverScroll
    void createShortcut(android.app.Activity,int,java.lang.String) -> createShortcut
    int getCpuMaxFreq() -> getCpuMaxFreq
    int getTotalMemory() -> getTotalMemory
    boolean isFileExist(java.lang.String) -> isFileExist
    java.lang.String getChangeableUUID() -> getChangeableUUID
com.baidu.navisdk.util.common.VolumeUtil -> com.baidu.navisdk.util.common.VolumeUtil:
    android.media.AudioManager a(android.content.Context) -> a
    int getCurrentVolume(android.content.Context) -> getCurrentVolume
    int getDefaultVolume(android.content.Context) -> getDefaultVolume
    void setVolume(android.content.Context,int) -> setVolume
com.baidu.navisdk.util.common.net.HttpCallBack -> com.baidu.navisdk.util.common.net.HttpCallBack:
    int SUCCESS -> SUCCESS
    int EXCEPTION -> EXCEPTION
    void onCallBack(com.baidu.navisdk.util.common.net.HttpTask,int,java.lang.Object) -> onCallBack
com.baidu.navisdk.util.common.net.HttpScheduler -> com.baidu.navisdk.util.common.net.HttpScheduler:
    android.content.Context a -> a
    int b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    boolean isTaskVaild(com.baidu.navisdk.util.common.net.HttpTask) -> isTaskVaild
    boolean asyncConnect(com.baidu.navisdk.util.common.net.HttpTask) -> asyncConnect
    void cancel(com.baidu.navisdk.util.common.net.HttpTask) -> cancel
    void release() -> release
    java.util.ArrayList a(com.baidu.navisdk.util.common.net.HttpScheduler) -> a
    java.util.ArrayList b(com.baidu.navisdk.util.common.net.HttpScheduler) -> b
    android.content.Context c(com.baidu.navisdk.util.common.net.HttpScheduler) -> c
com.baidu.navisdk.util.common.net.HttpScheduler$AsyncConnectThread -> com.baidu.navisdk.util.common.net.HttpScheduler$AsyncConnectThread:
    com.baidu.navisdk.util.common.net.HttpTask b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    org.apache.http.impl.client.DefaultHttpClient f -> f
    org.apache.http.params.HttpParams g -> g
    com.baidu.navisdk.util.common.net.HttpScheduler a -> a
    void run() -> run
    void abortTask() -> abortTask
    org.apache.http.HttpResponse doConnect(com.baidu.navisdk.util.common.net.HttpTask) -> doConnect
    void setRunning(boolean) -> setRunning
    com.baidu.navisdk.util.common.net.HttpTask getCurrentTask() -> getCurrentTask
    void cancel() -> cancel
    boolean isRunning() -> isRunning
com.baidu.navisdk.util.common.net.HttpTask -> com.baidu.navisdk.util.common.net.HttpTask:
    org.apache.http.client.methods.HttpUriRequest mHttpUriRequest -> mHttpUriRequest
    int mConnectTimeout -> mConnectTimeout
    int mSocketTimeout -> mSocketTimeout
    com.baidu.navisdk.util.common.net.HttpCallBack mCallBack -> mCallBack
    com.baidu.navisdk.util.common.net.HttpCallBack getCallBack() -> getCallBack
    org.apache.http.client.methods.HttpUriRequest getHttpUriRequest() -> getHttpUriRequest
    int getConnectTimeout() -> getConnectTimeout
    int getSocketTimeout() -> getSocketTimeout
com.baidu.navisdk.util.common.net.HttpUtils -> com.baidu.navisdk.util.common.net.HttpUtils:
    int TYPE_WAP -> TYPE_WAP
    int TYPE_NET -> TYPE_NET
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    java.lang.String WAP -> WAP
    java.lang.String NET -> NET
    java.lang.String http -> http
    java.lang.String https -> https
    java.lang.String PROXY_IP -> PROXY_IP
    int DEFAULT_PROXY_PORT -> DEFAULT_PROXY_PORT
    int HTTP_OK_CODE -> HTTP_OK_CODE
    java.lang.String buildParamListInHttpRequest(java.util.List) -> buildParamListInHttpRequest
    java.lang.String buildParamListInHttpRequestUrlEncode(java.util.List) -> buildParamListInHttpRequestUrlEncode
    boolean isHttp(java.lang.String) -> isHttp
    boolean isHttps(java.lang.String) -> isHttps
    boolean isWap(android.content.Context) -> isWap
    int getNetType(android.content.Context) -> getNetType
    void fillProxy(android.content.Context,org.apache.http.params.HttpParams) -> fillProxy
    int safePositiveInteger(java.lang.String) -> safePositiveInteger
    java.util.Date strToDate(java.lang.String) -> strToDate
    long safePositiveLong(java.lang.String) -> safePositiveLong
    java.lang.String filterXmlTags(java.lang.String,java.util.List) -> filterXmlTags
    java.lang.String getNetworkType(android.content.Context) -> getNetworkType
com.baidu.navisdk.util.jar.JarUtils -> com.baidu.navisdk.util.jar.JarUtils:
    android.content.res.AssetManager a -> a
    android.content.res.Resources b -> b
    android.content.res.Resources c -> c
    android.content.res.Resources$Theme d -> d
    android.content.res.Resources$Theme e -> e
    java.lang.reflect.Field f -> f
    java.lang.reflect.Field g -> g
    java.lang.reflect.Field h -> h
    android.app.Activity i -> i
    boolean j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    boolean a(android.content.Context) -> a
    void d() -> d
    void b(android.content.Context) -> b
    java.lang.String getJarName() -> getJarName
    android.content.res.AssetManager a(java.lang.String) -> a
    android.content.res.Resources a(android.content.Context,android.content.res.AssetManager) -> a
    android.content.res.Resources$Theme e() -> e
    int getInnerRIdValue(java.lang.String) -> getInnerRIdValue
    java.lang.reflect.Field f() -> f
    java.lang.reflect.Field g() -> g
    void setDialogThemeField(android.app.Dialog,android.content.res.Resources$Theme) -> setDialogThemeField
    java.lang.reflect.Field h() -> h
    boolean switchToJarResourcesAndTheme(android.app.Activity) -> switchToJarResourcesAndTheme
    void switchToOriginResourceAndTheme(android.app.Activity) -> switchToOriginResourceAndTheme
    void switchToJarResources(android.content.ContextWrapper) -> switchToJarResources
    void switchToOriginResource(android.content.ContextWrapper) -> switchToOriginResource
    boolean setAsJar(android.content.Context) -> setAsJar
    boolean getAsJar() -> getAsJar
    android.content.res.Resources getResources() -> getResources
    android.view.View inflate(android.app.Activity,int,android.view.ViewGroup) -> inflate
    long currentAnimationTimeMillis() -> currentAnimationTimeMillis
    android.view.animation.Animation loadAnimation(android.content.Context,int) -> loadAnimation
    android.view.animation.Animation a(android.content.Context,org.xmlpull.v1.XmlPullParser) -> a
    android.view.animation.Animation a(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet) -> a
    android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int) -> loadLayoutAnimation
    android.view.animation.LayoutAnimationController b(android.content.Context,org.xmlpull.v1.XmlPullParser) -> b
    android.view.animation.LayoutAnimationController a(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> a
    android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
    android.view.animation.Interpolator c(android.content.Context,org.xmlpull.v1.XmlPullParser) -> c
    java.lang.String getSDKVersion() -> getSDKVersion
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.baidu.navisdk.util.jar.JarUtils$OldResourceFileFilter -> com.baidu.navisdk.util.jar.JarUtils$OldResourceFileFilter:
    boolean accept(java.io.File,java.lang.String) -> accept
com.baidu.navisdk.util.location.BNLocateTrackManager -> com.baidu.navisdk.util.location.BNLocateTrackManager:
    java.lang.String a -> a
    java.lang.String b -> b
    com.baidu.navisdk.util.location.BNLocateTrackManager c -> c
    java.io.File d -> d
    java.io.BufferedReader e -> e
    boolean f -> f
    int g -> g
    com.baidu.navisdk.util.location.BNLocateTrackManager$TrackThread h -> h
    com.baidu.navisdk.comapi.geolocate.ILocationChangeListener i -> i
    java.lang.Object j -> j
    java.lang.Long k -> k
    int TIME_INTERNAL_HIGH -> TIME_INTERNAL_HIGH
    int TIME_INTERNAL_MIDDLE -> TIME_INTERNAL_MIDDLE
    int TIME_INTERNAL_LOW -> TIME_INTERNAL_LOW
    boolean l -> l
    java.lang.Long m -> m
    java.lang.Long n -> n
    int o -> o
    android.os.Handler p -> p
    com.baidu.navisdk.util.location.BNLocateTrackManager getInstance() -> getInstance
    boolean isGpsTrackFileInstalled() -> isGpsTrackFileInstalled
    void startTrackGuide() -> startTrackGuide
    void stopTrackGuide() -> stopTrackGuide
    void guideSingleStep() -> guideSingleStep
    com.baidu.navisdk.model.datastruct.LocData b() -> b
    com.baidu.navisdk.model.datastruct.LocData a(java.lang.String,boolean) -> a
    void setTrackLocationListener(com.baidu.navisdk.comapi.geolocate.ILocationChangeListener) -> setTrackLocationListener
    void setTimeInternalEnable(boolean) -> setTimeInternalEnable
    boolean getTimeInternalEnable() -> getTimeInternalEnable
    void setTimeInternal(int) -> setTimeInternal
    int getTimeInternal() -> getTimeInternal
    void c() -> c
    void d() -> d
    com.baidu.navisdk.model.datastruct.LocData a(com.baidu.navisdk.util.location.BNLocateTrackManager) -> a
    boolean b(com.baidu.navisdk.util.location.BNLocateTrackManager) -> b
    java.lang.String a() -> a
    java.lang.Long c(com.baidu.navisdk.util.location.BNLocateTrackManager) -> c
    int d(com.baidu.navisdk.util.location.BNLocateTrackManager) -> d
    android.os.Handler e(com.baidu.navisdk.util.location.BNLocateTrackManager) -> e
    java.io.BufferedReader a(com.baidu.navisdk.util.location.BNLocateTrackManager,java.io.BufferedReader) -> a
    int f(com.baidu.navisdk.util.location.BNLocateTrackManager) -> f
    com.baidu.navisdk.comapi.geolocate.ILocationChangeListener g(com.baidu.navisdk.util.location.BNLocateTrackManager) -> g
com.baidu.navisdk.util.location.BNLocateTrackManager$1 -> com.baidu.navisdk.util.location.BNLocateTrackManager$1:
    com.baidu.navisdk.util.location.BNLocateTrackManager a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.util.location.BNLocateTrackManager$TrackThread -> com.baidu.navisdk.util.location.BNLocateTrackManager$TrackThread:
    boolean b -> b
    com.baidu.navisdk.util.location.BNLocateTrackManager a -> a
    void run() -> run
    void stopTracking() -> stopTracking
com.baidu.navisdk.util.location.BNSysLocationManager -> com.baidu.navisdk.util.location.BNSysLocationManager:
    com.baidu.navisdk.util.location.BNSysLocationManager a -> a
    int MSG_GPS_SERVICE_EVNET -> MSG_GPS_SERVICE_EVNET
    int GPS_STATUS_OPEN -> GPS_STATUS_OPEN
    int GPS_STATUS_CLOSE -> GPS_STATUS_CLOSE
    int GPS_MIN_SATELITE_COUNT -> GPS_MIN_SATELITE_COUNT
    android.location.GpsStatus b -> b
    com.baidu.navisdk.model.datastruct.LocData c -> c
    com.baidu.navisdk.model.datastruct.LocData d -> d
    android.location.LocationManager e -> e
    java.util.ArrayList f -> f
    com.baidu.nplatform.comapi.basestruct.GeoPoint g -> g
    int h -> h
    java.util.List i -> i
    boolean j -> j
    android.location.GpsStatus$Listener k -> k
    android.location.LocationListener l -> l
    void registerMessageHandler(android.os.Handler) -> registerMessageHandler
    void unRegisterMessageHandler(android.os.Handler) -> unRegisterMessageHandler
    void b(int,int,int) -> b
    com.baidu.navisdk.util.location.BNSysLocationManager getInstance() -> getInstance
    void destory() -> destory
    void init(android.content.Context) -> init
    void unInit() -> unInit
    void addLocationChangeLister(com.baidu.navisdk.comapi.geolocate.ILocationChangeListener) -> addLocationChangeLister
    void addNmeaListener(android.location.GpsStatus$NmeaListener) -> addNmeaListener
    void removeLocationChangeLister(com.baidu.navisdk.comapi.geolocate.ILocationChangeListener) -> removeLocationChangeLister
    com.baidu.navisdk.model.datastruct.LocData getCurLocation() -> getCurLocation
    com.baidu.nplatform.comapi.basestruct.GeoPoint getLastValidLocation() -> getLastValidLocation
    com.baidu.navisdk.model.datastruct.RoutePlanNode getCurLocationNode() -> getCurLocationNode
    boolean isGpsEnabled() -> isGpsEnabled
    boolean isSysLocationValid() -> isSysLocationValid
    void startNaviLocate(android.content.Context) -> startNaviLocate
    void stopNaviLocate() -> stopNaviLocate
    void a(android.content.Context) -> a
    int b() -> b
    int a(com.baidu.navisdk.util.location.BNSysLocationManager,int) -> a
    int a(com.baidu.navisdk.util.location.BNSysLocationManager) -> a
    int b(com.baidu.navisdk.util.location.BNSysLocationManager) -> b
    com.baidu.navisdk.model.datastruct.LocData c(com.baidu.navisdk.util.location.BNSysLocationManager) -> c
    com.baidu.navisdk.model.datastruct.LocData a(com.baidu.navisdk.util.location.BNSysLocationManager,com.baidu.navisdk.model.datastruct.LocData) -> a
    com.baidu.nplatform.comapi.basestruct.GeoPoint a() -> a
    java.util.ArrayList d(com.baidu.navisdk.util.location.BNSysLocationManager) -> d
    com.baidu.navisdk.model.datastruct.LocData e(com.baidu.navisdk.util.location.BNSysLocationManager) -> e
    boolean a(boolean) -> a
    void a(int,int,int) -> a
com.baidu.navisdk.util.location.BNSysLocationManager$1 -> com.baidu.navisdk.util.location.BNSysLocationManager$1:
    com.baidu.navisdk.util.location.BNSysLocationManager a -> a
    void onGpsStatusChanged(int) -> onGpsStatusChanged
com.baidu.navisdk.util.location.BNSysLocationManager$2 -> com.baidu.navisdk.util.location.BNSysLocationManager$2:
    com.baidu.navisdk.util.location.BNSysLocationManager a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
com.baidu.navisdk.util.location.CTUtil -> com.baidu.navisdk.util.location.CTUtil:
    com.baidu.nplatform.comapi.basestruct.GeoPoint a(double,double) -> a
com.baidu.navisdk.util.logic.DataManageUtil -> com.baidu.navisdk.util.logic.DataManageUtil:
    java.lang.String ByteSizeToString(int) -> ByteSizeToString
com.baidu.navisdk.util.logic.MapUtil -> com.baidu.navisdk.util.logic.MapUtil:
com.baidu.navisdk.util.logic.OfflineDataUtil -> com.baidu.navisdk.util.logic.OfflineDataUtil:
    java.lang.String ByteSizeToString(int) -> ByteSizeToString
    void showToastText(android.content.Context,java.lang.String) -> showToastText
com.baidu.navisdk.util.logic.PoiSearchUtil -> com.baidu.navisdk.util.logic.PoiSearchUtil:
    java.lang.String trimString(java.lang.String) -> trimString
    java.lang.String getDirection(double,double) -> getDirection
    java.lang.String getDistance(double,double) -> getDistance
com.baidu.navisdk.util.logic.RouteGuideUtil -> com.baidu.navisdk.util.logic.RouteGuideUtil:
com.baidu.navisdk.util.logic.RoutePlanUtil -> com.baidu.navisdk.util.logic.RoutePlanUtil:
    java.lang.String[] unitDistArray -> unitDistArray
    java.lang.String[] unitTimeArray -> unitTimeArray
    java.lang.String[] unitTimeArray2 -> unitTimeArray2
    java.lang.String lessOneMinute -> lessOneMinute
    java.lang.String HTML_TIME_HOUR -> HTML_TIME_HOUR
    java.lang.String HTML_TIME_MINUTE -> HTML_TIME_MINUTE
    java.lang.String HTML_TIME_HOUR_MINUTE -> HTML_TIME_HOUR_MINUTE
    int TIME_EN_UNIT -> TIME_EN_UNIT
    int TIME_ZH_UNIT -> TIME_ZH_UNIT
    void formatDistAndTime(int,int,java.lang.StringBuffer) -> formatDistAndTime
    void formatDistance(int,com.baidu.navisdk.util.logic.RoutePlanUtil$UnitLangEnum,java.lang.StringBuffer) -> formatDistance
    void formatHtmlDistance(int,java.lang.StringBuffer) -> formatHtmlDistance
    int formatZeroInt(int,int) -> formatZeroInt
    void formatTime(int,com.baidu.navisdk.util.logic.RoutePlanUtil$UnitLangEnum,java.lang.StringBuffer) -> formatTime
    void formatHtmlTime(int,java.lang.StringBuffer) -> formatHtmlTime
    int isNavStartEndPointInvalid(int,int,int,int,int,int) -> isNavStartEndPointInvalid
    boolean isNavSetEndPointInvalid(int,int,int,int) -> isNavSetEndPointInvalid
    double lineDistance(double,double,double,double) -> lineDistance
    double geoSphereDistance(double,double,double,double) -> geoSphereDistance
    void createDir(java.lang.String) -> createDir
    int getStateBarHeight(android.app.Activity) -> getStateBarHeight
    java.lang.String getFormatTime(long) -> getFormatTime
    void formatTime2(int,int,java.lang.StringBuffer) -> formatTime2
    java.lang.String formatTime2(int,int) -> formatTime2
    java.lang.String[] formatDistance(int,com.baidu.navisdk.util.logic.RoutePlanUtil$UnitLangEnum) -> formatDistance
com.baidu.navisdk.util.logic.RoutePlanUtil$UnitLangEnum -> com.baidu.navisdk.util.logic.RoutePlanUtil$UnitLangEnum:
    com.baidu.navisdk.util.logic.RoutePlanUtil$UnitLangEnum EN -> EN
    com.baidu.navisdk.util.logic.RoutePlanUtil$UnitLangEnum ZH -> ZH
    int a -> a
    com.baidu.navisdk.util.logic.RoutePlanUtil$UnitLangEnum[] b -> b
    com.baidu.navisdk.util.logic.RoutePlanUtil$UnitLangEnum[] values() -> values
    com.baidu.navisdk.util.logic.RoutePlanUtil$UnitLangEnum valueOf(java.lang.String) -> valueOf
    int getnUnit() -> getnUnit
    void setnUnit(int) -> setnUnit
com.baidu.navisdk.util.logic.TrafficUtil -> com.baidu.navisdk.util.logic.TrafficUtil:
    java.util.List getAlaApiParam() -> getAlaApiParam
com.baidu.navisdk.util.sensor.BNSysSensorManager -> com.baidu.navisdk.util.sensor.BNSysSensorManager:
    com.baidu.navisdk.util.sensor.BNSysSensorManager a -> a
    android.hardware.SensorManager b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    com.baidu.navisdk.model.datastruct.SensorData e -> e
    com.baidu.navisdk.model.datastruct.SensorData f -> f
    boolean g -> g
    float[] h -> h
    android.hardware.SensorEventListener i -> i
    com.baidu.navisdk.util.sensor.BNSysSensorManager getInstance() -> getInstance
    void destory() -> destory
    void initSensor(android.content.Context) -> initSensor
    void uninitSensor() -> uninitSensor
    void addSensorDataChangeListener(com.baidu.navisdk.comapi.geolocate.ISensorDataChangeListener) -> addSensorDataChangeListener
    void removeSensorDataChangeListener(com.baidu.navisdk.comapi.geolocate.ISensorDataChangeListener) -> removeSensorDataChangeListener
    void addSensorChangeListener(com.baidu.navisdk.comapi.geolocate.ISensorChangeListener) -> addSensorChangeListener
    void removeSensorChangeListener(com.baidu.navisdk.comapi.geolocate.ISensorChangeListener) -> removeSensorChangeListener
    com.baidu.navisdk.model.datastruct.SensorData a(com.baidu.navisdk.util.sensor.BNSysSensorManager) -> a
    float[] b(com.baidu.navisdk.util.sensor.BNSysSensorManager) -> b
    com.baidu.navisdk.model.datastruct.SensorData a(com.baidu.navisdk.util.sensor.BNSysSensorManager,com.baidu.navisdk.model.datastruct.SensorData) -> a
    java.util.ArrayList c(com.baidu.navisdk.util.sensor.BNSysSensorManager) -> c
    com.baidu.navisdk.model.datastruct.SensorData d(com.baidu.navisdk.util.sensor.BNSysSensorManager) -> d
    float[] a(com.baidu.navisdk.util.sensor.BNSysSensorManager,float[]) -> a
    java.util.ArrayList e(com.baidu.navisdk.util.sensor.BNSysSensorManager) -> e
com.baidu.navisdk.util.sensor.BNSysSensorManager$1 -> com.baidu.navisdk.util.sensor.BNSysSensorManager$1:
    com.baidu.navisdk.util.sensor.BNSysSensorManager a -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.navisdk.util.verify.BNKeyVerifyListener -> com.baidu.navisdk.util.verify.BNKeyVerifyListener:
    void onVerifySucc() -> onVerifySucc
    void onVerifyFailed(int,java.lang.String) -> onVerifyFailed
com.baidu.navisdk.vi.AudioFilePlayer -> com.baidu.navisdk.vi.AudioFilePlayer:
    java.lang.String TAG -> TAG
    android.media.MediaPlayer mMplayer -> mMplayer
    int mHandle -> mHandle
    void SetDataSource(java.lang.String) -> SetDataSource
    void Prepare() -> Prepare
    void Start() -> Start
    void Pause() -> Pause
    void Stop() -> Stop
    void Release() -> Release
    void Reset() -> Reset
    boolean IsPlaying() -> IsPlaying
    int GetCurrentPosition() -> GetCurrentPosition
    int GetDuration() -> GetDuration
    void SeekTo(int) -> SeekTo
    float GetVolume() -> GetVolume
    int GetMaxVolume(android.media.AudioManager) -> GetMaxVolume
    void SetVolume(float) -> SetVolume
    void SetOnPlayCompletedListener(int) -> SetOnPlayCompletedListener
    void SetOnErrorListener(int) -> SetOnErrorListener
    void onPlayCompleted(int) -> onPlayCompleted
    boolean onErrorOccured(int,int) -> onErrorOccured
    int a(com.baidu.navisdk.vi.AudioFilePlayer) -> a
    void a(com.baidu.navisdk.vi.AudioFilePlayer,int) -> a
    boolean a(com.baidu.navisdk.vi.AudioFilePlayer,int,int) -> a
com.baidu.navisdk.vi.AudioFilePlayer$1 -> com.baidu.navisdk.vi.AudioFilePlayer$1:
    com.baidu.navisdk.vi.AudioFilePlayer a -> a
    void onSeekComplete(android.media.MediaPlayer) -> onSeekComplete
com.baidu.navisdk.vi.AudioFilePlayer$2 -> com.baidu.navisdk.vi.AudioFilePlayer$2:
    com.baidu.navisdk.vi.AudioFilePlayer a -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.baidu.navisdk.vi.AudioFilePlayer$3 -> com.baidu.navisdk.vi.AudioFilePlayer$3:
    com.baidu.navisdk.vi.AudioFilePlayer a -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.baidu.navisdk.vi.AudioRecorder -> com.baidu.navisdk.vi.AudioRecorder:
    android.media.AudioRecord mRecorder -> mRecorder
    int mRate -> mRate
    int mChannel -> mChannel
    int mFormat -> mFormat
    boolean isAsync -> isAsync
    int mCallBackBufferSize -> mCallBackBufferSize
    int mBufferSize -> mBufferSize
    boolean isRecording -> isRecording
    java.lang.Object mMutex -> mMutex
    int mJniData -> mJniData
    int MSG_READ_DATA -> MSG_READ_DATA
    int MSG_READ_ERROR -> MSG_READ_ERROR
    int CHANNEL_SINGLE -> CHANNEL_SINGLE
    int CHANNEL_DOUBLE -> CHANNEL_DOUBLE
    int ERR_CODE_SUCCESS -> ERR_CODE_SUCCESS
    int ERR_CODE_PARAMS_ILLEGAL -> ERR_CODE_PARAMS_ILLEGAL
    int WAY_SYNC -> WAY_SYNC
    int WAY_ASYNC -> WAY_ASYNC
    android.os.Handler mHandler -> mHandler
    java.lang.Thread mRecordThread -> mRecordThread
    void handleReadError() -> handleReadError
    void handleReadData(byte[],int) -> handleReadData
    int getMinBufferSize(int,int,int,int) -> getMinBufferSize
    void setWay(int) -> setWay
    void onReadData(byte[],int) -> onReadData
    void onReadError() -> onReadError
    int start() -> start
    void stop() -> stop
    void release() -> release
    boolean a(com.baidu.navisdk.vi.AudioRecorder) -> a
    android.media.AudioRecord b(com.baidu.navisdk.vi.AudioRecorder) -> b
    int c(com.baidu.navisdk.vi.AudioRecorder) -> c
    void d(com.baidu.navisdk.vi.AudioRecorder) -> d
    void a(com.baidu.navisdk.vi.AudioRecorder,byte[],int) -> a
com.baidu.navisdk.vi.AudioRecorder$1 -> com.baidu.navisdk.vi.AudioRecorder$1:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.vi.AudioRecorder$2 -> com.baidu.navisdk.vi.AudioRecorder$2:
    com.baidu.navisdk.vi.AudioRecorder a -> a
    void run() -> run
com.baidu.navisdk.vi.AudioRecorder$ReadData -> com.baidu.navisdk.vi.AudioRecorder$ReadData:
    com.baidu.navisdk.vi.AudioRecorder a -> a
    byte[] b -> b
    int c -> c
    com.baidu.navisdk.vi.AudioRecorder d -> d
com.baidu.navisdk.vi.EnvDrawText -> com.baidu.navisdk.vi.EnvDrawText:
    android.graphics.Paint pt -> pt
    int iWordWidthMax -> iWordWidthMax
    int iWordHightMax -> iWordHightMax
    boolean bBmpChange -> bBmpChange
    android.graphics.Bitmap bmp -> bmp
    android.graphics.Canvas canvasTemp -> canvasTemp
    int[] buffer -> buffer
    int[] drawText(java.lang.String,int,int,int[],int,int,int,int) -> drawText
    short[] getTextSize(java.lang.String,int) -> getTextSize
com.baidu.navisdk.vi.JNI -> com.baidu.navisdk.vi.JNI:
    int mfeInit() -> mfeInit
    int mfeInit(int,int) -> mfeInit
    int mfeExit() -> mfeExit
    int mfeOpen() -> mfeOpen
    int mfeClose() -> mfeClose
    int mfeStart() -> mfeStart
    int mfeStop() -> mfeStop
    int mfeSendData(short[],int) -> mfeSendData
    int mfeGetCallbackData(byte[],int) -> mfeGetCallbackData
    int mfeDetect() -> mfeDetect
    int mfeSetParam(int,int) -> mfeSetParam
    int mfeGetParam(int) -> mfeGetParam
com.baidu.navisdk.vi.MFE -> com.baidu.navisdk.vi.MFE:
    int SPEECH_NOT_START -> SPEECH_NOT_START
    int SPEECH_START -> SPEECH_START
    int SPEECH_END -> SPEECH_END
    int SPEECH_EMPTY -> SPEECH_EMPTY
    int SPEECH_TOO_SHORT -> SPEECH_TOO_SHORT
    int MFE_SUCCESS -> MFE_SUCCESS
    int MFE_ERROR_UNKNOWN -> MFE_ERROR_UNKNOWN
    int MFE_STATE_ERR -> MFE_STATE_ERR
    int MFE_POINTER_ERR -> MFE_POINTER_ERR
    int MFE_MEMALLOC_ERR -> MFE_MEMALLOC_ERR
    int MFE_PARAMRANGE_ERR -> MFE_PARAMRANGE_ERR
    int MFE_SEND_TOOMORE_DATA_ONCE -> MFE_SEND_TOOMORE_DATA_ONCE
    int MFE_VAD_INIT_ERROR -> MFE_VAD_INIT_ERROR
    int PARAM_MAX_WAIT_DURATION -> PARAM_MAX_WAIT_DURATION
    int PARAM_MAX_SP_DURATION -> PARAM_MAX_SP_DURATION
    int PARAM_MAX_SP_PAUSE -> PARAM_MAX_SP_PAUSE
    int PARAM_MIN_SP_DURATION -> PARAM_MIN_SP_DURATION
    int PARAM_SLEEP_TIMEOUT -> PARAM_SLEEP_TIMEOUT
    int PARAM_ENERGY_THRESHOLD_SP -> PARAM_ENERGY_THRESHOLD_SP
    int PARAM_ENERGY_THRESHOLD_EP -> PARAM_ENERGY_THRESHOLD_EP
    int mfeInit() -> mfeInit
    int mfeInit(int,int) -> mfeInit
    int mfeExit() -> mfeExit
    int mfeOpen() -> mfeOpen
    int mfeClose() -> mfeClose
    int mfeStart() -> mfeStart
    int mfeStop() -> mfeStop
    int mfeSendData(short[],int) -> mfeSendData
    int mfeGetCallbackData(byte[],int) -> mfeGetCallbackData
    int mfeDetect() -> mfeDetect
com.baidu.navisdk.vi.VCompass -> com.baidu.navisdk.vi.VCompass:
    android.hardware.SensorManager mSensorManager -> mSensorManager
    int MSG_INIT_COMPASS -> MSG_INIT_COMPASS
    int MSG_UNINIT_COMPASS -> MSG_UNINIT_COMPASS
    float oldV -> oldV
    float myBarrier -> myBarrier
    int mJniData -> mJniData
    android.os.Handler mHandler -> mHandler
    android.hardware.SensorEventListener mEventListener -> mEventListener
    float execute(float) -> execute
    float checkAndCalc(float,float,float) -> checkAndCalc
    void init() -> init
    void unInit() -> unInit
    void updateCompass(int) -> updateCompass
    android.hardware.SensorManager a(com.baidu.navisdk.vi.VCompass) -> a
    android.hardware.SensorManager a(com.baidu.navisdk.vi.VCompass,android.hardware.SensorManager) -> a
    android.hardware.SensorEventListener b(com.baidu.navisdk.vi.VCompass) -> b
    float a(com.baidu.navisdk.vi.VCompass,float) -> a
    void a(com.baidu.navisdk.vi.VCompass,int) -> a
com.baidu.navisdk.vi.VCompass$1 -> com.baidu.navisdk.vi.VCompass$1:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.vi.VCompass$2 -> com.baidu.navisdk.vi.VCompass$2:
    com.baidu.navisdk.vi.VCompass a -> a
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
com.baidu.navisdk.vi.VDeviceAPI -> com.baidu.navisdk.vi.VDeviceAPI:
    java.lang.String TAG -> TAG
    int NETWORK_TYPE_NONE -> NETWORK_TYPE_NONE
    int NETWORK_TYPE_UNKNOWN -> NETWORK_TYPE_UNKNOWN
    int NETWORK_TYPE_WIFI -> NETWORK_TYPE_WIFI
    int NETWORK_TYPE_MOBILE -> NETWORK_TYPE_MOBILE
    int NETWORK_TYPE_BLUETOOTH -> NETWORK_TYPE_BLUETOOTH
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    android.content.BroadcastReceiver mNetworkStateReceiver -> mNetworkStateReceiver
    int ERROR_INVALID_ADDRESS -> ERROR_INVALID_ADDRESS
    int ERROR_INVALID_FILE_FORMAT -> ERROR_INVALID_FILE_FORMAT
    java.lang.String APP_NAME_BAIDU_MAP -> APP_NAME_BAIDU_MAP
    long getTotalSpace() -> getTotalSpace
    long getFreeSpace() -> getFreeSpace
    long getSdcardTotalSpace() -> getSdcardTotalSpace
    long getSdcardFreeSpace() -> getSdcardFreeSpace
    long getTotalMemory() -> getTotalMemory
    long getAvailableMemory() -> getAvailableMemory
    java.lang.String getOsVersion() -> getOsVersion
    java.lang.String getPhoneType() -> getPhoneType
    java.lang.String getMacAddress() -> getMacAddress
    void setupSoftware(java.lang.String) -> setupSoftware
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getAppVersion() -> getAppVersion
    java.lang.String getSDKVersion() -> getSDKVersion
    java.lang.String getAppPackageVersion() -> getAppPackageVersion
    int getAppVersionCode() -> getAppVersionCode
    java.lang.String getAppPackageName() -> getAppPackageName
    int getCurrentNetworkType() -> getCurrentNetworkType
    boolean isWifiConnected() -> isWifiConnected
    com.baidu.navisdk.vi.VNetworkInfo getNetworkInfo(int) -> getNetworkInfo
    void setNetworkChangedCallback() -> setNetworkChangedCallback
    void unsetNetworkChangedCallback() -> unsetNetworkChangedCallback
    void onNetworkStateChanged() -> onNetworkStateChanged
    android.net.wifi.ScanResult[] getWifiHotpot() -> getWifiHotpot
    float getSystemMetricsX() -> getSystemMetricsX
    float getSystemMetricsY() -> getSystemMetricsY
    int getWindowWidth() -> getWindowWidth
    int getWindowHeight() -> getWindowHeight
    float getScreenDensity() -> getScreenDensity
    int getScreenDensityDpi() -> getScreenDensityDpi
    void setScreenAlwaysOn(boolean) -> setScreenAlwaysOn
    int getScreenBrightness() -> getScreenBrightness
    void makeCall(java.lang.String) -> makeCall
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    int sendMMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMMS
    void openUrl(java.lang.String) -> openUrl
    java.lang.String getCellId() -> getCellId
    java.lang.String getLac() -> getLac
    java.lang.String getImei() -> getImei
    java.lang.String getImeiWithDefault() -> getImeiWithDefault
    java.lang.String getImsi() -> getImsi
    java.lang.String getChannelID() -> getChannelID
com.baidu.navisdk.vi.VDeviceAPI$1 -> com.baidu.navisdk.vi.VDeviceAPI$1:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.navisdk.vi.VGps -> com.baidu.navisdk.vi.VGps:
    android.location.GpsStatus$Listener mStatusListener -> mStatusListener
    android.location.LocationListener mLocationListener -> mLocationListener
    android.location.LocationManager mLocationManager -> mLocationManager
    android.location.GpsStatus mGpsStatus -> mGpsStatus
    int GPS_VALID_SAT_QUANTITY -> GPS_VALID_SAT_QUANTITY
    int mGpsSatellitesNum -> mGpsSatellitesNum
    int MSG_INVALID_GPS -> MSG_INVALID_GPS
    int MSG_INIT_GPS -> MSG_INIT_GPS
    int MSG_UNINIT_GPS -> MSG_UNINIT_GPS
    int mJniData -> mJniData
    android.os.Handler mHandler -> mHandler
    int getGpsSatellitesNum() -> getGpsSatellitesNum
    void delayInvalidGPS() -> delayInvalidGPS
    boolean init() -> init
    boolean unInit() -> unInit
    void updateGps(double,double,float,float,float,int) -> updateGps
    android.location.LocationManager a(com.baidu.navisdk.vi.VGps) -> a
    android.location.GpsStatus b(com.baidu.navisdk.vi.VGps) -> b
    android.location.GpsStatus a(com.baidu.navisdk.vi.VGps,android.location.GpsStatus) -> a
    int a() -> a
    int c(com.baidu.navisdk.vi.VGps) -> c
    void d(com.baidu.navisdk.vi.VGps) -> d
    int a(com.baidu.navisdk.vi.VGps,int) -> a
    android.location.LocationManager a(com.baidu.navisdk.vi.VGps,android.location.LocationManager) -> a
    android.location.GpsStatus$Listener e(com.baidu.navisdk.vi.VGps) -> e
    android.location.LocationListener f(com.baidu.navisdk.vi.VGps) -> f
com.baidu.navisdk.vi.VGps$1 -> com.baidu.navisdk.vi.VGps$1:
    com.baidu.navisdk.vi.VGps a -> a
    void onGpsStatusChanged(int) -> onGpsStatusChanged
com.baidu.navisdk.vi.VGps$2 -> com.baidu.navisdk.vi.VGps$2:
    com.baidu.navisdk.vi.VGps a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.navisdk.vi.VGps$3 -> com.baidu.navisdk.vi.VGps$3:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.navisdk.vi.VIActivityContext -> com.baidu.navisdk.vi.VIActivityContext:
    android.app.Activity a -> a
    void init(android.app.Activity) -> init
    android.app.Activity getActivityContext() -> getActivityContext
    void clear() -> clear
com.baidu.navisdk.vi.VIContext -> com.baidu.navisdk.vi.VIContext:
    android.content.Context a -> a
    void init(android.content.Context) -> init
    android.content.Context getContext() -> getContext
com.baidu.navisdk.vi.VMsg -> com.baidu.navisdk.vi.VMsg:
    int VM_USER_ID -> VM_USER_ID
    java.util.List outboxHandlers -> outboxHandlers
    com.baidu.navisdk.a sAuthManager -> sAuthManager
    void registerMessageHandler(com.baidu.navisdk.comapi.base.MsgHandler) -> registerMessageHandler
    void unRegisterMessageHandler(com.baidu.navisdk.comapi.base.MsgHandler) -> unRegisterMessageHandler
    void dispatchMessage(int,int,int) -> dispatchMessage
    void postMessage(int,int,int) -> postMessage
    void OnUserCommand(int,int,int) -> OnUserCommand
com.baidu.navisdk.vi.VNetworkInfo -> com.baidu.navisdk.vi.VNetworkInfo:
    java.lang.String typename -> typename
    int type -> type
    int state -> state
    int STATE_DISCONNECTED -> STATE_DISCONNECTED
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_CONNECTED -> STATE_CONNECTED
com.baidu.navisdk.vi.VNetworkInfo$1 -> com.baidu.navisdk.vi.VNetworkInfo$1:
    int[] a -> a
com.baidu.nplatform.comapi.EngineManager -> com.baidu.nplatform.comapi.EngineManager:
    android.app.Activity mActivity -> mActivity
    boolean mIsStart -> mIsStart
    boolean init() -> init
    boolean start() -> start
    boolean stop() -> stop
    android.os.Bundle getFlaxLength() -> getFlaxLength
    void destroy() -> destroy
com.baidu.nplatform.comapi.MapItem -> com.baidu.nplatform.comapi.MapItem:
    int mItemID -> mItemID
    int mItemType -> mItemType
    java.lang.String mUid -> mUid
    java.lang.String mTitle -> mTitle
    int mLongitude -> mLongitude
    int mLatitude -> mLatitude
com.baidu.nplatform.comapi.UIMsg -> com.baidu.nplatform.comapi.UIMsg:
com.baidu.nplatform.comapi.UIMsg$k_event -> com.baidu.nplatform.comapi.UIMsg$k_event:
    int V_WM_KEYDOWN -> V_WM_KEYDOWN
    int V_WM_KEYUP -> V_WM_KEYUP
    int V_WM_MOUSEMOVE -> V_WM_MOUSEMOVE
    int V_WM_LBUTTONDOWN -> V_WM_LBUTTONDOWN
    int V_WM_LBUTTONUP -> V_WM_LBUTTONUP
    int V_WM_ROTATEMOVE -> V_WM_ROTATEMOVE
    int V_WM_LBUTTONLONGCLICK -> V_WM_LBUTTONLONGCLICK
    int V_WM_LBUTTONCLICK -> V_WM_LBUTTONCLICK
    int V_WM_RBUTTONCLICK -> V_WM_RBUTTONCLICK
    int V_WM_TRACKBALLMOVE -> V_WM_TRACKBALLMOVE
    int V_WM_ONFING -> V_WM_ONFING
    int V_LEFT -> V_LEFT
    int V_UP -> V_UP
    int V_RIGHT -> V_RIGHT
    int V_DOWN -> V_DOWN
    int V_W -> V_W
    int V_A -> V_A
    int V_S -> V_S
    int V_D -> V_D
    int MV_SCREENSIZE_CHANGE -> MV_SCREENSIZE_CHANGE
    int V_WM_CANCELREQ -> V_WM_CANCELREQ
    int V_WM_GLRENDER -> V_WM_GLRENDER
    int V_WM_GLCHANGE -> V_WM_GLCHANGE
    int V_WM_LONGPRESS -> V_WM_LONGPRESS
    int MV_MAP_ZOOMIN -> MV_MAP_ZOOMIN
    int MV_MAP_ZOOMOUT -> MV_MAP_ZOOMOUT
    int MV_MAP_ITS -> MV_MAP_ITS
    int MV_MAP_SHOWONMAP -> MV_MAP_SHOWONMAP
    int MV_MAP_LOCATION -> MV_MAP_LOCATION
    int MV_MAP_CLEANRESAULT -> MV_MAP_CLEANRESAULT
    int MV_MAP_MOVETOGEO -> MV_MAP_MOVETOGEO
    int MV_MAP_MOVETOSCREEN -> MV_MAP_MOVETOSCREEN
    int MV_MAP_MOVETOGEOBOUND -> MV_MAP_MOVETOGEOBOUND
    int MV_MAP_SAVEMAP -> MV_MAP_SAVEMAP
    int MV_MAP_CALDISTANCE -> MV_MAP_CALDISTANCE
    int MV_MAP_ADDLOGOBJ -> MV_MAP_ADDLOGOBJ
    int MV_MAP_SETMAPMODE -> MV_MAP_SETMAPMODE
    int MV_MAP_GETSAVEFLAX -> MV_MAP_GETSAVEFLAX
    int MV_MAP_RESETOPENGLRES -> MV_MAP_RESETOPENGLRES
    int MV_MAP_CHANGETO2D -> MV_MAP_CHANGETO2D
    int MV_MAP_GETMAPMODE -> MV_MAP_GETMAPMODE
    int MV_MAP_SATELLITE -> MV_MAP_SATELLITE
    int MV_MAP_CLEARSATECACHE -> MV_MAP_CLEARSATECACHE
    int MV_MAP_SETRENDER -> MV_MAP_SETRENDER
    int MV_MAP_SENDPVLOGOBJ -> MV_MAP_SENDPVLOGOBJ
    int MV_MAP_ZOOMTO -> MV_MAP_ZOOMTO
    int V_WM_ROTATE -> V_WM_ROTATE
    int V_WM_GETLASTCLRSATETIME -> V_WM_GETLASTCLRSATETIME
    int V_WM_DBCLICK -> V_WM_DBCLICK
    int MV_MAP_CACHEMANAGE -> MV_MAP_CACHEMANAGE
    int MV_MAP_CLEARLOCINFO -> MV_MAP_CLEARLOCINFO
    int MV_MAP_STOPUPDATEFLS -> MV_MAP_STOPUPDATEFLS
com.baidu.nplatform.comapi.UIMsg$m_AppUI -> com.baidu.nplatform.comapi.UIMsg$m_AppUI:
    int V_WM_STREETSCAPE -> V_WM_STREETSCAPE
    int MSG_SSD_DAT_UPDATE -> MSG_SSD_DAT_UPDATE
    int MSG_SSG_DAT_VALID -> MSG_SSG_DAT_VALID
    int MSG_SSP_DAT_VALID -> MSG_SSP_DAT_VALID
    int MSG_SSG_DAT_UPDATE -> MSG_SSG_DAT_UPDATE
    int MSG_SSD_IDDES_DAT_UPDATE -> MSG_SSD_IDDES_DAT_UPDATE
    int MSG_SSD_IDMATCH_DAT_UPDATE -> MSG_SSD_IDMATCH_DAT_UPDATE
    int MSG_SSD_XYDES_DAT_UPDATE -> MSG_SSD_XYDES_DAT_UPDATE
    int MSG_SSG_DAT_UPDATE_LAYER -> MSG_SSG_DAT_UPDATE_LAYER
    int MSG_SSD_START_LOAD_THUMB_IMAGE -> MSG_SSD_START_LOAD_THUMB_IMAGE
    int MSG_SSD_END_LOAD_THUMB_IMAGE -> MSG_SSD_END_LOAD_THUMB_IMAGE
com.baidu.nplatform.comapi.basestruct.ComplexPt -> com.baidu.nplatform.comapi.basestruct.ComplexPt:
    int eType -> eType
    com.baidu.nplatform.comapi.basestruct.Point mLL -> mLL
    com.baidu.nplatform.comapi.basestruct.Point mRu -> mRu
    java.util.ArrayList mGeoPt -> mGeoPt
com.baidu.nplatform.comapi.basestruct.GeoPoint -> com.baidu.nplatform.comapi.basestruct.GeoPoint:
    int INVALID_VALUE -> INVALID_VALUE
    int mLatitudeE6 -> mLatitudeE6
    int mLongitudeE6 -> mLongitudeE6
    int getLatitudeE6() -> getLatitudeE6
    int getLongitudeE6() -> getLongitudeE6
    void setLatitudeE6(int) -> setLatitudeE6
    void setLongitudeE6(int) -> setLongitudeE6
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean isValid() -> isValid
com.baidu.nplatform.comapi.basestruct.MapStatus -> com.baidu.nplatform.comapi.basestruct.MapStatus:
    float _Level -> _Level
    int _Rotation -> _Rotation
    int _Overlooking -> _Overlooking
    int _CenterPtX -> _CenterPtX
    int _CenterPtY -> _CenterPtY
    int _CenterPtZ -> _CenterPtZ
    com.baidu.nplatform.comapi.basestruct.MapStatus$WinRound _WinRound -> _WinRound
    com.baidu.nplatform.comapi.basestruct.MapStatus$GeoBound _GeoRound -> _GeoRound
    long _Xoffset -> _Xoffset
    long _Yoffset -> _Yoffset
    boolean _bfpp -> _bfpp
    java.lang.String _panoId -> _panoId
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.nplatform.comapi.basestruct.MapStatus$GeoBound -> com.baidu.nplatform.comapi.basestruct.MapStatus$GeoBound:
    long left -> left
    long right -> right
    long top -> top
    long bottom -> bottom
    com.baidu.nplatform.comapi.basestruct.Point lb -> lb
    com.baidu.nplatform.comapi.basestruct.Point lt -> lt
    com.baidu.nplatform.comapi.basestruct.Point rt -> rt
    com.baidu.nplatform.comapi.basestruct.Point rb -> rb
    com.baidu.nplatform.comapi.basestruct.MapStatus this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.nplatform.comapi.basestruct.MapStatus$WinRound -> com.baidu.nplatform.comapi.basestruct.MapStatus$WinRound:
    int left -> left
    int right -> right
    int top -> top
    int bottom -> bottom
    com.baidu.nplatform.comapi.basestruct.MapStatus this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.nplatform.comapi.basestruct.Point -> com.baidu.nplatform.comapi.basestruct.Point:
    long serialVersionUID -> serialVersionUID
    int x -> x
    int y -> y
    int getmPtx() -> getmPtx
    void setmPtx(int) -> setmPtx
    int getmPty() -> getmPty
    void setmPty(int) -> setmPty
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.nplatform.comapi.map.InnerOverlay -> com.baidu.nplatform.comapi.map.InnerOverlay:
    boolean DEBUG -> DEBUG
    com.baidu.nplatform.comjni.map.basemap.AppBaseMap mBaseMap -> mBaseMap
    java.lang.String strJsonData -> strJsonData
    void SetMapParam(int,com.baidu.nplatform.comjni.map.basemap.AppBaseMap) -> SetMapParam
    void SetOverlayShow(boolean) -> SetOverlayShow
    boolean IsOverlayShow() -> IsOverlayShow
    void UpdateOverlay() -> UpdateOverlay
    void setData(java.lang.String) -> setData
    java.lang.String getData() -> getData
    android.os.Bundle getParam() -> getParam
    void clear() -> clear
    void setType(int) -> setType
    int getType() -> getType
    void setFocus(int,boolean) -> setFocus
    boolean addedToMapView() -> addedToMapView
com.baidu.nplatform.comapi.map.ItemizedOverlay -> com.baidu.nplatform.comapi.map.ItemizedOverlay:
    java.util.ArrayList mItems -> mItems
    java.util.ArrayList mItemIndex -> mItemIndex
    android.graphics.drawable.Drawable mMarker -> mMarker
    com.baidu.nplatform.comapi.map.MapGLSurfaceView mMapView -> mMapView
    boolean isNeedUpdate -> isNeedUpdate
    void initLayer() -> initLayer
    void addItem(com.baidu.nplatform.comapi.map.OverlayItem) -> addItem
    void addItem(java.util.List) -> addItem
    void addItem(java.util.List,boolean) -> addItem
    void boundCenterBottom(com.baidu.nplatform.comapi.map.OverlayItem) -> boundCenterBottom
    void boundCenter(com.baidu.nplatform.comapi.map.OverlayItem) -> boundCenter
    java.util.ArrayList getAllItem() -> getAllItem
    com.baidu.nplatform.comapi.map.OverlayItem getItem(int) -> getItem
    int getLatSpanE6() -> getLatSpanE6
    int getLonSpanE6() -> getLonSpanE6
    com.baidu.nplatform.comapi.basestruct.GeoPoint getCenter() -> getCenter
    int getSpanE6(boolean) -> getSpanE6
    int getIndexToDraw(int) -> getIndexToDraw
    boolean hitTest(com.baidu.nplatform.comapi.map.OverlayItem,android.graphics.drawable.Drawable,int,int) -> hitTest
    boolean onTap(int) -> onTap
    boolean onTap(com.baidu.nplatform.comapi.basestruct.GeoPoint,com.baidu.nplatform.comapi.map.MapGLSurfaceView) -> onTap
    void initItems(java.util.ArrayList) -> initItems
    int compare(java.lang.Integer,java.lang.Integer) -> compare
    boolean updateItem(com.baidu.nplatform.comapi.map.OverlayItem) -> updateItem
    boolean removeItem(com.baidu.nplatform.comapi.map.OverlayItem) -> removeItem
    boolean removeAll() -> removeAll
    void reAddAll() -> reAddAll
    void setUpdateInfo(boolean) -> setUpdateInfo
    boolean getUpdateInfo() -> getUpdateInfo
    com.baidu.nplatform.comapi.map.OverlayItem createItem(int) -> createItem
    int size() -> size
    int getLayerid() -> getLayerid
    boolean isSameImagAdded(com.baidu.nplatform.comapi.map.OverlayItem) -> isSameImagAdded
    int compare(java.lang.Object,java.lang.Object) -> compare
com.baidu.nplatform.comapi.map.MapController -> com.baidu.nplatform.comapi.map.MapController:
    java.lang.String TAG -> TAG
    com.baidu.nplatform.comapi.map.MapController$MapControlMode mMapControlMode -> mMapControlMode
    int TOUCH_MODE_LOOKOVER -> TOUCH_MODE_LOOKOVER
    int TOUCH_MODE_ZOOM_ROTATE -> TOUCH_MODE_ZOOM_ROTATE
    int TOUCH_MODE_ZOOM -> TOUCH_MODE_ZOOM
    int TOUCH_MODE_ROTATE -> TOUCH_MODE_ROTATE
    long DoubleTapTimeout -> DoubleTapTimeout
    long LongPressTimeout -> LongPressTimeout
    float FLING_ADJUST -> FLING_ADJUST
    int ZOOM_BUNDARY -> ZOOM_BUNDARY
    int ROATE_BUNDARY -> ROATE_BUNDARY
    int LOOK_ZOOM_BUNDARY -> LOOK_ZOOM_BUNDARY
    int LOOK_ROATE_BUNDARY -> LOOK_ROATE_BUNDARY
    int DRAG_MIN_DIST -> DRAG_MIN_DIST
    int DOUBLE_TAP_SLOP -> DOUBLE_TAP_SLOP
    int NEARLYRADIUS -> NEARLYRADIUS
    int NEARLYRADIUS_NEAREST_OBT -> NEARLYRADIUS_NEAREST_OBT
    float mDensity -> mDensity
    int screenWidth -> screenWidth
    int screenHeight -> screenHeight
    int nearlyRadius -> nearlyRadius
    com.baidu.nplatform.comapi.map.MapController$MultiTouch mMultiTouch -> mMultiTouch
    int flag -> flag
    long mDoubleClickTime -> mDoubleClickTime
    int DB_CLICK_NON_CONFLICT -> DB_CLICK_NON_CONFLICT
    long mMultiDownTime -> mMultiDownTime
    long mMultiDownTimeTem -> mMultiDownTimeTem
    long mMultiUpTime -> mMultiUpTime
    long mMultiUpTimeTem -> mMultiUpTimeTem
    android.view.VelocityTracker velocityTracker -> velocityTracker
    int touchMode -> touchMode
    boolean mIs3DSet -> mIs3DSet
    boolean enableTouchModeLookover -> enableTouchModeLookover
    boolean enterLookover -> enterLookover
    boolean enterZoomRotate -> enterZoomRotate
    boolean logLookover -> logLookover
    boolean logRotate -> logRotate
    float clickPointX -> clickPointX
    float clickPointY -> clickPointY
    float lastPointX -> lastPointX
    float lastPointY -> lastPointY
    boolean lastClickDown -> lastClickDown
    long curClickDown -> curClickDown
    boolean bMapclick -> bMapclick
    boolean mIsEnableDDZoom -> mIsEnableDDZoom
    com.baidu.nplatform.comjni.map.basemap.AppBaseMap mBasemap -> mBasemap
    android.content.Context mContext -> mContext
    com.baidu.nplatform.comapi.map.MapGLSurfaceView mMapGlView -> mMapGlView
    int mAddrBaseMap -> mAddrBaseMap
    boolean mbDown -> mbDown
    com.baidu.nplatform.comapi.basestruct.Point mPtDown -> mPtDown
    com.baidu.nplatform.comapi.basestruct.Point mPtUp -> mPtUp
    com.baidu.nplatform.comapi.basestruct.Point mPtMove -> mPtMove
    com.baidu.nplatform.comapi.basestruct.Point mPtFlingFrom -> mPtFlingFrom
    float mLevel -> mLevel
    int mFocusItemIndex -> mFocusItemIndex
    boolean ifGestureZoomin -> ifGestureZoomin
    boolean ifGestureZoomout -> ifGestureZoomout
    com.baidu.navisdk.comapi.base.MsgHandler mMsgHandler -> mMsgHandler
    android.os.Bundle mParamsBundle -> mParamsBundle
    android.os.Handler mFocusHandler -> mFocusHandler
    void setContextView(com.baidu.nplatform.comapi.map.MapGLSurfaceView) -> setContextView
    void initBaseMap(android.os.Bundle) -> initBaseMap
    com.baidu.nplatform.comjni.map.basemap.AppBaseMap getBaseMap() -> getBaseMap
    void unInit() -> unInit
    int getScreenWidth() -> getScreenWidth
    int getScreenHeight() -> getScreenHeight
    boolean handleTouchEvent(android.view.MotionEvent) -> handleTouchEvent
    void handleTouchDown(android.view.MotionEvent) -> handleTouchDown
    boolean handleTouchMove(android.view.MotionEvent) -> handleTouchMove
    boolean handleTouchUp(android.view.MotionEvent) -> handleTouchUp
    void resetTouchMode() -> resetTouchMode
    boolean handleTouchSingleClick(android.view.MotionEvent) -> handleTouchSingleClick
    void handleDoubleTouch(android.view.MotionEvent) -> handleDoubleTouch
    void setDoubleClickZoom(boolean) -> setDoubleClickZoom
    void set3DGestureEnable(boolean) -> set3DGestureEnable
    void enableTouchEventLookover(boolean) -> enableTouchEventLookover
    boolean handleFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> handleFling
    void handleLongClick(android.view.MotionEvent) -> handleLongClick
    void handleClick(android.view.MotionEvent) -> handleClick
    void handleRightClick() -> handleRightClick
    boolean GetNearlyObject(int,int) -> GetNearlyObject
    boolean handlePopupClick(int,int) -> handlePopupClick
    boolean handleItemsizedClick(int,int,int) -> handleItemsizedClick
    boolean getMapClickEnable() -> getMapClickEnable
    void setMapClickEnable(boolean) -> setMapClickEnable
    void setMapControlMode(com.baidu.nplatform.comapi.map.MapController$MapControlMode) -> setMapControlMode
    void setMapStatus(com.baidu.nplatform.comapi.basestruct.MapStatus) -> setMapStatus
    void setMapStatusWithAnimation(com.baidu.nplatform.comapi.basestruct.MapStatus,int) -> setMapStatusWithAnimation
    com.baidu.nplatform.comapi.basestruct.MapStatus getMapStatus() -> getMapStatus
    int getZoomLevel() -> getZoomLevel
    float getLevel() -> getLevel
    double getZoomUnitsInMeter() -> getZoomUnitsInMeter
    boolean zoomIn() -> zoomIn
    boolean zoomOut() -> zoomOut
    boolean setLevel(int) -> setLevel
    boolean zoomToBound(android.os.Bundle) -> zoomToBound
    void setRotation(int) -> setRotation
    void setOverlook(int) -> setOverlook
    boolean locate(int,int) -> locate
    boolean move(int,int,int,int) -> move
    void resetImageRes() -> resetImageRes
    void showNaviSpecRouteLayer() -> showNaviSpecRouteLayer
    void showNaviRouteLayer() -> showNaviRouteLayer
    boolean setStyleMode(int) -> setStyleMode
    boolean showLayer(int,boolean) -> showLayer
    boolean showLayerByID(int,boolean) -> showLayerByID
    boolean updateLayer(int) -> updateLayer
    boolean UpdataBaseLayers() -> UpdataBaseLayers
    boolean clearLayer(int) -> clearLayer
    boolean saveScreen(java.lang.String) -> saveScreen
    void addPopupData(android.os.Bundle) -> addPopupData
    void resetCompassPosition(int,int,int) -> resetCompassPosition
    com.baidu.nplatform.comapi.basestruct.GeoPoint getGeoPosByScreenPos(int,int) -> getGeoPosByScreenPos
    com.baidu.nplatform.comapi.basestruct.Point getScreenPosByGeoPos(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> getScreenPosByGeoPos
    int getScaleDis(int) -> getScaleDis
    boolean MapMsgProc(int,int,int) -> MapMsgProc
    void mouseEvent(int,int,int) -> mouseEvent
    void dragMap(int,int,int,int,long,long) -> dragMap
    void onPause() -> onPause
    void onResume() -> onResume
    void showTrafficMap(boolean) -> showTrafficMap
    void switchITSMode(boolean) -> switchITSMode
    void SaveCache() -> SaveCache
    void StartMapDataRequest() -> StartMapDataRequest
    void StopMapDataRequest() -> StopMapDataRequest
    boolean switchToStreetScapeWithUID(java.lang.String,java.lang.String) -> switchToStreetScapeWithUID
    boolean switchStreetScapeWithStreedId(java.lang.String) -> switchStreetScapeWithStreedId
    boolean getCurrentStreetInfo(android.os.Bundle,java.lang.String) -> getCurrentStreetInfo
    boolean cancelMapJump() -> cancelMapJump
    java.lang.String getCurrentStreetId() -> getCurrentStreetId
    boolean queryThumbImage(java.lang.String) -> queryThumbImage
    boolean enterStreetScapeWaitingMode() -> enterStreetScapeWaitingMode
    boolean isInStreepScapeMode() -> isInStreepScapeMode
    boolean enterStreetScapeMap() -> enterStreetScapeMap
    boolean setStreetPOIUID(java.lang.String) -> setStreetPOIUID
    boolean getNearlyObjIDStreet(int,long,long) -> getNearlyObjIDStreet
    boolean exitStreetScapeMap() -> exitStreetScapeMap
    void glResize(int,int,int,int,int) -> glResize
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    boolean getScreenPosByGeoPos(int,int,int[],int[]) -> getScreenPosByGeoPos
    com.baidu.nplatform.comapi.MapItem selectItem(int,int,int) -> selectItem
    boolean saveScreenToBuffer() -> saveScreenToBuffer
    boolean getScreenShot(int,int,int,android.graphics.Bitmap) -> getScreenShot
    boolean getScreenMask(int,int,int,int,boolean,android.graphics.Bitmap) -> getScreenMask
    boolean setDrawHouse(boolean) -> setDrawHouse
    boolean setCharsetEncodeType(boolean) -> setCharsetEncodeType
    boolean focusItem(int,int,boolean) -> focusItem
    int AddLayer(int,int,java.lang.String) -> AddLayer
    int RemoveLayer(int) -> RemoveLayer
    void AddItemData(android.os.Bundle) -> AddItemData
    boolean RemoveItemData(android.os.Bundle) -> RemoveItemData
    boolean releaseSharedMapData() -> releaseSharedMapData
    boolean updateShareMapData() -> updateShareMapData
    boolean zoomToTrajectory() -> zoomToTrajectory
    void setDrawNaviLogo(boolean) -> setDrawNaviLogo
    com.baidu.nplatform.comapi.map.MapGLSurfaceView access$000(com.baidu.nplatform.comapi.map.MapController) -> access$000
com.baidu.nplatform.comapi.map.MapController$1 -> com.baidu.nplatform.comapi.map.MapController$1:
    com.baidu.nplatform.comapi.map.MapController this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
    void careAbout() -> careAbout
com.baidu.nplatform.comapi.map.MapController$MapControlMode -> com.baidu.nplatform.comapi.map.MapController$MapControlMode:
    com.baidu.nplatform.comapi.map.MapController$MapControlMode DEFAULT -> DEFAULT
    com.baidu.nplatform.comapi.map.MapController$MapControlMode INDOOR -> INDOOR
    com.baidu.nplatform.comapi.map.MapController$MapControlMode STREET -> STREET
    com.baidu.nplatform.comapi.map.MapController$MapControlMode STREET_WAITING -> STREET_WAITING
    int id -> id
    com.baidu.nplatform.comapi.map.MapController$MapControlMode[] $VALUES -> $VALUES
    com.baidu.nplatform.comapi.map.MapController$MapControlMode[] values() -> values
    com.baidu.nplatform.comapi.map.MapController$MapControlMode valueOf(java.lang.String) -> valueOf
com.baidu.nplatform.comapi.map.MapController$MultiTouch -> com.baidu.nplatform.comapi.map.MapController$MultiTouch:
    int MAP_TWO_TOUCH -> MAP_TWO_TOUCH
    float startX1 -> startX1
    float startY1 -> startY1
    float startX2 -> startX2
    float startY2 -> startY2
    float x1 -> x1
    float x2 -> x2
    float y1 -> y1
    float y2 -> y2
    boolean mTwoTouch -> mTwoTouch
    float centerX -> centerX
    float centerY -> centerY
    double length -> length
com.baidu.nplatform.comapi.map.MapGLSurfaceView -> com.baidu.nplatform.comapi.map.MapGLSurfaceView:
    java.lang.String TAG -> TAG
    com.baidu.nplatform.comapi.map.MapController mMapController -> mMapController
    com.baidu.nplatform.comapi.map.MapRenderer mRenderer -> mRenderer
    com.baidu.nplatform.comapi.map.MapViewListener mMapViewListener -> mMapViewListener
    java.util.List innerOverlayList -> innerOverlayList
    void onDraw(android.graphics.Canvas) -> onDraw
    void Init(android.content.Context,android.os.Bundle) -> Init
    void InitOverlays() -> InitOverlays
    void unInit() -> unInit
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    com.baidu.nplatform.comapi.map.MapController getController() -> getController
    int getLatitudeSpan() -> getLatitudeSpan
    int getLongitudeSpan() -> getLongitudeSpan
    void setMapCenter(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> setMapCenter
    com.baidu.nplatform.comapi.basestruct.GeoPoint getMapCenter() -> getMapCenter
    void setZoomLevel(int) -> setZoomLevel
    float getZoomLevel() -> getZoomLevel
    void setRotation(int) -> setRotation
    int getMapRotation() -> getMapRotation
    void setOverlooking(int) -> setOverlooking
    int getOverlooking() -> getOverlooking
    void setWinRound(com.baidu.nplatform.comapi.basestruct.MapStatus$WinRound) -> setWinRound
    com.baidu.nplatform.comapi.basestruct.MapStatus$WinRound getWinRound() -> getWinRound
    void setGeoRound(com.baidu.nplatform.comapi.basestruct.MapStatus$GeoBound) -> setGeoRound
    com.baidu.nplatform.comapi.basestruct.MapStatus$GeoBound getGeoRound() -> getGeoRound
    void setMapStatus(com.baidu.nplatform.comapi.basestruct.MapStatus) -> setMapStatus
    com.baidu.nplatform.comapi.basestruct.MapStatus getMapStatus() -> getMapStatus
    boolean enable3D() -> enable3D
    boolean isSatellite() -> isSatellite
    boolean isTraffic() -> isTraffic
    boolean isStreetRoad() -> isStreetRoad
    void setSatellite(boolean) -> setSatellite
    void setStreetRoad(boolean) -> setStreetRoad
    void setTraffic(boolean) -> setTraffic
    void setMapTo2D(boolean) -> setMapTo2D
    void saveScreenToLocal(java.lang.String) -> saveScreenToLocal
    void setMapViewListener(com.baidu.nplatform.comapi.map.MapViewListener) -> setMapViewListener
    com.baidu.nplatform.comapi.map.MapViewListener getMapViewListener() -> getMapViewListener
    java.util.List getOverlays() -> getOverlays
    boolean addOverlay(com.baidu.nplatform.comapi.map.Overlay) -> addOverlay
    boolean removeOverlay(com.baidu.nplatform.comapi.map.Overlay) -> removeOverlay
    void refresh(com.baidu.nplatform.comapi.map.Overlay) -> refresh
com.baidu.nplatform.comapi.map.MapObj -> com.baidu.nplatform.comapi.map.MapObj:
    java.lang.String strUid -> strUid
    int nIndex -> nIndex
    java.lang.String strText -> strText
    com.baidu.nplatform.comapi.basestruct.Point geoPt -> geoPt
    int nType -> nType
    int offset -> offset
    int sltime -> sltime
    int slobj -> slobj
    int slvisi -> slvisi
com.baidu.nplatform.comapi.map.MapRenderer -> com.baidu.nplatform.comapi.map.MapRenderer:
    int w_old -> w_old
    int h_old -> h_old
    int resize_tries -> resize_tries
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
com.baidu.nplatform.comapi.map.MapUtils -> com.baidu.nplatform.comapi.map.MapUtils:
    double[] MCBAND -> MCBAND
    double[] LLBAND -> LLBAND
    double[][] MC2LL -> MC2LL
    double[][] LL2MC -> LL2MC
    com.baidu.nplatform.comapi.map.MapUtils$VDPOINT _conv_(com.baidu.nplatform.comapi.map.MapUtils$VDPOINT,double[]) -> _conv_
    com.baidu.nplatform.comapi.basestruct.GeoPoint mc2ll(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> mc2ll
    com.baidu.nplatform.comapi.basestruct.GeoPoint ll2mc(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> ll2mc
com.baidu.nplatform.comapi.map.MapUtils$VDPOINT -> com.baidu.nplatform.comapi.map.MapUtils$VDPOINT:
    double x -> x
    double y -> y
com.baidu.nplatform.comapi.map.MapViewInterface -> com.baidu.nplatform.comapi.map.MapViewInterface:
    com.baidu.nplatform.comapi.map.MapController getController() -> getController
    int getLatitudeSpan() -> getLatitudeSpan
    int getLongitudeSpan() -> getLongitudeSpan
    void setMapCenter(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> setMapCenter
    com.baidu.nplatform.comapi.basestruct.GeoPoint getMapCenter() -> getMapCenter
    void setZoomLevel(int) -> setZoomLevel
    float getZoomLevel() -> getZoomLevel
    void setRotation(int) -> setRotation
    int getMapRotation() -> getMapRotation
    void setOverlooking(int) -> setOverlooking
    int getOverlooking() -> getOverlooking
    void setWinRound(com.baidu.nplatform.comapi.basestruct.MapStatus$WinRound) -> setWinRound
    com.baidu.nplatform.comapi.basestruct.MapStatus$WinRound getWinRound() -> getWinRound
    void setGeoRound(com.baidu.nplatform.comapi.basestruct.MapStatus$GeoBound) -> setGeoRound
    com.baidu.nplatform.comapi.basestruct.MapStatus$GeoBound getGeoRound() -> getGeoRound
    void setMapStatus(com.baidu.nplatform.comapi.basestruct.MapStatus) -> setMapStatus
    com.baidu.nplatform.comapi.basestruct.MapStatus getMapStatus() -> getMapStatus
    java.util.List getOverlays() -> getOverlays
    boolean addOverlay(com.baidu.nplatform.comapi.map.Overlay) -> addOverlay
    boolean removeOverlay(com.baidu.nplatform.comapi.map.Overlay) -> removeOverlay
    void refresh(com.baidu.nplatform.comapi.map.Overlay) -> refresh
    boolean enable3D() -> enable3D
    boolean isSatellite() -> isSatellite
    boolean isTraffic() -> isTraffic
    boolean isStreetRoad() -> isStreetRoad
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setSatellite(boolean) -> setSatellite
    void setStreetRoad(boolean) -> setStreetRoad
    void setTraffic(boolean) -> setTraffic
    void setMapTo2D(boolean) -> setMapTo2D
    void setMapViewListener(com.baidu.nplatform.comapi.map.MapViewListener) -> setMapViewListener
    com.baidu.nplatform.comapi.map.MapViewListener getMapViewListener() -> getMapViewListener
    void saveScreenToLocal(java.lang.String) -> saveScreenToLocal
com.baidu.nplatform.comapi.map.MapViewListener -> com.baidu.nplatform.comapi.map.MapViewListener:
    void onClickedBaseLayer() -> onClickedBaseLayer
    void onClickedCompassLayer() -> onClickedCompassLayer
    void onClickedPopupLayer() -> onClickedPopupLayer
    void onClickedPOILayer(com.baidu.nplatform.comapi.MapItem) -> onClickedPOILayer
    void onClickedBasePOILayer(com.baidu.nplatform.comapi.MapItem) -> onClickedBasePOILayer
    void onClickedPOIBkgLayer(com.baidu.nplatform.comapi.MapItem) -> onClickedPOIBkgLayer
    void onClickedFavPoiLayer(com.baidu.nplatform.comapi.MapItem) -> onClickedFavPoiLayer
    void onMapAnimationFinish() -> onMapAnimationFinish
    void onMapNetworkingChanged(boolean) -> onMapNetworkingChanged
    void onMapObviousMove() -> onMapObviousMove
    void onClickedStreetPopup(java.lang.String) -> onClickedStreetPopup
    void onClickedBackground(int,int) -> onClickedBackground
    void onClickedStreetIndoorPoi(com.baidu.nplatform.comapi.map.MapObj) -> onClickedStreetIndoorPoi
    void onClickStreetArrow(com.baidu.nplatform.comapi.streetscape.model.StreetscapeInfoModel) -> onClickStreetArrow
    void onDoubleFingerZoom() -> onDoubleFingerZoom
    void onDoubleFingerRotate() -> onDoubleFingerRotate
com.baidu.nplatform.comapi.map.Overlay -> com.baidu.nplatform.comapi.map.Overlay:
    int mType -> mType
    int mLayerID -> mLayerID
com.baidu.nplatform.comapi.map.OverlayItem -> com.baidu.nplatform.comapi.map.OverlayItem:
    int ALING_CENTER -> ALING_CENTER
    int ALIGN_BOTTON -> ALIGN_BOTTON
    int ALIGN_TOP -> ALIGN_TOP
    int bound -> bound
    com.baidu.nplatform.comapi.basestruct.GeoPoint mPoint -> mPoint
    java.lang.String mTitle -> mTitle
    java.lang.String mSnippet -> mSnippet
    android.graphics.drawable.Drawable mMarker -> mMarker
    java.lang.String id -> id
    com.baidu.nplatform.comapi.map.OverlayItem$CoordType mCoordType -> mCoordType
    float anchorX -> anchorX
    float anchorY -> anchorY
    android.graphics.drawable.Drawable getMarker() -> getMarker
    com.baidu.nplatform.comapi.basestruct.GeoPoint getPoint() -> getPoint
    java.lang.String getSnippet() -> getSnippet
    void setSnippet(java.lang.String) -> setSnippet
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void setMarker(android.graphics.drawable.Drawable) -> setMarker
    void setBound(int) -> setBound
    int getBound() -> getBound
    void setId(java.lang.String) -> setId
    int getResId() -> getResId
    java.lang.String getId() -> getId
    void setGeoPoint(com.baidu.nplatform.comapi.basestruct.GeoPoint) -> setGeoPoint
    com.baidu.nplatform.comapi.map.OverlayItem$CoordType getCoordType() -> getCoordType
    void setCoordType(com.baidu.nplatform.comapi.map.OverlayItem$CoordType) -> setCoordType
    void setAnchor(float,float) -> setAnchor
    void setAnchor(int) -> setAnchor
    float getAnchorX() -> getAnchorX
    float getAnchorY() -> getAnchorY
com.baidu.nplatform.comapi.map.OverlayItem$CoordType -> com.baidu.nplatform.comapi.map.OverlayItem$CoordType:
    com.baidu.nplatform.comapi.map.OverlayItem$CoordType CoordType_BD09LL -> CoordType_BD09LL
    com.baidu.nplatform.comapi.map.OverlayItem$CoordType CoordType_BD09 -> CoordType_BD09
    com.baidu.nplatform.comapi.map.OverlayItem$CoordType[] $VALUES -> $VALUES
    com.baidu.nplatform.comapi.map.OverlayItem$CoordType[] values() -> values
    com.baidu.nplatform.comapi.map.OverlayItem$CoordType valueOf(java.lang.String) -> valueOf
com.baidu.nplatform.comapi.map.OverlayMapCallBack -> com.baidu.nplatform.comapi.map.OverlayMapCallBack:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    java.lang.String LAYERDATA_KEY -> LAYERDATA_KEY
    java.lang.String LAYERDATA_PARAM -> LAYERDATA_PARAM
    android.util.SparseArray overlayMap -> overlayMap
    com.baidu.nplatform.comjni.map.basemap.AppBaseMap mBaseMap -> mBaseMap
    int getOverlaySize() -> getOverlaySize
    int mapLayerDataReq(android.os.Bundle,int,int) -> mapLayerDataReq
    boolean hasLayer(int) -> hasLayer
    void addOverlay(com.baidu.nplatform.comapi.map.InnerOverlay) -> addOverlay
    com.baidu.nplatform.comapi.map.InnerOverlay getOverlay(int) -> getOverlay
    void remove(com.baidu.nplatform.comapi.map.Overlay) -> remove
    void clear() -> clear
com.baidu.nplatform.comapi.streetscape.controller.StreetscapeBaseController -> com.baidu.nplatform.comapi.streetscape.controller.StreetscapeBaseController:
    com.baidu.nplatform.comapi.map.MapController mMapController -> mMapController
    com.baidu.nplatform.comapi.streetscape.model.StreetScapeModel mStreetScapeModel -> mStreetScapeModel
    com.baidu.nplatform.comapi.map.MapController$MapControlMode mCurrentMode -> mCurrentMode
    void setMapControlMode(com.baidu.nplatform.comapi.map.MapController$MapControlMode) -> setMapControlMode
    void initMapController(com.baidu.nplatform.comapi.map.MapController) -> initMapController
    void updateStreetInfo(java.lang.String) -> updateStreetInfo
    com.baidu.nplatform.comapi.streetscape.data.StreetScapeData getStreetInfo() -> getStreetInfo
    boolean queryThumbImage(java.lang.String) -> queryThumbImage
    boolean setStreetSwitchByUID(java.lang.String,java.lang.String) -> setStreetSwitchByUID
    boolean setStreetSwitchToId(java.lang.String) -> setStreetSwitchToId
    boolean enterStreetScapeWaitingMode() -> enterStreetScapeWaitingMode
    boolean isInStreepScapeMode() -> isInStreepScapeMode
    boolean enterStreetScapeMap() -> enterStreetScapeMap
    java.lang.String getIndoorId() -> getIndoorId
    void setIndoorId(java.lang.String) -> setIndoorId
com.baidu.nplatform.comapi.streetscape.controller.StreetscapeController -> com.baidu.nplatform.comapi.streetscape.controller.StreetscapeController:
    void parseArgument(android.os.Bundle) -> parseArgument
    boolean loadStreetscape(boolean) -> loadStreetscape
    void saveMapStatus() -> saveMapStatus
    void reloadMapStatus() -> reloadMapStatus
    android.os.Bundle getIndoorscapeInfoBundle() -> getIndoorscapeInfoBundle
    void updateStreetInfo() -> updateStreetInfo
    boolean getHaveIndoor() -> getHaveIndoor
    void setHaveIndoor(boolean) -> setHaveIndoor
    java.lang.String getPoiName() -> getPoiName
    void setPoiName(java.lang.String) -> setPoiName
    boolean setStreetPOIUID(java.lang.String) -> setStreetPOIUID
    void setStreetPOIUID() -> setStreetPOIUID
com.baidu.nplatform.comapi.streetscape.data.MapDataEngine -> com.baidu.nplatform.comapi.streetscape.data.MapDataEngine:
    com.baidu.nplatform.comapi.streetscape.data.MapDataEngine mDataEngineMgr -> mDataEngineMgr
    com.baidu.nplatform.comapi.streetscape.data.MapDataEngineNotifier mDataEngineNotifier -> mDataEngineNotifier
    android.os.Handler mHandler -> mHandler
    com.baidu.nplatform.comapi.streetscape.data.MapDataEngine getInstance() -> getInstance
    boolean init() -> init
    void destroy() -> destroy
    void registDataEngineListener(com.baidu.nplatform.comapi.streetscape.data.MapDataEngineListener) -> registDataEngineListener
    void removeDataEngineListener(com.baidu.nplatform.comapi.streetscape.data.MapDataEngineListener) -> removeDataEngineListener
    com.baidu.nplatform.comapi.streetscape.data.MapDataEngineNotifier access$000(com.baidu.nplatform.comapi.streetscape.data.MapDataEngine) -> access$000
com.baidu.nplatform.comapi.streetscape.data.MapDataEngine$1 -> com.baidu.nplatform.comapi.streetscape.data.MapDataEngine$1:
    com.baidu.nplatform.comapi.streetscape.data.MapDataEngine this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.nplatform.comapi.streetscape.data.MapDataEngineListener -> com.baidu.nplatform.comapi.streetscape.data.MapDataEngineListener:
    void onGetDataEngineRst(int,int) -> onGetDataEngineRst
com.baidu.nplatform.comapi.streetscape.data.MapDataEngineNotifier -> com.baidu.nplatform.comapi.streetscape.data.MapDataEngineNotifier:
    java.util.ArrayList mListeners -> mListeners
    void registListener(com.baidu.nplatform.comapi.streetscape.data.MapDataEngineListener) -> registListener
    void removeListener(com.baidu.nplatform.comapi.streetscape.data.MapDataEngineListener) -> removeListener
    void eventNotify(android.os.Message) -> eventNotify
com.baidu.nplatform.comapi.streetscape.data.MapDataEngineType -> com.baidu.nplatform.comapi.streetscape.data.MapDataEngineType:
    int MSG_SSG_DAT_VALID -> MSG_SSG_DAT_VALID
    int MSG_SSP_DAT_VALID -> MSG_SSP_DAT_VALID
    int MSG_SSD_XYDES_DAT_UPDATE -> MSG_SSD_XYDES_DAT_UPDATE
    int MSG_SSD_START_LOAD_THUMB_IMAGE -> MSG_SSD_START_LOAD_THUMB_IMAGE
    int MSG_SSD_END_LOAD_THUMB_IMAGE -> MSG_SSD_END_LOAD_THUMB_IMAGE
    int MSG_SSD_START_DOWNLOAD -> MSG_SSD_START_DOWNLOAD
    int MSG_SSD_END_DOWNLOAD -> MSG_SSD_END_DOWNLOAD
com.baidu.nplatform.comapi.streetscape.data.StreetScapeData -> com.baidu.nplatform.comapi.streetscape.data.StreetScapeData:
    java.lang.String mStreetAddress -> mStreetAddress
    java.lang.String mDayNightMode -> mDayNightMode
    boolean mIsNightAvailable -> mIsNightAvailable
    java.lang.String mSwitchId -> mSwitchId
    java.lang.String mIndoorId -> mIndoorId
    java.util.ArrayList mFloorArray -> mFloorArray
    int mDefaultFloor -> mDefaultFloor
    java.lang.String mType -> mType
    void parseStreetInfoJson(java.lang.String) -> parseStreetInfoJson
com.baidu.nplatform.comapi.streetscape.model.StreetScapeModel -> com.baidu.nplatform.comapi.streetscape.model.StreetScapeModel:
    com.baidu.nplatform.comapi.streetscape.model.StreetScapeModel mInstance -> mInstance
    com.baidu.nplatform.comapi.streetscape.data.StreetScapeData mStreetInfo -> mStreetInfo
    java.lang.String mIndoorId -> mIndoorId
    java.lang.String mBookType -> mBookType
    int mMovieNum -> mMovieNum
    java.lang.String mBookTel -> mBookTel
    java.lang.String mBookWeb -> mBookWeb
    int mDefaultSelected -> mDefaultSelected
    java.lang.String mIndoorSwitchId -> mIndoorSwitchId
    int mIndoorRotation -> mIndoorRotation
    int mIndoorOverlooking -> mIndoorOverlooking
    java.lang.String mIndoorFromSource -> mIndoorFromSource
    double mMatchptx -> mMatchptx
    double mMatchpty -> mMatchpty
    double mMatchptz -> mMatchptz
    int mNorthDir -> mNorthDir
    java.lang.String mDayNightMode -> mDayNightMode
    java.lang.String mPoiUid -> mPoiUid
    int mPoix -> mPoix
    int mPoiy -> mPoiy
    java.lang.String mPoiName -> mPoiName
    boolean mHaveIndoor -> mHaveIndoor
    java.lang.String mPanoid -> mPanoid
    int mStreetRotation -> mStreetRotation
    int mStreetOverlooking -> mStreetOverlooking
    java.lang.String mStreetFromSource -> mStreetFromSource
    com.baidu.nplatform.comapi.streetscape.model.StreetScapeModel getInstance() -> getInstance
    void resetStreetData() -> resetStreetData
    void resetIndoorData() -> resetIndoorData
com.baidu.nplatform.comapi.streetscape.model.StreetscapeInfoModel -> com.baidu.nplatform.comapi.streetscape.model.StreetscapeInfoModel:
    int ssType -> ssType
    int ssX -> ssX
    int ssY -> ssY
    int ssZ -> ssZ
    double ssRotation -> ssRotation
    java.lang.String ssPanoId -> ssPanoId
com.baidu.nplatform.comapi.streetscape.util.StreetscapeConst -> com.baidu.nplatform.comapi.streetscape.util.StreetscapeConst:
    java.lang.String EXTRA_KEY_LOCX -> EXTRA_KEY_LOCX
    java.lang.String EXTRA_KEY_LOCY -> EXTRA_KEY_LOCY
    java.lang.String EXTRA_KEY_LOCZ -> EXTRA_KEY_LOCZ
    java.lang.String EXTRA_KEY_MOVEDIR -> EXTRA_KEY_MOVEDIR
    java.lang.String EXTRA_KEY_MODE -> EXTRA_KEY_MODE
    java.lang.String EXTRA_KEY_SID -> EXTRA_KEY_SID
    java.lang.String EXTRA_KEY_UID -> EXTRA_KEY_UID
    java.lang.String EXTRA_KEY_TYPE -> EXTRA_KEY_TYPE
    java.lang.String EXTRA_KEY_POI_NAME -> EXTRA_KEY_POI_NAME
    java.lang.String EXTRA_KEY_POI_INDOOR_AVAI -> EXTRA_KEY_POI_INDOOR_AVAI
    java.lang.String EXTRA_KEY_POIX -> EXTRA_KEY_POIX
    java.lang.String EXTRA_KEY_POIY -> EXTRA_KEY_POIY
    java.lang.String EXTRA_KEY_POI_BOOK_TYPE -> EXTRA_KEY_POI_BOOK_TYPE
    java.lang.String EXTRA_KEY_POI_BOOK_TEL -> EXTRA_KEY_POI_BOOK_TEL
    java.lang.String EXTRA_KEY_POI_BOOK_WEB -> EXTRA_KEY_POI_BOOK_WEB
    java.lang.String EXTRA_KEY_POI_MOVIE_COUNT -> EXTRA_KEY_POI_MOVIE_COUNT
    java.lang.String EXTRA_KEY_PANOID -> EXTRA_KEY_PANOID
    java.lang.String EXTRA_KEY_PANOTYPE -> EXTRA_KEY_PANOTYPE
    java.lang.String EXTRA_KEY_HEADING -> EXTRA_KEY_HEADING
    java.lang.String EXTRA_KEY_PITCH -> EXTRA_KEY_PITCH
    java.lang.String EXTRA_FROM_SOURCE -> EXTRA_FROM_SOURCE
    java.lang.String EXTRA_FROM_MAP -> EXTRA_FROM_MAP
    java.lang.String EXTRA_FROM_POI -> EXTRA_FROM_POI
    java.lang.String EXTRA_FROM_USERCENTER -> EXTRA_FROM_USERCENTER
    java.lang.String EXTRA_FROM_SHARE -> EXTRA_FROM_SHARE
    java.lang.String EXTRA_FROM_STREETSCAPE -> EXTRA_FROM_STREETSCAPE
    java.lang.String EXTRA_FROM_GEO -> EXTRA_FROM_GEO
    java.lang.String EXTRA_KEY_ERROR_PAGE_URL -> EXTRA_KEY_ERROR_PAGE_URL
    java.lang.String REPORT_ERROR_PAGE_URL -> REPORT_ERROR_PAGE_URL
    java.lang.String EXTRA_KEY_INDOORID -> EXTRA_KEY_INDOORID
    java.lang.String SS_TYPE_STREET -> SS_TYPE_STREET
    java.lang.String SS_TYPE_INTER -> SS_TYPE_INTER
    java.lang.String SS_TYPE_PARK -> SS_TYPE_PARK
com.baidu.nplatform.comapi.syncclouddata.SyncData -> com.baidu.nplatform.comapi.syncclouddata.SyncData:
    java.lang.String TAG -> TAG
    com.baidu.nplatform.comjni.map.syncclouddata.a mAppSyncCloud -> mAppSyncCloud
    com.baidu.nplatform.comapi.syncclouddata.SyncNotifier mSyncNotifier -> mSyncNotifier
    com.baidu.navisdk.comapi.base.MsgHandler mHandler -> mHandler
    com.baidu.nplatform.comapi.syncclouddata.SyncData mSyncData -> mSyncData
    com.baidu.nplatform.comapi.syncclouddata.SyncData getInstance() -> getInstance
    boolean initPoiFav() -> initPoiFav
    void destroyPoiFav() -> destroyPoiFav
    void registerListener(com.baidu.nplatform.comapi.syncclouddata.SyncListener) -> registerListener
    void removeListener() -> removeListener
    boolean setUserInfo(java.lang.String) -> setUserInfo
    java.lang.String getUserInfo() -> getUserInfo
    boolean cancelSyncData() -> cancelSyncData
    java.lang.String getSyncData() -> getSyncData
    com.baidu.nplatform.comapi.syncclouddata.SyncNotifier access$000(com.baidu.nplatform.comapi.syncclouddata.SyncData) -> access$000
com.baidu.nplatform.comapi.syncclouddata.SyncData$1 -> com.baidu.nplatform.comapi.syncclouddata.SyncData$1:
    com.baidu.nplatform.comapi.syncclouddata.SyncData this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
    void careAbout() -> careAbout
com.baidu.nplatform.comapi.syncclouddata.SyncEvent -> com.baidu.nplatform.comapi.syncclouddata.SyncEvent:
    int MSG_SYNC_CLOUDDATA_BDUSS -> MSG_SYNC_CLOUDDATA_BDUSS
    int MSG_SYNC_CLOUDDATA_OK -> MSG_SYNC_CLOUDDATA_OK
    int MSG_SYNC_FAV_FULL -> MSG_SYNC_FAV_FULL
    int MSG_SYNC_RELOGIN -> MSG_SYNC_RELOGIN
    int MSG_SYNC_ERROR -> MSG_SYNC_ERROR
com.baidu.nplatform.comapi.syncclouddata.SyncListener -> com.baidu.nplatform.comapi.syncclouddata.SyncListener:
    void onGetSyncDataResult(java.lang.String,int) -> onGetSyncDataResult
com.baidu.nplatform.comapi.syncclouddata.SyncModel -> com.baidu.nplatform.comapi.syncclouddata.SyncModel:
    java.lang.String TAG -> TAG
    com.baidu.nplatform.comapi.syncclouddata.SyncModel mSyncModel -> mSyncModel
    java.lang.String result -> result
    com.baidu.nplatform.comapi.syncclouddata.SyncModel getInstance() -> getInstance
    void destroy() -> destroy
    java.lang.String getSyncResult() -> getSyncResult
    void onGetSyncDataResult(java.lang.String,int) -> onGetSyncDataResult
com.baidu.nplatform.comapi.syncclouddata.SyncNotifier -> com.baidu.nplatform.comapi.syncclouddata.SyncNotifier:
    com.baidu.nplatform.comapi.syncclouddata.SyncData mSyncData -> mSyncData
    com.baidu.nplatform.comapi.syncclouddata.SyncListener mListener -> mListener
    void setSyncCom(com.baidu.nplatform.comapi.syncclouddata.SyncData) -> setSyncCom
    void cleanSyncCom() -> cleanSyncCom
    void registListener(com.baidu.nplatform.comapi.syncclouddata.SyncListener) -> registListener
    void removeListener() -> removeListener
    void eventNotify(android.os.Message) -> eventNotify
com.baidu.nplatform.comjni.engine.AppEngine -> com.baidu.nplatform.comjni.engine.AppEngine:
    void despatchMessage(int,int,int) -> despatchMessage
    boolean InitEngine(android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    boolean StartSocketProc() -> StartSocketProc
    boolean GetFlaxLength(android.os.Bundle) -> GetFlaxLength
com.baidu.nplatform.comjni.engine.JNIEngine -> com.baidu.nplatform.comjni.engine.JNIEngine:
    int initClass(java.lang.Object,int) -> initClass
    boolean InitEngine(android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    boolean StartSocketProc() -> StartSocketProc
    boolean GetFlaxLength(android.os.Bundle) -> GetFlaxLength
com.baidu.nplatform.comjni.engine.MessageProxy -> com.baidu.nplatform.comjni.engine.MessageProxy:
    android.util.SparseArray a -> a
    void registerMessageHandler(int,android.os.Handler) -> registerMessageHandler
    void unRegisterMessageHandler(int,android.os.Handler) -> unRegisterMessageHandler
    void despatchMessage(int,int,int) -> despatchMessage
    void destory() -> destory
com.baidu.nplatform.comjni.map.basemap.AppBaseMap -> com.baidu.nplatform.comjni.map.basemap.AppBaseMap:
    com.baidu.nplatform.comjni.map.basemap.JNIBaseMap mJniBaseMap -> mJniBaseMap
    com.baidu.nplatform.comjni.map.basemap.BaseMapCallback mCallback -> mCallback
    boolean Create() -> Create
    void unInit() -> unInit
    boolean SetCallback(com.baidu.nplatform.comjni.map.basemap.MapLayerDataInterface) -> SetCallback
    boolean locate(int,int) -> locate
    boolean move(int,int,int,int) -> move
    boolean moveTo(int,int) -> moveTo
    boolean animationTo(int,boolean,int,int,int,int,int) -> animationTo
    boolean zoomIn() -> zoomIn
    boolean zoomOut() -> zoomOut
    boolean zoom(float) -> zoom
    boolean zoomOutByPos(int,int) -> zoomOutByPos
    boolean zoomInByPos(int,int) -> zoomInByPos
    boolean zoomToBound(android.os.Bundle) -> zoomToBound
    boolean setLevel(float) -> setLevel
    float getZoomLevel() -> getZoomLevel
    float getRotateAngle() -> getRotateAngle
    float getTurnAngle() -> getTurnAngle
    boolean getCenterPoint(int[],int[]) -> getCenterPoint
    com.baidu.nplatform.comapi.MapItem selectItem(int,int,int) -> selectItem
    boolean focusItem(int,int,boolean) -> focusItem
    boolean setStyleMode(int) -> setStyleMode
    boolean showLayer(int,boolean) -> showLayer
    boolean showLayerByID(int,boolean) -> showLayerByID
    boolean updateLayer(int) -> updateLayer
    boolean updateLayerByID(int) -> updateLayerByID
    boolean UpdataBaseLayers() -> UpdataBaseLayers
    boolean layerIsShow(int) -> layerIsShow
    int AddLayer(int,int,java.lang.String) -> AddLayer
    int RemoveLayer(int) -> RemoveLayer
    boolean clearLayer(int) -> clearLayer
    boolean clearLayerByID(int) -> clearLayerByID
    boolean saveScreen(java.lang.String) -> saveScreen
    boolean getGeoPosByScreenPos(int,int,int[],int[]) -> getGeoPosByScreenPos
    boolean getScreenPosByGeoPos(int,int,int[],int[]) -> getScreenPosByGeoPos
    void resetImageRes() -> resetImageRes
    void addPopupData(android.os.Bundle) -> addPopupData
    void AddItemData(android.os.Bundle) -> AddItemData
    boolean RemoveItemData(android.os.Bundle) -> RemoveItemData
    void resetCompassPosition(int,int,int) -> resetCompassPosition
    void glInit() -> glInit
    void glResize(int,int,int,int,int) -> glResize
    void glDraw() -> glDraw
    boolean ImportVmpMapRecord() -> ImportVmpMapRecord
    boolean RemoveVmpMapRecord(int) -> RemoveVmpMapRecord
    boolean SetMapStatus(android.os.Bundle) -> SetMapStatus
    android.os.Bundle GetMapStatus() -> GetMapStatus
    boolean MapMsgProc(int,int,int) -> MapMsgProc
    void onPause() -> onPause
    void onResume() -> onResume
    void ShowTrafficMap(boolean) -> ShowTrafficMap
    void switchITSMode(boolean) -> switchITSMode
    void SaveCache() -> SaveCache
    void StartMapDataRequest() -> StartMapDataRequest
    void StopMapDataRequest() -> StopMapDataRequest
    boolean switchToStreetScapeWithUID(java.lang.String,java.lang.String) -> switchToStreetScapeWithUID
    boolean switchStreetScapeWithStreedId(java.lang.String) -> switchStreetScapeWithStreedId
    boolean getCurrentStreetInfo(android.os.Bundle,java.lang.String) -> getCurrentStreetInfo
    boolean cancelMapJump() -> cancelMapJump
    java.lang.String getCurrentStreetId() -> getCurrentStreetId
    boolean queryThumbImage(java.lang.String) -> queryThumbImage
    boolean enterStreetScapeWaitingMode() -> enterStreetScapeWaitingMode
    boolean isInStreepScapeMode() -> isInStreepScapeMode
    boolean enterStreetScapeMap() -> enterStreetScapeMap
    boolean setStreetPOIUID(java.lang.String) -> setStreetPOIUID
    boolean getNearlyObjIDStreet(int,long,long,com.baidu.nplatform.comapi.streetscape.model.StreetscapeInfoModel,int) -> getNearlyObjIDStreet
    boolean exitStreetScapeMap() -> exitStreetScapeMap
    boolean mouseEvent(int,int,int) -> mouseEvent
    void dragMap(int,int,int,int,long,long) -> dragMap
    boolean saveScreenToBuffer() -> saveScreenToBuffer
    boolean getScreenShot(int,int,int,android.graphics.Bitmap) -> getScreenShot
    boolean getScreenMask(int,int,int,int,boolean,android.graphics.Bitmap) -> getScreenMask
    boolean setDrawHouse(boolean) -> setDrawHouse
    boolean SetCharsetEncodeType(boolean) -> SetCharsetEncodeType
    boolean releaseSharedMapData(int,int) -> releaseSharedMapData
    boolean updateShareMapData(int,int) -> updateShareMapData
    boolean zoomToTrajectory() -> zoomToTrajectory
    void setDrawNaviLogo(boolean) -> setDrawNaviLogo
com.baidu.nplatform.comjni.map.basemap.BaseMapCallback -> com.baidu.nplatform.comjni.map.basemap.BaseMapCallback:
    android.util.SparseArray mCallbacks -> mCallbacks
    boolean SetMapCallback(int,com.baidu.nplatform.comjni.map.basemap.MapLayerDataInterface) -> SetMapCallback
    int ReqLayerData(android.os.Bundle,int,int) -> ReqLayerData
com.baidu.nplatform.comjni.map.basemap.JNIBaseMap -> com.baidu.nplatform.comjni.map.basemap.JNIBaseMap:
    int SetCallback(int,com.baidu.nplatform.comjni.map.basemap.BaseMapCallback) -> SetCallback
    boolean Locate(int,int,int) -> Locate
    boolean Move(int,int,int,int,int) -> Move
    boolean MoveTo(int,int,int) -> MoveTo
    boolean ZoomIn(int) -> ZoomIn
    boolean ZoomOut(int) -> ZoomOut
    boolean Zoom(int,float) -> Zoom
    boolean ZoomOutByPos(int,int,int) -> ZoomOutByPos
    boolean ZoomInByPos(int,int,int) -> ZoomInByPos
    boolean ZoomToBound(int,android.os.Bundle) -> ZoomToBound
    boolean SetLevel(int,float) -> SetLevel
    float GetZoomLevel(int) -> GetZoomLevel
    float GetRotateAngle(int) -> GetRotateAngle
    float GetTurnAngle(int) -> GetTurnAngle
    boolean GetCenterPoint(int,int[],int[]) -> GetCenterPoint
    boolean Rotate(int,int) -> Rotate
    boolean SetRotateAngle(int,int) -> SetRotateAngle
    boolean SetTurnAngle(int,int) -> SetTurnAngle
    com.baidu.nplatform.comapi.MapItem SelectItem(int,int,int,int) -> SelectItem
    boolean FocusItem(int,int,int,boolean) -> FocusItem
    boolean SetStyleMode(int,int) -> SetStyleMode
    boolean ShowLayer(int,int,boolean) -> ShowLayer
    boolean ShowLayerByID(int,int,boolean) -> ShowLayerByID
    boolean UpdateLayer(int,int) -> UpdateLayer
    boolean UpdateLayerByID(int,int) -> UpdateLayerByID
    boolean UpdataBaseLayers(int) -> UpdataBaseLayers
    boolean LayerIsShow(int,int) -> LayerIsShow
    int AddLayer(int,int,int,java.lang.String) -> AddLayer
    int RemoveLayer(int,int) -> RemoveLayer
    boolean ClearLayer(int,int) -> ClearLayer
    boolean ClearLayerByID(int,int) -> ClearLayerByID
    boolean SaveScreen(int,java.lang.String) -> SaveScreen
    boolean GetGeoPosByScreenPos(int,int,int,int[],int[]) -> GetGeoPosByScreenPos
    boolean GetScreenPosByGeoPos(int,int,int,int[],int[]) -> GetScreenPosByGeoPos
    boolean ResetImageRes(int) -> ResetImageRes
    boolean AddPopupData(int,android.os.Bundle) -> AddPopupData
    void AddItemData(int,android.os.Bundle) -> AddItemData
    boolean RemoveItemData(int,android.os.Bundle) -> RemoveItemData
    boolean ResetCompassPosition(int,int,int,int) -> ResetCompassPosition
    boolean AnimationTo(int,int,boolean,int,int,int,int,int) -> AnimationTo
    boolean IsRasterMapShowing(int) -> IsRasterMapShowing
    void GLInit() -> GLInit
    void GLResize(int,int,int,int,int,int) -> GLResize
    void GLDraw(int) -> GLDraw
    boolean ImportVmpMapRecord(int) -> ImportVmpMapRecord
    boolean RemoveVmpMapRecord(int,int) -> RemoveVmpMapRecord
    boolean SetMapStatus(int,android.os.Bundle) -> SetMapStatus
    boolean GetMapStatus(int,android.os.Bundle) -> GetMapStatus
    boolean MapProc(int,int,int) -> MapProc
    void OnPause(int) -> OnPause
    void OnResume(int) -> OnResume
    void ShowTrafficMap(int,boolean) -> ShowTrafficMap
    void SwitchITSMode(int,boolean) -> SwitchITSMode
    void SaveCache(int) -> SaveCache
    void StartMapDataRequest(int) -> StartMapDataRequest
    void StopMapDataRequest(int) -> StopMapDataRequest
    boolean SwitchToStreetScapeWithUID(int,java.lang.String,java.lang.String) -> SwitchToStreetScapeWithUID
    boolean SwitchStreetScapeWithStreedId(int,java.lang.String) -> SwitchStreetScapeWithStreedId
    boolean GetCurrentStreetInfo(int,android.os.Bundle,java.lang.String) -> GetCurrentStreetInfo
    boolean CancelMapJump(int) -> CancelMapJump
    java.lang.String GetCurrentStreetId(int) -> GetCurrentStreetId
    boolean QueryThumbImage(int,java.lang.String) -> QueryThumbImage
    boolean EnterStreetScapeWaitingMode(int) -> EnterStreetScapeWaitingMode
    boolean IsInStreepScapeMode(int) -> IsInStreepScapeMode
    boolean EnterStreetScapeMap(int) -> EnterStreetScapeMap
    boolean SetStreetPOIUID(int,java.lang.String) -> SetStreetPOIUID
    boolean GetNearlyObjIDStreet(int,int,long,long,com.baidu.nplatform.comapi.streetscape.model.StreetscapeInfoModel,int) -> GetNearlyObjIDStreet
    boolean ExitStreetScapeMap(int) -> ExitStreetScapeMap
    boolean MouseEvent(int,int,int,int) -> MouseEvent
    void DragMap(int,int,int,int,int,long,long) -> DragMap
    boolean SaveScreenToBuffer(int) -> SaveScreenToBuffer
    boolean GetScreenShot(int,int,int,int,android.graphics.Bitmap) -> GetScreenShot
    boolean GetScreenMask(int,int,int,int,int,boolean,android.graphics.Bitmap) -> GetScreenMask
    boolean SetDrawHouse(int,boolean) -> SetDrawHouse
    boolean SetCharsetEncodeType(int,boolean) -> SetCharsetEncodeType
    boolean ReleaseSharedMapData(int,int,int) -> ReleaseSharedMapData
    boolean UpdateShareMapData(int,int,int) -> UpdateShareMapData
    boolean ZoomToTrajectory(int) -> ZoomToTrajectory
    void SetDrawNaviLogo(int,boolean) -> SetDrawNaviLogo
com.baidu.nplatform.comjni.map.basemap.LocationCallback -> com.baidu.nplatform.comjni.map.basemap.LocationCallback:
    java.lang.String strJsonData -> strJsonData
    void setData(java.lang.String) -> setData
    boolean GetLocationLayerData(android.os.Bundle) -> GetLocationLayerData
com.baidu.nplatform.comjni.map.basemap.MapLayerDataInterface -> com.baidu.nplatform.comjni.map.basemap.MapLayerDataInterface:
    int mapLayerDataReq(android.os.Bundle,int,int) -> mapLayerDataReq
    boolean hasLayer(int) -> hasLayer
com.baidu.nplatform.comjni.map.syncclouddata.JNISyncCloudData -> com.baidu.nplatform.comjni.map.syncclouddata.JNISyncCloudData:
    int Create() -> Create
    int Release(int) -> Release
    boolean SCDStartup(int) -> SCDStartup
    boolean SetUserInfo(int,java.lang.String) -> SetUserInfo
    java.lang.String GetUserInfo(int) -> GetUserInfo
    java.lang.String GetSyncData(int) -> GetSyncData
    boolean CancelSyncData(int) -> CancelSyncData
com.baidu.nplatform.comjni.map.syncclouddata.a -> com.baidu.nplatform.comjni.map.syncclouddata.a:
    int a -> a
    com.baidu.nplatform.comjni.map.syncclouddata.JNISyncCloudData b -> b
    int a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean a(java.lang.String) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    boolean f() -> f
com.baidu.nplatform.comjni.tools.JNITools -> com.baidu.nplatform.comjni.tools.JNITools:
    android.os.Bundle LL2MC(double,double) -> LL2MC
    android.os.Bundle WGS2GCJ(double,double) -> WGS2GCJ
    android.os.Bundle BD2GCJ(double,double) -> BD2GCJ
com.baidu.nplatform.comjni.tools.ParcelItem -> com.baidu.nplatform.comjni.tools.ParcelItem:
    android.os.Bundle a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void a(android.os.Bundle) -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.nplatform.comjni.tools.a -> com.baidu.nplatform.comjni.tools.a:
    com.baidu.nplatform.comjni.tools.ParcelItem a(android.os.Parcel) -> a
    com.baidu.nplatform.comjni.tools.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.platform.comapi.NetworkListener -> com.baidu.platform.comapi.NetworkListener:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
com.baidu.platform.comapi.a.a -> com.baidu.platform.comapi.a.a:
    int a -> a
    com.baidu.platform.comapi.a.d b -> b
    com.baidu.platform.comapi.a.d c -> c
    java.util.ArrayList d -> d
com.baidu.platform.comapi.a.b -> com.baidu.platform.comapi.a.b:
    int a -> a
    int b -> b
    int a() -> a
    int b() -> b
    void a(int) -> a
    void b(int) -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.a.c -> com.baidu.platform.comapi.a.c:
    com.baidu.platform.comapi.a.d a -> a
    com.baidu.platform.comapi.a.d b -> b
    void a(com.baidu.platform.comapi.a.d) -> a
    void b(com.baidu.platform.comapi.a.d) -> b
com.baidu.platform.comapi.a.d -> com.baidu.platform.comapi.a.d:
    int a -> a
    int b -> b
    int a() -> a
    void a(int) -> a
    int b() -> b
    void b(int) -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.platform.comapi.b.a -> com.baidu.platform.comapi.b.a:
    int a -> a
    com.baidu.platform.comapi.a.d b -> b
    java.lang.String c -> c
    java.lang.String d -> d
com.baidu.platform.comapi.b.b -> com.baidu.platform.comapi.b.b:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void j(java.lang.String) -> j
    void k(java.lang.String) -> k
    void a(int) -> a
com.baidu.platform.comapi.b.c -> com.baidu.platform.comapi.b.c:
    java.lang.String a -> a
    com.baidu.platform.comapi.b.b b -> b
    com.baidu.platform.comapi.b.d c -> c
    void a(com.baidu.platform.comapi.b.b) -> a
    void a() -> a
    void a(com.baidu.platform.comapi.b.d) -> a
    void a(android.os.Message) -> a
com.baidu.platform.comapi.b.d -> com.baidu.platform.comapi.b.d:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.search.a b -> b
    int c -> c
    com.baidu.platform.comapi.b.c d -> d
    android.os.Handler e -> e
    int f -> f
    android.os.Bundle g -> g
    void a(com.baidu.platform.comapi.b.b) -> a
    void a() -> a
    void a(int) -> a
    boolean a(java.lang.String,java.lang.String,int,com.baidu.platform.comapi.a.c,int,java.util.Map) -> a
    boolean a(java.lang.String,int,int,int,com.baidu.platform.comapi.a.c,com.baidu.platform.comapi.a.c,java.util.Map) -> a
    boolean a(java.lang.String,int,int,com.baidu.platform.comapi.a.c,int,com.baidu.platform.comapi.a.d,java.util.Map) -> a
    android.os.Bundle a(com.baidu.platform.comapi.b.a) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,com.baidu.platform.comapi.a.c,int,int,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.a.c,int,int,int,java.util.ArrayList,java.util.Map) -> a
    boolean a(com.baidu.platform.comapi.b.a,com.baidu.platform.comapi.b.a,java.lang.String,java.lang.String,java.lang.String,com.baidu.platform.comapi.a.c,int,java.util.Map) -> a
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,int,java.lang.String,com.baidu.platform.comapi.a.c,int,com.baidu.platform.comapi.a.d) -> a
    boolean a(com.baidu.platform.comapi.a.d) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(com.baidu.platform.comapi.a.d,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    java.lang.String b(int) -> b
    android.os.Bundle b() -> b
    int a(com.baidu.platform.comapi.b.d) -> a
    com.baidu.platform.comapi.b.c b(com.baidu.platform.comapi.b.d) -> b
com.baidu.platform.comapi.b.e -> com.baidu.platform.comapi.b.e:
    com.baidu.platform.comapi.b.d a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.b.f -> com.baidu.platform.comapi.b.f:
    com.baidu.platform.comapi.a.d a -> a
    java.lang.String b -> b
    java.lang.String c -> c
com.baidu.platform.comapi.c.a -> com.baidu.platform.comapi.c.a:
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
com.baidu.platform.comapi.c.b -> com.baidu.platform.comapi.c.b:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    void a(android.content.Context) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean a(android.net.NetworkInfo) -> a
com.baidu.platform.comapi.c.c -> com.baidu.platform.comapi.c.c:
    java.lang.String G -> G
    com.baidu.platform.comjni.map.commonmemcache.a a -> a
    com.baidu.platform.comjni.base.networkdetect.a b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    android.content.Context C -> C
    int D -> D
    float E -> E
    boolean H -> H
    int I -> I
    int J -> J
    java.lang.String F -> F
    void e(android.content.Context) -> e
    void f(android.content.Context) -> f
    void g(android.content.Context) -> g
    void h(android.content.Context) -> h
    void i(android.content.Context) -> i
    java.lang.String a(android.content.Context) -> a
    byte[] b(android.content.Context) -> b
    java.lang.String j(android.content.Context) -> j
    java.lang.String a() -> a
    java.lang.String k(android.content.Context) -> k
    void l(android.content.Context) -> l
    void c(android.content.Context) -> c
    void b() -> b
    void d(android.content.Context) -> d
    android.os.Bundle c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    void a(java.lang.String) -> a
    java.lang.String g() -> g
    void h() -> h
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String i() -> i
    int j() -> j
    java.lang.String k() -> k
    int l() -> l
    java.lang.String m() -> m
    int n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
com.baidu.platform.comapi.map.A -> com.baidu.platform.comapi.map.A:
    com.baidu.platform.comjni.map.basemap.a a -> a
    com.baidu.platform.comapi.a.b a(int,int) -> a
    android.graphics.Point a(com.baidu.platform.comapi.a.b) -> a
com.baidu.platform.comapi.map.B -> com.baidu.platform.comapi.map.B:
    java.lang.String h -> h
    android.os.Bundle e -> e
    java.lang.String f -> f
    int g -> g
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    android.os.Bundle b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comapi.map.C -> com.baidu.platform.comapi.map.C:
com.baidu.platform.comapi.map.MapRenderer -> com.baidu.platform.comapi.map.MapRenderer:
    java.lang.String d -> d
    int e -> e
    com.baidu.platform.comapi.map.MapRenderer$a f -> f
    com.baidu.platform.comapi.map.e g -> g
    int a -> a
    int b -> b
    int c -> c
    void nativeInit(int) -> nativeInit
    void nativeResize(int,int,int) -> nativeResize
    int nativeRender(int) -> nativeRender
    void a(int) -> a
    boolean a() -> a
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void a(javax.microedition.khronos.opengles.GL10) -> a
com.baidu.platform.comapi.map.MapRenderer$a -> com.baidu.platform.comapi.map.MapRenderer$a:
    void r() -> r
com.baidu.platform.comapi.map.a -> com.baidu.platform.comapi.map.a:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
com.baidu.platform.comapi.map.b -> com.baidu.platform.comapi.map.b:
com.baidu.platform.comapi.map.c -> com.baidu.platform.comapi.map.c:
com.baidu.platform.comapi.map.d -> com.baidu.platform.comapi.map.d:
    com.baidu.platform.comapi.map.d a -> a
    com.baidu.platform.comapi.map.d b -> b
    com.baidu.platform.comapi.map.d c -> c
    com.baidu.platform.comapi.map.d d -> d
    com.baidu.platform.comapi.map.d e -> e
    com.baidu.platform.comapi.map.d f -> f
    com.baidu.platform.comapi.map.d g -> g
    com.baidu.platform.comapi.map.d h -> h
    com.baidu.platform.comapi.map.d i -> i
    com.baidu.platform.comapi.map.d j -> j
    com.baidu.platform.comapi.map.d[] k -> k
    com.baidu.platform.comapi.map.d[] values() -> values
    com.baidu.platform.comapi.map.d valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.e -> com.baidu.platform.comapi.map.e:
    java.lang.String e -> e
    float a -> a
    float b -> b
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.content.Context o -> o
    com.baidu.platform.comapi.map.MapRenderer p -> p
    java.util.List c -> c
    com.baidu.platform.comjni.map.basemap.a d -> d
    int q -> q
    android.os.Handler r -> r
    java.util.List s -> s
    com.baidu.platform.comapi.map.v t -> t
    com.baidu.platform.comapi.map.c u -> u
    com.baidu.platform.comapi.map.i v -> v
    com.baidu.platform.comapi.map.C w -> w
    com.baidu.platform.comapi.map.n x -> x
    com.baidu.platform.comapi.map.h y -> y
    com.baidu.platform.comapi.map.j z -> z
    com.baidu.platform.comapi.map.k A -> A
    com.baidu.platform.comapi.map.A B -> B
    boolean C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    com.baidu.platform.comapi.map.e$a H -> H
    android.view.VelocityTracker I -> I
    android.view.GestureDetector J -> J
    long K -> K
    long L -> L
    long M -> M
    long N -> N
    int O -> O
    float P -> P
    float Q -> Q
    boolean R -> R
    long S -> S
    long T -> T
    boolean U -> U
    boolean V -> V
    boolean W -> W
    void s() -> s
    void t() -> t
    boolean b(int,int,int,int,int,int) -> b
    void u() -> u
    void a(com.baidu.platform.comapi.map.x) -> a
    void v() -> v
    void w() -> w
    void a() -> a
    void a(com.baidu.platform.comapi.map.a) -> a
    void x() -> x
    boolean b() -> b
    void a(boolean) -> a
    boolean c() -> c
    void b(boolean) -> b
    void c(boolean) -> c
    boolean d() -> d
    void d(boolean) -> d
    void a(android.graphics.Point) -> a
    boolean e() -> e
    void e(boolean) -> e
    boolean f() -> f
    void f(boolean) -> f
    void g() -> g
    void a(java.lang.String,android.os.Bundle) -> a
    boolean h() -> h
    void g(boolean) -> g
    void h(boolean) -> h
    boolean i() -> i
    void i(boolean) -> i
    boolean j() -> j
    void j(boolean) -> j
    boolean k() -> k
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void l() -> l
    void a(com.baidu.platform.comapi.map.g) -> a
    void a(com.baidu.platform.comapi.map.k) -> a
    void a(com.baidu.platform.comapi.map.y) -> a
    void a(com.baidu.platform.comapi.map.y,int) -> a
    com.baidu.platform.comapi.map.y m() -> m
    com.baidu.platform.comapi.map.y n() -> n
    double o() -> o
    void a(java.lang.String) -> a
    float a(int,int,int,int) -> a
    float a(int,int,int,int,int,int) -> a
    com.baidu.platform.comapi.a.b a(int,int) -> a
    android.graphics.Point a(com.baidu.platform.comapi.a.b) -> a
    void p() -> p
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void q() -> q
    int a(int,int,int) -> a
    void r() -> r
    int a(android.os.Bundle,int,int,android.os.Bundle) -> a
    boolean a(int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onDown(android.view.MotionEvent) -> onDown
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean a(android.view.MotionEvent) -> a
    void b(android.view.MotionEvent) -> b
    boolean c(android.view.MotionEvent) -> c
    boolean d(android.view.MotionEvent) -> d
    void y() -> y
    boolean b(int,int) -> b
    void z() -> z
    void A() -> A
    void B() -> B
    void C() -> C
    int a(com.baidu.platform.comapi.map.e) -> a
    int b(com.baidu.platform.comapi.map.e) -> b
    int c(com.baidu.platform.comapi.map.e) -> c
    void d(com.baidu.platform.comapi.map.e) -> d
    void e(com.baidu.platform.comapi.map.e) -> e
    boolean f(com.baidu.platform.comapi.map.e) -> f
    boolean a(com.baidu.platform.comapi.map.e,boolean) -> a
    boolean g(com.baidu.platform.comapi.map.e) -> g
    boolean h(com.baidu.platform.comapi.map.e) -> h
com.baidu.platform.comapi.map.e$a -> com.baidu.platform.comapi.map.e$a:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    boolean e -> e
    float f -> f
    float g -> g
    double h -> h
com.baidu.platform.comapi.map.f -> com.baidu.platform.comapi.map.f:
    com.baidu.platform.comapi.map.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.g -> com.baidu.platform.comapi.map.g:
    void a() -> a
    void a(com.baidu.platform.comapi.map.y) -> a
    void b(com.baidu.platform.comapi.map.y) -> b
    void c(com.baidu.platform.comapi.map.y) -> c
    void a(com.baidu.platform.comapi.a.b) -> a
    void a(java.lang.String) -> a
    void b(com.baidu.platform.comapi.a.b) -> b
    void c(com.baidu.platform.comapi.a.b) -> c
    void b() -> b
    void a(android.graphics.Bitmap) -> a
    void d(com.baidu.platform.comapi.a.b) -> d
    void e(com.baidu.platform.comapi.a.b) -> e
    boolean b(java.lang.String) -> b
    void c() -> c
    void a(javax.microedition.khronos.opengles.GL10,com.baidu.platform.comapi.map.y) -> a
    void d() -> d
    void e() -> e
com.baidu.platform.comapi.map.h -> com.baidu.platform.comapi.map.h:
com.baidu.platform.comapi.map.i -> com.baidu.platform.comapi.map.i:
com.baidu.platform.comapi.map.j -> com.baidu.platform.comapi.map.j:
com.baidu.platform.comapi.map.k -> com.baidu.platform.comapi.map.k:
    android.os.Bundle a(int,int,int) -> a
com.baidu.platform.comapi.map.l -> com.baidu.platform.comapi.map.l:
com.baidu.platform.comapi.map.m -> com.baidu.platform.comapi.map.m:
com.baidu.platform.comapi.map.n -> com.baidu.platform.comapi.map.n:
com.baidu.platform.comapi.map.o -> com.baidu.platform.comapi.map.o:
    int a -> a
    java.lang.String b -> b
    int c -> c
    int d -> d
    java.util.ArrayList e -> e
    void a(java.util.ArrayList) -> a
    java.util.ArrayList a() -> a
com.baidu.platform.comapi.map.p -> com.baidu.platform.comapi.map.p:
    java.lang.String a -> a
    com.baidu.platform.comjni.map.basemap.a b -> b
    com.baidu.platform.comapi.map.p c -> c
    com.baidu.platform.comapi.map.u d -> d
    android.os.Handler e -> e
    com.baidu.platform.comapi.map.p a() -> a
    void g() -> g
    void h() -> h
    void b() -> b
    void a(com.baidu.platform.comapi.map.t) -> a
    void b(com.baidu.platform.comapi.map.t) -> b
    boolean a(int) -> a
    boolean b(int) -> b
    boolean c(int) -> c
    boolean d(int) -> d
    boolean e(int) -> e
    boolean a(boolean) -> a
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    java.util.ArrayList a(java.lang.String) -> a
    com.baidu.platform.comapi.map.s f(int) -> f
    java.util.ArrayList e() -> e
    com.baidu.platform.comapi.map.p f() -> f
    com.baidu.platform.comapi.map.u a(com.baidu.platform.comapi.map.p) -> a
com.baidu.platform.comapi.map.q -> com.baidu.platform.comapi.map.q:
    com.baidu.platform.comapi.map.p a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.platform.comapi.map.r -> com.baidu.platform.comapi.map.r:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    com.baidu.platform.comapi.a.d g -> g
    int h -> h
    int i -> i
    boolean j -> j
    int k -> k
    int l -> l
com.baidu.platform.comapi.map.s -> com.baidu.platform.comapi.map.s:
    com.baidu.platform.comapi.map.r a -> a
    void a(com.baidu.platform.comapi.map.r) -> a
    com.baidu.platform.comapi.map.r a() -> a
com.baidu.platform.comapi.map.t -> com.baidu.platform.comapi.map.t:
    void a(int,int) -> a
com.baidu.platform.comapi.map.u -> com.baidu.platform.comapi.map.u:
    java.lang.String a -> a
    com.baidu.platform.comapi.map.t b -> b
    void a(com.baidu.platform.comapi.map.t) -> a
    void b(com.baidu.platform.comapi.map.t) -> b
    void a(android.os.Message) -> a
com.baidu.platform.comapi.map.v -> com.baidu.platform.comapi.map.v:
com.baidu.platform.comapi.map.w -> com.baidu.platform.comapi.map.w:
    com.baidu.platform.comapi.map.w a -> a
    com.baidu.platform.comapi.map.w b -> b
    com.baidu.platform.comapi.map.w c -> c
    int d -> d
    com.baidu.platform.comapi.map.w[] e -> e
    com.baidu.platform.comapi.map.w[] values() -> values
    com.baidu.platform.comapi.map.w valueOf(java.lang.String) -> valueOf
com.baidu.platform.comapi.map.x -> com.baidu.platform.comapi.map.x:
    com.baidu.platform.comapi.map.y a -> a
    boolean b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.baidu.platform.comapi.map.x a(com.baidu.platform.comapi.map.y) -> a
    com.baidu.platform.comapi.map.x a(boolean) -> a
    com.baidu.platform.comapi.map.x a(int) -> a
    com.baidu.platform.comapi.map.x b(boolean) -> b
    com.baidu.platform.comapi.map.x c(boolean) -> c
    com.baidu.platform.comapi.map.x d(boolean) -> d
    com.baidu.platform.comapi.map.x e(boolean) -> e
com.baidu.platform.comapi.map.y -> com.baidu.platform.comapi.map.y:
    java.lang.String t -> t
    float a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    long h -> h
    long i -> i
    com.baidu.platform.comapi.map.y$b j -> j
    com.baidu.platform.comapi.map.y$a k -> k
    boolean l -> l
    double m -> m
    double n -> n
    int o -> o
    java.lang.String p -> p
    float q -> q
    boolean r -> r
    int s -> s
    void a(android.os.Bundle) -> a
    android.os.Bundle a(com.baidu.platform.comapi.map.e) -> a
com.baidu.platform.comapi.map.y$a -> com.baidu.platform.comapi.map.y$a:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    com.baidu.platform.comapi.a.d e -> e
    com.baidu.platform.comapi.a.d f -> f
    com.baidu.platform.comapi.a.d g -> g
    com.baidu.platform.comapi.a.d h -> h
    com.baidu.platform.comapi.map.y i -> i
com.baidu.platform.comapi.map.y$b -> com.baidu.platform.comapi.map.y$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.baidu.platform.comapi.map.y e -> e
com.baidu.platform.comapi.map.z -> com.baidu.platform.comapi.map.z:
com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect -> com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect:
    int Create() -> Create
com.baidu.platform.comjni.base.networkdetect.a -> com.baidu.platform.comjni.base.networkdetect.a:
    int a -> a
    com.baidu.platform.comjni.base.networkdetect.JNINetworkDetect b -> b
    int a() -> a
com.baidu.platform.comjni.engine.AppEngine -> com.baidu.platform.comjni.engine.AppEngine:
    void despatchMessage(int,int,int,int) -> despatchMessage
    void InitClass() -> InitClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.JNIEngine -> com.baidu.platform.comjni.engine.JNIEngine:
    int initClass(java.lang.Object,int) -> initClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
com.baidu.platform.comjni.engine.a -> com.baidu.platform.comjni.engine.a:
    java.lang.String a -> a
    android.util.SparseArray b -> b
    void a(int,android.os.Handler) -> a
    void b(int,android.os.Handler) -> b
    void a(int,int,int,int) -> a
    void a() -> a
com.baidu.platform.comjni.map.basemap.BaseMapCallback -> com.baidu.platform.comjni.map.basemap.BaseMapCallback:
    android.util.SparseArray a -> a
    void addLayerDataInterface(int,com.baidu.platform.comjni.map.basemap.b) -> addLayerDataInterface
    void removeLayerDataInterface(int) -> removeLayerDataInterface
    int ReqLayerData(android.os.Bundle,int,int,android.os.Bundle) -> ReqLayerData
com.baidu.platform.comjni.map.basemap.JNIBaseMap -> com.baidu.platform.comjni.map.basemap.JNIBaseMap:
    int a -> a
    int Create() -> Create
    int SetCallback(int,com.baidu.platform.comjni.map.basemap.BaseMapCallback) -> SetCallback
    int Release(int) -> Release
    boolean Init(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> Init
    void OnPause(int) -> OnPause
    void OnResume(int) -> OnResume
    void ResetImageRes(int) -> ResetImageRes
    void SetMapStatus(int,android.os.Bundle) -> SetMapStatus
    int SetMapControlMode(int,int) -> SetMapControlMode
    android.os.Bundle GetMapStatus(int) -> GetMapStatus
    android.os.Bundle getDrawingMapStatus(int) -> getDrawingMapStatus
    float GetZoomToBound(int,android.os.Bundle) -> GetZoomToBound
    void ShowSatelliteMap(int,boolean) -> ShowSatelliteMap
    void ShowTrafficMap(int,boolean) -> ShowTrafficMap
    void ShowLayers(int,int,boolean) -> ShowLayers
    void UpdateLayers(int,int) -> UpdateLayers
    int AddLayer(int,int,int,java.lang.String) -> AddLayer
    void ClearLayer(int,int) -> ClearLayer
    java.lang.String GetNearlyObjID(int,int,int,int,int) -> GetNearlyObjID
    java.lang.String ScrPtToGeoPoint(int,int,int) -> ScrPtToGeoPoint
    java.lang.String GeoPtToScrPoint(int,int,int) -> GeoPtToScrPoint
    void SaveScreenToLocal(int,java.lang.String) -> SaveScreenToLocal
    boolean OnRecordAdd(int,int) -> OnRecordAdd
    boolean OnRecordStart(int,int,boolean,int) -> OnRecordStart
    boolean OnRecordSuspend(int,int,boolean,int) -> OnRecordSuspend
    boolean OnRecordRemove(int,int,boolean) -> OnRecordRemove
    java.lang.String OnRecordGetAll(int) -> OnRecordGetAll
    java.lang.String OnRecordGetAt(int,int) -> OnRecordGetAt
    boolean OnRecordImport(int,boolean) -> OnRecordImport
    java.lang.String OnHotcityGet(int) -> OnHotcityGet
    java.lang.String OnSchcityGet(int,java.lang.String) -> OnSchcityGet
    void addOneOverlayItem(int,android.os.Bundle) -> addOneOverlayItem
    void updateOneOverlayItem(int,android.os.Bundle) -> updateOneOverlayItem
    void removeOneOverlayItem(int,android.os.Bundle) -> removeOneOverlayItem
    void PostStatInfo(int) -> PostStatInfo
    int MapProc(int,int,int,int) -> MapProc
    int CreateDuplicate(int) -> CreateDuplicate
    int[] GetScreenBuf(int,int[]) -> GetScreenBuf
    void enableDrawHouseHeight(int,boolean) -> enableDrawHouseHeight
    boolean isDrawHouseHeightEnable(int) -> isDrawHouseHeightEnable
    void clearHeatMapLayerCache(int) -> clearHeatMapLayerCache
com.baidu.platform.comjni.map.basemap.a -> com.baidu.platform.comjni.map.basemap.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.basemap.JNIBaseMap c -> c
    java.util.List d -> d
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> a
    void d() -> d
    void e() -> e
    void f() -> f
    void a(android.os.Bundle) -> a
    int a(int) -> a
    android.os.Bundle g() -> g
    android.os.Bundle h() -> h
    float b(android.os.Bundle) -> b
    void a(boolean) -> a
    void b(boolean) -> b
    void a(int,boolean) -> a
    void b(int) -> b
    int a(int,int,java.lang.String) -> a
    void c(int) -> c
    java.lang.String a(int,int,int,int) -> a
    java.lang.String a(int,int) -> a
    java.lang.String b(int,int) -> b
    void a(java.lang.String) -> a
    boolean d(int) -> d
    boolean a(int,boolean,int) -> a
    boolean b(int,boolean,int) -> b
    boolean b(int,boolean) -> b
    java.lang.String i() -> i
    java.lang.String e(int) -> e
    boolean c(boolean) -> c
    java.lang.String j() -> j
    java.lang.String b(java.lang.String) -> b
    void c(android.os.Bundle) -> c
    void d(android.os.Bundle) -> d
    void e(android.os.Bundle) -> e
    void k() -> k
    int b(int,int,int,int) -> b
    int[] a(int[]) -> a
    void d(boolean) -> d
    boolean l() -> l
    void m() -> m
com.baidu.platform.comjni.map.basemap.b -> com.baidu.platform.comjni.map.basemap.b:
    int a(android.os.Bundle,int,int,android.os.Bundle) -> a
    boolean a(int) -> a
com.baidu.platform.comjni.map.cloud.JniCloud -> com.baidu.platform.comjni.map.cloud.JniCloud:
    int create() -> create
    int release(int) -> release
    java.lang.String getSearchResult(int,int) -> getSearchResult
    void cloudSearch(int,android.os.Bundle) -> cloudSearch
    void cloudDetailSearch(int,android.os.Bundle) -> cloudDetailSearch
com.baidu.platform.comjni.map.cloud.a -> com.baidu.platform.comjni.map.cloud.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.cloud.JniCloud c -> c
    int a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache -> com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache:
    int Create() -> Create
    int Release(int) -> Release
    void Init(int,android.os.Bundle) -> Init
com.baidu.platform.comjni.map.commonmemcache.a -> com.baidu.platform.comjni.map.commonmemcache.a:
    int a -> a
    com.baidu.platform.comjni.map.commonmemcache.JNICommonMemCache b -> b
    int a() -> a
    int b() -> b
    void a(android.os.Bundle) -> a
com.baidu.platform.comjni.map.search.JNISearch -> com.baidu.platform.comjni.map.search.JNISearch:
    int Create() -> Create
    int Release(int) -> Release
    java.lang.String GetSearchResult(int,int) -> GetSearchResult
    boolean ForceSearchByCityName(int,android.os.Bundle) -> ForceSearchByCityName
    boolean AreaSearch(int,android.os.Bundle) -> AreaSearch
    boolean RoutePlanByBus(int,android.os.Bundle) -> RoutePlanByBus
    boolean RoutePlanByCar(int,android.os.Bundle) -> RoutePlanByCar
    boolean RoutePlanByFoot(int,android.os.Bundle) -> RoutePlanByFoot
    boolean POIDetailSearchPlace(int,java.lang.String) -> POIDetailSearchPlace
    boolean BusLineDetailSearch(int,java.lang.String,java.lang.String) -> BusLineDetailSearch
    boolean SuggestionSearch(int,android.os.Bundle) -> SuggestionSearch
    boolean ReverseGeocodeSearch(int,int,int) -> ReverseGeocodeSearch
    boolean geocode(int,java.lang.String,java.lang.String) -> geocode
    boolean PoiRGCShareUrlSearch(int,int,int,java.lang.String,java.lang.String) -> PoiRGCShareUrlSearch
    boolean PoiDetailShareUrlSearch(int,java.lang.String) -> PoiDetailShareUrlSearch
    boolean MapBoundSearch(int,android.os.Bundle) -> MapBoundSearch
com.baidu.platform.comjni.map.search.a -> com.baidu.platform.comjni.map.search.a:
    java.lang.String a -> a
    int b -> b
    com.baidu.platform.comjni.map.search.JNISearch c -> c
    int a() -> a
    int b() -> b
    java.lang.String a(int) -> a
    boolean a(android.os.Bundle) -> a
    boolean b(android.os.Bundle) -> b
    boolean c(android.os.Bundle) -> c
    boolean d(android.os.Bundle) -> d
    boolean e(android.os.Bundle) -> e
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    boolean f(android.os.Bundle) -> f
    boolean a(int,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(int,int,java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean g(android.os.Bundle) -> g
com.baidu.platform.comjni.tools.BundleKeySet -> com.baidu.platform.comjni.tools.BundleKeySet:
    java.lang.String[] getBundleKeys(android.os.Bundle) -> getBundleKeys
com.baidu.platform.comjni.tools.JNITools -> com.baidu.platform.comjni.tools.JNITools:
    boolean TransGeoStr2Pt(java.lang.Object) -> TransGeoStr2Pt
    void TransNodeStr2Pt(java.lang.Object) -> TransNodeStr2Pt
    boolean TransGeoStr2ComplexPt(java.lang.Object) -> TransGeoStr2ComplexPt
    void GetDistanceByMC(java.lang.Object) -> GetDistanceByMC
    boolean CoordinateEncryptEx(float,float,java.lang.String,java.lang.Object) -> CoordinateEncryptEx
com.baidu.platform.comjni.tools.ParcelItem -> com.baidu.platform.comjni.tools.ParcelItem:
    android.os.Bundle a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.platform.comjni.tools.a -> com.baidu.platform.comjni.tools.a:
    com.baidu.platform.comapi.a.a a(java.lang.String) -> a
    double a(com.baidu.platform.comapi.a.d,com.baidu.platform.comapi.a.d) -> a
com.baidu.platform.comjni.tools.b -> com.baidu.platform.comjni.tools.b:
    com.baidu.platform.comjni.tools.ParcelItem a(android.os.Parcel) -> a
    com.baidu.platform.comjni.tools.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.pplatform.comapi.a -> com.baidu.pplatform.comapi.a:
    boolean a -> a
    boolean a(android.content.Context) -> a
    boolean a() -> a
    boolean b() -> b
    void c() -> c
com.baidu.pplatform.comapi.a.a -> com.baidu.pplatform.comapi.a.a:
    com.baidu.pplatform.comjni.map.dataengine.AppDataEngine a -> a
    com.baidu.pplatform.comapi.a.a b -> b
    com.baidu.pplatform.comapi.a.d c -> c
    android.os.Handler d -> d
    com.baidu.pplatform.comapi.a.a a() -> a
    boolean b() -> b
    java.lang.String a(int,int) -> a
    java.lang.String a(double,double) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    com.baidu.pplatform.comapi.a.d a(com.baidu.pplatform.comapi.a.a) -> a
com.baidu.pplatform.comapi.a.b -> com.baidu.pplatform.comapi.a.b:
    com.baidu.pplatform.comapi.a.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.pplatform.comapi.a.c -> com.baidu.pplatform.comapi.a.c:
    void a(int,int) -> a
com.baidu.pplatform.comapi.a.d -> com.baidu.pplatform.comapi.a.d:
    java.util.ArrayList a -> a
    void a(android.os.Message) -> a
com.baidu.pplatform.comapi.basestruct.GeoPoint -> com.baidu.pplatform.comapi.basestruct.GeoPoint:
    int mLatitudeE6 -> mLatitudeE6
    int mLongitudeE6 -> mLongitudeE6
    int getLatitudeE6() -> getLatitudeE6
    int getLongitudeE6() -> getLongitudeE6
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.baidu.pplatform.comapi.basestruct.a -> com.baidu.pplatform.comapi.basestruct.a:
    int a -> a
    com.baidu.pplatform.comapi.basestruct.c b -> b
    com.baidu.pplatform.comapi.basestruct.c c -> c
    java.util.ArrayList d -> d
com.baidu.pplatform.comapi.basestruct.b -> com.baidu.pplatform.comapi.basestruct.b:
    com.baidu.pplatform.comapi.basestruct.c a -> a
    com.baidu.pplatform.comapi.basestruct.c b -> b
    com.baidu.pplatform.comapi.basestruct.c a() -> a
    com.baidu.pplatform.comapi.basestruct.c b() -> b
com.baidu.pplatform.comapi.basestruct.c -> com.baidu.pplatform.comapi.basestruct.c:
    int a -> a
    int b -> b
    int a() -> a
    int b() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.pplatform.comapi.map.a -> com.baidu.pplatform.comapi.map.a:
    com.baidu.pplatform.comapi.basestruct.GeoPoint a(int,int) -> a
    android.graphics.Point a(com.baidu.pplatform.comapi.basestruct.GeoPoint,android.graphics.Point) -> a
com.baidu.pplatform.comapi.map.a.a -> com.baidu.pplatform.comapi.map.a.a:
    void a(boolean) -> a
com.baidu.pplatform.comapi.map.a.b -> com.baidu.pplatform.comapi.map.a.b:
    com.baidu.pplatform.comapi.map.base.c a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    android.os.Bundle b() -> b
    int c() -> c
com.baidu.pplatform.comapi.map.a.c -> com.baidu.pplatform.comapi.map.a.c:
com.baidu.pplatform.comapi.map.base.BaseGLMapView -> com.baidu.pplatform.comapi.map.base.BaseGLMapView:
    java.lang.String LTAG -> LTAG
    boolean mIsTrafficOn -> mIsTrafficOn
    boolean mIsSatelliteOn -> mIsSatelliteOn
    com.baidu.pplatform.comapi.map.base.c mMapController -> mMapController
    com.baidu.pplatform.comapi.map.base.k overlayMapCallBack -> overlayMapCallBack
    java.util.List mOverLayList -> mOverLayList
    com.baidu.pplatform.comapi.map.base.MapRenderer mRenderer -> mRenderer
    int state -> state
    android.content.Context mContext -> mContext
    com.baidu.pplatform.comapi.map.base.a mMapViewListener -> mMapViewListener
    com.baidu.pplatform.comapi.map.a.a mCapMapListener -> mCapMapListener
    com.baidu.pplatform.comapi.map.a.c mTimerCallbackListener -> mTimerCallbackListener
    int mWidth -> mWidth
    int mHeight -> mHeight
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    float x1 -> x1
    float x2 -> x2
    float y1 -> y1
    float y2 -> y2
    boolean bDoubledown -> bDoubledown
    java.util.List mLayerRecycleList -> mLayerRecycleList
    void initBaseMap() -> initBaseMap
    void initMapDefaultParam() -> initMapDefaultParam
    void initTouchListener() -> initTouchListener
    void initRender() -> initRender
    void initOverlayCallback() -> initOverlayCallback
    void initMapController(android.content.Context) -> initMapController
    void initMapEingine(android.os.Bundle) -> initMapEingine
    void setOverlayCallBack(com.baidu.pplatform.comapi.map.a.b) -> setOverlayCallBack
    void removeOverlayCallBack(int) -> removeOverlayCallBack
    void initLayers(com.baidu.pplatform.comapi.map.base.f$a) -> initLayers
    java.util.List getOverlays() -> getOverlays
    void destroy() -> destroy
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onTouchInternal(android.view.MotionEvent) -> onTouchInternal
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    com.baidu.pplatform.comapi.map.base.c getController() -> getController
    boolean enable3D() -> enable3D
    boolean isSatellite() -> isSatellite
    boolean isTraffic() -> isTraffic
    void setSatellite(boolean) -> setSatellite
    void setTraffic(boolean) -> setTraffic
    void setMapViewListener(com.baidu.pplatform.comapi.map.base.a) -> setMapViewListener
    void scrollByPixel(int,int) -> scrollByPixel
    double getZoomUnitsInMeter() -> getZoomUnitsInMeter
    void setWinRound(com.baidu.pplatform.comapi.map.base.h$b) -> setWinRound
    com.baidu.pplatform.comapi.map.base.h$b getWinRound() -> getWinRound
    com.baidu.pplatform.comapi.map.base.h$a getGeoRound() -> getGeoRound
    void setMapStatus(com.baidu.pplatform.comapi.map.base.h) -> setMapStatus
    com.baidu.pplatform.comapi.map.base.h getMapStatus() -> getMapStatus
    void saveScreenToLocal(java.lang.String) -> saveScreenToLocal
    void setCaptureMapListener(com.baidu.pplatform.comapi.map.a.a) -> setCaptureMapListener
    void setTimerCallbackListener(com.baidu.pplatform.comapi.map.a.c) -> setTimerCallbackListener
    float getZoomToBound(com.baidu.pplatform.comapi.basestruct.b) -> getZoomToBound
    float getZoomToBound(com.baidu.pplatform.comapi.basestruct.b,int,int) -> getZoomToBound
    void addRecycleLayer(int) -> addRecycleLayer
    void onRecycle() -> onRecycle
    void onMapRenderModeChange(int) -> onMapRenderModeChange
    void onRequestRender() -> onRequestRender
    int addLayer(java.lang.String) -> addLayer
    void updateLayer(int) -> updateLayer
    int removeLayer(int) -> removeLayer
    void clearLayer(int) -> clearLayer
    void addOneOverlayItem(android.os.Bundle) -> addOneOverlayItem
    void updateOneOverlayItem(android.os.Bundle) -> updateOneOverlayItem
    void removeOneOverlayItem(android.os.Bundle) -> removeOneOverlayItem
    com.baidu.pplatform.comapi.map.a getProjection() -> getProjection
com.baidu.pplatform.comapi.map.base.MapRenderer -> com.baidu.pplatform.comapi.map.base.MapRenderer:
    java.lang.String LTAG -> LTAG
    int mBaseMapPtr -> mBaseMapPtr
    boolean mIsMapResOk -> mIsMapResOk
    com.baidu.pplatform.comapi.map.base.MapRenderer$a mResourceRecycler -> mResourceRecycler
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> mGLSurfaceViewWeakRef
    int w_old -> w_old
    int h_old -> h_old
    int resize_tries -> resize_tries
    void nativeInit(int) -> nativeInit
    void nativeResize(int,int,int) -> nativeResize
    int nativeRender(int) -> nativeRender
    void nativeDone(int) -> nativeDone
    void setBaseMapId(int) -> setBaseMapId
    void setMapResInitOk(boolean) -> setMapResInitOk
    boolean checkBaseMap() -> checkBaseMap
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void drawEmptyBackground(javax.microedition.khronos.opengles.GL10) -> drawEmptyBackground
com.baidu.pplatform.comapi.map.base.MapRenderer$a -> com.baidu.pplatform.comapi.map.base.MapRenderer$a:
    void onRecycle() -> onRecycle
com.baidu.pplatform.comapi.map.base.a -> com.baidu.pplatform.comapi.map.base.a:
    void onClickedMapObj(java.util.List,int) -> onClickedMapObj
    void onClickedPoiObj(java.util.List,int) -> onClickedPoiObj
    void onClickedRouteObj(java.util.List,int) -> onClickedRouteObj
    void onClickedIndoorMapObj(java.util.List) -> onClickedIndoorMapObj
    void onMapRender() -> onMapRender
    void onMapAnimationStart() -> onMapAnimationStart
    void onMapAnimationFinish() -> onMapAnimationFinish
    void onMapMoveStart() -> onMapMoveStart
    void onMapMoveFinish() -> onMapMoveFinish
    void onClickedPopup(int) -> onClickedPopup
    void onClickedItem(int,int) -> onClickedItem
    void onMapClick(int,int) -> onMapClick
    void onMapDoubleClick(int,int) -> onMapDoubleClick
    void onMapLongClick(int,int) -> onMapLongClick
    void onMapStatusChange(com.baidu.pplatform.comapi.map.base.h) -> onMapStatusChange
    void onClickStreetArrow(com.baidu.pplatform.comapi.map.base.e) -> onClickStreetArrow
    void beforeMoveToPanorama() -> beforeMoveToPanorama
    void afterMoveToPanorama() -> afterMoveToPanorama
    void moveToPanoramaError() -> moveToPanoramaError
com.baidu.pplatform.comapi.map.base.b -> com.baidu.pplatform.comapi.map.base.b:
    int addLayer(java.lang.String) -> addLayer
    void clearLayer(int) -> clearLayer
    void addOneOverlayItem(android.os.Bundle) -> addOneOverlayItem
    void updateOneOverlayItem(android.os.Bundle) -> updateOneOverlayItem
    void removeOneOverlayItem(android.os.Bundle) -> removeOneOverlayItem
com.baidu.pplatform.comapi.map.base.c -> com.baidu.pplatform.comapi.map.base.c:
    java.lang.String e -> e
    com.baidu.pplatform.comjni.map.basemap.AppBaseMap f -> f
    com.baidu.pplatform.comapi.map.base.BaseGLMapView g -> g
    int h -> h
    int a -> a
    int b -> b
    android.os.Bundle i -> i
    android.os.Handler j -> j
    int k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    boolean o -> o
    boolean p -> p
    com.baidu.pplatform.comapi.basestruct.GeoPoint q -> q
    boolean r -> r
    int s -> s
    int t -> t
    boolean u -> u
    boolean v -> v
    boolean w -> w
    boolean x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    com.baidu.pplatform.comapi.basestruct.GeoPoint E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    boolean L -> L
    boolean M -> M
    com.baidu.pplatform.comapi.map.base.c$b N -> N
    boolean O -> O
    boolean P -> P
    boolean Q -> Q
    android.view.VelocityTracker R -> R
    long S -> S
    long T -> T
    long U -> U
    long V -> V
    int W -> W
    float X -> X
    float Y -> Y
    boolean Z -> Z
    long aa -> aa
    long ab -> ab
    boolean ac -> ac
    long ad -> ad
    long ae -> ae
    long af -> af
    boolean ag -> ag
    boolean c -> c
    boolean ah -> ah
    boolean ai -> ai
    com.baidu.pplatform.comapi.map.base.g d -> d
    int a(int,int,int,int) -> a
    void n() -> n
    void a(com.baidu.pplatform.comapi.map.base.BaseGLMapView) -> a
    int a() -> a
    void a(com.baidu.pplatform.comapi.map.base.g) -> a
    void a(java.lang.String) -> a
    com.baidu.pplatform.comjni.map.basemap.AppBaseMap b() -> b
    double c() -> c
    void a(int,int) -> a
    boolean d() -> d
    void a(boolean) -> a
    void b(boolean) -> b
    boolean e() -> e
    void c(boolean) -> c
    boolean b(int,int) -> b
    int a(int,int,int) -> a
    boolean a(int,int,android.view.View) -> a
    boolean a(android.view.MotionEvent) -> a
    void f(android.view.MotionEvent) -> f
    boolean b(android.view.MotionEvent) -> b
    boolean c(android.view.MotionEvent) -> c
    boolean d(android.view.MotionEvent) -> d
    void e(android.view.MotionEvent) -> e
    void d(boolean) -> d
    boolean f() -> f
    void g() -> g
    boolean a(android.view.MotionEvent,android.view.MotionEvent,float,float) -> a
    void c(int,int) -> c
    int h() -> h
    int i() -> i
    void b(com.baidu.pplatform.comapi.map.base.h) -> b
    void a(com.baidu.pplatform.comapi.map.base.h) -> a
    int a(com.baidu.pplatform.comapi.map.base.c$a) -> a
    void b(java.lang.String) -> b
    void a(double,double) -> a
    void d(int,int) -> d
    void a(int) -> a
    void a(com.baidu.pplatform.comapi.map.base.h,int) -> a
    com.baidu.pplatform.comapi.map.base.h j() -> j
    void a(int,boolean) -> a
    void b(int,boolean) -> b
    boolean k() -> k
    void a(android.os.Bundle,com.baidu.pplatform.comapi.map.base.k) -> a
    void o() -> o
    void p() -> p
    void l() -> l
    void e(int,int) -> e
    boolean m() -> m
    void q() -> q
    void r() -> r
    boolean f(int,int) -> f
    boolean g(int,int) -> g
    int addLayer(java.lang.String) -> addLayer
    void b(int) -> b
    int c(int) -> c
    void clearLayer(int) -> clearLayer
    void addOneOverlayItem(android.os.Bundle) -> addOneOverlayItem
    void updateOneOverlayItem(android.os.Bundle) -> updateOneOverlayItem
    void removeOneOverlayItem(android.os.Bundle) -> removeOneOverlayItem
    boolean a(com.baidu.pplatform.comapi.map.base.c) -> a
    int b(com.baidu.pplatform.comapi.map.base.c) -> b
    com.baidu.pplatform.comapi.map.base.BaseGLMapView c(com.baidu.pplatform.comapi.map.base.c) -> c
    boolean d(com.baidu.pplatform.comapi.map.base.c) -> d
    void e(com.baidu.pplatform.comapi.map.base.c) -> e
    boolean f(com.baidu.pplatform.comapi.map.base.c) -> f
    void g(com.baidu.pplatform.comapi.map.base.c) -> g
    boolean h(com.baidu.pplatform.comapi.map.base.c) -> h
    boolean i(com.baidu.pplatform.comapi.map.base.c) -> i
com.baidu.pplatform.comapi.map.base.c$a -> com.baidu.pplatform.comapi.map.base.c$a:
    com.baidu.pplatform.comapi.map.base.c$a a -> a
    com.baidu.pplatform.comapi.map.base.c$a b -> b
    com.baidu.pplatform.comapi.map.base.c$a c -> c
    com.baidu.pplatform.comapi.map.base.c$a d -> d
    int e -> e
    com.baidu.pplatform.comapi.map.base.c$a[] f -> f
    com.baidu.pplatform.comapi.map.base.c$a[] values() -> values
    com.baidu.pplatform.comapi.map.base.c$a valueOf(java.lang.String) -> valueOf
    int a(com.baidu.pplatform.comapi.map.base.c$a) -> a
com.baidu.pplatform.comapi.map.base.c$b -> com.baidu.pplatform.comapi.map.base.c$b:
    int a -> a
    float b -> b
    float c -> c
    float d -> d
    float e -> e
    float f -> f
    float g -> g
    float h -> h
    float i -> i
    boolean j -> j
    float k -> k
    float l -> l
    double m -> m
com.baidu.pplatform.comapi.map.base.d -> com.baidu.pplatform.comapi.map.base.d:
    com.baidu.pplatform.comapi.map.base.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.pplatform.comapi.map.base.e -> com.baidu.pplatform.comapi.map.base.e:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    com.baidu.pplatform.comapi.basestruct.GeoPoint d -> d
    int e -> e
    int f -> f
    int g -> g
com.baidu.pplatform.comapi.map.base.f -> com.baidu.pplatform.comapi.map.base.f:
    com.baidu.pplatform.comapi.map.base.f$a a -> a
    void a(com.baidu.pplatform.comapi.map.base.f$a) -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    java.lang.Object remove(int) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
com.baidu.pplatform.comapi.map.base.f$a -> com.baidu.pplatform.comapi.map.base.f$a:
    void onOverlayAdd(java.lang.Object) -> onOverlayAdd
    void onOverlayRemove(java.lang.Object) -> onOverlayRemove
com.baidu.pplatform.comapi.map.base.g -> com.baidu.pplatform.comapi.map.base.g:
    void onMapRenderModeChange(int) -> onMapRenderModeChange
    void onRequestRender() -> onRequestRender
com.baidu.pplatform.comapi.map.base.h -> com.baidu.pplatform.comapi.map.base.h:
    float a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    com.baidu.pplatform.comapi.map.base.h$b f -> f
    com.baidu.pplatform.comapi.map.base.h$a g -> g
    long h -> h
    long i -> i
    boolean j -> j
    double k -> k
    java.lang.String l -> l
    float m -> m
    boolean n -> n
    int o -> o
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.pplatform.comapi.map.base.h$a -> com.baidu.pplatform.comapi.map.base.h$a:
    long a -> a
    long b -> b
    long c -> c
    long d -> d
    com.baidu.pplatform.comapi.basestruct.c e -> e
    com.baidu.pplatform.comapi.basestruct.c f -> f
    com.baidu.pplatform.comapi.basestruct.c g -> g
    com.baidu.pplatform.comapi.basestruct.c h -> h
    com.baidu.pplatform.comapi.map.base.h i -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.pplatform.comapi.map.base.h$b -> com.baidu.pplatform.comapi.map.base.h$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    com.baidu.pplatform.comapi.map.base.h e -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.baidu.pplatform.comapi.map.base.i -> com.baidu.pplatform.comapi.map.base.i:
    com.baidu.lbsapi.panoramaview.OnTabMarkListener mListener -> mListener
    com.baidu.pplatform.comapi.basestruct.GeoPoint mLocation -> mLocation
    com.baidu.pplatform.comapi.map.base.i$a mType -> mType
    java.lang.String mId -> mId
    float mPitch -> mPitch
    void setOnTabMarkListener(com.baidu.lbsapi.panoramaview.OnTabMarkListener) -> setOnTabMarkListener
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    android.os.Bundle toRemoveBundle(android.os.Bundle) -> toRemoveBundle
    void setPitch(float) -> setPitch
com.baidu.pplatform.comapi.map.base.i$a -> com.baidu.pplatform.comapi.map.base.i$a:
    com.baidu.pplatform.comapi.map.base.i$a a -> a
    com.baidu.pplatform.comapi.map.base.i$a b -> b
    com.baidu.pplatform.comapi.map.base.i$a c -> c
    com.baidu.pplatform.comapi.map.base.i$a d -> d
    com.baidu.pplatform.comapi.map.base.i$a e -> e
    com.baidu.pplatform.comapi.map.base.i$a f -> f
    com.baidu.pplatform.comapi.map.base.i$a[] g -> g
    com.baidu.pplatform.comapi.map.base.i$a[] values() -> values
    com.baidu.pplatform.comapi.map.base.i$a valueOf(java.lang.String) -> valueOf
com.baidu.pplatform.comapi.map.base.j -> com.baidu.pplatform.comapi.map.base.j:
    int mType -> mType
    int mLayerID -> mLayerID
com.baidu.pplatform.comapi.map.base.k -> com.baidu.pplatform.comapi.map.base.k:
    android.util.SparseArray a -> a
    com.baidu.pplatform.comjni.map.basemap.AppBaseMap b -> b
    int mapLayerDataReq(android.os.Bundle,int,int) -> mapLayerDataReq
    boolean hasLayer(int) -> hasLayer
    void a(com.baidu.pplatform.comapi.map.a.b) -> a
    void a(int) -> a
com.baidu.pplatform.comapi.map.base.l -> com.baidu.pplatform.comapi.map.base.l:
    java.lang.String LTAG -> LTAG
    com.baidu.pplatform.comapi.map.base.b mBaseMapInterface -> mBaseMapInterface
    java.util.List mList -> mList
    java.lang.String mLayerTag -> mLayerTag
    void initLayer() -> initLayer
    boolean addOneItem(com.baidu.pplatform.comapi.map.base.i) -> addOneItem
    void reAddAll() -> reAddAll
    boolean updateOneItem(com.baidu.pplatform.comapi.map.base.i) -> updateOneItem
    boolean removeOneItem(com.baidu.pplatform.comapi.map.base.i) -> removeOneItem
    com.baidu.pplatform.comapi.map.base.i getOneItem(int) -> getOneItem
    java.util.List getAllItemBase() -> getAllItemBase
    int getSize() -> getSize
    void clearBase() -> clearBase
    int checkHasSameImage(com.baidu.pplatform.comapi.map.base.i) -> checkHasSameImage
    void specialProcessForDataModel(com.baidu.pplatform.comapi.map.base.i,boolean) -> specialProcessForDataModel
com.baidu.pplatform.comapi.map.base.m -> com.baidu.pplatform.comapi.map.base.m:
    java.lang.String LTAG -> LTAG
    android.graphics.Bitmap mBitmap -> mBitmap
    float mAnchorX -> mAnchorX
    float mAnchorY -> mAnchorY
    int mImageHashCode -> mImageHashCode
    byte[] mImageData -> mImageData
    void setBitmapBase(android.graphics.Bitmap) -> setBitmapBase
    android.graphics.Bitmap getBitmap() -> getBitmap
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    android.os.Bundle toRemoveBundle(android.os.Bundle) -> toRemoveBundle
com.baidu.pplatform.comapi.map.base.n -> com.baidu.pplatform.comapi.map.base.n:
    java.lang.String LTAG -> LTAG
    java.lang.String mText -> mText
    int mFontSize -> mFontSize
    int mFontColor -> mFontColor
    int mBgColor -> mBgColor
    float mAnchorX -> mAnchorX
    float mAnchorY -> mAnchorY
    int mPaddingLeft -> mPaddingLeft
    int mPaddingTop -> mPaddingTop
    int mPaddingRight -> mPaddingRight
    int mPaddingBottom -> mPaddingBottom
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    android.os.Bundle toRemoveBundle(android.os.Bundle) -> toRemoveBundle
com.baidu.pplatform.comapi.util.ParcelItem -> com.baidu.pplatform.comapi.util.ParcelItem:
    android.os.Bundle a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void a(android.os.Bundle) -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.pplatform.comapi.util.a -> com.baidu.pplatform.comapi.util.a:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    void a(android.content.Context) -> a
    android.net.NetworkInfo b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    boolean a(android.net.NetworkInfo) -> a
com.baidu.pplatform.comapi.util.b -> com.baidu.pplatform.comapi.util.b:
    com.baidu.pplatform.comapi.util.ParcelItem a(android.os.Parcel) -> a
    com.baidu.pplatform.comapi.util.ParcelItem[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.pplatform.comapi.util.c -> com.baidu.pplatform.comapi.util.c:
    int a() -> a
com.baidu.pplatform.comapi.util.d -> com.baidu.pplatform.comapi.util.d:
    java.lang.String G -> G
    com.baidu.pplatform.comjni.map.commonmemcache.AppCommonMemCache a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    android.content.Context D -> D
    int E -> E
    float F -> F
    boolean H -> H
    int I -> I
    int J -> J
    void f(android.content.Context) -> f
    void g(android.content.Context) -> g
    void h(android.content.Context) -> h
    void i(android.content.Context) -> i
    void j(android.content.Context) -> j
    java.lang.String a(android.content.Context) -> a
    byte[] b(android.content.Context) -> b
    java.lang.String k(android.content.Context) -> k
    java.lang.String a() -> a
    java.lang.String l(android.content.Context) -> l
    void m(android.content.Context) -> m
    void c(android.content.Context) -> c
    void b() -> b
    void d(android.content.Context) -> d
    android.os.Bundle c() -> c
    void d() -> d
    void e() -> e
    void a(java.lang.String) -> a
    java.lang.String f() -> f
    void g() -> g
    java.lang.String h() -> h
    int i() -> i
    java.lang.String j() -> j
    int k() -> k
    java.lang.String l() -> l
    int m() -> m
    java.lang.String n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
    java.lang.String e(android.content.Context) -> e
com.baidu.pplatform.comjni.engine.AppEngine -> com.baidu.pplatform.comjni.engine.AppEngine:
    int eBundle -> eBundle
    void despatchMessage(int,int,int,int) -> despatchMessage
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
    boolean GetFlaxLength(android.os.Bundle) -> GetFlaxLength
    void setKey(java.lang.String,java.lang.String) -> setKey
com.baidu.pplatform.comjni.engine.JNIEngine -> com.baidu.pplatform.comjni.engine.JNIEngine:
    int initClass(java.lang.Object,int) -> initClass
    boolean InitEngine(android.content.Context,android.os.Bundle) -> InitEngine
    boolean UnInitEngine() -> UnInitEngine
    void SetProxyInfo(java.lang.String,int) -> SetProxyInfo
    boolean StartSocketProc() -> StartSocketProc
    boolean GetFlaxLength(android.os.Bundle) -> GetFlaxLength
    boolean setKey(java.lang.String,java.lang.String) -> setKey
com.baidu.pplatform.comjni.engine.MessageProxy -> com.baidu.pplatform.comjni.engine.MessageProxy:
    java.lang.String LTAG -> LTAG
    android.util.SparseArray msgIdentiSpArray -> msgIdentiSpArray
    void registerMessageHandler(int,android.os.Handler) -> registerMessageHandler
    void unRegisterMessageHandler(int,android.os.Handler) -> unRegisterMessageHandler
    void dispatchMessage(int,int,int,int) -> dispatchMessage
    void destory() -> destory
com.baidu.pplatform.comjni.map.basemap.AppBaseMap -> com.baidu.pplatform.comjni.map.basemap.AppBaseMap:
    java.lang.String LTAG -> LTAG
    int maddr -> maddr
    com.baidu.pplatform.comjni.map.basemap.JNIBaseMap mJniBaseMap -> mJniBaseMap
    com.baidu.pplatform.comjni.map.basemap.BaseMapCallback mCallback -> mCallback
    java.util.List sJNIBaseMapList -> sJNIBaseMapList
    boolean SetCallback(com.baidu.pplatform.comjni.map.basemap.MapLayerDataInterface) -> SetCallback
    boolean Create() -> Create
    boolean QueryInterface() -> QueryInterface
    boolean Release() -> Release
    int GetId() -> GetId
    boolean Init(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> Init
    void Draw() -> Draw
    void OnPause() -> OnPause
    void OnResume() -> OnResume
    void OnBackground() -> OnBackground
    void OnForeground() -> OnForeground
    void ResetImageRes() -> ResetImageRes
    int GetMapRenderType() -> GetMapRenderType
    void SetMapStatus(android.os.Bundle) -> SetMapStatus
    int SetMapControlMode(int) -> SetMapControlMode
    android.os.Bundle GetMapStatus() -> GetMapStatus
    float GetZoomToBound(android.os.Bundle) -> GetZoomToBound
    void ShowSatelliteMap(boolean) -> ShowSatelliteMap
    void ShowTrafficMap(boolean) -> ShowTrafficMap
    void ShowLayers(int,boolean) -> ShowLayers
    boolean LayersIsShow(int) -> LayersIsShow
    void SetLayersClickable(int,boolean) -> SetLayersClickable
    void updateLayer(int) -> updateLayer
    int addLayer(int,int,java.lang.String) -> addLayer
    int removeLayer(int) -> removeLayer
    void clearLayer(int) -> clearLayer
    int GetLayerPos(int) -> GetLayerPos
    int InsertLayerAt(int,int,int) -> InsertLayerAt
    java.lang.String GetNearlyObjID(int,int,int,int) -> GetNearlyObjID
    java.lang.String SetFocus(int,int,boolean) -> SetFocus
    java.lang.String ScrPtToGeoPoint(int,int) -> ScrPtToGeoPoint
    java.lang.String GeoPtToScrPoint(int,int) -> GeoPtToScrPoint
    void SaveScreenToLocal(java.lang.String) -> SaveScreenToLocal
    void AttachDC(int) -> AttachDC
    boolean SetItsPreTime(int,int) -> SetItsPreTime
    boolean OnRecordAdd(int) -> OnRecordAdd
    boolean OnRecordStart(int,boolean,int) -> OnRecordStart
    boolean OnRecordSuspend(int,boolean,int) -> OnRecordSuspend
    boolean OnRecordReload(int,boolean) -> OnRecordReload
    boolean OnRecordRemove(int,boolean) -> OnRecordRemove
    java.lang.String OnRecordGetAll() -> OnRecordGetAll
    java.lang.String OnRecordGetAt(int) -> OnRecordGetAt
    boolean OnRecordImport(boolean) -> OnRecordImport
    java.lang.String OnHotcityGet() -> OnHotcityGet
    java.lang.String OnSchcityGet(java.lang.String) -> OnSchcityGet
    int OnWifiRecordAdd(int) -> OnWifiRecordAdd
    void MoveToScrPoint(int,int) -> MoveToScrPoint
    int GetCacheSize(int) -> GetCacheSize
    boolean CleanCache(int) -> CleanCache
    int GetVMPMapCityInfo(android.os.Bundle) -> GetVMPMapCityInfo
    boolean CloseCache() -> CloseCache
    boolean ResumeCache() -> ResumeCache
    void ShowIndoorMap(boolean) -> ShowIndoorMap
    boolean SwitchFloor(short) -> SwitchFloor
    java.lang.String GetIndoorDetail() -> GetIndoorDetail
    boolean IsIndoorMode() -> IsIndoorMode
    void EnterIndoorMode() -> EnterIndoorMode
    void ExitIndoorMode() -> ExitIndoorMode
    void addOneOverlayItem(android.os.Bundle) -> addOneOverlayItem
    void updateOneOverlayItem(android.os.Bundle) -> updateOneOverlayItem
    void removeOneOverlayItem(android.os.Bundle) -> removeOneOverlayItem
    void PostStatInfo() -> PostStatInfo
    boolean SaveCache() -> SaveCache
    int MapProc(int,int,int,int) -> MapProc
    int CreateDuplicate() -> CreateDuplicate
    int[] GetScreenBuf(int[]) -> GetScreenBuf
    void ReleaseImageRes(int) -> ReleaseImageRes
    java.lang.String getPanoramaByLocation(int,int) -> getPanoramaByLocation
    java.lang.String getPanoramaByPId(java.lang.String) -> getPanoramaByPId
    java.lang.String getPanoramaByUId(java.lang.String) -> getPanoramaByUId
    java.lang.String getPanoramaByIId(java.lang.String) -> getPanoramaByIId
    void setShowPanoramaLink(int,boolean) -> setShowPanoramaLink
    void setStreetSwitchToId(java.lang.String) -> setStreetSwitchToId
    void setStreetSwitchByLonLat(double,double) -> setStreetSwitchByLonLat
    void setStreetSwitchByMercator(int,int) -> setStreetSwitchByMercator
    void setCurretnImageLevel(int) -> setCurretnImageLevel
    java.lang.String getIndoorDescreptionJson(java.lang.String) -> getIndoorDescreptionJson
com.baidu.pplatform.comjni.map.basemap.BaseMapCallback -> com.baidu.pplatform.comjni.map.basemap.BaseMapCallback:
    android.util.SparseArray mCallbacks -> mCallbacks
    boolean SetMapCallback(int,com.baidu.pplatform.comjni.map.basemap.MapLayerDataInterface) -> SetMapCallback
    int ReqLayerData(android.os.Bundle,int,int) -> ReqLayerData
com.baidu.pplatform.comjni.map.basemap.JNIBaseMap -> com.baidu.pplatform.comjni.map.basemap.JNIBaseMap:
    int maddr -> maddr
    int Create() -> Create
    int SetCallback(int,com.baidu.pplatform.comjni.map.basemap.BaseMapCallback) -> SetCallback
    int QueryInterface(int) -> QueryInterface
    int Release(int) -> Release
    boolean Init(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int) -> Init
    void Draw(int) -> Draw
    void OnPause(int) -> OnPause
    void OnResume(int) -> OnResume
    void OnBackground(int) -> OnBackground
    void OnForeground(int) -> OnForeground
    void ResetImageRes(int) -> ResetImageRes
    int GetMapRenderType(int) -> GetMapRenderType
    void SetMapStatus(int,android.os.Bundle) -> SetMapStatus
    int SetMapControlMode(int,int) -> SetMapControlMode
    android.os.Bundle GetMapStatus(int) -> GetMapStatus
    float GetZoomToBound(int,android.os.Bundle) -> GetZoomToBound
    void ShowSatelliteMap(int,boolean) -> ShowSatelliteMap
    void ShowTrafficMap(int,boolean) -> ShowTrafficMap
    void ShowLayers(int,int,boolean) -> ShowLayers
    boolean LayersIsShow(int,int) -> LayersIsShow
    void SetLayersClickable(int,int,boolean) -> SetLayersClickable
    void UpdateLayers(int,int) -> UpdateLayers
    int AddLayer(int,int,int,java.lang.String) -> AddLayer
    int RemoveLayer(int,int) -> RemoveLayer
    void ClearLayer(int,int) -> ClearLayer
    int GetLayerPos(int,int) -> GetLayerPos
    int InsertLayerAt(int,int,int,int) -> InsertLayerAt
    java.lang.String GetNearlyObjID(int,int,int,int,int) -> GetNearlyObjID
    java.lang.String SetFocus(int,int,int,boolean) -> SetFocus
    java.lang.String ScrPtToGeoPoint(int,int,int) -> ScrPtToGeoPoint
    java.lang.String GeoPtToScrPoint(int,int,int) -> GeoPtToScrPoint
    void SaveScreenToLocal(int,java.lang.String) -> SaveScreenToLocal
    void AttachDC(int,int) -> AttachDC
    boolean SetItsPreTime(int,int,int) -> SetItsPreTime
    boolean OnRecordAdd(int,int) -> OnRecordAdd
    boolean OnRecordStart(int,int,boolean,int) -> OnRecordStart
    boolean OnRecordSuspend(int,int,boolean,int) -> OnRecordSuspend
    boolean OnRecordReload(int,int,boolean) -> OnRecordReload
    boolean OnRecordRemove(int,int,boolean) -> OnRecordRemove
    java.lang.String OnRecordGetAll(int) -> OnRecordGetAll
    java.lang.String OnRecordGetAt(int,int) -> OnRecordGetAt
    boolean OnRecordImport(int,boolean) -> OnRecordImport
    java.lang.String OnHotcityGet(int) -> OnHotcityGet
    java.lang.String OnSchcityGet(int,java.lang.String) -> OnSchcityGet
    int OnWifiRecordAdd(int,int) -> OnWifiRecordAdd
    void MoveToScrPoint(int,int,int) -> MoveToScrPoint
    int GetCacheSize(int,int) -> GetCacheSize
    boolean CleanCache(int,int) -> CleanCache
    int GetVMPMapCityInfo(int,android.os.Bundle) -> GetVMPMapCityInfo
    boolean CloseCache(int) -> CloseCache
    boolean ResumeCache(int) -> ResumeCache
    void ShowIndoorMap(int,boolean) -> ShowIndoorMap
    boolean SwitchFloor(int,short) -> SwitchFloor
    java.lang.String GetIndoorDetail(int) -> GetIndoorDetail
    boolean IsIndoorMode(int) -> IsIndoorMode
    void EnterIndoorMode(int) -> EnterIndoorMode
    void ExitIndoorMode(int) -> ExitIndoorMode
    void addOneOverlayItem(int,android.os.Bundle) -> addOneOverlayItem
    void updateOneOverlayItem(int,android.os.Bundle) -> updateOneOverlayItem
    void removeOneOverlayItem(int,android.os.Bundle) -> removeOneOverlayItem
    boolean SaveCache(int) -> SaveCache
    void PostStatInfo(int) -> PostStatInfo
    void ReleaseImageRes(int,int) -> ReleaseImageRes
    int MapProc(int,int,int,int) -> MapProc
    int CreateDuplicate(int) -> CreateDuplicate
    int[] GetScreenBuf(int,int[]) -> GetScreenBuf
    java.lang.String getPanoramaByLocation(int,int,int) -> getPanoramaByLocation
    java.lang.String getPanoramaByPId(int,java.lang.String) -> getPanoramaByPId
    java.lang.String getPanoramaByUId(int,java.lang.String) -> getPanoramaByUId
    java.lang.String getPanoramaByIId(int,java.lang.String) -> getPanoramaByIId
    void setShowPanoramaLink(int,int,boolean) -> setShowPanoramaLink
    boolean streetSwitchToId(int,java.lang.String) -> streetSwitchToId
    boolean streetSwitchByLonLat(int,double,double) -> streetSwitchByLonLat
    boolean streetSwitchByMercator(int,int,int) -> streetSwitchByMercator
    boolean setCurrentImageLevel(int,int) -> setCurrentImageLevel
    java.lang.String getIndoorDescreptionJson(int,java.lang.String) -> getIndoorDescreptionJson
com.baidu.pplatform.comjni.map.basemap.MapLayerDataInterface -> com.baidu.pplatform.comjni.map.basemap.MapLayerDataInterface:
    int mapLayerDataReq(android.os.Bundle,int,int) -> mapLayerDataReq
    boolean hasLayer(int) -> hasLayer
com.baidu.pplatform.comjni.map.commonmemcache.AppCommonMemCache -> com.baidu.pplatform.comjni.map.commonmemcache.AppCommonMemCache:
    int maddr -> maddr
    com.baidu.pplatform.comjni.map.commonmemcache.JNICommonMemCache mJniCommonMemCache -> mJniCommonMemCache
    java.lang.String TAG -> TAG
    int Create() -> Create
    int QueryInterface() -> QueryInterface
    int Release() -> Release
    void Init(android.os.Bundle) -> Init
    void SetKey(java.lang.String,int) -> SetKey
    void SetKey(java.lang.String,java.lang.String) -> SetKey
    void SetKey(java.lang.String,float) -> SetKey
    void SetKey(java.lang.String,double) -> SetKey
    java.lang.String GetPhoneInfoUrl() -> GetPhoneInfoUrl
    java.lang.String GetSataInfo(boolean,int,int) -> GetSataInfo
com.baidu.pplatform.comjni.map.commonmemcache.JNICommonMemCache -> com.baidu.pplatform.comjni.map.commonmemcache.JNICommonMemCache:
    int Create() -> Create
    int QueryInterface(int) -> QueryInterface
    int Release(int) -> Release
    void Init(int,android.os.Bundle) -> Init
    void SetKeyInt(int,java.lang.String,int) -> SetKeyInt
    void SetKeyString(int,java.lang.String,java.lang.String) -> SetKeyString
    void SetKeyFloat(int,java.lang.String,float) -> SetKeyFloat
    void SetKeyDouble(int,java.lang.String,double) -> SetKeyDouble
    java.lang.String GetPhoneInfoUrl(int) -> GetPhoneInfoUrl
    java.lang.String GetSataInfo(int,boolean,int,int) -> GetSataInfo
com.baidu.pplatform.comjni.map.dataengine.AppDataEngine -> com.baidu.pplatform.comjni.map.dataengine.AppDataEngine:
    int maddr -> maddr
    com.baidu.pplatform.comjni.map.dataengine.JNIDataEngine mJniDataEngine -> mJniDataEngine
    int Create() -> Create
    int QueryInterface() -> QueryInterface
    int Release() -> Release
    java.lang.String getPanoramaByLocation(int,int) -> getPanoramaByLocation
    java.lang.String getPanoramaByLocation(double,double) -> getPanoramaByLocation
    java.lang.String getPanoramaByPId(java.lang.String) -> getPanoramaByPId
    java.lang.String getPanoramaByIId(java.lang.String) -> getPanoramaByIId
    java.lang.String getIndoorPanoramaRecommendInfo(java.lang.String) -> getIndoorPanoramaRecommendInfo
com.baidu.pplatform.comjni.map.dataengine.JNIDataEngine -> com.baidu.pplatform.comjni.map.dataengine.JNIDataEngine:
    int Create() -> Create
    int QueryInterface(int) -> QueryInterface
    int Release(int) -> Release
    java.lang.String getPanoramaByMercator(int,int,int) -> getPanoramaByMercator
    java.lang.String getPanoramaByLonLat(int,double,double) -> getPanoramaByLonLat
    java.lang.String getPanoramaByPId(int,java.lang.String) -> getPanoramaByPId
    java.lang.String getPanoramaByIId(int,java.lang.String) -> getPanoramaByIId
    java.lang.String getIndoorPanoramaRecommendInfo(int,java.lang.String) -> getIndoorPanoramaRecommendInfo
com.baidu.pplatform.comjni.tools.AppTools -> com.baidu.pplatform.comjni.tools.AppTools:
    com.baidu.pplatform.comapi.basestruct.c getGeoPointFromString(java.lang.String) -> getGeoPointFromString
    com.baidu.pplatform.comapi.basestruct.a getGeoComplexPointFromString(java.lang.String) -> getGeoComplexPointFromString
    double getDistanceByMc(com.baidu.pplatform.comapi.basestruct.c,com.baidu.pplatform.comapi.basestruct.c) -> getDistanceByMc
com.baidu.pplatform.comjni.tools.BundleKeySet -> com.baidu.pplatform.comjni.tools.BundleKeySet:
    java.lang.String[] getBundleKeys(android.os.Bundle) -> getBundleKeys
com.baidu.pplatform.comjni.tools.JNITools -> com.baidu.pplatform.comjni.tools.JNITools:
    boolean TransGeoStr2Pt(java.lang.Object) -> TransGeoStr2Pt
    void TransNodeStr2Pt(java.lang.Object) -> TransNodeStr2Pt
    boolean TransGeoStr2ComplexPt(java.lang.Object) -> TransGeoStr2ComplexPt
    void GetDistanceByMC(java.lang.Object) -> GetDistanceByMC
com.baidu.pplatform.comjni.tools.ParcelItem -> com.baidu.pplatform.comjni.tools.ParcelItem:
    android.os.Bundle mBundle -> mBundle
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setBundle(android.os.Bundle) -> setBundle
    android.os.Bundle getBundle() -> getBundle
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.baidu.pplatform.comjni.tools.ParcelItem$1 -> com.baidu.pplatform.comjni.tools.ParcelItem$1:
    com.baidu.pplatform.comjni.tools.ParcelItem createFromParcel(android.os.Parcel) -> createFromParcel
    com.baidu.pplatform.comjni.tools.ParcelItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.pvi.VDeviceAPI -> com.baidu.pvi.VDeviceAPI:
    java.lang.String TAG -> TAG
    int NETWORK_TYPE_NONE -> NETWORK_TYPE_NONE
    int NETWORK_TYPE_UNKNOWN -> NETWORK_TYPE_UNKNOWN
    int NETWORK_TYPE_WIFI -> NETWORK_TYPE_WIFI
    int NETWORK_TYPE_MOBILE -> NETWORK_TYPE_MOBILE
    int NETWORK_TYPE_BLUETOOTH -> NETWORK_TYPE_BLUETOOTH
    android.os.PowerManager$WakeLock mWakeLock -> mWakeLock
    android.content.BroadcastReceiver mNetworkStateReceiver -> mNetworkStateReceiver
    int ERROR_INVALID_ADDRESS -> ERROR_INVALID_ADDRESS
    int ERROR_INVALID_FILE_FORMAT -> ERROR_INVALID_FILE_FORMAT
    long getTotalSpace() -> getTotalSpace
    long getFreeSpace() -> getFreeSpace
    long getSdcardTotalSpace() -> getSdcardTotalSpace
    long getSdcardFreeSpace() -> getSdcardFreeSpace
    long getTotalMemory() -> getTotalMemory
    long getAvailableMemory() -> getAvailableMemory
    java.lang.String getOsVersion() -> getOsVersion
    void setupSoftware(java.lang.String) -> setupSoftware
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getAppVersion() -> getAppVersion
    int getCurrentNetworkType() -> getCurrentNetworkType
    boolean isWifiConnected() -> isWifiConnected
    com.baidu.pvi.b getNetworkInfo(int) -> getNetworkInfo
    void setNetworkChangedCallback() -> setNetworkChangedCallback
    void unsetNetworkChangedCallback() -> unsetNetworkChangedCallback
    void onNetworkStateChanged() -> onNetworkStateChanged
    android.net.wifi.ScanResult[] getWifiHotpot() -> getWifiHotpot
    float getSystemMetricsX() -> getSystemMetricsX
    float getSystemMetricsY() -> getSystemMetricsY
    float getScreenDensity() -> getScreenDensity
    int getScreenDensityDpi() -> getScreenDensityDpi
    void setScreenAlwaysOn(boolean) -> setScreenAlwaysOn
    int getScreenBrightness() -> getScreenBrightness
    void makeCall(java.lang.String) -> makeCall
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    int sendMMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMMS
    void openUrl(java.lang.String) -> openUrl
    java.lang.String getCellId() -> getCellId
    java.lang.String getLac() -> getLac
    java.lang.String getImei() -> getImei
    java.lang.String getImsi() -> getImsi
com.baidu.pvi.VDeviceAPI$1 -> com.baidu.pvi.VDeviceAPI$1:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.pvi.VMsg -> com.baidu.pvi.VMsg:
    java.lang.String LTAG -> LTAG
    android.os.Handler g_viMsgHandler -> g_viMsgHandler
    android.os.HandlerThread looperThread -> looperThread
    void init() -> init
    void destroy() -> destroy
    void postMessage(int,int,int,int) -> postMessage
    void OnUserCommand1(int,int,int,int) -> OnUserCommand1
    void access$000(int,int,int,int) -> access$000
com.baidu.pvi.VMsg$a -> com.baidu.pvi.VMsg$a:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.pvi.a -> com.baidu.pvi.a:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    android.content.Context a() -> a
com.baidu.pvi.b -> com.baidu.pvi.b:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.baidu.pvi.b$1 -> com.baidu.pvi.b$1:
    int[] a -> a
com.baidu.vi.VDeviceAPI -> com.baidu.vi.VDeviceAPI:
    android.os.PowerManager$WakeLock a -> a
    android.content.BroadcastReceiver b -> b
    long getTotalSpace() -> getTotalSpace
    long getFreeSpace() -> getFreeSpace
    long getSdcardTotalSpace() -> getSdcardTotalSpace
    long getSdcardFreeSpace() -> getSdcardFreeSpace
    long getTotalMemory() -> getTotalMemory
    long getAvailableMemory() -> getAvailableMemory
    java.lang.String getOsVersion() -> getOsVersion
    void setupSoftware(java.lang.String) -> setupSoftware
    java.lang.String getModuleFileName() -> getModuleFileName
    java.lang.String getSdcardPath() -> getSdcardPath
    java.lang.String getCachePath() -> getCachePath
    java.lang.String getAppVersion() -> getAppVersion
    int getCurrentNetworkType() -> getCurrentNetworkType
    boolean isWifiConnected() -> isWifiConnected
    com.baidu.vi.b getNetworkInfo(int) -> getNetworkInfo
    void setNetworkChangedCallback() -> setNetworkChangedCallback
    void unsetNetworkChangedCallback() -> unsetNetworkChangedCallback
    void onNetworkStateChanged() -> onNetworkStateChanged
    android.net.wifi.ScanResult[] getWifiHotpot() -> getWifiHotpot
    float getSystemMetricsX() -> getSystemMetricsX
    float getSystemMetricsY() -> getSystemMetricsY
    float getScreenDensity() -> getScreenDensity
    int getScreenDensityDpi() -> getScreenDensityDpi
    void setScreenAlwaysOn(boolean) -> setScreenAlwaysOn
    int getScreenBrightness() -> getScreenBrightness
    void makeCall(java.lang.String) -> makeCall
    void sendSMS(java.lang.String,java.lang.String) -> sendSMS
    int sendMMS(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMMS
    void openUrl(java.lang.String) -> openUrl
    java.lang.String getCellId() -> getCellId
    java.lang.String getLac() -> getLac
    java.lang.String getImei() -> getImei
    java.lang.String getImsi() -> getImsi
com.baidu.vi.VDeviceAPI$1 -> com.baidu.vi.VDeviceAPI$1:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.vi.VMsg -> com.baidu.vi.VMsg:
    java.lang.String a -> a
    android.os.Handler b -> b
    android.os.HandlerThread c -> c
    void init() -> init
    void destroy() -> destroy
    void postMessage(int,int,int,int) -> postMessage
    void OnUserCommand1(int,int,int,int) -> OnUserCommand1
    void a(int,int,int,int) -> a
com.baidu.vi.VMsg$a -> com.baidu.vi.VMsg$a:
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.vi.a -> com.baidu.vi.a:
    android.content.Context a -> a
    void a(android.content.Context) -> a
    android.content.Context a() -> a
com.baidu.vi.b -> com.baidu.vi.b:
    java.lang.String a -> a
    int b -> b
    int c -> c
com.baidu.vi.b$1 -> com.baidu.vi.b$1:
    int[] a -> a
com.gezitech.adapter.MoreOptionAdapter -> com.gezitech.a.a:
    com.gezitech.adapter.MoreOptionAdapter _this -> c
    android.content.Context mcontext -> d
    java.util.ArrayList mlist -> e
    android.view.LayoutInflater mInflater -> f
    com.hyh.www.entity.Companytype selectedList -> a
    com.gezitech.adapter.MoreOptionAdapter$OnClickDataPress onClickDataPress -> g
    boolean isSelectedBoolean -> b
    int type -> h
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setOnClickDataPress(com.gezitech.adapter.MoreOptionAdapter$OnClickDataPress) -> a
    java.lang.Object getItem(int) -> getItem
    com.gezitech.adapter.MoreOptionAdapter access$1(com.gezitech.adapter.MoreOptionAdapter) -> a
    java.util.ArrayList access$2(com.gezitech.adapter.MoreOptionAdapter) -> b
    com.gezitech.adapter.MoreOptionAdapter$OnClickDataPress access$3(com.gezitech.adapter.MoreOptionAdapter) -> c
com.gezitech.adapter.MoreOptionAdapter$1 -> com.gezitech.a.b:
    com.gezitech.adapter.MoreOptionAdapter this$0 -> a
    com.hyh.www.entity.Companytype val$items -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.gezitech.adapter.MoreOptionAdapter$OnClickDataPress -> com.gezitech.a.c:
    void onDataPerss(com.hyh.www.entity.Companytype) -> a
com.gezitech.adapter.MoreOptionAdapter$Viewholder -> com.gezitech.a.d:
    android.widget.TextView tv_hobby_radio -> a
com.gezitech.adapter.OptionAdapter -> com.gezitech.a.e:
    com.gezitech.adapter.OptionAdapter _this -> b
    android.content.Context mcontext -> c
    java.util.ArrayList mlist -> d
    android.view.LayoutInflater mInflater -> e
    java.util.HashMap selectedList -> a
    com.gezitech.adapter.OptionAdapter$OnClickDataPress onClickDataPress -> f
    boolean isRadio -> g
    com.gezitech.widget.OptionDialog$ItemType type -> h
    int exception -> i
    java.lang.String typename -> j
    long id -> k
    java.lang.String des -> l
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setOnClickDataPress(com.gezitech.adapter.OptionAdapter$OnClickDataPress) -> a
    java.lang.Object getItem(int) -> getItem
    com.gezitech.adapter.OptionAdapter access$1(com.gezitech.adapter.OptionAdapter) -> a
    long access$2(com.gezitech.adapter.OptionAdapter) -> b
    java.lang.String access$3(com.gezitech.adapter.OptionAdapter) -> c
    com.gezitech.adapter.OptionAdapter$OnClickDataPress access$4(com.gezitech.adapter.OptionAdapter) -> d
com.gezitech.adapter.OptionAdapter$1 -> com.gezitech.a.f:
    com.gezitech.adapter.OptionAdapter this$0 -> a
    com.gezitech.contract.GezitechEntity_I val$items -> b
    void onClick(android.view.View) -> onClick
com.gezitech.adapter.OptionAdapter$2 -> com.gezitech.a.g:
    com.gezitech.adapter.OptionAdapter this$0 -> a
    com.gezitech.contract.GezitechEntity_I val$items -> b
    void onClick(android.view.View) -> onClick
com.gezitech.adapter.OptionAdapter$OnClickDataPress -> com.gezitech.a.h:
    void onDataPerss(com.gezitech.contract.GezitechEntity_I) -> a
com.gezitech.adapter.OptionAdapter$Viewholder -> com.gezitech.a.i:
    android.widget.CheckBox mCheckBox -> a
    android.widget.TextView tv_hobby_radio -> b
com.gezitech.adapter.PhotoAlbumAdapter -> com.gezitech.a.j:
    com.gezitech.adapter.PhotoAlbumAdapter _this -> b
    android.view.LayoutInflater inflater -> c
    android.app.Activity context -> d
    com.gezitech.entity.PageList list -> e
    com.gezitech.util.ImageDownloader mImageDownloader -> f
    boolean mImageDownloaderOpen -> a
    com.gezitech.adapter.PhotoAlbumAdapter$OnAlbumListener onAlbumListener -> g
    int lineCount -> h
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setOnAlbumListener(com.gezitech.adapter.PhotoAlbumAdapter$OnAlbumListener) -> a
    void addList(java.util.ArrayList,boolean) -> a
    void removeAll() -> a
    java.lang.Object getItem(int) -> getItem
    com.gezitech.adapter.PhotoAlbumAdapter$OnAlbumListener access$1(com.gezitech.adapter.PhotoAlbumAdapter) -> a
com.gezitech.adapter.PhotoAlbumAdapter$1 -> com.gezitech.a.k:
    com.gezitech.adapter.PhotoAlbumAdapter this$0 -> a
    com.gezitech.entity.PhotoAlbumModel val$item -> b
    void onClick(android.view.View) -> onClick
com.gezitech.adapter.PhotoAlbumAdapter$2 -> com.gezitech.a.l:
    com.gezitech.adapter.PhotoAlbumAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.gezitech.adapter.PhotoAlbumAdapter$Hv -> com.gezitech.a.m:
    android.widget.ImageView iv_cover -> b
    android.widget.TextView tv_number -> c
    android.widget.LinearLayout ll_arrows -> d
    com.gezitech.adapter.PhotoAlbumAdapter this$0 -> a
    android.widget.ImageView access$0(com.gezitech.adapter.PhotoAlbumAdapter$Hv) -> a
    android.widget.TextView access$1(com.gezitech.adapter.PhotoAlbumAdapter$Hv) -> b
    android.widget.LinearLayout access$2(com.gezitech.adapter.PhotoAlbumAdapter$Hv) -> c
com.gezitech.adapter.PhotoAlbumAdapter$OnAlbumListener -> com.gezitech.a.n:
    void albumListener(com.gezitech.entity.PhotoAlbumModel) -> a
com.gezitech.adapter.PhotoSelectAdaper -> com.gezitech.a.o:
    com.gezitech.entity.PageList list -> a
    android.content.Context context -> b
    com.gezitech.adapter.PhotoSelectAdaper _this -> c
    android.view.LayoutInflater inflater -> d
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void addList(java.util.ArrayList,boolean) -> a
    void removeAll() -> a
    void setItem(com.gezitech.contract.GezitechEntity_I,int) -> a
    java.lang.Object getItem(int) -> getItem
com.gezitech.adapter.PhotoSelectAdaper$Hv -> com.gezitech.a.p:
    android.widget.ImageView iv_img -> b
    android.widget.TextView tv_select -> c
    android.widget.ImageView iv_select -> d
    com.gezitech.adapter.PhotoSelectAdaper this$0 -> a
    android.widget.ImageView access$0(com.gezitech.adapter.PhotoSelectAdaper$Hv) -> a
    android.widget.TextView access$1(com.gezitech.adapter.PhotoSelectAdaper$Hv) -> b
    android.widget.ImageView access$2(com.gezitech.adapter.PhotoSelectAdaper$Hv) -> c
com.gezitech.basic.GezitechActivity -> com.gezitech.basic.GezitechActivity:
    com.gezitech.basic.GezitechActivity InsThis -> InsThis
    com.gezitech.entity.User user -> user
    java.util.LinkedList activities -> activities
    android.os.Handler toastHandler -> toastHandler
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void finish() -> finish
    void onDestroy() -> onDestroy
    void Toast(java.lang.CharSequence,int) -> Toast
    void Toast(java.lang.CharSequence) -> Toast
    void Toast(int) -> Toast
    void Toast(int,int) -> Toast
    void exit() -> exit
    void onResume() -> onResume
    void onStop() -> onStop
    void onPause() -> onPause
    boolean Test() -> Test
com.gezitech.basic.GezitechActivity$1 -> com.gezitech.basic.GezitechActivity$1:
    com.gezitech.basic.GezitechActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
    com.gezitech.basic.GezitechActivity access$0(com.gezitech.basic.GezitechActivity$1) -> access$0
com.gezitech.basic.GezitechActivity$1$1 -> com.gezitech.basic.GezitechActivity$1$1:
    com.gezitech.basic.GezitechActivity$1 this$1 -> this$1
    com.hyh.www.widget.YMDialog2 val$ymdialog -> val$ymdialog
    void onClick(android.view.View) -> onClick
com.gezitech.basic.GezitechAlertDialog -> com.gezitech.basic.GezitechAlertDialog:
    android.app.Dialog dialog -> dialog
    java.lang.String title -> title
    java.lang.String msg -> msg
    java.lang.String confirm -> confirm
    java.lang.String cancel -> cancel
    android.app.Dialog dialogReset -> dialogReset
    void loadDialog(android.content.Context,java.lang.String) -> loadDialog
    void loadDialog(android.content.Context) -> loadDialog
    void closeDialog() -> closeDialog
    void show(android.app.Activity,com.gezitech.basic.GezitechAlertDialog$OnSelectClickListener) -> show
    void showResetDialog(android.content.Context,com.gezitech.basic.GezitechAlertDialog$OnSelectClickListenerBase) -> showResetDialog
    void closeResetDialog() -> closeResetDialog
com.gezitech.basic.GezitechAlertDialog$1 -> com.gezitech.basic.GezitechAlertDialog$1:
    com.gezitech.basic.GezitechAlertDialog$OnSelectClickListener val$onSelectClickListener -> val$onSelectClickListener
    void onClick(android.content.DialogInterface,int) -> onClick
com.gezitech.basic.GezitechAlertDialog$2 -> com.gezitech.basic.GezitechAlertDialog$2:
    com.gezitech.basic.GezitechAlertDialog$OnSelectClickListener val$onSelectClickListener -> val$onSelectClickListener
    void onClick(android.content.DialogInterface,int) -> onClick
com.gezitech.basic.GezitechAlertDialog$3 -> com.gezitech.basic.GezitechAlertDialog$3:
    com.gezitech.basic.GezitechAlertDialog$OnSelectClickListenerBase val$onSelectClickListenerBase -> val$onSelectClickListenerBase
    void onClick(android.view.View) -> onClick
com.gezitech.basic.GezitechAlertDialog$OnSelectClickListener -> com.gezitech.basic.GezitechAlertDialog$OnSelectClickListener:
    void onClickNegativeButton() -> onClickNegativeButton
com.gezitech.basic.GezitechAlertDialog$OnSelectClickListenerBase -> com.gezitech.basic.GezitechAlertDialog$OnSelectClickListenerBase:
    void onClickPositiveButton() -> onClickPositiveButton
com.gezitech.basic.GezitechApplication -> com.gezitech.basic.GezitechApplication:
    com.gezitech.basic.GezitechApplication instance -> instance
    int new_alarm_count -> new_alarm_count
    boolean isShow -> isShow
    com.gezitech.basic.GezitechApplication _this -> _this
    com.baidu.location.LocationClient mLocationClient -> mLocationClient
    com.baidu.location.LocationClientOption$LocationMode tempMode -> tempMode
    com.baidu.location.BDLocation mLocation -> mLocation
    android.content.SharedPreferences systemSp -> systemSp
    java.util.HashMap selectPic -> selectPic
    int selectPhontCount -> selectPhontCount
    long currUid -> currUid
    long hyhId -> hyhId
    boolean isActive -> isActive
    long verifyTime -> verifyTime
    org.jivesoftware.smack.XMPPConnection connection -> connection
    int isConnection -> isConnection
    com.gezitech.basic.GezitechApplication getContext() -> getContext
    com.gezitech.basic.GezitechApplication getInstance() -> getInstance
    void onCreate() -> onCreate
    com.baidu.location.BDLocation getLocation() -> getLocation
    void getBDLocation(com.baidu.location.BDLocationListener) -> getBDLocation
    void setBDLocation(com.baidu.location.BDLocation) -> setBDLocation
    int getTimeDeff() -> getTimeDeff
com.gezitech.basic.GezitechEntity -> com.gezitech.basic.GezitechEntity:
    long serialVersionUID -> serialVersionUID
    org.json.JSONObject json -> json
    java.lang.String defaultPrimaryKey -> defaultPrimaryKey
    long id -> id
    long sync_time -> sync_time
    java.util.HashMap infoCache -> infoCache
    org.json.JSONObject getJson() -> getJson
    void setJson(org.json.JSONObject) -> setJson
    java.lang.Long getId() -> getId
    void setId(java.lang.Long) -> setId
    boolean setFieldValue(java.lang.String,java.lang.Object) -> setFieldValue
    java.lang.Object getFieldValue(java.lang.String) -> getFieldValue
    java.lang.Object getFieldValue(java.lang.reflect.Field) -> getFieldValue
    boolean setFieldValue(com.gezitech.basic.GezitechEntity$FieldInfoCache,org.json.JSONObject,java.lang.String) -> setFieldValue
    boolean setFieldValue(com.gezitech.basic.GezitechEntity$FieldInfoCache,android.database.Cursor,java.lang.String) -> setFieldValue
    boolean init(org.json.JSONObject) -> init
    boolean init(android.database.Cursor) -> init
    com.gezitech.http.PostParameter[] asParameterArray() -> asParameterArray
    java.lang.Object getFieldValue(java.lang.String,java.lang.Object) -> getFieldValue
    com.gezitech.basic.GezitechEntity$TableInfoCache getEntityFieldsInfo(java.lang.Class) -> getEntityFieldsInfo
    java.util.ArrayList getFieldsInfo(java.lang.Class,boolean,boolean,boolean) -> getFieldsInfo
    com.gezitech.basic.GezitechEntity$FieldInfoCache getFieldInfo(java.lang.Class,java.lang.String) -> getFieldInfo
    boolean isOlderThan(com.gezitech.basic.GezitechEntity,com.gezitech.service.managers.DataManager$OrderList) -> isOlderThan
    void afterCreateTable() -> afterCreateTable
    void queryRelated(java.lang.String,android.content.Context) -> queryRelated
    boolean entityExistInArray(java.util.ArrayList,long) -> entityExistInArray
    com.gezitech.basic.GezitechEntity getCache(long) -> getCache
com.gezitech.basic.GezitechEntity$FieldInfo -> com.gezitech.basic.GezitechEntity$FieldInfo:
    java.lang.String fieldName() -> fieldName
    java.lang.String jsonName() -> jsonName
    boolean isPrimary() -> isPrimary
    com.gezitech.basic.GezitechEntity$FieldType fieldType() -> fieldType
    java.lang.String outerKey() -> outerKey
    java.lang.String innerKey() -> innerKey
    boolean isChildren() -> isChildren
    boolean isParent() -> isParent
    java.lang.Class outerType() -> outerType
    boolean isPersonal() -> isPersonal
com.gezitech.basic.GezitechEntity$FieldInfoCache -> com.gezitech.basic.GezitechEntity$FieldInfoCache:
    java.lang.reflect.Field field -> field
    com.gezitech.basic.GezitechEntity$FieldInfo fieldInfo -> fieldInfo
    java.lang.String jsonName -> jsonName
    java.lang.String fieldName -> fieldName
    java.lang.String name -> name
com.gezitech.basic.GezitechEntity$FieldType -> com.gezitech.basic.GezitechEntity$FieldType:
    com.gezitech.basic.GezitechEntity$FieldType Auto -> Auto
    com.gezitech.basic.GezitechEntity$FieldType Integer -> Integer
    com.gezitech.basic.GezitechEntity$FieldType Varchar -> Varchar
    com.gezitech.basic.GezitechEntity$FieldType Text -> Text
    com.gezitech.basic.GezitechEntity$FieldType[] ENUM$VALUES -> ENUM$VALUES
    com.gezitech.basic.GezitechEntity$FieldType[] values() -> values
    com.gezitech.basic.GezitechEntity$FieldType valueOf(java.lang.String) -> valueOf
com.gezitech.basic.GezitechEntity$TableInfo -> com.gezitech.basic.GezitechEntity$TableInfo:
    java.lang.String tableName() -> tableName
com.gezitech.basic.GezitechEntity$TableInfoCache -> com.gezitech.basic.GezitechEntity$TableInfoCache:
    java.lang.Class type -> type
    java.lang.String tableName -> tableName
    java.lang.String name -> name
    java.util.ArrayList fieldList -> fieldList
com.gezitech.basic.GezitechException -> com.gezitech.basic.GezitechException:
    int statusCode -> statusCode
    long serialVersionUID -> serialVersionUID
    int getStatusCode() -> getStatusCode
com.gezitech.config.Conf -> com.gezitech.b.a:
    boolean isNovisible -> a
    boolean isAutoLogin -> b
    boolean isRemember -> c
    boolean isFirstStart -> d
    int timedeff -> e
    int pauseTime -> f
    int vioceTime -> g
    java.lang.String wechat_pay_app_id -> h
    java.lang.String wechat_pat_app_secret -> i
com.gezitech.config.Configuration -> com.gezitech.b.b:
    java.util.Properties defaultProperty -> a
    void init() -> a
    boolean useSSL() -> b
    java.lang.String getScheme() -> c
    java.lang.String getAppPath() -> d
    java.lang.String getProxyHost() -> e
    java.lang.String getProxyUser() -> f
    java.lang.String getProxyPassword() -> g
    int getProxyPort() -> h
    int getConnectionTimeout() -> i
    int getReadTimeout() -> j
    java.lang.String getUserAgent(java.lang.String) -> a
    boolean getBoolean(java.lang.String) -> b
    int getIntProperty(java.lang.String) -> c
    java.lang.String getProperty(java.lang.String) -> d
    java.lang.String getProperty(java.lang.String,java.lang.String) -> a
    java.lang.String replace(java.lang.String) -> e
    boolean getDebug() -> k
com.gezitech.contract.GezitechEntity_I -> com.gezitech.c.a:
com.gezitech.contract.GezitechManager_I -> com.gezitech.c.b:
com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener -> com.gezitech.c.c:
    void OnGetJSONObjectDone(org.json.JSONObject) -> a
com.gezitech.contract.GezitechManager_I$OnAsynGetListArrayListListener -> com.gezitech.c.d:
    void OnGetListDone(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
com.gezitech.contract.GezitechManager_I$OnAsynGetListListener -> com.gezitech.c.e:
    void OnGetListDone(java.util.ArrayList) -> a
com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener -> com.gezitech.c.f:
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.gezitech.contract.GezitechManager_I$OnAsynInsertListener -> com.gezitech.c.g:
    void onInsertDone(java.lang.String) -> a
com.gezitech.contract.GezitechManager_I$OnAsynProgressListener -> com.gezitech.c.h:
    void OnProgress(int,int) -> a
com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener -> com.gezitech.c.i:
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
com.gezitech.contract.GezitechManager_I$OnAsynRequestListener -> com.gezitech.c.j:
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener -> com.gezitech.c.k:
    void onUpdateDone(java.lang.String) -> a
com.gezitech.entity.AppInfo -> com.gezitech.entity.AppInfo:
    long serialVersionUID -> serialVersionUID
    java.lang.String version -> version
    java.lang.String defaultVersion -> defaultVersion
    void afterCreateTable() -> afterCreateTable
    boolean isVersionDifferent() -> isVersionDifferent
    java.lang.String getVersionName() -> getVersionName
    android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
com.gezitech.entity.GezitechEntityAbstractCollection -> com.gezitech.entity.GezitechEntityAbstractCollection:
    java.util.ArrayList list -> list
    void addEntity(com.gezitech.basic.GezitechEntity) -> addEntity
    com.gezitech.basic.GezitechEntity getEntity(int) -> getEntity
    java.util.ArrayList getEntityList() -> getEntityList
    int size() -> size
    void clear() -> clear
    void fetchData(com.gezitech.basic.GezitechEntity$FieldInfoCache,java.lang.Object,android.content.Context) -> fetchData
com.gezitech.entity.GezitechEntityCollection -> com.gezitech.entity.GezitechEntityCollection:
    void add(com.gezitech.basic.GezitechEntity) -> add
    com.gezitech.basic.GezitechEntity get(int) -> get
    java.util.ArrayList getList() -> getList
    void fetchData(com.gezitech.basic.GezitechEntity$FieldInfoCache,java.lang.Object,android.content.Context) -> fetchData
com.gezitech.entity.PageList -> com.gezitech.entity.PageList:
    long serialVersionUID -> serialVersionUID
    int pageIndex -> pageIndex
    int pageCount -> pageCount
    int dataCount -> dataCount
    int type -> type
    java.lang.String to -> to
    int getPageIndex() -> getPageIndex
    void setPageIndex(int) -> setPageIndex
    int getPageCount() -> getPageCount
    void setPageCount(int) -> setPageCount
    int getDataCount() -> getDataCount
    void setDataCount(int) -> setDataCount
    void setType(int) -> setType
    int getType() -> getType
    void setTo(java.lang.String) -> setTo
    java.lang.String getTo() -> getTo
com.gezitech.entity.PhotoAlbumModel -> com.gezitech.entity.PhotoAlbumModel:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String count -> count
    int bitmap -> bitmap
    java.lang.String path -> path
    java.util.ArrayList bitList -> bitList
com.gezitech.entity.PhotoItemModel -> com.gezitech.entity.PhotoItemModel:
    long serialVersionUID -> serialVersionUID
    int photoID -> photoID
    boolean select -> select
    java.lang.String path -> path
com.gezitech.entity.User -> com.gezitech.entity.User:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    int groupId -> groupId
    long ctime -> ctime
    long utime -> utime
    java.lang.String nickname -> nickname
    java.lang.String phone -> phone
    int isbusiness -> isbusiness
    int auth_type -> auth_type
    int online -> online
    java.lang.String city -> city
    java.lang.String longitude -> longitude
    java.lang.String lat -> lat
    long lasttime -> lasttime
    long thistime -> thistime
    int isPause -> isPause
    long storetotal -> storetotal
    double personaltotal -> personaltotal
    java.lang.String head -> head
    java.lang.String access_token -> access_token
    long expires_in -> expires_in
    java.lang.String refresh_token -> refresh_token
    int islogin -> islogin
    int uid -> uid
    java.lang.String realname -> realname
    java.lang.String IDnumber -> IDnumber
    java.lang.String tel -> tel
    java.lang.String email -> email
    java.lang.String address -> address
    java.lang.String inviteCode -> inviteCode
    int isfriend -> isfriend
    int isstar -> isstar
    int isblacklist -> isblacklist
    java.lang.String Source -> Source
    java.lang.String notes -> notes
    int friendtype -> friendtype
    long fctime -> fctime
    int istop -> istop
    int isremind -> isremind
    int isclose -> isclose
    int sex -> sex
    int companystate -> companystate
    int companyTypeId -> companyTypeId
    java.lang.String companyTypeName -> companyTypeName
    java.lang.String company_address -> company_address
    java.lang.String company_name -> company_name
    java.lang.String company_tel -> company_tel
    java.lang.String company_shopname -> company_shopname
    java.lang.String company_license -> company_license
    java.lang.String company_certificate -> company_certificate
    java.lang.String company_placeshowone -> company_placeshowone
    java.lang.String company_placeshowtwo -> company_placeshowtwo
    java.lang.String company_placeshowthree -> company_placeshowthree
    java.lang.String company_userphoto -> company_userphoto
    int state -> state
    long passtime -> passtime
    double money -> money
    double earn -> earn
    double pay -> pay
    double cash -> cash
    double coupon -> coupon
    double gotmoney -> gotmoney
    double invite_money -> invite_money
    java.lang.String businesstime -> businesstime
    int isdelivery -> isdelivery
    java.lang.String touchname -> touchname
    java.lang.String account_name -> account_name
    java.lang.String account_number -> account_number
    java.lang.String account_bankname -> account_bankname
    java.lang.String provinces_name -> provinces_name
    java.lang.String provinces -> provinces
    java.lang.String urban_name -> urban_name
    java.lang.String urban -> urban
    java.lang.String county_name -> county_name
    java.lang.String county -> county
    java.lang.String streets_name -> streets_name
    java.lang.String streets -> streets
    java.lang.String country_name -> country_name
    java.lang.String country -> country
com.gezitech.http.HttpClient -> com.gezitech.d.a:
    boolean DEBUG -> a
    java.lang.String basic -> b
    java.lang.String proxyHost -> c
    int proxyPort -> d
    java.lang.String proxyAuthUser -> e
    java.lang.String proxyAuthPassword -> f
    int connectionTimeout -> g
    int readTimeout -> h
    boolean isJDK14orEarlier -> i
    java.util.Map requestHeaders -> j
    com.gezitech.http.OAuth oauth -> k
    void setUserAgent(java.lang.String) -> a
    com.gezitech.http.Response get(java.lang.String,boolean) -> a
    com.gezitech.http.Response httpRequest(java.lang.String,com.gezitech.http.PostParameter[],boolean) -> a
    com.gezitech.http.Response httpRequest(java.lang.String,com.gezitech.http.PostParameter[],boolean,java.lang.String) -> a
    java.lang.String encodeParameters(com.gezitech.http.PostParameter[]) -> a
    void setHeaders(java.lang.String,com.gezitech.http.PostParameter[],java.net.HttpURLConnection,boolean,java.lang.String) -> a
    void setRequestHeader(java.lang.String,java.lang.String) -> a
    java.net.HttpURLConnection getConnection(java.lang.String) -> b
    void log(java.lang.String) -> c
    java.lang.String access$0(com.gezitech.http.HttpClient) -> a
    java.lang.String access$1(com.gezitech.http.HttpClient) -> b
com.gezitech.http.HttpClient$1 -> com.gezitech.d.b:
    com.gezitech.http.HttpClient this$0 -> a
    java.net.PasswordAuthentication getPasswordAuthentication() -> getPasswordAuthentication
com.gezitech.http.HttpUtil -> com.gezitech.d.c:
    com.loopj.android.http.AsyncHttpClient client -> a
    void get(java.lang.String,boolean,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void post(java.lang.String,boolean,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> b
    java.lang.String getAbsoluteUrl(java.lang.String) -> a
com.gezitech.http.OAuth -> com.gezitech.d.d:
com.gezitech.http.PostParameter -> com.gezitech.d.e:
    java.lang.String name -> a
    java.lang.String value -> b
    java.io.File file -> c
    byte[] fileByte -> d
    android.graphics.Bitmap bitMap -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.gezitech.http.Response -> com.gezitech.d.f:
    boolean DEBUG -> b
    java.lang.ThreadLocal builders -> c
    int statusCode -> d
    org.w3c.dom.Document responseAsDocument -> e
    java.lang.String responseAsString -> f
    java.io.InputStream is -> g
    java.net.HttpURLConnection con -> h
    boolean streamConsumed -> i
    int contentLength -> a
    java.util.regex.Pattern escaped -> j
    int getStatusCode() -> a
    java.io.InputStream asStream() -> b
    java.lang.String asString() -> c
    org.json.JSONObject asJSONObject() -> d
    void disconnect() -> e
    java.lang.String toString() -> toString
    void log(java.lang.String) -> a
com.gezitech.http.Response$1 -> com.gezitech.d.g:
    javax.xml.parsers.DocumentBuilder initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.gezitech.image.ImageDetailActivity -> com.gezitech.image.ImageDetailActivity:
    com.gezitech.image.ImageDetailActivity$ImagePagerAdapter mAdapter -> b
    com.roger.quickviewpage.imagecache.ImageWorker mImageWorker -> c
    android.support.v4.view.ViewPager mPager -> d
    android.view.ViewGroup dotGroup -> e
    android.widget.ImageView[] tips -> f
    int extraCurrentItem -> g
    java.lang.String[] imageUrls -> a
    com.gezitech.image.ImageDetailActivity _this -> h
    java.lang.String ImageUrl -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    com.roger.quickviewpage.imagecache.ImageWorker getImageWorker() -> a
    void setDot(int) -> a
    void onBackPressed() -> onBackPressed
    void closeActivity() -> b
    android.widget.ImageView[] access$0(com.gezitech.image.ImageDetailActivity) -> a
    void access$1(com.gezitech.image.ImageDetailActivity,java.lang.String) -> a
com.gezitech.image.ImageDetailActivity$1 -> com.gezitech.image.a:
    com.gezitech.image.ImageDetailActivity this$0 -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.gezitech.image.ImageDetailActivity$ImagePagerAdapter -> com.gezitech.image.b:
    int mSize -> b
    com.gezitech.image.ImageDetailActivity this$0 -> a
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
com.gezitech.image.ImageDetailFragment -> com.gezitech.image.ImageDetailFragment:
    int mImageNum -> a
    com.roger.quickviewpage.photoview.PhotoView mImageView -> b
    com.roger.quickviewpage.imagecache.ImageWorker mImageWorker -> c
    android.widget.ProgressBar mProgressBar -> d
    com.gezitech.image.ImageDetailFragment _this -> e
    com.gezitech.image.ImageDetailFragment newInstance(int) -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void cancelWork() -> a
    com.gezitech.image.ImageDetailFragment access$0(com.gezitech.image.ImageDetailFragment) -> a
    android.widget.ProgressBar access$1(com.gezitech.image.ImageDetailFragment) -> b
com.gezitech.image.ImageDetailFragment$1 -> com.gezitech.image.c:
    com.gezitech.image.ImageDetailFragment this$0 -> a
    void onPhotoTap(android.view.View,float,float) -> onPhotoTap
com.gezitech.image.ImageDetailFragment$2 -> com.gezitech.image.d:
    com.gezitech.image.ImageDetailFragment this$0 -> a
    void onImageLoadingStarted() -> onImageLoadingStarted
    void onImageLoaded() -> onImageLoaded
com.gezitech.photo.PhotoActivity -> com.gezitech.photo.PhotoActivity:
    com.gezitech.photo.PhotoActivity _this -> a
    android.widget.GridView grid_view -> b
    android.widget.TextView tv_count -> c
    android.widget.Button bt_complete -> d
    int chooseNum -> e
    com.gezitech.entity.PhotoAlbumModel album -> f
    com.gezitech.adapter.PhotoSelectAdaper photoSelectAdaper -> g
    android.widget.Button bt_my_post -> h
    android.widget.Button bt_home_msg -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void _init() -> a
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    void returnData(int) -> a
    com.gezitech.photo.PhotoActivity access$0(com.gezitech.photo.PhotoActivity) -> a
    com.gezitech.adapter.PhotoSelectAdaper access$1(com.gezitech.photo.PhotoActivity) -> b
    int access$2(com.gezitech.photo.PhotoActivity) -> c
    void access$3(com.gezitech.photo.PhotoActivity,int) -> a
    android.widget.TextView access$4(com.gezitech.photo.PhotoActivity) -> d
com.gezitech.photo.PhotoActivity$1 -> com.gezitech.photo.a:
    com.gezitech.photo.PhotoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.gezitech.photo.PhotoActivity$2 -> com.gezitech.photo.b:
    com.gezitech.photo.PhotoActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.gezitech.photo.PhotoAlbumActivity -> com.gezitech.photo.PhotoAlbumActivity:
    com.gezitech.photo.PhotoAlbumActivity _this -> a
    com.gezitech.widget.MyListView list_view -> b
    android.widget.Button bt_my_post -> c
    android.widget.Button bt_home_msg -> d
    int chooseNum -> e
    java.lang.String[] STORE_IMAGES -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void _init() -> a
    java.util.ArrayList getPhotoAlbum() -> b
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.gezitech.photo.PhotoAlbumActivity access$0(com.gezitech.photo.PhotoAlbumActivity) -> a
    int access$1(com.gezitech.photo.PhotoAlbumActivity) -> b
com.gezitech.photo.PhotoAlbumActivity$1 -> com.gezitech.photo.c:
    com.gezitech.photo.PhotoAlbumActivity this$0 -> a
    void albumListener(com.gezitech.entity.PhotoAlbumModel) -> a
com.gezitech.service.BackgroundService -> com.gezitech.service.BackgroundService:
    android.os.Binder binder -> b
    java.util.HashMap dataStorage -> c
    com.gezitech.service.BackgroundService instance -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    java.lang.Object getStorageData(java.lang.String) -> a
com.gezitech.service.BackgroundService$LocalBinder -> com.gezitech.service.a:
    com.gezitech.service.BackgroundService this$0 -> a
com.gezitech.service.GezitechReceiver -> com.gezitech.service.GezitechReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.gezitech.service.GezitechService -> com.gezitech.service.GezitechService:
    java.util.ArrayList allActivity -> c
    java.util.ArrayList queue -> d
    java.util.ArrayList active -> e
    com.gezitech.entity.User currentUser -> f
    com.gezitech.service.GezitechService instance -> g
    com.gezitech.service.xmpp.IMChatService service -> a
    boolean isBound -> b
    com.gezitech.service.GezitechService getInstance() -> a
    void appendActivity(android.app.Activity) -> a
    void exitApp(android.content.Context) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    com.gezitech.entity.User getCurrentLoginUser(android.content.Context) -> b
    void clearCurrentUser() -> b
    com.gezitech.entity.User getCurrentUser() -> c
    void setCurrentUser(com.gezitech.entity.User) -> a
    void pushInfo(boolean) -> a
    void longitude() -> d
    void longitude(com.gezitech.service.GezitechService$CallBDLocation) -> a
    void configuration() -> e
    com.gezitech.service.xmpp.IMChatService bindBackgroundService(android.content.Context) -> c
    void unbindBackgroundService(android.content.Context) -> d
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void NotificationAction(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void sendMessage(long,int) -> a
    void sendMessage(int,java.lang.String,java.util.HashMap) -> a
    void sendMessage(long,int,java.lang.String,long) -> a
com.gezitech.service.GezitechService$1 -> com.gezitech.service.b:
    com.gezitech.service.GezitechService this$0 -> a
    android.content.SharedPreferences val$user_submit -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
com.gezitech.service.GezitechService$2 -> com.gezitech.service.c:
    com.gezitech.service.GezitechService this$0 -> a
    com.gezitech.service.GezitechService$CallBDLocation val$callBDLocation -> b
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.gezitech.service.GezitechService$3 -> com.gezitech.service.d:
    com.gezitech.service.GezitechService this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.gezitech.service.GezitechService$4 -> com.gezitech.service.e:
    long val$uid -> a
    long val$hyhid -> b
    java.lang.String val$body -> c
    int val$msgtype -> d
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.gezitech.service.GezitechService$CallBDLocation -> com.gezitech.service.f:
    void callfunction(java.lang.String,java.lang.String,java.lang.String) -> a
com.gezitech.service.PushMessageReceiver -> com.gezitech.service.PushMessageReceiver:
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onBind
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onDelTags
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> onListTags
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> onMessage
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationClicked
    com.gezitech.entity.User startApp() -> a
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onSetTags
    void onUnbind(android.content.Context,int,java.lang.String) -> onUnbind
    boolean isTopActivity(android.content.Context) -> b
    boolean checkBrowser(android.content.Context) -> a
com.gezitech.service.lbs.AppUtils -> com.gezitech.service.a.a:
    boolean isAppOnForeground() -> a
com.gezitech.service.lbs.NotificationUtil -> com.gezitech.service.a.b:
    void sendNotification(java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> a
    boolean copyAssetsToFilesystem(java.io.InputStream,java.io.OutputStream) -> a
com.gezitech.service.managers.AccountManager -> com.gezitech.service.b.a:
    com.gezitech.service.managers.AccountManager _this -> b
    com.gezitech.service.managers.AccountManager instance -> a
    com.gezitech.service.managers.AccountManager getInstance() -> a
    void accountlist(com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
    void getaccountlist(com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void submitcash(java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener) -> a
    void spreadcount(com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> b
    void businesslist(int,int,int,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void salelist(int,int,long,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void getAccountRecordList(int,int,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void spendCoupon(com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener) -> a
    void tradenumberlist(int,int,int,long,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
com.gezitech.service.managers.AccountManager$1 -> com.gezitech.service.b.b:
    com.gezitech.service.managers.AccountManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.AccountManager$10 -> com.gezitech.service.b.c:
    com.gezitech.service.managers.AccountManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.AccountManager$2 -> com.gezitech.service.b.d:
    com.gezitech.service.managers.AccountManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.AccountManager$3 -> com.gezitech.service.b.e:
    com.gezitech.service.managers.AccountManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.AccountManager$4 -> com.gezitech.service.b.f:
    com.gezitech.service.managers.AccountManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.AccountManager$5 -> com.gezitech.service.b.g:
    com.gezitech.service.managers.AccountManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.AccountManager$7 -> com.gezitech.service.b.h:
    com.gezitech.service.managers.AccountManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.AccountManager$8 -> com.gezitech.service.b.i:
    com.gezitech.service.managers.AccountManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.AccountManager$9 -> com.gezitech.service.b.j:
    com.gezitech.service.managers.AccountManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ChatManager -> com.gezitech.service.b.k:
    com.gezitech.service.managers.ChatManager _this -> d
    com.gezitech.service.managers.ChatManager instance -> a
    com.gezitech.service.sqlitedb.GezitechDBHelper chatDB -> b
    com.gezitech.service.sqlitedb.GezitechDBHelper chatContentDB -> c
    com.gezitech.service.sqlitedb.GezitechDBHelper friendDB -> e
    com.gezitech.service.sqlitedb.GezitechDBHelper contactsDB -> f
    com.gezitech.service.sqlitedb.GezitechDBHelper nearHintMsgDB -> g
    com.gezitech.service.managers.ChatManager getInstance() -> a
    java.util.ArrayList getChatList(int) -> a
    java.util.ArrayList getChatContentList(long,int,long) -> a
    java.util.ArrayList getChatContentList(long,int,long,com.hyh.www.entity.ChatContent,boolean) -> a
    com.hyh.www.entity.Chat getChatItem(long,long) -> a
    void getFriendData(long,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
    int[] unreadcount(int) -> b
    void deleteChatContent(long,int) -> a
    void deleleFriendOne(long) -> a
    void deleteChat(long,int) -> b
    void deleteContacts() -> b
    void setFriendInfo(java.lang.String,java.lang.String,long) -> a
    void getchatrecord(int,int,long,java.lang.String,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    java.util.ArrayList getNearHintMsg() -> c
    void deleteNearHintMsg(long) -> b
com.gezitech.service.managers.ChatManager$1 -> com.gezitech.service.b.l:
    com.gezitech.service.managers.ChatManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.DataManager -> com.gezitech.service.b.m:
com.gezitech.service.managers.DataManager$OrderItem -> com.gezitech.service.b.n:
    boolean isAsc -> a
    com.gezitech.basic.GezitechEntity$FieldInfoCache fieldInfo -> b
    com.gezitech.service.managers.DataManager$OrderItem create(java.lang.Class,java.lang.String,boolean) -> a
com.gezitech.service.managers.DataManager$OrderList -> com.gezitech.service.b.o:
    java.util.ArrayList list -> a
    java.lang.Class type -> b
    java.lang.String toString() -> toString
    java.util.ArrayList getItems() -> a
com.gezitech.service.managers.DataManager$PersonalField -> com.gezitech.service.b.p:
    com.gezitech.basic.GezitechEntity$FieldInfoCache fieldInfo -> a
com.gezitech.service.managers.FriendManager -> com.gezitech.service.b.q:
    com.gezitech.service.managers.FriendManager _this -> b
    com.gezitech.service.managers.FriendManager instance -> a
    com.gezitech.service.managers.FriendManager getInstance() -> a
    void getfriends(int,int,com.gezitech.contract.GezitechManager_I$OnAsynGetListArrayListListener) -> a
    void getClientCacheFriendList(com.gezitech.contract.GezitechManager_I$OnAsynGetListArrayListListener) -> a
    void getfriendnumber(com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> a
    void adddelisstar(long,int,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> a
    void scanfriend(int,int,java.lang.String,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void untreatedFriendlist(int,int,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void denyaddFriend(long,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> a
    void agreeaddFriend(long,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> b
    void addFriend(long,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> c
    void deleteFriend(long,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> d
    void isblacklist(long,int,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> b
    void setnotes(long,java.lang.String,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> a
    void istop(long,int,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> c
    void isclose(long,int,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> d
    void isremind(long,int,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> e
    void usercomplain(long,java.lang.String,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> b
    void emptyrecord(long,com.gezitech.contract.GezitechManager_I$OnAsynRequestListener) -> e
com.gezitech.service.managers.FriendManager$1 -> com.gezitech.service.b.r:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListArrayListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$10 -> com.gezitech.service.b.s:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$11 -> com.gezitech.service.b.t:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$12 -> com.gezitech.service.b.u:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$13 -> com.gezitech.service.b.v:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$14 -> com.gezitech.service.b.w:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$15 -> com.gezitech.service.b.x:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$16 -> com.gezitech.service.b.y:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$2 -> com.gezitech.service.b.z:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$3 -> com.gezitech.service.b.aa:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$4 -> com.gezitech.service.b.ab:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$5 -> com.gezitech.service.b.ac:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$6 -> com.gezitech.service.b.ad:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$7 -> com.gezitech.service.b.ae:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$8 -> com.gezitech.service.b.af:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.FriendManager$9 -> com.gezitech.service.b.ag:
    com.gezitech.service.managers.FriendManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager -> com.gezitech.service.b.ah:
    com.gezitech.service.managers.NearManager _this -> b
    com.gezitech.service.managers.NearManager instance -> a
    com.gezitech.service.managers.NearManager getInstance() -> a
    void getPubRangeList(com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void getRangetypeList(com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> b
    void getRangepriceList(long,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void addRangeBuyRecord(long,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
    void addNearbycontent(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
    void getNearByList(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void getUserPubNearBy(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> b
    void addNearbyFeedback(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener) -> a
    void addNearbyLike(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener) -> b
    void delNearBy(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener) -> c
    void delFeedBack(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener) -> d
    void getNewNearByCount(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener) -> e
com.gezitech.service.managers.NearManager$1 -> com.gezitech.service.b.ai:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$10 -> com.gezitech.service.b.aj:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$11 -> com.gezitech.service.b.ak:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$12 -> com.gezitech.service.b.al:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$2 -> com.gezitech.service.b.am:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$3 -> com.gezitech.service.b.an:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$4 -> com.gezitech.service.b.ao:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$5 -> com.gezitech.service.b.ap:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$6 -> com.gezitech.service.b.aq:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$7 -> com.gezitech.service.b.ar:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$8 -> com.gezitech.service.b.as:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.NearManager$9 -> com.gezitech.service.b.at:
    com.gezitech.service.managers.NearManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetJsonObjectListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.PayManager -> com.gezitech.service.b.au:
    com.gezitech.service.managers.PayManager _this -> b
    com.gezitech.service.managers.PayManager instance -> a
    com.gezitech.service.managers.PayManager getInstance() -> a
    void getannouncementdetails(java.lang.String,java.lang.String,double,int,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
com.gezitech.service.managers.PayManager$1 -> com.gezitech.service.b.av:
    com.gezitech.service.managers.PayManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.PushManager -> com.gezitech.service.b.aw:
    com.gezitech.service.managers.PushManager _this -> b
    com.gezitech.service.managers.PushManager instance -> a
    com.gezitech.service.managers.PushManager getInstance() -> a
    void setPushInfo(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener) -> a
com.gezitech.service.managers.PushManager$1 -> com.gezitech.service.b.ax:
    com.gezitech.service.managers.PushManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager -> com.gezitech.service.b.ay:
    com.gezitech.service.managers.ShoutManager _this -> b
    com.gezitech.service.managers.ShoutManager instance -> a
    com.gezitech.service.managers.ShoutManager getInstance() -> a
    void releasescope(java.lang.String,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void validtimelist(int,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void validtimelist(int,java.lang.String,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void releaseshout(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
    void myshout(int,int,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void addTrade(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> a
    void getrTradeList(int,int,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> b
    void addbill(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> b
    void getrbillList(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> c
    void balancepayment(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> b
    void addpai(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> d
    void certaincollect(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> c
    void deletetemplets(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> d
    void deleteshout(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> e
    void usercancelpay(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> f
    void storecancelcollect(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> g
    void userconfirmservice(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> h
    void userapplyrefund(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> i
    void getAllMyShoutList(int,int,long,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void deleteShoutSession(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> j
    void getShoutSessionTime(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> k
com.gezitech.service.managers.ShoutManager$1 -> com.gezitech.service.b.az:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$10 -> com.gezitech.service.b.ba:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$11 -> com.gezitech.service.b.bb:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$12 -> com.gezitech.service.b.bc:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$13 -> com.gezitech.service.b.bd:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$14 -> com.gezitech.service.b.be:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$15 -> com.gezitech.service.b.bf:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$16 -> com.gezitech.service.b.bg:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$17 -> com.gezitech.service.b.bh:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$18 -> com.gezitech.service.b.bi:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$19 -> com.gezitech.service.b.bj:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$2 -> com.gezitech.service.b.bk:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$20 -> com.gezitech.service.b.bl:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$3 -> com.gezitech.service.b.bm:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$4 -> com.gezitech.service.b.bn:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$5 -> com.gezitech.service.b.bo:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$6 -> com.gezitech.service.b.bp:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$7 -> com.gezitech.service.b.bq:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$8 -> com.gezitech.service.b.br:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.ShoutManager$9 -> com.gezitech.service.b.bs:
    com.gezitech.service.managers.ShoutManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager -> com.gezitech.service.b.bt:
    com.gezitech.service.managers.SystemManager _this -> b
    com.gezitech.service.managers.SystemManager instance -> a
    com.gezitech.service.managers.SystemManager getInstance() -> a
    void companytypelist(com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void addFeedback(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener) -> a
    void configuration(com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> b
    com.hyh.www.entity.Configuration getConfiguration(int) -> a
    void getannouncementlist(int,int,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void getannouncementdetails(long,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
    void fileclear(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> a
    void fileclearProcess(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynProgressListener) -> a
    void phonetic(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> b
    void advlist(int,int,java.lang.String,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    com.gezitech.entity.PageList getClientAdvList() -> b
    void getNewsUpdate(long,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> a
    void getCityAreaStreet(long,long,com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> a
    void getCountryList(com.gezitech.contract.GezitechManager_I$OnAsynGetListListener) -> c
com.gezitech.service.managers.SystemManager$1 -> com.gezitech.service.b.bu:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager$10 -> com.gezitech.service.b.bv:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager$11 -> com.gezitech.service.b.bw:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager$12 -> com.gezitech.service.b.bx:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager$2 -> com.gezitech.service.b.by:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager$3 -> com.gezitech.service.b.bz:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager$4 -> com.gezitech.service.b.ca:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager$5 -> com.gezitech.service.b.cb:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager$6 -> com.gezitech.service.b.cc:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager$7 -> com.gezitech.service.b.cd:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynProgressListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
    void onProgress(int,int) -> onProgress
com.gezitech.service.managers.SystemManager$8 -> com.gezitech.service.b.ce:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.SystemManager$9 -> com.gezitech.service.b.cf:
    com.gezitech.service.managers.SystemManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetListListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.UserManager -> com.gezitech.service.b.cg:
    com.gezitech.service.managers.UserManager _this -> b
    com.gezitech.service.managers.UserManager instance -> a
    com.gezitech.entity.User curruser -> c
    com.gezitech.service.managers.UserManager getInstance() -> a
    void Login(java.lang.String,java.lang.String,com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener) -> a
    void register(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener) -> a
    void userInfoProcess(java.lang.String,com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener) -> a
    void gainuserinfo(com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
    void updateUserInfo(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener) -> a
    void phonecode(java.lang.String,int,com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener) -> a
    void uploadhead(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynProgressListener) -> a
    void updatepassword(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener) -> b
    void getcompanyinfo(long,boolean,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
    void submitretailers(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener) -> c
    void getfrienddata(long,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
    void getfrienddata(long,long,com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> a
    void getkefu(com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> b
    void Resetcipher(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener) -> b
    void longitude(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener) -> c
    void updateauthenticatestate(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener) -> d
    void usertrtradenumber(com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener) -> c
    void exitLogin(long) -> a
    void thirdPartCheck(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener) -> e
    void thirdPartAddPhone(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener) -> f
    com.gezitech.service.managers.UserManager access$0(com.gezitech.service.managers.UserManager) -> a
    void access$1(com.gezitech.entity.User) -> a
    com.gezitech.entity.User access$2() -> b
com.gezitech.service.managers.UserManager$1 -> com.gezitech.service.b.ch:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$11 -> com.gezitech.service.b.ci:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$12 -> com.gezitech.service.b.cj:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$13 -> com.gezitech.service.b.ck:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$14 -> com.gezitech.service.b.cl:
    com.gezitech.service.managers.UserManager this$0 -> a
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$15 -> com.gezitech.service.b.cm:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$16 -> com.gezitech.service.b.cn:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$17 -> com.gezitech.service.b.co:
    com.gezitech.service.managers.UserManager this$0 -> a
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$18 -> com.gezitech.service.b.cp:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$19 -> com.gezitech.service.b.cq:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$2 -> com.gezitech.service.b.cr:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynRequestFailListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$3 -> com.gezitech.service.b.cs:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$4 -> com.gezitech.service.b.ct:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.UserManager$5 -> com.gezitech.service.b.cu:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener val$listener -> b
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$6 -> com.gezitech.service.b.cv:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynProgressListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
    void onProgress(int,int) -> onProgress
com.gezitech.service.managers.UserManager$7 -> com.gezitech.service.b.cw:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.managers.UserManager$8 -> com.gezitech.service.b.cx:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynGetOneListener val$listener -> b
    boolean val$issave -> c
    void onFinish() -> onFinish
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
com.gezitech.service.managers.UserManager$9 -> com.gezitech.service.b.cy:
    com.gezitech.service.managers.UserManager this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynUpdateListener val$listener -> b
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFinish() -> onFinish
com.gezitech.service.sqlitedb.GezitechDBHelper -> com.gezitech.service.c.a:
    java.lang.String tableName -> a
    java.lang.Class generic -> b
    java.util.ArrayList tablesInfo -> c
    android.content.Context context -> d
    void initTablesInfo(android.database.sqlite.SQLiteDatabase) -> a
    java.util.ArrayList getTables() -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void dropAllTables() -> b
    boolean createTable(android.database.sqlite.SQLiteDatabase,java.lang.Class) -> a
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String getFieldType(com.gezitech.basic.GezitechEntity$FieldInfoCache) -> a
    boolean setUpdateValue(android.content.ContentValues,java.lang.String,java.lang.reflect.Field,com.gezitech.basic.GezitechEntity) -> a
    boolean insert(com.gezitech.basic.GezitechEntity,com.gezitech.service.managers.DataManager$PersonalField[]) -> a
    java.util.ArrayList query(java.lang.String,int,java.lang.String) -> a
    java.util.ArrayList query(java.lang.String,int,java.lang.String,com.gezitech.basic.GezitechEntity,boolean) -> a
    int update(com.gezitech.basic.GezitechEntity,com.gezitech.service.managers.DataManager$PersonalField[]) -> b
    boolean save(com.gezitech.basic.GezitechEntity,com.gezitech.service.managers.DataManager$PersonalField[]) -> c
    boolean save(com.gezitech.basic.GezitechEntity,boolean,boolean,com.gezitech.service.managers.DataManager$PersonalField[]) -> a
    void delete(java.lang.String) -> a
    com.gezitech.basic.GezitechEntity find(long) -> a
    long getMaxId() -> c
    java.lang.String getDbSpliter(java.lang.Class) -> a
com.gezitech.service.xmpp.Constant -> com.gezitech.service.xmpp.Constant:
    java.lang.String ROSTER_DELETED -> ROSTER_DELETED
    java.lang.String ROSTER_DELETED_KEY -> ROSTER_DELETED_KEY
    java.lang.String ROSTER_UPDATED -> ROSTER_UPDATED
    java.lang.String ROSTER_UPDATED_KEY -> ROSTER_UPDATED_KEY
    java.lang.String ROSTER_ADDED -> ROSTER_ADDED
    java.lang.String ROSTER_ADDED_KEY -> ROSTER_ADDED_KEY
    java.lang.String ROSTER_PRESENCE_CHANGED -> ROSTER_PRESENCE_CHANGED
    java.lang.String ROSTER_PRESENCE_CHANGED_KEY -> ROSTER_PRESENCE_CHANGED_KEY
    java.lang.String ROSTER_SUBSCRIPTION -> ROSTER_SUBSCRIPTION
    java.lang.String ROSTER_SUB_FROM -> ROSTER_SUB_FROM
    java.lang.String NOTICE_ID -> NOTICE_ID
    java.lang.String NEW_MESSAGE_ACTION -> NEW_MESSAGE_ACTION
    java.lang.String UPDATE_MESSAGE_ACTION -> UPDATE_MESSAGE_ACTION
    java.lang.String SEND_UPDATE_MESSAGE_ACTION -> SEND_UPDATE_MESSAGE_ACTION
    java.lang.String UPDATE_CONTACTS_ACTION -> UPDATE_CONTACTS_ACTION
    java.lang.String LIKE_COMMENT_ACTION -> LIKE_COMMENT_ACTION
    java.lang.String UPDATE_CHAT_ACTION -> UPDATE_CHAT_ACTION
    java.lang.String FRIEND_REQUEST_COUNT -> FRIEND_REQUEST_COUNT
    java.lang.String DELETE_FRIEND_REQUEST -> DELETE_FRIEND_REQUEST
    java.lang.String SYSTEM_REQUEST -> SYSTEM_REQUEST
    java.lang.String NEAR_NEW_MSG_HINT -> NEAR_NEW_MSG_HINT
    java.lang.String WE_CHAT_PAY_CALLBACK -> WE_CHAT_PAY_CALLBACK
    java.lang.String MY_NEWS -> MY_NEWS
    java.lang.String MY_NEWS_DATE -> MY_NEWS_DATE
    java.lang.String LOGIN_SET -> LOGIN_SET
    java.lang.String USERNAME -> USERNAME
    java.lang.String PASSWORD -> PASSWORD
    java.lang.String XMPP_HOST -> XMPP_HOST
    java.lang.String XMPP_PORT -> XMPP_PORT
    java.lang.String XMPP_SEIVICE_NAME -> XMPP_SEIVICE_NAME
    java.lang.String IS_AUTOLOGIN -> IS_AUTOLOGIN
    java.lang.String IS_NOVISIBLE -> IS_NOVISIBLE
    java.lang.String IS_REMEMBER -> IS_REMEMBER
    java.lang.String IS_FIRSTSTART -> IS_FIRSTSTART
    int LOGIN_SECCESS -> LOGIN_SECCESS
    int HAS_NEW_VERSION -> HAS_NEW_VERSION
    int IS_NEW_VERSION -> IS_NEW_VERSION
    int LOGIN_ERROR_ACCOUNT_PASS -> LOGIN_ERROR_ACCOUNT_PASS
    int SERVER_UNAVAILABLE -> SERVER_UNAVAILABLE
    int LOGIN_ERROR -> LOGIN_ERROR
    java.lang.String XMPP_CONNECTION_CLOSED -> XMPP_CONNECTION_CLOSED
    java.lang.String LOGIN -> LOGIN
    java.lang.String RELOGIN -> RELOGIN
    java.lang.String ALL_FRIEND -> ALL_FRIEND
    java.lang.String NO_GROUP_FRIEND -> NO_GROUP_FRIEND
    java.lang.String ACTION_SYS_MSG -> ACTION_SYS_MSG
    java.lang.String MSG_TYPE -> MSG_TYPE
    java.lang.String SYS_MSG -> SYS_MSG
    java.lang.String SYS_MSG_DIS -> SYS_MSG_DIS
    java.lang.String ADD_FRIEND_QEQUEST -> ADD_FRIEND_QEQUEST
    int SUCCESS -> SUCCESS
    int FAIL -> FAIL
    int UNKNOWERROR -> UNKNOWERROR
    int NETWORKERROR -> NETWORKERROR
    int containsZz -> containsZz
    java.lang.String currentpage -> currentpage
    java.lang.String pagesize -> pagesize
    java.lang.String add -> add
    java.lang.String rename -> rename
    java.lang.String remove -> remove
    java.lang.String ACTION_RECONNECT_STATE -> ACTION_RECONNECT_STATE
    java.lang.String RECONNECT_STATE -> RECONNECT_STATE
    boolean RECONNECT_STATE_SUCCESS -> RECONNECT_STATE_SUCCESS
    boolean RECONNECT_STATE_FAIL -> RECONNECT_STATE_FAIL
    java.lang.String PREFENCE_USER_STATE -> PREFENCE_USER_STATE
    java.lang.String IS_ONLINE -> IS_ONLINE
    java.lang.String MS_FORMART -> MS_FORMART
    java.lang.String HYH_URL -> HYH_URL
    java.lang.String CHAT_CONTENT -> CHAT_CONTENT
com.gezitech.service.xmpp.IMChatService -> com.gezitech.service.xmpp.IMChatService:
    android.content.Context context -> context
    com.gezitech.entity.User user -> user
    com.gezitech.service.sqlitedb.GezitechDBHelper chatContentDB -> chatContentDB
    com.gezitech.service.sqlitedb.GezitechDBHelper chatDB -> chatDB
    int msgtype -> msgtype
    long hyhid -> hyhid
    android.os.Binder binder -> binder
    com.gezitech.service.sqlitedb.GezitechDBHelper nearHintMsgDB -> nearHintMsgDB
    org.jivesoftware.smack.XMPPConnection conn -> conn
    org.jivesoftware.smack.PacketListener pListener -> pListener
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void initChatManager() -> initChatManager
    void ring() -> ring
    boolean copyAssetsToFilesystem(java.io.InputStream,java.io.OutputStream) -> copyAssetsToFilesystem
    void access$0(int) -> access$0
    void access$1(long) -> access$1
    int access$2() -> access$2
    com.gezitech.service.sqlitedb.GezitechDBHelper access$3(com.gezitech.service.xmpp.IMChatService) -> access$3
    long access$4() -> access$4
    void access$5(com.gezitech.service.xmpp.IMChatService) -> access$5
    android.content.Context access$6(com.gezitech.service.xmpp.IMChatService) -> access$6
    com.gezitech.entity.User access$7() -> access$7
    com.gezitech.service.sqlitedb.GezitechDBHelper access$8() -> access$8
    com.gezitech.service.sqlitedb.GezitechDBHelper access$9() -> access$9
com.gezitech.service.xmpp.IMChatService$1 -> com.gezitech.service.xmpp.IMChatService$1:
    com.gezitech.service.xmpp.IMChatService this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    com.gezitech.service.xmpp.IMChatService access$0(com.gezitech.service.xmpp.IMChatService$1) -> access$0
com.gezitech.service.xmpp.IMChatService$1$1 -> com.gezitech.service.xmpp.IMChatService$1$1:
    com.gezitech.service.xmpp.IMChatService$1 this$1 -> this$1
    long val$uid -> val$uid
    java.lang.String val$body -> val$body
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.gezitech.service.xmpp.IMChatService$LocalBinder -> com.gezitech.service.xmpp.IMChatService$LocalBinder:
    com.gezitech.service.xmpp.IMChatService this$0 -> this$0
    com.gezitech.service.xmpp.IMChatService getService() -> getService
com.gezitech.service.xmpp.LoginTask -> com.gezitech.service.xmpp.LoginTask:
    android.app.ProgressDialog pd -> pd
    android.content.Context context -> context
    com.gezitech.entity.User user -> user
    void onPreExecute() -> onPreExecute
    java.lang.Integer doInBackground(java.lang.String[]) -> doInBackground
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    void onPostExecute(java.lang.Integer) -> onPostExecute
    java.lang.Integer login() -> login
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.gezitech.service.xmpp.MessageSend -> com.gezitech.service.xmpp.MessageSend:
com.gezitech.service.xmpp.XmppConnectionManager -> com.gezitech.service.xmpp.XmppConnectionManager:
    org.jivesoftware.smack.XMPPConnection connection -> connection
    org.jivesoftware.smack.ConnectionConfiguration connectionConfig -> connectionConfig
    com.gezitech.service.xmpp.XmppConnectionManager xmppConnectionManager -> xmppConnectionManager
    com.gezitech.service.xmpp.XmppConnectionManager getInstance() -> getInstance
    org.jivesoftware.smack.XMPPConnection init() -> init
    void login() -> login
    org.jivesoftware.smack.XMPPConnection getConnection() -> getConnection
    void disconnect() -> disconnect
    void configure(org.jivesoftware.smack.provider.ProviderManager) -> configure
com.gezitech.ui.CommonDialog -> com.gezitech.ui.CommonDialog:
    com.gezitech.ui.CommonDialog$DialogInfo dc -> a
    android.widget.RelativeLayout llContent -> b
    android.widget.TextView txtTitle -> c
    android.widget.TextView txtContent -> d
    android.widget.Button btn1 -> e
    android.widget.Button btn2 -> f
    android.widget.Button btn3 -> g
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onClick(android.view.View) -> onClick
    com.gezitech.ui.CommonDialog$DialogInfo getDialogInfo() -> b
com.gezitech.ui.CommonDialog$DialogInfo -> com.gezitech.ui.a:
    java.lang.String title -> a
    java.lang.String button1Text -> b
    java.lang.String button2Text -> c
    java.lang.String button3Text -> d
    java.lang.String contentText -> e
    com.gezitech.ui.CommonDialog$onCreateContent onCreate -> f
    com.gezitech.ui.CommonDialog$onButtonClick onClick -> g
com.gezitech.ui.CommonDialog$onButtonClick -> com.gezitech.ui.b:
    void onClick(int,android.view.View,android.app.Activity) -> a
com.gezitech.ui.CommonDialog$onCreateContent -> com.gezitech.ui.c:
    void onCreate(android.widget.RelativeLayout) -> a
com.gezitech.util.CalendarUtil -> com.gezitech.e.a:
    int getCalendarString(int) -> a
    int getCalendarString(int,long) -> a
com.gezitech.util.ClickSpanUtil -> com.gezitech.e.b:
    com.hyh.www.adapter.NearbyAdapter$OnTextViewClickListener mListener -> a
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.gezitech.util.DateUtil -> com.gezitech.e.c:
    java.lang.String getShortTime(long) -> a
    java.lang.String getShortTime(java.util.Date) -> a
com.gezitech.util.DateUtils -> com.gezitech.e.d:
    java.text.DateFormat yearFormat -> a
    java.text.DateFormat monthFormat -> b
    java.text.DateFormat dayFormat -> c
    java.text.DateFormat todayFormat -> d
    java.text.DateFormat yesterdayFormat -> e
    java.text.DateFormat yesterdayBeforFormat -> f
    java.text.DateFormat tomorrowFormat -> g
    java.text.DateFormat afterTomorrowFormat -> h
    java.lang.String getStringToday() -> a
    long getTimeStamp(java.lang.String,java.lang.String) -> a
com.gezitech.util.DimensionUtility -> com.gezitech.e.e:
    int dip2px(android.content.Context,float) -> a
com.gezitech.util.IOUtil -> com.gezitech.e.f:
    java.lang.String IMAGEPATH -> a
    java.lang.String FILEPATH -> b
    java.lang.String UPDATEPATH -> c
    java.lang.String DBFILEPATH -> d
    java.lang.String EMOTIONPATH -> e
    java.lang.String appInnerCacheDir -> f
    java.lang.String fileCachePath -> g
    java.lang.String fileCacheDirectory -> h
    java.lang.String fileCacheFileName -> i
    void init() -> a
    java.lang.String generateRandomFilename() -> b
    android.graphics.Bitmap getLocalImage(java.lang.String) -> a
    int computeSampleSize(android.graphics.BitmapFactory$Options,int,int) -> a
    int computeInitialSampleSize(android.graphics.BitmapFactory$Options,int,int) -> b
    java.io.File makeLocalImage(android.graphics.Bitmap,java.lang.String) -> a
    void downloadAndCacheFile(java.lang.String,boolean,com.gezitech.util.IOUtil$CacheCompleteListener) -> a
    void downloadAndCacheFile(java.lang.String,boolean,java.lang.Object,com.gezitech.util.IOUtil$CacheCompleteListener) -> a
    java.lang.String getCacheFilePath() -> c
    void writeFile(java.io.InputStream,java.lang.String,java.lang.String,int) -> a
    boolean fileExists(java.lang.String) -> b
    boolean hasSDCard() -> d
com.gezitech.util.IOUtil$1 -> com.gezitech.e.g:
    com.gezitech.util.IOUtil$CacheCompleteListener val$listener -> a
    void handleMessage(android.os.Message) -> handleMessage
com.gezitech.util.IOUtil$2 -> com.gezitech.e.h:
    java.lang.String val$url -> a
    java.lang.String val$path -> b
    java.lang.String val$fname -> c
    java.lang.Object val$tag -> d
    android.os.Handler val$handler -> e
    void run() -> run
com.gezitech.util.IOUtil$CacheCompleteListener -> com.gezitech.e.i:
    void onCacheComplete(java.lang.String,boolean,java.lang.String,java.lang.Object) -> a
com.gezitech.util.ImageDownloader -> com.gezitech.e.j:
    com.gezitech.util.ImageDownloader$Mode mode -> a
    android.graphics.drawable.Drawable defaultDrawable -> b
    android.graphics.Bitmap _bitmap -> c
    java.lang.String cacheDirPath -> d
    java.util.HashMap sHardBitmapCache -> e
    java.util.concurrent.ConcurrentHashMap sSoftBitmapCache -> f
    android.os.Handler purgeHandler -> g
    java.lang.Runnable purger -> h
    int[] $SWITCH_TABLE$com$gezitech$util$ImageDownloader$Mode -> i
    void download(java.lang.String,boolean,android.widget.ImageView) -> a
    void forceDownload(java.lang.String,android.widget.ImageView) -> a
    boolean cancelPotentialDownload(java.lang.String,android.widget.ImageView) -> b
    com.gezitech.util.ImageDownloader$BitmapDownloaderTask getBitmapDownloaderTask(android.widget.ImageView) -> b
    android.graphics.Bitmap downloadBitmap(java.lang.String) -> a
    void setMode(com.gezitech.util.ImageDownloader$Mode) -> a
    void addBitmapToMemoryCache(java.lang.String,android.graphics.Bitmap) -> a
    void addBitmapToSDCardCache(java.lang.String,android.graphics.Bitmap) -> b
    android.graphics.Bitmap findBitmapToSDCardCache(java.lang.String) -> c
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> d
    void clearCache() -> a
    void resetPurgeTimer() -> d
    java.lang.String toHexString(byte[]) -> a
    java.lang.String encoderByMd5(java.lang.String) -> e
    java.util.concurrent.ConcurrentHashMap access$0() -> b
    java.lang.String access$1(java.lang.String) -> b
    android.graphics.Bitmap access$2(com.gezitech.util.ImageDownloader,java.lang.String) -> a
    void access$3(com.gezitech.util.ImageDownloader,java.lang.String,android.graphics.Bitmap) -> a
    void access$4(com.gezitech.util.ImageDownloader,java.lang.String,android.graphics.Bitmap) -> b
    com.gezitech.util.ImageDownloader$BitmapDownloaderTask access$5(android.widget.ImageView) -> a
    com.gezitech.util.ImageDownloader$Mode access$6(com.gezitech.util.ImageDownloader) -> a
    android.graphics.Bitmap access$7(com.gezitech.util.ImageDownloader) -> b
    int[] $SWITCH_TABLE$com$gezitech$util$ImageDownloader$Mode() -> c
com.gezitech.util.ImageDownloader$1 -> com.gezitech.e.k:
    com.gezitech.util.ImageDownloader this$0 -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.gezitech.util.ImageDownloader$2 -> com.gezitech.e.l:
    com.gezitech.util.ImageDownloader this$0 -> a
    void run() -> run
com.gezitech.util.ImageDownloader$BitmapDownloaderTask -> com.gezitech.e.m:
    java.lang.String url -> b
    java.lang.ref.WeakReference imageViewReference -> c
    com.gezitech.util.ImageDownloader this$0 -> a
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.lang.String access$2(com.gezitech.util.ImageDownloader$BitmapDownloaderTask) -> a
com.gezitech.util.ImageDownloader$DownloadedDrawable -> com.gezitech.e.n:
    java.lang.ref.WeakReference bitmapDownloaderTaskReference -> a
    com.gezitech.util.ImageDownloader$BitmapDownloaderTask getBitmapDownloaderTask() -> a
com.gezitech.util.ImageDownloader$FlushedInputStream -> com.gezitech.e.o:
    long skip(long) -> skip
com.gezitech.util.ImageDownloader$Mode -> com.gezitech.e.p:
    com.gezitech.util.ImageDownloader$Mode NO_ASYNC_TASK -> a
    com.gezitech.util.ImageDownloader$Mode NO_DOWNLOADED_DRAWABLE -> b
    com.gezitech.util.ImageDownloader$Mode CORRECT -> c
    com.gezitech.util.ImageDownloader$Mode[] ENUM$VALUES -> d
    com.gezitech.util.ImageDownloader$Mode[] values() -> values
    com.gezitech.util.ImageDownloader$Mode valueOf(java.lang.String) -> valueOf
com.gezitech.util.ImageUtil -> com.gezitech.e.q:
    int reckonThumbnail(int,int,int,int) -> a
    android.graphics.Bitmap PicZoom(android.graphics.Bitmap,int,int) -> a
    android.graphics.Bitmap PicZoom2(byte[],int,int) -> a
com.gezitech.util.NetUtil -> com.gezitech.e.r:
    boolean isNetworkAvailable() -> a
    boolean isGpsEnabled(android.content.Context) -> a
com.gezitech.util.SoundMeter -> com.gezitech.e.s:
    android.media.MediaRecorder mRecorder -> a
    double mEMA -> b
    void start(java.lang.String,java.lang.String) -> a
    void stop() -> a
    double getAmplitude() -> b
com.gezitech.util.StringUtil -> com.gezitech.e.t:
    boolean isEmpty(java.lang.String) -> a
    java.lang.String curString(java.lang.String,int) -> a
    java.lang.String subString(java.lang.String,int) -> b
    int trimGBK(byte[],int) -> a
    java.lang.String stringArrayJoin(java.lang.String[],java.lang.String) -> a
    java.lang.String MD5(java.lang.String) -> b
    java.lang.String stringDecode(java.lang.String) -> c
com.gezitech.util.ThreadUtil -> com.gezitech.e.u:
    android.os.Message createMessage(int,int,java.lang.Object) -> a
com.gezitech.util.ToastMakeText -> com.gezitech.e.v:
    android.app.Activity InsThis -> a
    android.os.Handler toastHandler -> b
    void Toast(java.lang.CharSequence,int) -> a
    void Toast(java.lang.CharSequence) -> a
com.gezitech.util.ToastMakeText$1 -> com.gezitech.e.w:
    com.gezitech.util.ToastMakeText this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.gezitech.util.ToastMakeText access$0(com.gezitech.util.ToastMakeText$1) -> a
com.gezitech.util.ToastMakeText$1$1 -> com.gezitech.e.x:
    com.gezitech.util.ToastMakeText$1 this$1 -> a
    com.hyh.www.widget.YMDialog2 val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.gezitech.util.VibratorUtil -> com.gezitech.e.y:
    android.content.Context context -> a
com.gezitech.widget.ExtendViewFlipper -> com.gezitech.widget.ExtendViewFlipper:
    android.content.Context context -> a
    com.gezitech.widget.ExtendViewFlipper _this -> b
    android.view.animation.Animation leftInAnimation -> c
    android.view.animation.Animation leftOutAnimation -> d
    android.view.animation.Animation rightInAnimation -> e
    android.view.animation.Animation rightOutAnimation -> f
    float mLastMotionX -> g
    int deltalX -> h
    com.gezitech.widget.ExtendViewFlipper$OnViewFlipperFackFunction onViewFlipperFackFunction -> i
    void init(android.content.Context) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnViewFlipperFackFunction(com.gezitech.widget.ExtendViewFlipper$OnViewFlipperFackFunction) -> setOnViewFlipperFackFunction
com.gezitech.widget.ExtendViewFlipper$OnViewFlipperFackFunction -> com.gezitech.widget.a:
    void selectStyle(boolean) -> a
    void countDownTimerAction(boolean) -> b
com.gezitech.widget.FlowLayout -> com.gezitech.widget.FlowLayout:
    int line_height -> d
    int DEFAULT_HORIZONTAL_SPACING -> a
    int DEFAULT_VERTICAL_SPACING -> b
    boolean $assertionsDisabled -> c
    void setSpacing(int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
com.gezitech.widget.ListViewNoScroll -> com.gezitech.widget.ListViewNoScroll:
    void onMeasure(int,int) -> onMeasure
com.gezitech.widget.LoadingCircleView -> com.gezitech.widget.LoadingCircleView:
    android.graphics.Paint paint -> a
    android.content.Context context -> b
    android.content.res.Resources res -> c
    float progress -> d
    float progresslen -> e
    int ringWidth -> f
    int ringColor -> g
    int progressColor -> h
    int textColor -> i
    int textSize -> j
    java.lang.String textProgress -> k
    void setRingColor(int) -> setRingColor
    void setProgressColor(int) -> setProgressColor
    void setTextColor(int) -> setTextColor
    void setTextSize(int) -> setTextSize
    void setRingWidthDip(int) -> setRingWidthDip
    void onDraw(android.graphics.Canvas) -> onDraw
    int dip2px(android.content.Context,float) -> a
com.gezitech.widget.MoreOptionDialog -> com.gezitech.widget.b:
    com.gezitech.widget.MoreOptionDialog _this -> a
    android.content.Context context -> b
    java.util.ArrayList list -> c
    android.widget.TextView mTVTitle -> d
    android.widget.ListView mListView -> e
    com.hyh.www.entity.Companytype selectedList -> f
    com.gezitech.widget.MoreOptionDialog$DialogSelectDataCallBack dialogSelectDataCallBack -> g
    com.gezitech.adapter.MoreOptionAdapter hobbyAdapter -> h
    android.widget.ListView mlist_child -> i
    void _init(android.content.Context,java.util.ArrayList,java.lang.String,com.hyh.www.entity.Companytype) -> a
    void showChildAdapter(com.hyh.www.entity.Companytype) -> a
    void onButtonCancel() -> a
    void onButtonOK() -> b
    void setOnOKButtonListener(com.gezitech.widget.MoreOptionDialog$DialogSelectDataCallBack) -> a
    android.widget.ListView access$0(com.gezitech.widget.MoreOptionDialog) -> a
    com.gezitech.widget.MoreOptionDialog access$1(com.gezitech.widget.MoreOptionDialog) -> b
    void access$2(com.gezitech.widget.MoreOptionDialog,com.hyh.www.entity.Companytype) -> a
    void access$3(com.gezitech.widget.MoreOptionDialog) -> c
    void access$4(com.gezitech.widget.MoreOptionDialog) -> d
com.gezitech.widget.MoreOptionDialog$1 -> com.gezitech.widget.c:
    com.gezitech.widget.MoreOptionDialog this$0 -> a
    void onDataPerss(com.hyh.www.entity.Companytype) -> a
com.gezitech.widget.MoreOptionDialog$2 -> com.gezitech.widget.d:
    com.gezitech.widget.MoreOptionDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.gezitech.widget.MoreOptionDialog$3 -> com.gezitech.widget.e:
    com.gezitech.widget.MoreOptionDialog this$0 -> a
    void onDataPerss(com.hyh.www.entity.Companytype) -> a
com.gezitech.widget.MoreOptionDialog$DialogSelectDataCallBack -> com.gezitech.widget.f:
    void onDataCallBack(com.gezitech.contract.GezitechEntity_I) -> a
com.gezitech.widget.MyListView -> com.gezitech.widget.MyListView:
    android.view.LayoutInflater inflater -> a
    android.widget.LinearLayout headView -> b
    android.widget.TextView tipsTextview -> c
    android.widget.TextView lastUpdatedTextView -> d
    android.widget.ImageView arrowImageView -> e
    android.widget.ProgressBar progressBar -> f
    android.view.animation.RotateAnimation animation -> g
    android.view.animation.RotateAnimation reverseAnimation -> h
    boolean isRecored -> i
    int headContentHeight -> j
    int startY -> k
    int firstItemIndex -> l
    int state -> m
    boolean isBack -> n
    com.gezitech.widget.MyListView$OnRefreshListener refreshListener -> o
    boolean isRefreshable -> p
    android.widget.LinearLayout footerView -> q
    com.gezitech.widget.MyListView$OnMoreListener moreListener -> r
    android.widget.TextView load_more_text -> s
    android.widget.ProgressBar footer_progressBar -> t
    android.widget.LinearLayout ll_footer_box -> u
    void init(android.content.Context) -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void changeHeaderViewByState() -> d
    void setonRefreshListener(com.gezitech.widget.MyListView$OnRefreshListener) -> setonRefreshListener
    void onRefreshComplete() -> a
    void onClickRefreshComplete() -> b
    void onRefresh() -> e
    void measureView(android.view.View) -> a
    void OnMore(int,int,int,int) -> a
    void OnMore() -> c
    void setOnMoreListener(com.gezitech.widget.MyListView$OnMoreListener) -> setOnMoreListener
    void footerShowState(int) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
com.gezitech.widget.MyListView$1 -> com.gezitech.widget.g:
    com.gezitech.widget.MyListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.gezitech.widget.MyListView$OnMoreListener -> com.gezitech.widget.h:
    void OnMore(int,int,int,int) -> a
    void OnMore() -> a
com.gezitech.widget.MyListView$OnRefreshListener -> com.gezitech.widget.i:
    void onRefresh() -> a
com.gezitech.widget.OptionDialog -> com.gezitech.widget.j:
    com.gezitech.widget.OptionDialog _this -> a
    android.content.Context context -> b
    java.util.ArrayList list -> c
    android.widget.TextView mTVTitle -> d
    android.widget.Button mButtonOK -> e
    android.widget.Button mButtonCancel -> f
    com.gezitech.widget.ListViewNoScroll mListView -> g
    java.util.HashMap selectedList -> h
    com.gezitech.widget.OptionDialog$DialogSelectDataCallBack dialogSelectDataCallBack -> i
    com.gezitech.adapter.OptionAdapter hobbyAdapter -> j
    android.widget.LinearLayout hobby_bottom -> k
    com.gezitech.widget.OptionDialog$ItemType companytype -> l
    int exception -> m
    android.widget.LinearLayout hobby_bottom_cannel -> n
    void _init(android.content.Context,java.util.ArrayList,java.lang.String,java.util.HashMap,boolean) -> a
    void onClick(android.view.View) -> onClick
    void onButtonCancel() -> a
    void onButtonOK() -> b
    void setOnOKButtonListener(com.gezitech.widget.OptionDialog$DialogSelectDataCallBack) -> a
    void access$0(com.gezitech.widget.OptionDialog) -> a
    com.gezitech.widget.OptionDialog access$1(com.gezitech.widget.OptionDialog) -> b
    java.util.HashMap access$2(com.gezitech.widget.OptionDialog) -> c
    com.gezitech.widget.OptionDialog$ItemType access$3(com.gezitech.widget.OptionDialog) -> d
    int access$4(com.gezitech.widget.OptionDialog) -> e
    void access$5(com.gezitech.widget.OptionDialog) -> f
    com.gezitech.adapter.OptionAdapter access$6(com.gezitech.widget.OptionDialog) -> g
com.gezitech.widget.OptionDialog$1 -> com.gezitech.widget.k:
    com.gezitech.widget.OptionDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.gezitech.widget.OptionDialog$2 -> com.gezitech.widget.l:
    com.gezitech.widget.OptionDialog this$0 -> a
    boolean val$isRadio -> b
    void onDataPerss(com.gezitech.contract.GezitechEntity_I) -> a
com.gezitech.widget.OptionDialog$3 -> com.gezitech.widget.m:
    com.gezitech.widget.OptionDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.gezitech.widget.OptionDialog$DialogSelectDataCallBack -> com.gezitech.widget.n:
    void onDataCallBack(java.util.HashMap) -> a
com.gezitech.widget.OptionDialog$ItemType -> com.gezitech.widget.o:
    com.gezitech.widget.OptionDialog$ItemType Companytype -> a
    com.gezitech.widget.OptionDialog$ItemType Banktype -> b
    com.gezitech.widget.OptionDialog$ItemType Releasescope -> c
    com.gezitech.widget.OptionDialog$ItemType Validtimelist -> d
    com.gezitech.widget.OptionDialog$ItemType City -> e
    com.gezitech.widget.OptionDialog$ItemType Country -> f
    com.gezitech.widget.OptionDialog$ItemType PubRange -> g
    com.gezitech.widget.OptionDialog$ItemType[] ENUM$VALUES -> h
    com.gezitech.widget.OptionDialog$ItemType[] values() -> values
    com.gezitech.widget.OptionDialog$ItemType valueOf(java.lang.String) -> valueOf
com.gezitech.widget.RemoteImageView -> com.gezitech.widget.RemoteImageView:
    int MAX_FAILURES -> a
    android.content.Context mContext -> b
    void setImageUrl(java.lang.String) -> setImageUrl
    void setImageUrl(java.lang.String,boolean) -> a
    void setImageUrl(java.lang.String,boolean,boolean) -> a
    void setImageUrl(java.lang.String,boolean,boolean,com.gezitech.widget.RemoteImageView$setBitmapListener) -> a
com.gezitech.widget.RemoteImageView$1 -> com.gezitech.widget.p:
    com.gezitech.widget.RemoteImageView this$0 -> a
    boolean val$isBack -> b
    com.gezitech.widget.RemoteImageView$setBitmapListener val$bitmapListener -> c
    void handleMessage(android.os.Message) -> handleMessage
com.gezitech.widget.RemoteImageView$2 -> com.gezitech.widget.q:
    com.gezitech.widget.RemoteImageView this$0 -> a
    android.os.Handler val$setImageHandler -> b
    void onCacheComplete(java.lang.String,boolean,java.lang.String,java.lang.Object) -> a
com.gezitech.widget.RemoteImageView$setBitmapListener -> com.gezitech.widget.r:
    void bitmap(android.graphics.Bitmap) -> a
com.gezitech.widget.SelectPicPopupWindow -> com.gezitech.widget.SelectPicPopupWindow:
    android.widget.Button btn_take_photo -> a
    android.widget.Button btn_pick_photo -> b
    android.widget.Button btn_cancel -> c
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onClick(android.view.View) -> onClick
    void returnData(java.lang.String) -> a
    void onBackPressed() -> onBackPressed
com.gezitech.widget.listgroup.PinnedHeaderListView -> com.gezitech.widget.listgroup.PinnedHeaderListView:
    com.gezitech.widget.listgroup.PinnedHeaderListView$PinnedHeaderAdapter mAdapter -> a
    android.view.View mHeaderView -> b
    boolean mHeaderViewVisible -> c
    int mHeaderViewWidth -> d
    int mHeaderViewHeight -> e
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setPinnedHeaderView(android.view.View) -> setPinnedHeaderView
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void configureHeaderView(int) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
com.gezitech.widget.listgroup.PinnedHeaderListView$PinnedHeaderAdapter -> com.gezitech.widget.listgroup.a:
    int getPinnedHeaderState(int) -> a
    void configurePinnedHeader(android.view.View,int,int) -> a
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.DefaultDateTypeAdapter:
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    com.google.gson.JsonElement serialize(java.util.Date,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.util.Date deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> deserializeToDate
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> access$000
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    com.google.gson.Gson this$0 -> this$0
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Double read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Float read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.Gson this$0 -> this$0
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$FutureTypeAdapter:
    com.google.gson.TypeAdapter delegate -> delegate
    void setDelegate(com.google.gson.TypeAdapter) -> setDelegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    com.google.gson.JsonArray deepCopy() -> deepCopy
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    com.google.gson.JsonElement deepCopy() -> deepCopy
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    com.google.gson.JsonNull deepCopy() -> deepCopy
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> members
    com.google.gson.JsonObject deepCopy() -> deepCopy
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
    com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.Gson gson -> gson
    com.google.gson.reflect.TypeToken typeToken -> typeToken
    com.google.gson.TypeAdapterFactory skipPast -> skipPast
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.google.gson.TreeTypeAdapter$1 -> com.google.gson.TreeTypeAdapter$1:
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.TreeTypeAdapter$SingleTypeFactory:
    com.google.gson.reflect.TypeToken exactType -> exactType
    boolean matchRawType -> matchRawType
    java.lang.Class hierarchyType -> hierarchyType
    com.google.gson.JsonSerializer serializer -> serializer
    com.google.gson.JsonDeserializer deserializer -> deserializer
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> val$typeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$10:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$11:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> unsafeAllocator
    java.lang.Class val$rawType -> val$rawType
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$2:
    com.google.gson.InstanceCreator val$rawTypeCreator -> val$rawTypeCreator
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$3:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$4:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$5:
    java.lang.reflect.Type val$type -> val$type
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$6:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$7:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$8:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$9:
    com.google.gson.internal.ConstructorConstructor this$0 -> this$0
    java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> delegate
    boolean val$skipDeserialize -> val$skipDeserialize
    boolean val$skipSerialize -> val$skipSerialize
    com.google.gson.Gson val$gson -> val$gson
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.internal.Excluder this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> delegate
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    java.util.Comparator comparator -> comparator
    com.google.gson.internal.LinkedTreeMap$Node root -> root
    int size -> size
    int modCount -> modCount
    com.google.gson.internal.LinkedTreeMap$Node header -> header
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> entrySet
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> keySet
    boolean $assertionsDisabled -> $assertionsDisabled
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> find
    com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> findByObject
    com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> findByEntry
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> removeInternal
    com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> removeInternalByKey
    void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> replaceInParent
    void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> rebalance
    void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> rotateLeft
    void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> rotateRight
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.lang.Object writeReplace() -> writeReplace
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$EntrySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$EntrySet$1:
    com.google.gson.internal.LinkedTreeMap$EntrySet this$1 -> this$1
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$KeySet:
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$KeySet$1:
    com.google.gson.internal.LinkedTreeMap$KeySet this$1 -> this$1
    java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator:
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> lastReturned
    int expectedModCount -> expectedModCount
    com.google.gson.internal.LinkedTreeMap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.gson.internal.LinkedTreeMap$Node nextNode() -> nextNode
    void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$Node:
    com.google.gson.internal.LinkedTreeMap$Node parent -> parent
    com.google.gson.internal.LinkedTreeMap$Node left -> left
    com.google.gson.internal.LinkedTreeMap$Node right -> right
    com.google.gson.internal.LinkedTreeMap$Node next -> next
    com.google.gson.internal.LinkedTreeMap$Node prev -> prev
    java.lang.Object key -> key
    java.lang.Object value -> value
    int height -> height
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.gson.internal.LinkedTreeMap$Node first() -> first
    com.google.gson.internal.LinkedTreeMap$Node last() -> last
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$1 -> com.google.gson.internal.Streams$1:
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$AppendableWriter:
    java.lang.Appendable appendable -> appendable
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> currentWrite
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$AppendableWriter$CurrentWrite:
    char[] chars -> chars
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> val$allocateInstance
    java.lang.Object val$unsafe -> val$unsafe
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> val$newInstance
    int val$constructorId -> val$constructorId
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter elementTypeAdapter -> elementTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Collection read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.google.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    com.google.gson.JsonElement get() -> get
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:
    com.google.gson.TypeAdapter keyTypeAdapter -> keyTypeAdapter
    com.google.gson.TypeAdapter valueTypeAdapter -> valueTypeAdapter
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> this$0
    java.util.Map read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Map) -> write
    java.lang.String keyToString(com.google.gson.JsonElement) -> keyToString
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    com.google.gson.TypeAdapter typeAdapter -> typeAdapter
    com.google.gson.Gson val$context -> val$context
    com.google.gson.reflect.TypeToken val$fieldType -> val$fieldType
    java.lang.reflect.Field val$field -> val$field
    boolean val$isPrimitive -> val$isPrimitive
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField:
    java.lang.String name -> name
    boolean serialized -> serialized
    boolean deserialized -> deserialized
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> read
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.SqlDateTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.TimeTypeAdapter$1:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:
    com.google.gson.Gson context -> context
    com.google.gson.TypeAdapter delegate -> delegate
    java.lang.reflect.Type type -> type
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> getRuntimeTypeIfMoreSpecific
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    void write(com.google.gson.stream.JsonWriter,java.lang.Class) -> write
    java.lang.Class read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$10:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$11:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$12:
    java.lang.Character read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Character) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$13:
    java.lang.String read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.String) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$14:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$15:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$16:
    java.lang.StringBuilder read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$17:
    java.lang.StringBuffer read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$18:
    java.net.URL read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URL) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$19:
    java.net.URI read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.URI) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$2:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.BitSet) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$20:
    java.net.InetAddress read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.net.InetAddress) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$21:
    java.util.UUID read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.UUID) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$22:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$22$1 -> com.google.gson.internal.bind.TypeAdapters$22$1:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> val$dateTypeAdapter
    com.google.gson.internal.bind.TypeAdapters$22 this$0 -> this$0
    java.sql.Timestamp read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$23:
    java.lang.String YEAR -> YEAR
    java.lang.String MONTH -> MONTH
    java.lang.String DAY_OF_MONTH -> DAY_OF_MONTH
    java.lang.String HOUR_OF_DAY -> HOUR_OF_DAY
    java.lang.String MINUTE -> MINUTE
    java.lang.String SECOND -> SECOND
    java.util.Calendar read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Calendar) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$24:
    java.util.Locale read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.util.Locale) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$25:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$26:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$27:
    com.google.gson.reflect.TypeToken val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$type -> val$type
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$29:
    java.lang.Class val$unboxed -> val$unboxed
    java.lang.Class val$boxed -> val$boxed
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$3:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$30:
    java.lang.Class val$base -> val$base
    java.lang.Class val$sub -> val$sub
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$31:
    java.lang.Class val$clazz -> val$clazz
    com.google.gson.TypeAdapter val$typeAdapter -> val$typeAdapter
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$32:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$4:
    java.lang.Boolean read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Boolean) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$5:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$6:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$7:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$8:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$9:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter:
    java.util.Map nameToConstant -> nameToConstant
    java.util.Map constantToName -> constantToName
    java.lang.Enum read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Enum) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    long MIN_INCOMPLETE_INTEGER -> MIN_INCOMPLETE_INTEGER
    int PEEKED_NONE -> PEEKED_NONE
    int PEEKED_BEGIN_OBJECT -> PEEKED_BEGIN_OBJECT
    int PEEKED_END_OBJECT -> PEEKED_END_OBJECT
    int PEEKED_BEGIN_ARRAY -> PEEKED_BEGIN_ARRAY
    int PEEKED_END_ARRAY -> PEEKED_END_ARRAY
    int PEEKED_TRUE -> PEEKED_TRUE
    int PEEKED_FALSE -> PEEKED_FALSE
    int PEEKED_NULL -> PEEKED_NULL
    int PEEKED_SINGLE_QUOTED -> PEEKED_SINGLE_QUOTED
    int PEEKED_DOUBLE_QUOTED -> PEEKED_DOUBLE_QUOTED
    int PEEKED_UNQUOTED -> PEEKED_UNQUOTED
    int PEEKED_BUFFERED -> PEEKED_BUFFERED
    int PEEKED_SINGLE_QUOTED_NAME -> PEEKED_SINGLE_QUOTED_NAME
    int PEEKED_DOUBLE_QUOTED_NAME -> PEEKED_DOUBLE_QUOTED_NAME
    int PEEKED_UNQUOTED_NAME -> PEEKED_UNQUOTED_NAME
    int PEEKED_LONG -> PEEKED_LONG
    int PEEKED_NUMBER -> PEEKED_NUMBER
    int PEEKED_EOF -> PEEKED_EOF
    int NUMBER_CHAR_NONE -> NUMBER_CHAR_NONE
    int NUMBER_CHAR_SIGN -> NUMBER_CHAR_SIGN
    int NUMBER_CHAR_DIGIT -> NUMBER_CHAR_DIGIT
    int NUMBER_CHAR_DECIMAL -> NUMBER_CHAR_DECIMAL
    int NUMBER_CHAR_FRACTION_DIGIT -> NUMBER_CHAR_FRACTION_DIGIT
    int NUMBER_CHAR_EXP_E -> NUMBER_CHAR_EXP_E
    int NUMBER_CHAR_EXP_SIGN -> NUMBER_CHAR_EXP_SIGN
    int NUMBER_CHAR_EXP_DIGIT -> NUMBER_CHAR_EXP_DIGIT
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int lineNumber -> lineNumber
    int lineStart -> lineStart
    int peeked -> peeked
    long peekedLong -> peekedLong
    int peekedNumberLength -> peekedNumberLength
    java.lang.String peekedString -> peekedString
    int[] stack -> stack
    int stackSize -> stackSize
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    int doPeek() -> doPeek
    int peekKeyword() -> peekKeyword
    int peekNumber() -> peekNumber
    boolean isLiteral(char) -> isLiteral
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    java.lang.String nextQuotedValue(char) -> nextQuotedValue
    java.lang.String nextUnquotedValue() -> nextUnquotedValue
    void skipQuotedValue(char) -> skipQuotedValue
    void skipUnquotedValue() -> skipUnquotedValue
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(int) -> push
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> readEscapeCharacter
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    int access$000(com.google.gson.stream.JsonReader) -> access$000
    int access$100(com.google.gson.stream.JsonReader) -> access$100
    int access$002(com.google.gson.stream.JsonReader,int) -> access$002
    int access$200(com.google.gson.stream.JsonReader) -> access$200
    int access$300(com.google.gson.stream.JsonReader) -> access$300
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonScope -> com.google.gson.stream.JsonScope:
    int EMPTY_ARRAY -> EMPTY_ARRAY
    int NONEMPTY_ARRAY -> NONEMPTY_ARRAY
    int EMPTY_OBJECT -> EMPTY_OBJECT
    int DANGLING_NAME -> DANGLING_NAME
    int NONEMPTY_OBJECT -> NONEMPTY_OBJECT
    int EMPTY_DOCUMENT -> EMPTY_DOCUMENT
    int NONEMPTY_DOCUMENT -> NONEMPTY_DOCUMENT
    int CLOSED -> CLOSED
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.lang.String[] REPLACEMENT_CHARS -> REPLACEMENT_CHARS
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> HTML_SAFE_REPLACEMENT_CHARS
    java.io.Writer out -> out
    int[] stack -> stack
    int stackSize -> stackSize
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(int,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(int,int,java.lang.String) -> close
    void push(int) -> push
    int peek() -> peek
    void replaceTop(int) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.hyh.www.BaseFragment -> com.hyh.www.BaseFragment:
    com.hyh.www.ZhuyeActivity fc -> a
    android.support.v4.app.FragmentActivity activity -> b
    com.gezitech.entity.User user -> c
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
    void Toast(java.lang.String) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void gpsAction(android.widget.TextView) -> a
com.hyh.www.BaseFragment$1 -> com.hyh.www.a:
    com.hyh.www.BaseFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.BecomeShangjiaActivity -> com.hyh.www.BecomeShangjiaActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
com.hyh.www.ForgetActivity -> com.hyh.www.ForgetActivity:
    com.hyh.www.ForgetActivity _this -> a
    android.widget.Button registered -> b
    com.gezitech.widget.ExtendViewFlipper pager_slide -> c
    android.widget.LinearLayout pager_control -> d
    com.gezitech.entity.PageList advList -> e
    android.widget.ImageView[] contorls -> f
    android.view.animation.Animation in -> g
    android.view.animation.Animation out -> h
    android.widget.Button bt_my_post -> i
    android.widget.Button bt_send_verification_code -> j
    android.widget.EditText ed_verification_code -> k
    android.widget.EditText ed_phonenumber -> l
    android.widget.EditText ed_enter_password -> m
    android.widget.EditText ed_input_again -> n
    android.widget.Button bt_home_msg -> o
    android.os.Handler mHandler -> p
    java.lang.Runnable countdown -> q
    java.lang.Runnable advtime -> r
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    void _initAdv() -> b
    void advData() -> c
    void _viewFlipper() -> d
    void setectStyle(boolean) -> a
    void onDestroy() -> onDestroy
    android.os.Handler access$0(com.hyh.www.ForgetActivity) -> a
    java.lang.Runnable access$1(com.hyh.www.ForgetActivity) -> b
    android.widget.Button access$2(com.hyh.www.ForgetActivity) -> c
    com.hyh.www.ForgetActivity access$3(com.hyh.www.ForgetActivity) -> d
    com.gezitech.widget.ExtendViewFlipper access$4(com.hyh.www.ForgetActivity) -> e
    android.view.animation.Animation access$5(com.hyh.www.ForgetActivity) -> f
    android.view.animation.Animation access$6(com.hyh.www.ForgetActivity) -> g
    java.lang.Runnable access$7(com.hyh.www.ForgetActivity) -> h
    android.widget.EditText access$8(com.hyh.www.ForgetActivity) -> i
    com.gezitech.entity.PageList access$9(com.hyh.www.ForgetActivity) -> j
    void access$10(com.hyh.www.ForgetActivity,com.gezitech.entity.PageList) -> a
    void access$11(com.hyh.www.ForgetActivity) -> k
com.hyh.www.ForgetActivity$1 -> com.hyh.www.b:
    com.hyh.www.ForgetActivity this$0 -> a
    void run() -> run
com.hyh.www.ForgetActivity$2 -> com.hyh.www.c:
    com.hyh.www.ForgetActivity this$0 -> a
    void run() -> run
com.hyh.www.ForgetActivity$3 -> com.hyh.www.d:
    com.hyh.www.ForgetActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.ForgetActivity$4 -> com.hyh.www.e:
    com.hyh.www.ForgetActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.ForgetActivity access$0(com.hyh.www.ForgetActivity$4) -> a
com.hyh.www.ForgetActivity$4$1 -> com.hyh.www.f:
    com.hyh.www.ForgetActivity$4 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
com.hyh.www.ForgetActivity$5 -> com.hyh.www.g:
    com.hyh.www.ForgetActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
com.hyh.www.ForgetActivity$6 -> com.hyh.www.h:
    com.hyh.www.ForgetActivity this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    com.hyh.www.ForgetActivity access$0(com.hyh.www.ForgetActivity$6) -> a
com.hyh.www.ForgetActivity$6$1 -> com.hyh.www.i:
    com.hyh.www.ForgetActivity$6 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.ForgetActivity$7 -> com.hyh.www.j:
    com.hyh.www.ForgetActivity this$0 -> a
    void selectStyle(boolean) -> a
    void countDownTimerAction(boolean) -> b
com.hyh.www.LoginActivity -> com.hyh.www.LoginActivity:
    com.hyh.www.LoginActivity _this -> a
    android.widget.Button login -> b
    android.widget.Button login_registered -> c
    android.widget.Button bt_my_post -> d
    android.widget.EditText ed_zhanghao -> e
    android.widget.EditText ed_passworld -> f
    android.widget.Button bt_home_msg -> g
    android.widget.Button bt_forgot_password -> h
    android.widget.CheckBox bt_remember_pass -> i
    int rememberPass -> j
    java.lang.String flag_global -> k
    java.lang.String userHead -> l
    android.content.BroadcastReceiver receiver -> m
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    void _jumpActivity(android.content.Intent) -> a
    void loadNewsDetail(long) -> a
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void authorize(cn.sharesdk.framework.Platform) -> a
    void login(cn.sharesdk.framework.Platform,java.util.HashMap) -> a
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> onComplete
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> onError
    void onCancel(cn.sharesdk.framework.Platform,int) -> onCancel
    boolean handleMessage(android.os.Message) -> handleMessage
    void ThirdLogin(com.loopj.android.http.RequestParams) -> a
    android.widget.Button access$0(com.hyh.www.LoginActivity) -> a
    com.hyh.www.LoginActivity access$1(com.hyh.www.LoginActivity) -> b
    void access$2(com.hyh.www.LoginActivity,int) -> a
    int access$3(com.hyh.www.LoginActivity) -> c
    void access$4(com.hyh.www.LoginActivity,cn.sharesdk.framework.Platform) -> a
    java.lang.String access$5(com.hyh.www.LoginActivity) -> d
com.hyh.www.LoginActivity$1 -> com.hyh.www.k:
    com.hyh.www.LoginActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.LoginActivity$2 -> com.hyh.www.l:
    com.hyh.www.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.LoginActivity$3 -> com.hyh.www.m:
    com.hyh.www.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.LoginActivity$4 -> com.hyh.www.n:
    com.hyh.www.LoginActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.hyh.www.LoginActivity$5 -> com.hyh.www.o:
    com.hyh.www.LoginActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.LoginActivity$6 -> com.hyh.www.p:
    com.hyh.www.LoginActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.LoginActivity$7 -> com.hyh.www.q:
    com.hyh.www.LoginActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
com.hyh.www.LoginActivity$8 -> com.hyh.www.s:
    com.hyh.www.LoginActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
com.hyh.www.NewsHint -> com.hyh.www.t:
    void getNewsUpdate(android.content.Context,android.view.View) -> a
    void getNewsUpdate(android.content.Context,android.view.View,boolean) -> a
    void setNewsUpdate(android.content.Context,android.view.View) -> b
com.hyh.www.NewsHint$1 -> com.hyh.www.u:
    com.hyh.www.NewsHint this$0 -> a
    android.view.View val$view -> b
    android.content.Context val$context -> c
    android.content.SharedPreferences val$systemSetting -> d
    long val$currTime -> e
    long val$hintCount -> f
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.R -> com.hyh.www.R:
com.hyh.www.R$anim -> com.hyh.www.R$anim:
    int anim_layout -> anim_layout
    int exit_anim -> exit_anim
    int imgae_view_rotate -> imgae_view_rotate
    int in_anim -> in_anim
    int in_from_down -> in_from_down
    int left_in -> left_in
    int left_out -> left_out
    int list_anim -> list_anim
    int out_to_down -> out_to_down
    int progress_round -> progress_round
    int progress_voice_blue -> progress_voice_blue
    int push_bottom_in -> push_bottom_in
    int push_bottom_in2 -> push_bottom_in2
    int push_bottom_in2_buttom -> push_bottom_in2_buttom
    int push_bottom_in_buttom -> push_bottom_in_buttom
    int push_bottom_out -> push_bottom_out
    int push_bottom_out_buttom -> push_bottom_out_buttom
    int right_in -> right_in
    int right_out -> right_out
    int umeng_fb_slide_in_from_left -> umeng_fb_slide_in_from_left
    int umeng_fb_slide_in_from_right -> umeng_fb_slide_in_from_right
    int umeng_fb_slide_out_from_left -> umeng_fb_slide_out_from_left
    int umeng_fb_slide_out_from_right -> umeng_fb_slide_out_from_right
    int umeng_xp_fade_in -> umeng_xp_fade_in
    int umeng_xp_fade_out -> umeng_xp_fade_out
    int umeng_xp_large_gallery_in -> umeng_xp_large_gallery_in
    int umeng_xp_progressbar -> umeng_xp_progressbar
    int umeng_xp_push_down_out -> umeng_xp_push_down_out
    int umeng_xp_push_up_in -> umeng_xp_push_up_in
    int umeng_xp_push_up_out -> umeng_xp_push_up_out
    int umeng_xp_slide_in_from_bottom -> umeng_xp_slide_in_from_bottom
    int umeng_xp_slide_in_from_left -> umeng_xp_slide_in_from_left
    int umeng_xp_slide_in_from_right -> umeng_xp_slide_in_from_right
    int umeng_xp_slide_in_from_top -> umeng_xp_slide_in_from_top
    int umeng_xp_slide_out_from_bottom -> umeng_xp_slide_out_from_bottom
    int umeng_xp_slide_out_from_left -> umeng_xp_slide_out_from_left
    int umeng_xp_slide_out_from_right -> umeng_xp_slide_out_from_right
    int umeng_xp_slide_out_from_top -> umeng_xp_slide_out_from_top
    int umeng_xp_zoom_in -> umeng_xp_zoom_in
    int umeng_xp_zoom_out -> umeng_xp_zoom_out
    int window_in -> window_in
    int window_out -> window_out
com.hyh.www.R$attr -> com.hyh.www.R$attr:
    int aspect -> aspect
    int behindOffset -> behindOffset
    int behindScrollScale -> behindScrollScale
    int behindWidth -> behindWidth
    int fadeDegree -> fadeDegree
    int fadeEnabled -> fadeEnabled
    int fontFamily -> fontFamily
    int mode -> mode
    int selectorDrawable -> selectorDrawable
    int selectorEnabled -> selectorEnabled
    int shadowDrawable -> shadowDrawable
    int shadowWidth -> shadowWidth
    int switchMinWidth -> switchMinWidth
    int switchPadding -> switchPadding
    int switchStyle -> switchStyle
    int switchTextAppearance -> switchTextAppearance
    int testtxt -> testtxt
    int textAppearance -> textAppearance
    int textColor -> textColor
    int textColorHighlight -> textColorHighlight
    int textColorHint -> textColorHint
    int textColorLink -> textColorLink
    int textOff -> textOff
    int textOn -> textOn
    int textSize -> textSize
    int textStyle -> textStyle
    int thumb -> thumb
    int thumbTextPadding -> thumbTextPadding
    int touchModeAbove -> touchModeAbove
    int touchModeBehind -> touchModeBehind
    int track -> track
    int typeface -> typeface
    int viewAbove -> viewAbove
    int viewBehind -> viewBehind
com.hyh.www.R$color -> com.hyh.www.R$color:
    int act_main_item_text_color -> act_main_item_text_color
    int annotation_hint -> annotation_hint
    int background -> background
    int black -> black
    int color046AAB -> color046AAB
    int color2c90f6 -> color2c90f6
    int color323232 -> color323232
    int color3CA5F3 -> color3CA5F3
    int color3ca5f3 -> color3ca5f3
    int color3e3e3e -> color3e3e3e
    int color454545 -> color454545
    int color4d4d4d -> color4d4d4d
    int color73c30b -> color73c30b
    int color80db0a -> color80db0a
    int color8282 -> color8282
    int color910000 -> color910000
    int color949494 -> color949494
    int color999999 -> color999999
    int coloraa0000 -> coloraa0000
    int colorb5b5b5 -> colorb5b5b5
    int colorb7b7b7 -> colorb7b7b7
    int colorcacaca -> colorcacaca
    int colord4d4d4 -> colord4d4d4
    int colordd0000 -> colordd0000
    int colore14646 -> colore14646
    int colore26868 -> colore26868
    int coloreabb8c3 -> coloreabb8c3
    int colorecd3a9 -> colorecd3a9
    int colorececec -> colorececec
    int colorededed -> colorededed
    int colorf0f0 -> colorf0f0
    int colorf8f8f8 -> colorf8f8f8
    int colorfcdb4c -> colorfcdb4c
    int colorff340c -> colorff340c
    int default_text_color -> default_text_color
    int element_blue -> element_blue
    int element_earth_yellow -> element_earth_yellow
    int element_green -> element_green
    int element_purple -> element_purple
    int element_yellow -> element_yellow
    int folder_text_color -> folder_text_color
    int green -> green
    int header_button_text_color -> header_button_text_color
    int round_group_item_name -> round_group_item_name
    int selector_background -> selector_background
    int selector_color -> selector_color
    int selector_order_textcolor -> selector_order_textcolor
    int selector_personcolor -> selector_personcolor
    int selector_textcolor -> selector_textcolor
    int sliding_menu_background -> sliding_menu_background
    int sliding_menu_body_background -> sliding_menu_body_background
    int sliding_menu_item_down -> sliding_menu_item_down
    int sliding_menu_item_release -> sliding_menu_item_release
    int umeng_fb_color_btn_normal -> umeng_fb_color_btn_normal
    int umeng_fb_color_btn_pressed -> umeng_fb_color_btn_pressed
    int white -> white
com.hyh.www.R$dimen -> com.hyh.www.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int button_height -> button_height
    int checkbox2_height -> checkbox2_height
    int checkbox2_width -> checkbox2_width
    int checkbox_height -> checkbox_height
    int checkbox_width -> checkbox_width
    int feedback_edittext_height -> feedback_edittext_height
    int folder_cover_size -> folder_cover_size
    int header_button_back_width -> header_button_back_width
    int header_button_height -> header_button_height
    int header_height -> header_height
    int header_tab_group_width -> header_tab_group_width
    int header_tab_width -> header_tab_width
    int header_text_size -> header_text_size
    int header_title_text_size -> header_title_text_size
    int hot_item_height -> hot_item_height
    int image_size -> image_size
    int input_height -> input_height
    int item_button_height -> item_button_height
    int left_item_radio_button_height -> left_item_radio_button_height
    int left_radio_button_height -> left_radio_button_height
    int radio_horizontal_button_height -> radio_horizontal_button_height
    int search_input_height -> search_input_height
    int search_margin_height -> search_margin_height
    int shadow_width -> shadow_width
    int size10 -> size10
    int size12 -> size12
    int size14 -> size14
    int size16 -> size16
    int size18 -> size18
    int size22 -> size22
    int size24 -> size24
    int size28 -> size28
    int slidingmenu_offset -> slidingmenu_offset
    int space_size -> space_size
com.hyh.www.R$drawable -> com.hyh.www.R$drawable:
    int action_btn -> action_btn
    int adv_color_common -> adv_color_common
    int adv_color_select -> adv_color_select
    int adv_select -> adv_select
    int arrow_down -> arrow_down
    int arrow_up -> arrow_up
    int asv -> asv
    int asy -> asy
    int auth_follow_cb_chd -> auth_follow_cb_chd
    int auth_follow_cb_unc -> auth_follow_cb_unc
    int auth_title_back -> auth_title_back
    int background_normal -> background_normal
    int background_push -> background_push
    int background_select -> background_select
    int baise -> baise
    int bg_bottom_control -> bg_bottom_control
    int bjzd_camera_normal -> bjzd_camera_normal
    int bjzd_camera_push -> bjzd_camera_push
    int blue_point -> blue_point
    int border_bottom -> border_bottom
    int bpush_gray_logo -> bpush_gray_logo
    int bpush_list_item_bg -> bpush_list_item_bg
    int bpush_message_prompt -> bpush_message_prompt
    int bpush_return_btn -> bpush_return_btn
    int bpush_top_bg -> bpush_top_bg
    int btn_back -> btn_back
    int btn_back_nor -> btn_back_nor
    int btn_cancel_back -> btn_cancel_back
    int btn_common_off -> btn_common_off
    int btn_common_on -> btn_common_on
    int btn_selected -> btn_selected
    int btn_style_alert_dialog_background -> btn_style_alert_dialog_background
    int btn_style_alert_dialog_button -> btn_style_alert_dialog_button
    int btn_style_alert_dialog_button_normal -> btn_style_alert_dialog_button_normal
    int btn_style_alert_dialog_button_pressed -> btn_style_alert_dialog_button_pressed
    int btn_style_alert_dialog_cancel -> btn_style_alert_dialog_cancel
    int btn_style_alert_dialog_cancel_normal -> btn_style_alert_dialog_cancel_normal
    int btn_style_alert_dialog_special -> btn_style_alert_dialog_special
    int btn_style_alert_dialog_special_normal -> btn_style_alert_dialog_special_normal
    int btn_style_alert_dialog_special_pressed -> btn_style_alert_dialog_special_pressed
    int btn_unselected -> btn_unselected
    int button_bjzd_camera -> button_bjzd_camera
    int button_blue -> button_blue
    int button_blue_normal -> button_blue_normal
    int button_blue_select -> button_blue_select
    int button_common_back -> button_common_back
    int button_common_btn_blue -> button_common_btn_blue
    int button_common_btn_gree -> button_common_btn_gree
    int button_common_btn_red -> button_common_btn_red
    int button_common_person -> button_common_person
    int button_cwsj_add -> button_cwsj_add
    int button_dhckdialogbox_biue -> button_dhckdialogbox_biue
    int button_fbhyh_speak -> button_fbhyh_speak
    int button_fbhyh_speak2 -> button_fbhyh_speak2
    int button_gary -> button_gary
    int button_gary_normal -> button_gary_normal
    int button_gray_select -> button_gray_select
    int button_person_select -> button_person_select
    int button_person_select_normal -> button_person_select_normal
    int button_person_select_push -> button_person_select_push
    int button_red -> button_red
    int button_red_normal -> button_red_normal
    int button_red_select -> button_red_select
    int button_wdfb_cancel -> button_wdfb_cancel
    int button_xdpy_search -> button_xdpy_search
    int chat_bottom_solid -> chat_bottom_solid
    int chat_item_normal -> chat_item_normal
    int chat_item_normal2 -> chat_item_normal2
    int chat_item_normal3 -> chat_item_normal3
    int chat_item_push -> chat_item_push
    int chat_item_push2 -> chat_item_push2
    int chat_item_push3 -> chat_item_push3
    int chat_item_select -> chat_item_select
    int chat_item_select2 -> chat_item_select2
    int chat_item_select3 -> chat_item_select3
    int chat_login_select -> chat_login_select
    int checkbox_background -> checkbox_background
    int checkbox_background2 -> checkbox_background2
    int checkbox_normal -> checkbox_normal
    int checkbox_selected -> checkbox_selected
    int checkbox_switch_pass_select -> checkbox_switch_pass_select
    int choicebox_normal -> choicebox_normal
    int choicebox_selected -> choicebox_selected
    int classic_platform_corners_bg -> classic_platform_corners_bg
    int comment_default_pic -> comment_default_pic
    int common_arrow -> common_arrow
    int common_back_normal -> common_back_normal
    int common_back_push -> common_back_push
    int common_btn_blue_normal -> common_btn_blue_normal
    int common_btn_blue_push -> common_btn_blue_push
    int common_btn_gray -> common_btn_gray
    int common_btn_gray_normal -> common_btn_gray_normal
    int common_btn_gray_push -> common_btn_gray_push
    int common_btn_green_normal -> common_btn_green_normal
    int common_btn_green_push -> common_btn_green_push
    int common_btn_normal -> common_btn_normal
    int common_btn_push -> common_btn_push
    int common_btn_red_normal -> common_btn_red_normal
    int common_btn_red_push -> common_btn_red_push
    int common_btn_select -> common_btn_select
    int common_chat -> common_chat
    int common_chat_normal -> common_chat_normal
    int common_chat_selected -> common_chat_selected
    int common_default_photo -> common_default_photo
    int common_dropdownlist_icon -> common_dropdownlist_icon
    int common_home -> common_home
    int common_home_normal -> common_home_normal
    int common_home_selected -> common_home_selected
    int common_inputbox_normal -> common_inputbox_normal
    int common_inputbox_on -> common_inputbox_on
    int common_menu -> common_menu
    int common_menu_bg -> common_menu_bg
    int common_menu_bg_normal -> common_menu_bg_normal
    int common_menu_bg_selected -> common_menu_bg_selected
    int common_msg -> common_msg
    int common_msg_normal -> common_msg_normal
    int common_msg_push -> common_msg_push
    int common_msg_yes -> common_msg_yes
    int common_navbar_bg -> common_navbar_bg
    int common_nearby -> common_nearby
    int common_nearby_nor -> common_nearby_nor
    int common_nearby_sel -> common_nearby_sel
    int common_newmsg_normal -> common_newmsg_normal
    int common_newmsg_push -> common_newmsg_push
    int common_off -> common_off
    int common_on -> common_on
    int common_person -> common_person
    int common_person_normal -> common_person_normal
    int common_person_selected -> common_person_selected
    int cwsj_add_normal -> cwsj_add_normal
    int cwsj_add_push -> cwsj_add_push
    int cwsj_add_select -> cwsj_add_select
    int d1 -> d1
    int d2 -> d2
    int default_check -> default_check
    int default_check_s -> default_check_s
    int default_error -> default_error
    int detai_tab_menu_normal -> detai_tab_menu_normal
    int detai_tab_menu_push -> detai_tab_menu_push
    int detail_tab_menu_select -> detail_tab_menu_select
    int dhck_add_normal -> dhck_add_normal
    int dhck_add_push -> dhck_add_push
    int dhck_add_select -> dhck_add_select
    int dhck_bottom_bg -> dhck_bottom_bg
    int dhck_dialogbox_blue2_normal -> dhck_dialogbox_blue2_normal
    int dhck_dialogbox_blue2_push -> dhck_dialogbox_blue2_push
    int dhck_dialogbox_blue2_select -> dhck_dialogbox_blue2_select
    int dhck_dialogbox_blue_normal -> dhck_dialogbox_blue_normal
    int dhck_dialogbox_blue_push -> dhck_dialogbox_blue_push
    int dhck_dialogbox_blue_select -> dhck_dialogbox_blue_select
    int dhck_dialogbox_green2_normal -> dhck_dialogbox_green2_normal
    int dhck_dialogbox_green2_push -> dhck_dialogbox_green2_push
    int dhck_dialogbox_green2_r_normal -> dhck_dialogbox_green2_r_normal
    int dhck_dialogbox_green2_r_push -> dhck_dialogbox_green2_r_push
    int dhck_dialogbox_green_normal -> dhck_dialogbox_green_normal
    int dhck_dialogbox_green_push -> dhck_dialogbox_green_push
    int dhck_dialogbox_green_r_normal -> dhck_dialogbox_green_r_normal
    int dhck_dialogbox_green_r_push -> dhck_dialogbox_green_r_push
    int dhck_dialogbox_white2_normal -> dhck_dialogbox_white2_normal
    int dhck_dialogbox_white2_push -> dhck_dialogbox_white2_push
    int dhck_dialogbox_white2_select -> dhck_dialogbox_white2_select
    int dhck_dialogbox_white_normal -> dhck_dialogbox_white_normal
    int dhck_dialogbox_white_push -> dhck_dialogbox_white_push
    int dhck_dialogbox_white_select -> dhck_dialogbox_white_select
    int dhck_icon_address_normal -> dhck_icon_address_normal
    int dhck_icon_address_push -> dhck_icon_address_push
    int dhck_icon_address_select -> dhck_icon_address_select
    int dhck_icon_bill_normal -> dhck_icon_bill_normal
    int dhck_icon_bill_push -> dhck_icon_bill_push
    int dhck_icon_bill_select -> dhck_icon_bill_select
    int dhck_icon_card_normal -> dhck_icon_card_normal
    int dhck_icon_card_push -> dhck_icon_card_push
    int dhck_icon_card_select -> dhck_icon_card_select
    int dhck_icon_pay_normal -> dhck_icon_pay_normal
    int dhck_icon_pay_push -> dhck_icon_pay_push
    int dhck_icon_pay_select -> dhck_icon_pay_select
    int dhck_icon_pic_normal -> dhck_icon_pic_normal
    int dhck_icon_pic_push -> dhck_icon_pic_push
    int dhck_icon_pic_select -> dhck_icon_pic_select
    int dhck_person_normal -> dhck_person_normal
    int dhck_person_push -> dhck_person_push
    int dhck_person_select -> dhck_person_select
    int dhck_send_normal -> dhck_send_normal
    int dhck_send_push -> dhck_send_push
    int dhck_send_select -> dhck_send_select
    int dhck_sendtext_normal -> dhck_sendtext_normal
    int dhck_sendtext_push -> dhck_sendtext_push
    int dhck_sendtext_select -> dhck_sendtext_select
    int dhck_sendvoice_normal -> dhck_sendvoice_normal
    int dhck_sendvoice_push -> dhck_sendvoice_push
    int dhck_sendvoice_select -> dhck_sendvoice_select
    int dhck_smile_normal -> dhck_smile_normal
    int dhck_smile_select -> dhck_smile_select
    int dhck_smile_selected -> dhck_smile_selected
    int dhck_voice_blue_01 -> dhck_voice_blue_01
    int dhck_voice_blue_02 -> dhck_voice_blue_02
    int dhck_voice_blue_03 -> dhck_voice_blue_03
    int dhck_voice_gray_01 -> dhck_voice_gray_01
    int dhck_voice_gray_02 -> dhck_voice_gray_02
    int dhck_voice_gray_03 -> dhck_voice_gray_03
    int dialog -> dialog
    int edittext_back -> edittext_back
    int edittext_common_inputbox -> edittext_common_inputbox
    int emoji_1 -> emoji_1
    int emoji_10 -> emoji_10
    int emoji_11 -> emoji_11
    int emoji_12 -> emoji_12
    int emoji_13 -> emoji_13
    int emoji_14 -> emoji_14
    int emoji_15 -> emoji_15
    int emoji_16 -> emoji_16
    int emoji_17 -> emoji_17
    int emoji_179 -> emoji_179
    int emoji_18 -> emoji_18
    int emoji_180 -> emoji_180
    int emoji_181 -> emoji_181
    int emoji_182 -> emoji_182
    int emoji_183 -> emoji_183
    int emoji_184 -> emoji_184
    int emoji_185 -> emoji_185
    int emoji_186 -> emoji_186
    int emoji_187 -> emoji_187
    int emoji_188 -> emoji_188
    int emoji_189 -> emoji_189
    int emoji_19 -> emoji_19
    int emoji_190 -> emoji_190
    int emoji_191 -> emoji_191
    int emoji_192 -> emoji_192
    int emoji_193 -> emoji_193
    int emoji_194 -> emoji_194
    int emoji_195 -> emoji_195
    int emoji_196 -> emoji_196
    int emoji_197 -> emoji_197
    int emoji_198 -> emoji_198
    int emoji_199 -> emoji_199
    int emoji_2 -> emoji_2
    int emoji_20 -> emoji_20
    int emoji_200 -> emoji_200
    int emoji_201 -> emoji_201
    int emoji_202 -> emoji_202
    int emoji_203 -> emoji_203
    int emoji_204 -> emoji_204
    int emoji_205 -> emoji_205
    int emoji_206 -> emoji_206
    int emoji_207 -> emoji_207
    int emoji_208 -> emoji_208
    int emoji_209 -> emoji_209
    int emoji_21 -> emoji_21
    int emoji_210 -> emoji_210
    int emoji_211 -> emoji_211
    int emoji_212 -> emoji_212
    int emoji_213 -> emoji_213
    int emoji_214 -> emoji_214
    int emoji_215 -> emoji_215
    int emoji_216 -> emoji_216
    int emoji_217 -> emoji_217
    int emoji_218 -> emoji_218
    int emoji_219 -> emoji_219
    int emoji_22 -> emoji_22
    int emoji_220 -> emoji_220
    int emoji_221 -> emoji_221
    int emoji_222 -> emoji_222
    int emoji_223 -> emoji_223
    int emoji_224 -> emoji_224
    int emoji_23 -> emoji_23
    int emoji_24 -> emoji_24
    int emoji_25 -> emoji_25
    int emoji_26 -> emoji_26
    int emoji_27 -> emoji_27
    int emoji_28 -> emoji_28
    int emoji_29 -> emoji_29
    int emoji_3 -> emoji_3
    int emoji_30 -> emoji_30
    int emoji_31 -> emoji_31
    int emoji_32 -> emoji_32
    int emoji_33 -> emoji_33
    int emoji_34 -> emoji_34
    int emoji_35 -> emoji_35
    int emoji_36 -> emoji_36
    int emoji_37 -> emoji_37
    int emoji_38 -> emoji_38
    int emoji_39 -> emoji_39
    int emoji_4 -> emoji_4
    int emoji_40 -> emoji_40
    int emoji_41 -> emoji_41
    int emoji_42 -> emoji_42
    int emoji_43 -> emoji_43
    int emoji_44 -> emoji_44
    int emoji_45 -> emoji_45
    int emoji_46 -> emoji_46
    int emoji_47 -> emoji_47
    int emoji_48 -> emoji_48
    int emoji_49 -> emoji_49
    int emoji_5 -> emoji_5
    int emoji_50 -> emoji_50
    int emoji_51 -> emoji_51
    int emoji_52 -> emoji_52
    int emoji_53 -> emoji_53
    int emoji_54 -> emoji_54
    int emoji_55 -> emoji_55
    int emoji_56 -> emoji_56
    int emoji_57 -> emoji_57
    int emoji_58 -> emoji_58
    int emoji_59 -> emoji_59
    int emoji_6 -> emoji_6
    int emoji_60 -> emoji_60
    int emoji_61 -> emoji_61
    int emoji_62 -> emoji_62
    int emoji_63 -> emoji_63
    int emoji_64 -> emoji_64
    int emoji_65 -> emoji_65
    int emoji_66 -> emoji_66
    int emoji_67 -> emoji_67
    int emoji_68 -> emoji_68
    int emoji_69 -> emoji_69
    int emoji_7 -> emoji_7
    int emoji_70 -> emoji_70
    int emoji_71 -> emoji_71
    int emoji_8 -> emoji_8
    int emoji_9 -> emoji_9
    int emoji_normal -> emoji_normal
    int emoji_push -> emoji_push
    int fabu_add -> fabu_add
    int face_del_icon_select -> face_del_icon_select
    int fbhyh_bg -> fbhyh_bg
    int fbhyh_sound_01 -> fbhyh_sound_01
    int fbhyh_sound_02 -> fbhyh_sound_02
    int fbhyh_sound_03 -> fbhyh_sound_03
    int fbhyh_sound_04 -> fbhyh_sound_04
    int fbhyh_sound_05 -> fbhyh_sound_05
    int fbhyh_speak2_normal -> fbhyh_speak2_normal
    int fbhyh_speak2_push -> fbhyh_speak2_push
    int fbhyh_speak_normal -> fbhyh_speak_normal
    int fbhyh_speak_push -> fbhyh_speak_push
    int gray_point -> gray_point
    int group_item_more -> group_item_more
    int grzh_line -> grzh_line
    int grzx_account -> grzx_account
    int grzx_edit -> grzx_edit
    int grzx_fabu_msg -> grzx_fabu_msg
    int grzx_generalize -> grzx_generalize
    int grzx_setting -> grzx_setting
    int hh_label_bg -> hh_label_bg
    int hh_newfriends -> hh_newfriends
    int hh_number_bg -> hh_number_bg
    int ic_launcher -> ic_launcher
    int ic_menu_back -> ic_menu_back
    int icon_close -> icon_close
    int icon_comment -> icon_comment
    int icon_comment_nor -> icon_comment_nor
    int icon_comment_push -> icon_comment_push
    int icon_distance -> icon_distance
    int icon_female -> icon_female
    int icon_like_nor -> icon_like_nor
    int icon_like_sel -> icon_like_sel
    int icon_male -> icon_male
    int icon_nonetwork_click -> icon_nonetwork_click
    int icon_refresh_down -> icon_refresh_down
    int icon_time -> icon_time
    int img_cancel -> img_cancel
    int input_normal -> input_normal
    int input_push -> input_push
    int input_push2 -> input_push2
    int input_select -> input_select
    int iv_face -> iv_face
    int iv_face_pressed -> iv_face_pressed
    int launcher_96 -> launcher_96
    int light_blue_point -> light_blue_point
    int like_bg -> like_bg
    int line_normal -> line_normal
    int line_push -> line_push
    int line_select -> line_select
    int list_icon_alzxs -> list_icon_alzxs
    int list_icon_hyzxs -> list_icon_hyzxs
    int list_icon_rdtjs -> list_icon_rdtjs
    int list_select -> list_select
    int list_select_normal -> list_select_normal
    int list_select_push -> list_select_push
    int loading_01 -> loading_01
    int loading_03 -> loading_03
    int loading_04 -> loading_04
    int loading_05 -> loading_05
    int loading_06 -> loading_06
    int loading_07 -> loading_07
    int loading_08 -> loading_08
    int loading_09 -> loading_09
    int loading_10 -> loading_10
    int loading_11 -> loading_11
    int loading_12 -> loading_12
    int loading_bg -> loading_bg
    int login_qq_normal -> login_qq_normal
    int login_qq_push -> login_qq_push
    int login_weibo_normal -> login_weibo_normal
    int login_weibo_push -> login_weibo_push
    int login_wx_normal -> login_wx_normal
    int login_wx_push -> login_wx_push
    int logo_bluetooth -> logo_bluetooth
    int logo_douban -> logo_douban
    int logo_dropbox -> logo_dropbox
    int logo_email -> logo_email
    int logo_evernote -> logo_evernote
    int logo_facebook -> logo_facebook
    int logo_facebookmessenger -> logo_facebookmessenger
    int logo_flickr -> logo_flickr
    int logo_foursquare -> logo_foursquare
    int logo_googleplus -> logo_googleplus
    int logo_instagram -> logo_instagram
    int logo_instapaper -> logo_instapaper
    int logo_kaixin -> logo_kaixin
    int logo_kakaostory -> logo_kakaostory
    int logo_kakaotalk -> logo_kakaotalk
    int logo_line -> logo_line
    int logo_linkedin -> logo_linkedin
    int logo_mingdao -> logo_mingdao
    int logo_neteasemicroblog -> logo_neteasemicroblog
    int logo_pinterest -> logo_pinterest
    int logo_pocket -> logo_pocket
    int logo_qq -> logo_qq
    int logo_qzone -> logo_qzone
    int logo_renren -> logo_renren
    int logo_shortmessage -> logo_shortmessage
    int logo_sinaweibo -> logo_sinaweibo
    int logo_sohumicroblog -> logo_sohumicroblog
    int logo_sohusuishenkan -> logo_sohusuishenkan
    int logo_tencentweibo -> logo_tencentweibo
    int logo_tumblr -> logo_tumblr
    int logo_twitter -> logo_twitter
    int logo_vkontakte -> logo_vkontakte
    int logo_wechat -> logo_wechat
    int logo_wechatfavorite -> logo_wechatfavorite
    int logo_wechatmoments -> logo_wechatmoments
    int logo_whatsapp -> logo_whatsapp
    int logo_yixin -> logo_yixin
    int logo_yixinmoments -> logo_yixinmoments
    int logo_youdao -> logo_youdao
    int lxwm_logo -> lxwm_logo
    int member_icon_ybts -> member_icon_ybts
    int member_icon_zhaq -> member_icon_zhaq
    int member_icon_zhxx -> member_icon_zhxx
    int money_bg -> money_bg
    int near_new_msg -> near_new_msg
    int newmsg_bg_nor -> newmsg_bg_nor
    int newmsg_bg_push -> newmsg_bg_push
    int newmsg_bg_select -> newmsg_bg_select
    int news_diang -> news_diang
    int news_diang_hover -> news_diang_hover
    int password_abc -> password_abc
    int password_dot -> password_dot
    int pending -> pending
    int pic_loading -> pic_loading
    int pic_loading_all -> pic_loading_all
    int pin -> pin
    int play_del_xx -> play_del_xx
    int play_pic_selected -> play_pic_selected
    int popup -> popup
    int progress_voice_blue -> progress_voice_blue
    int progress_voice_gray -> progress_voice_gray
    int public_bd_marka -> public_bd_marka
    int put_normal -> put_normal
    int put_push -> put_push
    int put_select -> put_select
    int qq_login_select -> qq_login_select
    int radio_button_background -> radio_button_background
    int radio_button_normal -> radio_button_normal
    int radio_button_push -> radio_button_push
    int radio_button_select -> radio_button_select
    int radiobutton_normal -> radiobutton_normal
    int radiobutton_selected -> radiobutton_selected
    int radius_channel_normal -> radius_channel_normal
    int radius_channel_push -> radius_channel_push
    int register_top_common -> register_top_common
    int register_top_select -> register_top_select
    int register_top_selected -> register_top_selected
    int right_button_dhckdialogbox_biue -> right_button_dhckdialogbox_biue
    int right_dhck_dialogbox_blue2_normal -> right_dhck_dialogbox_blue2_normal
    int right_dhck_dialogbox_blue2_push -> right_dhck_dialogbox_blue2_push
    int right_dhck_voice_blue_01 -> right_dhck_voice_blue_01
    int right_dhck_voice_blue_02 -> right_dhck_voice_blue_02
    int right_dhck_voice_blue_03 -> right_dhck_voice_blue_03
    int right_progress_voice_blue -> right_progress_voice_blue
    int rn -> rn
    int ro -> ro
    int round_end -> round_end
    int round_middle -> round_middle
    int round_start -> round_start
    int round_start_end -> round_start_end
    int roundbg_end -> roundbg_end
    int roundbg_end_s -> roundbg_end_s
    int roundbg_middle -> roundbg_middle
    int roundbg_middle_s -> roundbg_middle_s
    int roundbg_start -> roundbg_start
    int roundbg_start_end -> roundbg_start_end
    int roundbg_start_end_s -> roundbg_start_end_s
    int roundbg_start_s -> roundbg_start_s
    int save_icon -> save_icon
    int select_color_normal -> select_color_normal
    int select_view -> select_view
    int selector_color -> selector_color
    int selector_indicator -> selector_indicator
    int selector_personcolor -> selector_personcolor
    int selector_personcolor_normal -> selector_personcolor_normal
    int selector_personcolor_push -> selector_personcolor_push
    int selectorchoose -> selectorchoose
    int service_photo -> service_photo
    int shake -> shake
    int share_vp_back -> share_vp_back
    int simple_notification_icon -> simple_notification_icon
    int skyblue_actionbar_back_btn -> skyblue_actionbar_back_btn
    int skyblue_actionbar_ok_btn -> skyblue_actionbar_ok_btn
    int skyblue_editpage_bg -> skyblue_editpage_bg
    int skyblue_editpage_close -> skyblue_editpage_close
    int skyblue_editpage_divider -> skyblue_editpage_divider
    int skyblue_editpage_image_bg -> skyblue_editpage_image_bg
    int skyblue_editpage_image_remove -> skyblue_editpage_image_remove
    int skyblue_logo_baidutieba -> skyblue_logo_baidutieba
    int skyblue_logo_baidutieba_checked -> skyblue_logo_baidutieba_checked
    int skyblue_logo_bluetooth -> skyblue_logo_bluetooth
    int skyblue_logo_bluetooth_checked -> skyblue_logo_bluetooth_checked
    int skyblue_logo_douban -> skyblue_logo_douban
    int skyblue_logo_douban_checked -> skyblue_logo_douban_checked
    int skyblue_logo_dropbox -> skyblue_logo_dropbox
    int skyblue_logo_dropbox_checked -> skyblue_logo_dropbox_checked
    int skyblue_logo_email -> skyblue_logo_email
    int skyblue_logo_email_checked -> skyblue_logo_email_checked
    int skyblue_logo_evernote -> skyblue_logo_evernote
    int skyblue_logo_evernote_checked -> skyblue_logo_evernote_checked
    int skyblue_logo_facebook -> skyblue_logo_facebook
    int skyblue_logo_facebook_checked -> skyblue_logo_facebook_checked
    int skyblue_logo_facebookmessenger -> skyblue_logo_facebookmessenger
    int skyblue_logo_facebookmessenger_checked -> skyblue_logo_facebookmessenger_checked
    int skyblue_logo_flickr -> skyblue_logo_flickr
    int skyblue_logo_flickr_checked -> skyblue_logo_flickr_checked
    int skyblue_logo_foursquare -> skyblue_logo_foursquare
    int skyblue_logo_foursquare_checked -> skyblue_logo_foursquare_checked
    int skyblue_logo_googleplus -> skyblue_logo_googleplus
    int skyblue_logo_googleplus_checked -> skyblue_logo_googleplus_checked
    int skyblue_logo_instagram -> skyblue_logo_instagram
    int skyblue_logo_instagram_checked -> skyblue_logo_instagram_checked
    int skyblue_logo_instapaper -> skyblue_logo_instapaper
    int skyblue_logo_instapaper_checked -> skyblue_logo_instapaper_checked
    int skyblue_logo_kaixin -> skyblue_logo_kaixin
    int skyblue_logo_kaixin_checked -> skyblue_logo_kaixin_checked
    int skyblue_logo_kakaostory -> skyblue_logo_kakaostory
    int skyblue_logo_kakaostory_checked -> skyblue_logo_kakaostory_checked
    int skyblue_logo_kakaotalk -> skyblue_logo_kakaotalk
    int skyblue_logo_kakaotalk_checked -> skyblue_logo_kakaotalk_checked
    int skyblue_logo_line -> skyblue_logo_line
    int skyblue_logo_line_checked -> skyblue_logo_line_checked
    int skyblue_logo_linkedin -> skyblue_logo_linkedin
    int skyblue_logo_linkedin_checked -> skyblue_logo_linkedin_checked
    int skyblue_logo_mingdao -> skyblue_logo_mingdao
    int skyblue_logo_mingdao_checked -> skyblue_logo_mingdao_checked
    int skyblue_logo_neteasemicroblog -> skyblue_logo_neteasemicroblog
    int skyblue_logo_neteasemicroblog_checked -> skyblue_logo_neteasemicroblog_checked
    int skyblue_logo_pinterest -> skyblue_logo_pinterest
    int skyblue_logo_pinterest_checked -> skyblue_logo_pinterest_checked
    int skyblue_logo_pocket -> skyblue_logo_pocket
    int skyblue_logo_pocket_checked -> skyblue_logo_pocket_checked
    int skyblue_logo_qq -> skyblue_logo_qq
    int skyblue_logo_qq_checked -> skyblue_logo_qq_checked
    int skyblue_logo_qzone -> skyblue_logo_qzone
    int skyblue_logo_qzone_checked -> skyblue_logo_qzone_checked
    int skyblue_logo_renren -> skyblue_logo_renren
    int skyblue_logo_renren_checked -> skyblue_logo_renren_checked
    int skyblue_logo_shortmessage -> skyblue_logo_shortmessage
    int skyblue_logo_shortmessage_checked -> skyblue_logo_shortmessage_checked
    int skyblue_logo_sinaweibo -> skyblue_logo_sinaweibo
    int skyblue_logo_sinaweibo_checked -> skyblue_logo_sinaweibo_checked
    int skyblue_logo_sohumicroblog -> skyblue_logo_sohumicroblog
    int skyblue_logo_sohumicroblog_checked -> skyblue_logo_sohumicroblog_checked
    int skyblue_logo_sohusuishenkan -> skyblue_logo_sohusuishenkan
    int skyblue_logo_sohusuishenkan_checked -> skyblue_logo_sohusuishenkan_checked
    int skyblue_logo_tencentweibo -> skyblue_logo_tencentweibo
    int skyblue_logo_tencentweibo_checked -> skyblue_logo_tencentweibo_checked
    int skyblue_logo_tumblr -> skyblue_logo_tumblr
    int skyblue_logo_tumblr_checked -> skyblue_logo_tumblr_checked
    int skyblue_logo_twitter -> skyblue_logo_twitter
    int skyblue_logo_twitter_checked -> skyblue_logo_twitter_checked
    int skyblue_logo_vkontakte -> skyblue_logo_vkontakte
    int skyblue_logo_vkontakte_checked -> skyblue_logo_vkontakte_checked
    int skyblue_logo_wechat -> skyblue_logo_wechat
    int skyblue_logo_wechat_checked -> skyblue_logo_wechat_checked
    int skyblue_logo_wechatfavorite -> skyblue_logo_wechatfavorite
    int skyblue_logo_wechatfavorite_checked -> skyblue_logo_wechatfavorite_checked
    int skyblue_logo_wechatmoments -> skyblue_logo_wechatmoments
    int skyblue_logo_wechatmoments_checked -> skyblue_logo_wechatmoments_checked
    int skyblue_logo_whatsapp -> skyblue_logo_whatsapp
    int skyblue_logo_whatsapp_checked -> skyblue_logo_whatsapp_checked
    int skyblue_logo_yixin -> skyblue_logo_yixin
    int skyblue_logo_yixin_checked -> skyblue_logo_yixin_checked
    int skyblue_logo_yixinmoments -> skyblue_logo_yixinmoments
    int skyblue_logo_yixinmoments_checked -> skyblue_logo_yixinmoments_checked
    int skyblue_logo_youdao -> skyblue_logo_youdao
    int skyblue_logo_youdao_checked -> skyblue_logo_youdao_checked
    int skyblue_platform_checked -> skyblue_platform_checked
    int skyblue_platform_checked_disabled -> skyblue_platform_checked_disabled
    int skyblue_platform_list_item -> skyblue_platform_list_item
    int skyblue_platform_list_item_selected -> skyblue_platform_list_item_selected
    int skyblue_platform_list_selector -> skyblue_platform_list_selector
    int ssdk_auth_title_back -> ssdk_auth_title_back
    int ssdk_back_arr -> ssdk_back_arr
    int ssdk_logo -> ssdk_logo
    int ssdk_oks_ptr_ptr -> ssdk_oks_ptr_ptr
    int ssdk_oks_shake_to_share_back -> ssdk_oks_shake_to_share_back
    int ssdk_oks_yaoyiyao -> ssdk_oks_yaoyiyao
    int ssdk_title_div -> ssdk_title_div
    int ssp_queding_btn -> ssp_queding_btn
    int start_720x1280 -> start_720x1280
    int sy_ad_01 -> sy_ad_01
    int sy_ad_dot_normal -> sy_ad_dot_normal
    int sy_ad_dot_select -> sy_ad_dot_select
    int sy_ad_dot_selected -> sy_ad_dot_selected
    int sy_circle -> sy_circle
    int sy_logo -> sy_logo
    int sy_logo_normal -> sy_logo_normal
    int sy_logo_push -> sy_logo_push
    int sy_zi -> sy_zi
    int test -> test
    int testphoto_01 -> testphoto_01
    int testphoto_02 -> testphoto_02
    int testphoto_04 -> testphoto_04
    int testphoto_05 -> testphoto_05
    int testphoto_06 -> testphoto_06
    int text_indicator -> text_indicator
    int title_back -> title_back
    int title_shadow -> title_shadow
    int umeng_common_gradient_green -> umeng_common_gradient_green
    int umeng_common_gradient_orange -> umeng_common_gradient_orange
    int umeng_common_gradient_red -> umeng_common_gradient_red
    int umeng_fb_arrow_right -> umeng_fb_arrow_right
    int umeng_fb_back_normal -> umeng_fb_back_normal
    int umeng_fb_back_selected -> umeng_fb_back_selected
    int umeng_fb_back_selector -> umeng_fb_back_selector
    int umeng_fb_bar_bg -> umeng_fb_bar_bg
    int umeng_fb_btn_bg_selector -> umeng_fb_btn_bg_selector
    int umeng_fb_conversation_bg -> umeng_fb_conversation_bg
    int umeng_fb_gradient_green -> umeng_fb_gradient_green
    int umeng_fb_gradient_orange -> umeng_fb_gradient_orange
    int umeng_fb_gray_frame -> umeng_fb_gray_frame
    int umeng_fb_list_item -> umeng_fb_list_item
    int umeng_fb_list_item_pressed -> umeng_fb_list_item_pressed
    int umeng_fb_list_item_selector -> umeng_fb_list_item_selector
    int umeng_fb_logo -> umeng_fb_logo
    int umeng_fb_point_new -> umeng_fb_point_new
    int umeng_fb_point_normal -> umeng_fb_point_normal
    int umeng_fb_reply_left_bg -> umeng_fb_reply_left_bg
    int umeng_fb_reply_right_bg -> umeng_fb_reply_right_bg
    int umeng_fb_see_list_normal -> umeng_fb_see_list_normal
    int umeng_fb_see_list_pressed -> umeng_fb_see_list_pressed
    int umeng_fb_see_list_selector -> umeng_fb_see_list_selector
    int umeng_fb_statusbar_icon -> umeng_fb_statusbar_icon
    int umeng_fb_submit_selector -> umeng_fb_submit_selector
    int umeng_fb_tick_normal -> umeng_fb_tick_normal
    int umeng_fb_tick_selected -> umeng_fb_tick_selected
    int umeng_fb_tick_selector -> umeng_fb_tick_selector
    int umeng_fb_top_banner -> umeng_fb_top_banner
    int umeng_fb_user_bubble -> umeng_fb_user_bubble
    int umeng_fb_write_normal -> umeng_fb_write_normal
    int umeng_fb_write_pressed -> umeng_fb_write_pressed
    int umeng_fb_write_selector -> umeng_fb_write_selector
    int umeng_update_btn_check_off_focused_holo_light -> umeng_update_btn_check_off_focused_holo_light
    int umeng_update_btn_check_off_holo_light -> umeng_update_btn_check_off_holo_light
    int umeng_update_btn_check_off_pressed_holo_light -> umeng_update_btn_check_off_pressed_holo_light
    int umeng_update_btn_check_on_focused_holo_light -> umeng_update_btn_check_on_focused_holo_light
    int umeng_update_btn_check_on_holo_light -> umeng_update_btn_check_on_holo_light
    int umeng_update_btn_check_on_pressed_holo_light -> umeng_update_btn_check_on_pressed_holo_light
    int umeng_update_button_cancel_bg_focused -> umeng_update_button_cancel_bg_focused
    int umeng_update_button_cancel_bg_normal -> umeng_update_button_cancel_bg_normal
    int umeng_update_button_cancel_bg_selector -> umeng_update_button_cancel_bg_selector
    int umeng_update_button_cancel_bg_tap -> umeng_update_button_cancel_bg_tap
    int umeng_update_button_check_selector -> umeng_update_button_check_selector
    int umeng_update_button_close_bg_selector -> umeng_update_button_close_bg_selector
    int umeng_update_button_ok_bg_focused -> umeng_update_button_ok_bg_focused
    int umeng_update_button_ok_bg_normal -> umeng_update_button_ok_bg_normal
    int umeng_update_button_ok_bg_selector -> umeng_update_button_ok_bg_selector
    int umeng_update_button_ok_bg_tap -> umeng_update_button_ok_bg_tap
    int umeng_update_close_bg_normal -> umeng_update_close_bg_normal
    int umeng_update_close_bg_tap -> umeng_update_close_bg_tap
    int umeng_update_dialog_bg -> umeng_update_dialog_bg
    int umeng_update_title_bg -> umeng_update_title_bg
    int umeng_update_wifi_disable -> umeng_update_wifi_disable
    int umeng_xp_ad_action_bg -> umeng_xp_ad_action_bg
    int umeng_xp_ad_action_bg_clicked -> umeng_xp_ad_action_bg_clicked
    int umeng_xp_ad_action_bg_selector -> umeng_xp_ad_action_bg_selector
    int umeng_xp_ad_action_browse -> umeng_xp_ad_action_browse
    int umeng_xp_ad_action_browse_clicked -> umeng_xp_ad_action_browse_clicked
    int umeng_xp_ad_action_browse_selector -> umeng_xp_ad_action_browse_selector
    int umeng_xp_ad_action_download -> umeng_xp_ad_action_download
    int umeng_xp_ad_action_download_clicked -> umeng_xp_ad_action_download_clicked
    int umeng_xp_ad_action_download_selector -> umeng_xp_ad_action_download_selector
    int umeng_xp_ad_action_open -> umeng_xp_ad_action_open
    int umeng_xp_ad_action_open_clicked -> umeng_xp_ad_action_open_clicked
    int umeng_xp_ad_action_open_selector -> umeng_xp_ad_action_open_selector
    int umeng_xp_ad_action_phone -> umeng_xp_ad_action_phone
    int umeng_xp_ad_action_phone_clicked -> umeng_xp_ad_action_phone_clicked
    int umeng_xp_ad_action_phone_selector -> umeng_xp_ad_action_phone_selector
    int umeng_xp_back -> umeng_xp_back
    int umeng_xp_back_button -> umeng_xp_back_button
    int umeng_xp_back_button_normal -> umeng_xp_back_button_normal
    int umeng_xp_back_button_selected -> umeng_xp_back_button_selected
    int umeng_xp_back_click -> umeng_xp_back_click
    int umeng_xp_banner_grey -> umeng_xp_banner_grey
    int umeng_xp_btn_gradient_dark_grey -> umeng_xp_btn_gradient_dark_grey
    int umeng_xp_btn_gradient_grey -> umeng_xp_btn_gradient_grey
    int umeng_xp_button_cancel -> umeng_xp_button_cancel
    int umeng_xp_button_cancel_click -> umeng_xp_button_cancel_click
    int umeng_xp_button_cancel_selector -> umeng_xp_button_cancel_selector
    int umeng_xp_button_download -> umeng_xp_button_download
    int umeng_xp_button_download_click -> umeng_xp_button_download_click
    int umeng_xp_button_download_selector -> umeng_xp_button_download_selector
    int umeng_xp_container_banner_background_selector -> umeng_xp_container_banner_background_selector
    int umeng_xp_darkbg -> umeng_xp_darkbg
    int umeng_xp_detail -> umeng_xp_detail
    int umeng_xp_detail365 -> umeng_xp_detail365
    int umeng_xp_detail_bg -> umeng_xp_detail_bg
    int umeng_xp_download_dialog_bg -> umeng_xp_download_dialog_bg
    int umeng_xp_download_dialog_close -> umeng_xp_download_dialog_close
    int umeng_xp_download_dialog_close_clicked -> umeng_xp_download_dialog_close_clicked
    int umeng_xp_download_dialog_close_selector -> umeng_xp_download_dialog_close_selector
    int umeng_xp_download_gradient_grey -> umeng_xp_download_gradient_grey
    int umeng_xp_gradient_grey -> umeng_xp_gradient_grey
    int umeng_xp_gradient_grey1 -> umeng_xp_gradient_grey1
    int umeng_xp_gradient_grey2 -> umeng_xp_gradient_grey2
    int umeng_xp_greenbg_selector -> umeng_xp_greenbg_selector
    int umeng_xp_handler_rc -> umeng_xp_handler_rc
    int umeng_xp_highlight_banner_background_selector -> umeng_xp_highlight_banner_background_selector
    int umeng_xp_highlight_banner_bg -> umeng_xp_highlight_banner_bg
    int umeng_xp_highlight_footview_dashed_line -> umeng_xp_highlight_footview_dashed_line
    int umeng_xp_highlight_footview_loading -> umeng_xp_highlight_footview_loading
    int umeng_xp_highlight_item_bg -> umeng_xp_highlight_item_bg
    int umeng_xp_highlight_item_bg_clicked -> umeng_xp_highlight_item_bg_clicked
    int umeng_xp_highlight_item_bg_selector -> umeng_xp_highlight_item_bg_selector
    int umeng_xp_horizontal_divider -> umeng_xp_horizontal_divider
    int umeng_xp_icon_background -> umeng_xp_icon_background
    int umeng_xp_icon_background_clicked -> umeng_xp_icon_background_clicked
    int umeng_xp_icon_background_selector -> umeng_xp_icon_background_selector
    int umeng_xp_kaijuan_bg -> umeng_xp_kaijuan_bg
    int umeng_xp_large_gallery_failed -> umeng_xp_large_gallery_failed
    int umeng_xp_large_gallery_item_bg -> umeng_xp_large_gallery_item_bg
    int umeng_xp_link_radius_shape -> umeng_xp_link_radius_shape
    int umeng_xp_list_item_text_selector -> umeng_xp_list_item_text_selector
    int umeng_xp_loading -> umeng_xp_loading
    int umeng_xp_loading_seek -> umeng_xp_loading_seek
    int umeng_xp_more_bottom -> umeng_xp_more_bottom
    int umeng_xp_more_top -> umeng_xp_more_top
    int umeng_xp_new_tip -> umeng_xp_new_tip
    int umeng_xp_new_tip_bg -> umeng_xp_new_tip_bg
    int umeng_xp_new_tip_button -> umeng_xp_new_tip_button
    int umeng_xp_normal_banner_background_selector -> umeng_xp_normal_banner_background_selector
    int umeng_xp_point_normal -> umeng_xp_point_normal
    int umeng_xp_point_selected -> umeng_xp_point_selected
    int umeng_xp_progressbar -> umeng_xp_progressbar
    int umeng_xp_radius_shape -> umeng_xp_radius_shape
    int umeng_xp_recommend_titile_bg -> umeng_xp_recommend_titile_bg
    int umeng_xp_recoright -> umeng_xp_recoright
    int umeng_xp_seek -> umeng_xp_seek
    int umeng_xp_seek_bg -> umeng_xp_seek_bg
    int umeng_xp_selector_back -> umeng_xp_selector_back
    int umeng_xp_selector_cancel -> umeng_xp_selector_cancel
    int umeng_xp_selector_download -> umeng_xp_selector_download
    int umeng_xp_shadow_bg -> umeng_xp_shadow_bg
    int umeng_xp_shape_conner_blackish_green -> umeng_xp_shape_conner_blackish_green
    int umeng_xp_shape_conner_green -> umeng_xp_shape_conner_green
    int umeng_xp_shape_gradient_blue -> umeng_xp_shape_gradient_blue
    int umeng_xp_shape_gradient_blue_container -> umeng_xp_shape_gradient_blue_container
    int umeng_xp_shape_gradient_blue_v2 -> umeng_xp_shape_gradient_blue_v2
    int umeng_xp_shape_gradient_gray_stroke -> umeng_xp_shape_gradient_gray_stroke
    int umeng_xp_shape_gradient_grey_0 -> umeng_xp_shape_gradient_grey_0
    int umeng_xp_shape_gradient_grey_1 -> umeng_xp_shape_gradient_grey_1
    int umeng_xp_shape_gradient_grey_2 -> umeng_xp_shape_gradient_grey_2
    int umeng_xp_shape_gradient_grey_3 -> umeng_xp_shape_gradient_grey_3
    int umeng_xp_shape_gradient_grey_4 -> umeng_xp_shape_gradient_grey_4
    int umeng_xp_shape_gradient_grey_5 -> umeng_xp_shape_gradient_grey_5
    int umeng_xp_shape_gradient_grey_7 -> umeng_xp_shape_gradient_grey_7
    int umeng_xp_shape_gradient_grey_list -> umeng_xp_shape_gradient_grey_list
    int umeng_xp_shape_grey -> umeng_xp_shape_grey
    int umeng_xp_standalone_bg -> umeng_xp_standalone_bg
    int umeng_xp_strock_bg_1 -> umeng_xp_strock_bg_1
    int umeng_xp_vertical_divider -> umeng_xp_vertical_divider
    int umeng_xp_x_button -> umeng_xp_x_button
    int umeng_xp_x_button_clicked -> umeng_xp_x_button_clicked
    int umeng_xp_x_button_selector -> umeng_xp_x_button_selector
    int umeng_xp_zhanwei -> umeng_xp_zhanwei
    int view_normal -> view_normal
    int view_push -> view_push
    int view_select -> view_select
    int view_select_border -> view_select_border
    int viewcomment_icon -> viewcomment_icon
    int wdfb_cancel_normal -> wdfb_cancel_normal
    int wdfb_cancel_push -> wdfb_cancel_push
    int wdtg_business -> wdtg_business
    int wdtg_personal -> wdtg_personal
    int wdtg_testcode -> wdtg_testcode
    int weibo_login_select -> weibo_login_select
    int white_point -> white_point
    int xdpy_search_normal -> xdpy_search_normal
    int xdpy_search_push -> xdpy_search_push
    int xxzl_blacklist -> xxzl_blacklist
    int xxzl_del -> xxzl_del
    int xxzl_remark -> xxzl_remark
    int xxzl_star -> xxzl_star
    int ym_shake -> ym_shake
com.hyh.www.R$id -> com.hyh.www.R$id:
    int Check_disturb -> Check_disturb
    int Check_new_alerts -> Check_new_alerts
    int Check_personDetailed_common_on -> Check_personDetailed_common_on
    int Check_personDetailedarrow_blacklist -> Check_personDetailedarrow_blacklist
    int Check_receive_notifications -> Check_receive_notifications
    int Check_top_chat -> Check_top_chat
    int Check_vibration -> Check_vibration
    int Check_voice -> Check_voice
    int HorizontalScrollView01 -> HorizontalScrollView01
    int LinearLayout1 -> LinearLayout1
    int Login_login -> Login_login
    int Login_registered -> Login_registered
    int Registered_registered -> Registered_registered
    int Registered_zhanghao -> Registered_zhanghao
    int Withdrawal_bottom -> Withdrawal_bottom
    int Withdrawal_middle -> Withdrawal_middle
    int Withdrawal_querentixian -> Withdrawal_querentixian
    int Withdrawal_scrollView -> Withdrawal_scrollView
    int account -> account
    int action_settings -> action_settings
    int actionbarLayout -> actionbarLayout
    int add_jine -> add_jine
    int add_pay -> add_pay
    int add_send -> add_send
    int atDescTextView -> atDescTextView
    int atLayout -> atLayout
    int atTextView -> atTextView
    int backImageView -> backImageView
    int bank_number -> bank_number
    int becomeshangjia_bottom -> becomeshangjia_bottom
    int becomeshangjia_changdizhaopian -> becomeshangjia_changdizhaopian
    int becomeshangjia_jingyingxukezheng -> becomeshangjia_jingyingxukezheng
    int becomeshangjia_lianxirenzhaopian -> becomeshangjia_lianxirenzhaopian
    int becomeshangjia_middle -> becomeshangjia_middle
    int becomeshangjia_qiyemingcheng -> becomeshangjia_qiyemingcheng
    int becomeshangjia_scrollView -> becomeshangjia_scrollView
    int becomeshangjia_yinyezhizhao -> becomeshangjia_yinyezhizhao
    int bmapView -> bmapView
    int bpush_download_icon -> bpush_download_icon
    int bpush_download_progress -> bpush_download_progress
    int bpush_media_list_from_text -> bpush_media_list_from_text
    int bpush_media_list_img -> bpush_media_list_img
    int bpush_media_list_return_btn -> bpush_media_list_return_btn
    int bpush_media_list_time_text -> bpush_media_list_time_text
    int bpush_media_list_title -> bpush_media_list_title
    int bpush_media_none_layout -> bpush_media_none_layout
    int bpush_progress_percent -> bpush_progress_percent
    int bpush_progress_text -> bpush_progress_text
    int bpush_progress_title -> bpush_progress_title
    int bpush_type_listview -> bpush_type_listview
    int bt_add_querentianjia -> bt_add_querentianjia
    int bt_bill -> bt_bill
    int bt_cancel -> bt_cancel
    int bt_card -> bt_card
    int bt_complete -> bt_complete
    int bt_confirm -> bt_confirm
    int bt_editbill_send -> bt_editbill_send
    int bt_expand -> bt_expand
    int bt_forgot_password -> bt_forgot_password
    int bt_hobby -> bt_hobby
    int bt_home_circle -> bt_home_circle
    int bt_home_logo -> bt_home_logo
    int bt_home_msg -> bt_home_msg
    int bt_jujue -> bt_jujue
    int bt_more_comment -> bt_more_comment
    int bt_my_post -> bt_my_post
    int bt_remember_agree -> bt_remember_agree
    int bt_remember_pass -> bt_remember_pass
    int bt_send_verification_code -> bt_send_verification_code
    int bt_session_item -> bt_session_item
    int bt_talk -> bt_talk
    int bt_update_img -> bt_update_img
    int bt_wdfb_cancel -> bt_wdfb_cancel
    int bt_zhifu -> bt_zhifu
    int btn_back -> btn_back
    int btn_becomeshangjia_changdizhaopian -> btn_becomeshangjia_changdizhaopian
    int btn_becomeshangjia_jingyingxukezheng -> btn_becomeshangjia_jingyingxukezheng
    int btn_becomeshangjia_lianxirenzhaopian -> btn_becomeshangjia_lianxirenzhaopian
    int btn_becomeshangjia_yinyezhizhao -> btn_becomeshangjia_yinyezhizhao
    int btn_cancel -> btn_cancel
    int btn_chengweiservice -> btn_chengweiservice
    int btn_chengweishangjia -> btn_chengweishangjia
    int btn_editdata -> btn_editdata
    int btn_mypromotion_conggerenshouyi -> btn_mypromotion_conggerenshouyi
    int btn_mypromotion_congshangjiashouyi -> btn_mypromotion_congshangjiashouyi
    int btn_newFriend_phone_account -> btn_newFriend_phone_account
    int btn_pick_photo -> btn_pick_photo
    int btn_post -> btn_post
    int btn_take_photo -> btn_take_photo
    int button1 -> button1
    int button2 -> button2
    int button3 -> button3
    int category_btn -> category_btn
    int changepassworld_OK -> changepassworld_OK
    int changepassworld_bottom -> changepassworld_bottom
    int changepassworld_middle -> changepassworld_middle
    int changepassworld_scrollView -> changepassworld_scrollView
    int changepassworld_xinmima -> changepassworld_xinmima
    int changepassworld_yuanmima -> changepassworld_yuanmima
    int changepassworld_zaicishuru -> changepassworld_zaicishuru
    int chatmessages_chazhao -> chatmessages_chazhao
    int chatmessages_close -> chatmessages_close
    int chatmessages_qingkong -> chatmessages_qingkong
    int chatmessages_scrollView -> chatmessages_scrollView
    int chatmessages_tousu -> chatmessages_tousu
    int checkedImageView -> checkedImageView
    int checkmark -> checkmark
    int choose_bill -> choose_bill
    int choose_billnotewriting -> choose_billnotewriting
    int choose_notewriting -> choose_notewriting
    int choose_picture -> choose_picture
    int choose_pictureone -> choose_pictureone
    int choose_picturethree -> choose_picturethree
    int choose_picturetwo -> choose_picturetwo
    int choose_text -> choose_text
    int closeImageView -> closeImageView
    int commit -> commit
    int contacts_banquan -> contacts_banquan
    int contacts_chuanzhen -> contacts_chuanzhen
    int contacts_company -> contacts_company
    int contacts_computercompany -> contacts_computercompany
    int contacts_fax -> contacts_fax
    int contacts_lianxidianhua -> contacts_lianxidianhua
    int contacts_middle -> contacts_middle
    int contacts_phone -> contacts_phone
    int contacts_scrollView -> contacts_scrollView
    int cover -> cover
    int disturb -> disturb
    int divider -> divider
    int dizhi -> dizhi
    int dlCon -> dlCon
    int dot_group -> dot_group
    int ed_add_beizhu -> ed_add_beizhu
    int ed_add_jine -> ed_add_jine
    int ed_bank_number -> ed_bank_number
    int ed_changepassworld_xinmima -> ed_changepassworld_xinmima
    int ed_changepassworld_yuanmima -> ed_changepassworld_yuanmima
    int ed_changepassworld_zaicishuru -> ed_changepassworld_zaicishuru
    int ed_company_kaihuhang -> ed_company_kaihuhang
    int ed_company_kaihuname -> ed_company_kaihuname
    int ed_company_phone -> ed_company_phone
    int ed_company_zhanghao -> ed_company_zhanghao
    int ed_dizhi -> ed_dizhi
    int ed_edit_beizhu -> ed_edit_beizhu
    int ed_editbill_jine -> ed_editbill_jine
    int ed_enter_password -> ed_enter_password
    int ed_feedback_content -> ed_feedback_content
    int ed_guojia -> ed_guojia
    int ed_input_again -> ed_input_again
    int ed_invite_code -> ed_invite_code
    int ed_jiedao -> ed_jiedao
    int ed_kaihuhang -> ed_kaihuhang
    int ed_linkman -> ed_linkman
    int ed_newFriend_phone_account -> ed_newFriend_phone_account
    int ed_nickname -> ed_nickname
    int ed_numbers -> ed_numbers
    int ed_passworld -> ed_passworld
    int ed_phone -> ed_phone
    int ed_phonenumber -> ed_phonenumber
    int ed_post_content -> ed_post_content
    int ed_quxian -> ed_quxian
    int ed_real_name -> ed_real_name
    int ed_releaseHyh_content -> ed_releaseHyh_content
    int ed_releaseHyh_huifurenshu -> ed_releaseHyh_huifurenshu
    int ed_shengshi -> ed_shengshi
    int ed_shiqu -> ed_shiqu
    int ed_shop_name -> ed_shop_name
    int ed_time -> ed_time
    int ed_time_end -> ed_time_end
    int ed_time_start -> ed_time_start
    int ed_tixian_jine -> ed_tixian_jine
    int ed_topup_account -> ed_topup_account
    int ed_topup_money -> ed_topup_money
    int ed_verification_code -> ed_verification_code
    int ed_yaoqingma -> ed_yaoqingma
    int ed_youxiang -> ed_youxiang
    int ed_zhanghao -> ed_zhanghao
    int ed_zhanghu_name -> ed_zhanghu_name
    int ed_zuoji -> ed_zuoji
    int editbill_TOP -> editbill_TOP
    int editbill_buyersaddress -> editbill_buyersaddress
    int editbill_buyerscontact -> editbill_buyerscontact
    int editbill_buyersname -> editbill_buyersname
    int editbill_jine -> editbill_jine
    int editbill_merchantsaddress -> editbill_merchantsaddress
    int editbill_merchantscontact -> editbill_merchantscontact
    int editbill_merchantsname -> editbill_merchantsname
    int editbill_number -> editbill_number
    int editbill_pay -> editbill_pay
    int editbill_scrollview -> editbill_scrollview
    int editbill_send -> editbill_send
    int editdata_bottom -> editdata_bottom
    int editdata_middle -> editdata_middle
    int editdata_scrollView -> editdata_scrollView
    int end_time -> end_time
    int enter_password -> enter_password
    int et_notes -> et_notes
    int et_post_msg -> et_post_msg
    int fabu_line -> fabu_line
    int fabu_view -> fabu_view
    int feedback_middle -> feedback_middle
    int feedback_one -> feedback_one
    int feedback_tijiao -> feedback_tijiao
    int footer -> footer
    int frameLayout -> frameLayout
    int friends_list_header_text -> friends_list_header_text
    int fullscreen -> fullscreen
    int grid -> grid
    int gridView -> gridView
    int grid_view -> grid_view
    int hScrollView -> hScrollView
    int head_arrowImageView -> head_arrowImageView
    int head_contentLayout -> head_contentLayout
    int head_lastUpdatedTextView -> head_lastUpdatedTextView
    int head_progressBar -> head_progressBar
    int head_tipsTextView -> head_tipsTextView
    int hobby_bottom -> hobby_bottom
    int hobby_bottom_cannel -> hobby_bottom_cannel
    int hobby_cancel -> hobby_cancel
    int hobby_cancel_2 -> hobby_cancel_2
    int hobby_ok -> hobby_ok
    int hobby_one -> hobby_one
    int hobby_title -> hobby_title
    int home -> home
    int home_middle -> home_middle
    int home_title -> home_title
    int horizontalScrolView_list_id -> horizontalScrolView_list_id
    int i_head -> i_head
    int i_hint -> i_hint
    int i_voice -> i_voice
    int ib_add_select -> ib_add_select
    int ib_address -> ib_address
    int ib_card -> ib_card
    int ib_chat -> ib_chat
    int ib_pay -> ib_pay
    int ib_post_select -> ib_post_select
    int ib_post_send -> ib_post_send
    int ib_post_smile -> ib_post_smile
    int ib_switch_sort -> ib_switch_sort
    int image -> image
    int imageRemoveBtn -> imageRemoveBtn
    int imageView -> imageView
    int image_grid -> image_grid
    int imagesLinearLayout -> imagesLinearLayout
    int indicator -> indicator
    int individualaccount_blue -> individualaccount_blue
    int individualaccount_chongzhi -> individualaccount_chongzhi
    int individualaccount_detail -> individualaccount_detail
    int individualaccount_et -> individualaccount_et
    int individualaccount_huodongjuan -> individualaccount_huodongjuan
    int individualaccount_middle -> individualaccount_middle
    int individualaccount_scrollView -> individualaccount_scrollView
    int individualaccount_tixian -> individualaccount_tixian
    int input_again -> input_again
    int invite_code -> invite_code
    int item_iv_face -> item_iv_face
    int iv_ad -> iv_ad
    int iv_add_camera -> iv_add_camera
    int iv_add_pay -> iv_add_pay
    int iv_becomeshangjia_qiyeleixingchoose -> iv_becomeshangjia_qiyeleixingchoose
    int iv_camera -> iv_camera
    int iv_changdizhaopian -> iv_changdizhaopian
    int iv_chatmessages_chazhao -> iv_chatmessages_chazhao
    int iv_chatmessages_close -> iv_chatmessages_close
    int iv_chatmessages_qingkong -> iv_chatmessages_qingkong
    int iv_chatmessages_tousu -> iv_chatmessages_tousu
    int iv_comment -> iv_comment
    int iv_contacts_title -> iv_contacts_title
    int iv_cover -> iv_cover
    int iv_del -> iv_del
    int iv_editbill_pay -> iv_editbill_pay
    int iv_f_card_head -> iv_f_card_head
    int iv_f_head -> iv_f_head
    int iv_f_map -> iv_f_map
    int iv_f_pic -> iv_f_pic
    int iv_f_voice_sign -> iv_f_voice_sign
    int iv_head -> iv_head
    int iv_hyh_pic -> iv_hyh_pic
    int iv_hyh_voice_sign -> iv_hyh_voice_sign
    int iv_img -> iv_img
    int iv_individualaccount_arrow -> iv_individualaccount_arrow
    int iv_individualaccount_chongzhi -> iv_individualaccount_chongzhi
    int iv_individualaccount_detail -> iv_individualaccount_detail
    int iv_individualaccount_tixian -> iv_individualaccount_tixian
    int iv_jingyingxukezheng -> iv_jingyingxukezheng
    int iv_lianxirenzhaopian -> iv_lianxirenzhaopian
    int iv_like -> iv_like
    int iv_my_card_head -> iv_my_card_head
    int iv_my_head -> iv_my_head
    int iv_my_map -> iv_my_map
    int iv_my_pic -> iv_my_pic
    int iv_my_voice_sign -> iv_my_voice_sign
    int iv_mypromotion_conggerenshouyi -> iv_mypromotion_conggerenshouyi
    int iv_mypromotion_congshangjiashouyi -> iv_mypromotion_congshangjiashouyi
    int iv_mypromotion_testcode -> iv_mypromotion_testcode
    int iv_near_img -> iv_near_img
    int iv_personDetailed_blacklist -> iv_personDetailed_blacklist
    int iv_personDetailed_del -> iv_personDetailed_del
    int iv_personDetailed_setting -> iv_personDetailed_setting
    int iv_personDetailed_xingbiao -> iv_personDetailed_xingbiao
    int iv_personDetailedarrow_del -> iv_personDetailedarrow_del
    int iv_personDetailedarrow_setting -> iv_personDetailedarrow_setting
    int iv_person_account -> iv_person_account
    int iv_person_accountarrow -> iv_person_accountarrow
    int iv_person_editdata -> iv_person_editdata
    int iv_person_editdataarrow -> iv_person_editdataarrow
    int iv_person_head -> iv_person_head
    int iv_person_promotion -> iv_person_promotion
    int iv_person_promotionarrow -> iv_person_promotionarrow
    int iv_person_setting -> iv_person_setting
    int iv_person_settingarrow -> iv_person_settingarrow
    int iv_photo -> iv_photo
    int iv_pic -> iv_pic
    int iv_releaseHyh_camera -> iv_releaseHyh_camera
    int iv_releaseHyh_fabufanwei -> iv_releaseHyh_fabufanwei
    int iv_releaseHyh_photo -> iv_releaseHyh_photo
    int iv_releaseHyh_shangjialexing -> iv_releaseHyh_shangjialexing
    int iv_releaseHyh_youxiaoshijian -> iv_releaseHyh_youxiaoshijian
    int iv_replace_picture -> iv_replace_picture
    int iv_reset -> iv_reset
    int iv_select -> iv_select
    int iv_session_item -> iv_session_item
    int iv_sex -> iv_sex
    int iv_shangjiaDetailed_blacklist -> iv_shangjiaDetailed_blacklist
    int iv_shangjiaDetailed_common_on -> iv_shangjiaDetailed_common_on
    int iv_shangjiaDetailed_del -> iv_shangjiaDetailed_del
    int iv_shangjiaDetailed_setting -> iv_shangjiaDetailed_setting
    int iv_shangjiaDetailed_xingbiao -> iv_shangjiaDetailed_xingbiao
    int iv_shangjiaDetailedarrow_blacklist -> iv_shangjiaDetailedarrow_blacklist
    int iv_shangjiaDetailedarrow_del -> iv_shangjiaDetailedarrow_del
    int iv_shangjiaDetailedarrow_setting -> iv_shangjiaDetailedarrow_setting
    int iv_size -> iv_size
    int iv_sys_head -> iv_sys_head
    int iv_systemsetting_banbengengxin -> iv_systemsetting_banbengengxin
    int iv_systemsetting_contact -> iv_systemsetting_contact
    int iv_systemsetting_exit -> iv_systemsetting_exit
    int iv_systemsetting_feedback -> iv_systemsetting_feedback
    int iv_systemsetting_xinxiaoxitixing -> iv_systemsetting_xinxiaoxitixing
    int iv_systemsetting_xiugaimima -> iv_systemsetting_xiugaimima
    int iv_voice_sign -> iv_voice_sign
    int iv_welcome -> iv_welcome
    int iv_withdrawal_bank -> iv_withdrawal_bank
    int iv_yinyezhizhao -> iv_yinyezhizhao
    int jiedao -> jiedao
    int left -> left
    int list_child -> list_child
    int list_hobby -> list_hobby
    int list_view -> list_view
    int list_view_no_scroll -> list_view_no_scroll
    int llContent -> llContent
    int ll_action_box -> ll_action_box
    int ll_ad -> ll_ad
    int ll_adv -> ll_adv
    int ll_all_order -> ll_all_order
    int ll_arrows -> ll_arrows
    int ll_bottom_action_box -> ll_bottom_action_box
    int ll_box2 -> ll_box2
    int ll_buttons -> ll_buttons
    int ll_c_head -> ll_c_head
    int ll_changdizhaopian_box -> ll_changdizhaopian_box
    int ll_chat -> ll_chat
    int ll_chat_action_box -> ll_chat_action_box
    int ll_chat_box -> ll_chat_box
    int ll_chat_person -> ll_chat_person
    int ll_chengweiservice -> ll_chengweiservice
    int ll_comment_box -> ll_comment_box
    int ll_comment_list -> ll_comment_list
    int ll_comment_list_box -> ll_comment_list_box
    int ll_company_box -> ll_company_box
    int ll_diqu_box -> ll_diqu_box
    int ll_end_pay -> ll_end_pay
    int ll_f_box -> ll_f_box
    int ll_f_card -> ll_f_card
    int ll_f_map -> ll_f_map
    int ll_f_pic -> ll_f_pic
    int ll_f_yuyin -> ll_f_yuyin
    int ll_footer_box -> ll_footer_box
    int ll_head1 -> ll_head1
    int ll_head2 -> ll_head2
    int ll_head3 -> ll_head3
    int ll_head4 -> ll_head4
    int ll_hyh_yuyin -> ll_hyh_yuyin
    int ll_img_box -> ll_img_box
    int ll_juli_box -> ll_juli_box
    int ll_like_comment_count -> ll_like_comment_count
    int ll_like_list -> ll_like_list
    int ll_list_nearby -> ll_list_nearby
    int ll_memo_dialog -> ll_memo_dialog
    int ll_my_box -> ll_my_box
    int ll_my_card -> ll_my_card
    int ll_my_map -> ll_my_map
    int ll_my_pic -> ll_my_pic
    int ll_my_yuyin -> ll_my_yuyin
    int ll_nearbycount -> ll_nearbycount
    int ll_notes -> ll_notes
    int ll_photo_select -> ll_photo_select
    int ll_pic_list -> ll_pic_list
    int ll_post_box -> ll_post_box
    int ll_right_box -> ll_right_box
    int ll_select_origin -> ll_select_origin
    int ll_service -> ll_service
    int ll_time_box -> ll_time_box
    int ll_two_button -> ll_two_button
    int ll_unreadcount -> ll_unreadcount
    int ll_voice -> ll_voice
    int loading_bg -> loading_bg
    int loading_cirle_view -> loading_cirle_view
    int login_middle -> login_middle
    int logoImageView -> logoImageView
    int mainRelLayout -> mainRelLayout
    int margin -> margin
    int mask -> mask
    int menu_session_contacts -> menu_session_contacts
    int menu_session_hyh -> menu_session_hyh
    int menu_session_privatechat -> menu_session_privatechat
    int mypromotion_MENU -> mypromotion_MENU
    int mypromotion_conggerenshouyi -> mypromotion_conggerenshouyi
    int mypromotion_congshangjiashouyi -> mypromotion_congshangjiashouyi
    int mypromotion_gerenmoney -> mypromotion_gerenmoney
    int mypromotion_gerenshouyi -> mypromotion_gerenshouyi
    int mypromotion_middle -> mypromotion_middle
    int mypromotion_scrollView -> mypromotion_scrollView
    int mypromotion_shangjiamoney -> mypromotion_shangjiamoney
    int mypromotion_shangjiashouyi -> mypromotion_shangjiashouyi
    int mypromotion_shouyi -> mypromotion_shouyi
    int mypromotion_tuiguang -> mypromotion_tuiguang
    int mypromotion_yaoqingma -> mypromotion_yaoqingma
    int myrelease -> myrelease
    int myrelease_NUMBER -> myrelease_NUMBER
    int myrelease_bg -> myrelease_bg
    int myrelease_fabufanwei -> myrelease_fabufanwei
    int myrelease_huifu -> myrelease_huifu
    int myrelease_nopic -> myrelease_nopic
    int myrelease_one -> myrelease_one
    int myrelease_shangjia -> myrelease_shangjia
    int myrelease_shengyu -> myrelease_shengyu
    int myrelease_two -> myrelease_two
    int myrelease_wdfb_cancel -> myrelease_wdfb_cancel
    int myrelease_yuyin -> myrelease_yuyin
    int name -> name
    int nameTextView -> nameTextView
    int nearby -> nearby
    int newFriend_Relative_one -> newFriend_Relative_one
    int newFriend_account_one -> newFriend_account_one
    int newFriend_add -> newFriend_add
    int newFriend_agreedone -> newFriend_agreedone
    int newFriend_middle -> newFriend_middle
    int newFriend_nickname_one -> newFriend_nickname_one
    int newFriend_no -> newFriend_no
    int newFriend_phone_account -> newFriend_phone_account
    int newFriend_photo_one -> newFriend_photo_one
    int newFriend_refusedone -> newFriend_refusedone
    int newFriend_scrollView -> newFriend_scrollView
    int newFriend_tongxunlu -> newFriend_tongxunlu
    int newFriend_weixin -> newFriend_weixin
    int new_alerts -> new_alerts
    int newmessage_middle -> newmessage_middle
    int newmessage_scrollView -> newmessage_scrollView
    int nickname -> nickname
    int notification_icon -> notification_icon
    int notification_text -> notification_text
    int notification_time -> notification_time
    int notification_title -> notification_title
    int okImageView -> okImageView
    int pager -> pager
    int pager_control -> pager_control
    int passworld -> passworld
    int pb_load_progress -> pb_load_progress
    int person -> person
    int personDetailed_Relative -> personDetailed_Relative
    int personDetailed_account -> personDetailed_account
    int personDetailed_accountnumber -> personDetailed_accountnumber
    int personDetailed_addfriend -> personDetailed_addfriend
    int personDetailed_blacklist -> personDetailed_blacklist
    int personDetailed_del -> personDetailed_del
    int personDetailed_diqu -> personDetailed_diqu
    int personDetailed_havefriends -> personDetailed_havefriends
    int personDetailed_laiyuan -> personDetailed_laiyuan
    int personDetailed_nickname -> personDetailed_nickname
    int personDetailed_one -> personDetailed_one
    int personDetailed_photo -> personDetailed_photo
    int personDetailed_scrollView -> personDetailed_scrollView
    int personDetailed_send -> personDetailed_send
    int personDetailed_setting -> personDetailed_setting
    int personDetailed_weibo -> personDetailed_weibo
    int personDetailed_withoutfriend -> personDetailed_withoutfriend
    int personDetailed_xingbiao -> personDetailed_xingbiao
    int personDetailed_xxzl_star -> personDetailed_xxzl_star
    int person_Relative -> person_Relative
    int person_account -> person_account
    int person_accountnumber -> person_accountnumber
    int person_btn -> person_btn
    int person_editdata -> person_editdata
    int person_my_post -> person_my_post
    int person_nickname -> person_nickname
    int person_one -> person_one
    int person_photo -> person_photo
    int person_promotion -> person_promotion
    int person_scrollView -> person_scrollView
    int person_setting -> person_setting
    int pop_layout -> pop_layout
    int preview -> preview
    int progressBar -> progressBar
    int quxian -> quxian
    int rb_business_no -> rb_business_no
    int rb_business_yes -> rb_business_yes
    int rb_online_pay -> rb_online_pay
    int rb_pay_item -> rb_pay_item
    int rb_wx_pay -> rb_wx_pay
    int rb_yue_pay -> rb_yue_pay
    int real_name -> real_name
    int receive_notifications -> receive_notifications
    int registered_middle -> registered_middle
    int registered_scrollView -> registered_scrollView
    int releaseHyh_TOP -> releaseHyh_TOP
    int releaseHyh_bottom -> releaseHyh_bottom
    int releaseHyh_fabufanwei -> releaseHyh_fabufanwei
    int releaseHyh_fbhyh_speak -> releaseHyh_fbhyh_speak
    int releaseHyh_huifurenshu -> releaseHyh_huifurenshu
    int releaseHyh_scrollview -> releaseHyh_scrollview
    int releaseHyh_shangjialexing -> releaseHyh_shangjialexing
    int releaseHyh_youxiaoshijian -> releaseHyh_youxiaoshijian
    int releasehyh_linear -> releasehyh_linear
    int replace_picture -> replace_picture
    int rg_pay_list -> rg_pay_list
    int rg_user_type -> rg_user_type
    int right -> right
    int rl_bg_click -> rl_bg_click
    int rl_bill -> rl_bill
    int rl_bill_padding -> rl_bill_padding
    int rl_c_pay -> rl_c_pay
    int rl_c_pay_padding -> rl_c_pay_padding
    int rl_card_left -> rl_card_left
    int rl_company_kaihuhang -> rl_company_kaihuhang
    int rl_company_kaihuname -> rl_company_kaihuname
    int rl_company_phone -> rl_company_phone
    int rl_company_zhanghao -> rl_company_zhanghao
    int rl_emoji_action_box -> rl_emoji_action_box
    int rl_f_yuyin -> rl_f_yuyin
    int rl_guojia -> rl_guojia
    int rl_hyh -> rl_hyh
    int rl_hyh_yuyin -> rl_hyh_yuyin
    int rl_issend -> rl_issend
    int rl_linkman -> rl_linkman
    int rl_listView -> rl_listView
    int rl_my_yuyin -> rl_my_yuyin
    int rl_numbers -> rl_numbers
    int rl_pay_bill -> rl_pay_bill
    int rl_phone -> rl_phone
    int rl_post_distance -> rl_post_distance
    int rl_releaseHyh_photo -> rl_releaseHyh_photo
    int rl_root -> rl_root
    int rl_sex -> rl_sex
    int rl_shengyu_time -> rl_shengyu_time
    int rl_shop_name -> rl_shop_name
    int rl_time -> rl_time
    int rl_yaoqingma -> rl_yaoqingma
    int rl_yuyin_bg -> rl_yuyin_bg
    int rootView -> rootView
    int round_group_item_arrow -> round_group_item_arrow
    int round_group_item_container -> round_group_item_container
    int round_group_item_hint -> round_group_item_hint
    int round_group_item_left -> round_group_item_left
    int round_group_item_left_title -> round_group_item_left_title
    int round_group_item_name -> round_group_item_name
    int round_group_item_right -> round_group_item_right
    int round_group_item_root -> round_group_item_root
    int round_group_item_titlePic -> round_group_item_titlePic
    int selected_view -> selected_view
    int session -> session
    int session_item -> session_item
    int session_radioGroup -> session_radioGroup
    int shangjiaDetailed_Relative -> shangjiaDetailed_Relative
    int shangjiaDetailed_account -> shangjiaDetailed_account
    int shangjiaDetailed_accountnumber -> shangjiaDetailed_accountnumber
    int shangjiaDetailed_addfriend -> shangjiaDetailed_addfriend
    int shangjiaDetailed_blacklist -> shangjiaDetailed_blacklist
    int shangjiaDetailed_del -> shangjiaDetailed_del
    int shangjiaDetailed_diqu -> shangjiaDetailed_diqu
    int shangjiaDetailed_enterprisename -> shangjiaDetailed_enterprisename
    int shangjiaDetailed_enterprisetype -> shangjiaDetailed_enterprisetype
    int shangjiaDetailed_havefriends -> shangjiaDetailed_havefriends
    int shangjiaDetailed_nickname -> shangjiaDetailed_nickname
    int shangjiaDetailed_one -> shangjiaDetailed_one
    int shangjiaDetailed_photo -> shangjiaDetailed_photo
    int shangjiaDetailed_scrollView -> shangjiaDetailed_scrollView
    int shangjiaDetailed_send -> shangjiaDetailed_send
    int shangjiaDetailed_setting -> shangjiaDetailed_setting
    int shangjiaDetailed_withoutfriend -> shangjiaDetailed_withoutfriend
    int shangjiaDetailed_xingbiao -> shangjiaDetailed_xingbiao
    int shangjiaDetailed_xxzl_star -> shangjiaDetailed_xxzl_star
    int shangjiabBill_bottom -> shangjiabBill_bottom
    int shangjiabBill_btn -> shangjiabBill_btn
    int shangjiabBill_btnjujue -> shangjiabBill_btnjujue
    int shangjiabBill_btnqueren -> shangjiabBill_btnqueren
    int shangjiabBill_buyersaddress -> shangjiabBill_buyersaddress
    int shangjiabBill_buyerscontact -> shangjiabBill_buyerscontact
    int shangjiabBill_buyersname -> shangjiabBill_buyersname
    int shangjiabBill_jine -> shangjiabBill_jine
    int shangjiabBill_merchantsaddress -> shangjiabBill_merchantsaddress
    int shangjiabBill_merchantscontact -> shangjiabBill_merchantscontact
    int shangjiabBill_merchantsname -> shangjiabBill_merchantsname
    int shangjiabBill_middle -> shangjiabBill_middle
    int shangjiabBill_number -> shangjiabBill_number
    int shangjiabBill_scrollView -> shangjiabBill_scrollView
    int shangjiabBill_t -> shangjiabBill_t
    int share_gridview -> share_gridview
    int share_icon -> share_icon
    int share_title -> share_title
    int shengshi -> shengshi
    int shiqu -> shiqu
    int shouru -> shouru
    int size -> size
    int start_time -> start_time
    int systemmessage_banben -> systemmessage_banben
    int systemsetting_banbengengxin -> systemsetting_banbengengxin
    int systemsetting_contact -> systemsetting_contact
    int systemsetting_exit -> systemsetting_exit
    int systemsetting_feedback -> systemsetting_feedback
    int systemsetting_middle -> systemsetting_middle
    int systemsetting_scrollView -> systemsetting_scrollView
    int systemsetting_xinxiaoxitixing -> systemsetting_xinxiaoxitixing
    int systemsetting_xiugaimima -> systemsetting_xiugaimima
    int textCounterTextView -> textCounterTextView
    int textEditText -> textEditText
    int text_end_time -> text_end_time
    int text_individualaccount_huodongjuan -> text_individualaccount_huodongjuan
    int text_personDetailed_diqu -> text_personDetailed_diqu
    int text_personDetailed_laiyuan -> text_personDetailed_laiyuan
    int text_shangjiaDetailed_diqu -> text_shangjiaDetailed_diqu
    int text_shangjiaDetailed_enterprisename -> text_shangjiaDetailed_enterprisename
    int text_shangjiaDetailed_enterprisetype -> text_shangjiaDetailed_enterprisetype
    int text_start_time -> text_start_time
    int text_systemmessage_banben -> text_systemmessage_banben
    int timeline_area -> timeline_area
    int titleEditText -> titleEditText
    int titleLayout -> titleLayout
    int titled_text -> titled_text
    int tixian_jine -> tixian_jine
    int top_chat -> top_chat
    int topup_account -> topup_account
    int topup_bottom -> topup_bottom
    int topup_middle -> topup_middle
    int topup_money -> topup_money
    int topup_scrollView -> topup_scrollView
    int topup_tijiao -> topup_tijiao
    int tv_12_height -> tv_12_height
    int tv_add_choose -> tv_add_choose
    int tv_add_jine -> tv_add_jine
    int tv_add_pay -> tv_add_pay
    int tv_all_order -> tv_all_order
    int tv_bank_number -> tv_bank_number
    int tv_becomeshangjia_changdizhaopian -> tv_becomeshangjia_changdizhaopian
    int tv_becomeshangjia_jingyingxukezheng -> tv_becomeshangjia_jingyingxukezheng
    int tv_becomeshangjia_lianxirenzhaopian -> tv_becomeshangjia_lianxirenzhaopian
    int tv_becomeshangjia_qiyeleixingchoose -> tv_becomeshangjia_qiyeleixingchoose
    int tv_becomeshangjia_qiyemingcheng -> tv_becomeshangjia_qiyemingcheng
    int tv_becomeshangjia_yinyezhizhao -> tv_becomeshangjia_yinyezhizhao
    int tv_beizhu -> tv_beizhu
    int tv_beizhu4 -> tv_beizhu4
    int tv_bianhao3 -> tv_bianhao3
    int tv_bill_code -> tv_bill_code
    int tv_bill_code_val -> tv_bill_code_val
    int tv_bill_money -> tv_bill_money
    int tv_bill_money_val -> tv_bill_money_val
    int tv_bill_notes -> tv_bill_notes
    int tv_bill_time -> tv_bill_time
    int tv_bill_time_val -> tv_bill_time_val
    int tv_billnotewritingtime_pay -> tv_billnotewritingtime_pay
    int tv_billnotewritingtime_paynumber -> tv_billnotewritingtime_paynumber
    int tv_black -> tv_black
    int tv_buyersaddress -> tv_buyersaddress
    int tv_buyerscontact -> tv_buyerscontact
    int tv_buyersname -> tv_buyersname
    int tv_c_code -> tv_c_code
    int tv_c_code_val -> tv_c_code_val
    int tv_c_money -> tv_c_money
    int tv_c_money_val -> tv_c_money_val
    int tv_c_notes -> tv_c_notes
    int tv_c_pay -> tv_c_pay
    int tv_c_time -> tv_c_time
    int tv_c_time_val -> tv_c_time_val
    int tv_c_txt -> tv_c_txt
    int tv_cancel -> tv_cancel
    int tv_cancel2 -> tv_cancel2
    int tv_changepassworld_xinmima -> tv_changepassworld_xinmima
    int tv_changepassworld_yuanmima -> tv_changepassworld_yuanmima
    int tv_changepassworld_zaicishuru -> tv_changepassworld_zaicishuru
    int tv_chatmessages_chazhao -> tv_chatmessages_chazhao
    int tv_chatmessages_close -> tv_chatmessages_close
    int tv_chatmessages_dongjie -> tv_chatmessages_dongjie
    int tv_chatmessages_qingkong -> tv_chatmessages_qingkong
    int tv_chatmessages_tousu -> tv_chatmessages_tousu
    int tv_chengweishangjia -> tv_chengweishangjia
    int tv_choose_bill -> tv_choose_bill
    int tv_choose_billnotewriting -> tv_choose_billnotewriting
    int tv_choose_billnotewritingnumber -> tv_choose_billnotewritingnumber
    int tv_choose_billnumber -> tv_choose_billnumber
    int tv_choose_picture -> tv_choose_picture
    int tv_choose_text -> tv_choose_text
    int tv_comment -> tv_comment
    int tv_company_kaihuhang -> tv_company_kaihuhang
    int tv_company_kaihuname -> tv_company_kaihuname
    int tv_company_name -> tv_company_name
    int tv_company_phone -> tv_company_phone
    int tv_company_zhanghao -> tv_company_zhanghao
    int tv_confim -> tv_confim
    int tv_contacts_banquan -> tv_contacts_banquan
    int tv_contacts_bq -> tv_contacts_bq
    int tv_contacts_chuanzhen -> tv_contacts_chuanzhen
    int tv_contacts_chuanzhennumber -> tv_contacts_chuanzhennumber
    int tv_contacts_company -> tv_contacts_company
    int tv_contacts_hyhbanquan -> tv_contacts_hyhbanquan
    int tv_contacts_phone -> tv_contacts_phone
    int tv_contacts_phonenumber -> tv_contacts_phonenumber
    int tv_contacts_title -> tv_contacts_title
    int tv_content -> tv_content
    int tv_count -> tv_count
    int tv_count_down_voice_time -> tv_count_down_voice_time
    int tv_delete -> tv_delete
    int tv_diff_time -> tv_diff_time
    int tv_diff_time_name -> tv_diff_time_name
    int tv_distance -> tv_distance
    int tv_disturb -> tv_disturb
    int tv_dizhi -> tv_dizhi
    int tv_editbill_buyersaddress -> tv_editbill_buyersaddress
    int tv_editbill_buyerscontact -> tv_editbill_buyerscontact
    int tv_editbill_buyersname -> tv_editbill_buyersname
    int tv_editbill_choose -> tv_editbill_choose
    int tv_editbill_jine -> tv_editbill_jine
    int tv_editbill_merchantsaddress -> tv_editbill_merchantsaddress
    int tv_editbill_merchantscontact -> tv_editbill_merchantscontact
    int tv_editbill_merchantsname -> tv_editbill_merchantsname
    int tv_editbill_number -> tv_editbill_number
    int tv_editbill_pay -> tv_editbill_pay
    int tv_end_pay -> tv_end_pay
    int tv_end_time -> tv_end_time
    int tv_enter_password -> tv_enter_password
    int tv_event_coupons -> tv_event_coupons
    int tv_f_address -> tv_f_address
    int tv_f_address_val -> tv_f_address_val
    int tv_f_name -> tv_f_name
    int tv_f_name_val -> tv_f_name_val
    int tv_f_phone -> tv_f_phone
    int tv_f_phone_val -> tv_f_phone_val
    int tv_f_text -> tv_f_text
    int tv_f_yuyin_len -> tv_f_yuyin_len
    int tv_fabu -> tv_fabu
    int tv_fabuchenggong -> tv_fabuchenggong
    int tv_fabufanwei -> tv_fabufanwei
    int tv_friend_request_count -> tv_friend_request_count
    int tv_goumaiyonghu -> tv_goumaiyonghu
    int tv_gps -> tv_gps
    int tv_guojia -> tv_guojia
    int tv_hint -> tv_hint
    int tv_hint_msg -> tv_hint_msg
    int tv_hobby_radio -> tv_hobby_radio
    int tv_home_sy -> tv_home_sy
    int tv_horizontal_line -> tv_horizontal_line
    int tv_huifu -> tv_huifu
    int tv_huifurenshu -> tv_huifurenshu
    int tv_huodongjuan -> tv_huodongjuan
    int tv_hyh_notes -> tv_hyh_notes
    int tv_hyh_time -> tv_hyh_time
    int tv_hyh_time_val -> tv_hyh_time_val
    int tv_hyh_txt -> tv_hyh_txt
    int tv_hyh_yuyin_len -> tv_hyh_yuyin_len
    int tv_individualaccount_chongzhi -> tv_individualaccount_chongzhi
    int tv_individualaccount_detail -> tv_individualaccount_detail
    int tv_individualaccount_huodongjuan -> tv_individualaccount_huodongjuan
    int tv_individualaccount_tixian -> tv_individualaccount_tixian
    int tv_individualaccount_tixian_balance -> tv_individualaccount_tixian_balance
    int tv_input_again -> tv_input_again
    int tv_invite_code -> tv_invite_code
    int tv_issend -> tv_issend
    int tv_issend_val -> tv_issend_val
    int tv_jiaoyi -> tv_jiaoyi
    int tv_jiedao -> tv_jiedao
    int tv_jine3 -> tv_jine3
    int tv_jine4 -> tv_jine4
    int tv_leixing3 -> tv_leixing3
    int tv_leixing4 -> tv_leixing4
    int tv_like_comment_count -> tv_like_comment_count
    int tv_linkman -> tv_linkman
    int tv_load_more -> tv_load_more
    int tv_merchantsaddress -> tv_merchantsaddress
    int tv_merchantscontact -> tv_merchantscontact
    int tv_merchantsname -> tv_merchantsname
    int tv_msg -> tv_msg
    int tv_my_address -> tv_my_address
    int tv_my_address_val -> tv_my_address_val
    int tv_my_name -> tv_my_name
    int tv_my_name_val -> tv_my_name_val
    int tv_my_phone -> tv_my_phone
    int tv_my_phone_val -> tv_my_phone_val
    int tv_my_text -> tv_my_text
    int tv_my_yuyin_len -> tv_my_yuyin_len
    int tv_mypromotion_conggerenshouyi -> tv_mypromotion_conggerenshouyi
    int tv_mypromotion_congshangjiashouyi -> tv_mypromotion_congshangjiashouyi
    int tv_mypromotion_gerenmoney -> tv_mypromotion_gerenmoney
    int tv_mypromotion_gerenyuan -> tv_mypromotion_gerenyuan
    int tv_mypromotion_shangjiamoney -> tv_mypromotion_shangjiamoney
    int tv_mypromotion_shangjiayuan -> tv_mypromotion_shangjiayuan
    int tv_mypromotion_yaoqingma -> tv_mypromotion_yaoqingma
    int tv_mypromotion_yaoqingmanumber -> tv_mypromotion_yaoqingmanumber
    int tv_myrelease_beizhu -> tv_myrelease_beizhu
    int tv_near_content -> tv_near_content
    int tv_near_new_msg -> tv_near_new_msg
    int tv_nearbycount -> tv_nearbycount
    int tv_new_alerts -> tv_new_alerts
    int tv_new_msg -> tv_new_msg
    int tv_nickname -> tv_nickname
    int tv_notewriting -> tv_notewriting
    int tv_number -> tv_number
    int tv_numbers -> tv_numbers
    int tv_order_number -> tv_order_number
    int tv_order_time -> tv_order_time
    int tv_passworld -> tv_passworld
    int tv_pay_head -> tv_pay_head
    int tv_pay_tradecode -> tv_pay_tradecode
    int tv_personDetailed_blacklist -> tv_personDetailed_blacklist
    int tv_personDetailed_del -> tv_personDetailed_del
    int tv_personDetailed_diqu -> tv_personDetailed_diqu
    int tv_personDetailed_laiyuan -> tv_personDetailed_laiyuan
    int tv_personDetailed_setting -> tv_personDetailed_setting
    int tv_personDetailed_xingbiao -> tv_personDetailed_xingbiao
    int tv_person_account -> tv_person_account
    int tv_person_editdata -> tv_person_editdata
    int tv_person_promotion -> tv_person_promotion
    int tv_person_setting -> tv_person_setting
    int tv_phone -> tv_phone
    int tv_phone_name -> tv_phone_name
    int tv_phonenumber -> tv_phonenumber
    int tv_post_distance -> tv_post_distance
    int tv_post_distance_title -> tv_post_distance_title
    int tv_post_far -> tv_post_far
    int tv_quxian -> tv_quxian
    int tv_real_name -> tv_real_name
    int tv_receive_notifications -> tv_receive_notifications
    int tv_receive_time -> tv_receive_time
    int tv_refund -> tv_refund
    int tv_releaseHyh_fabufanwei -> tv_releaseHyh_fabufanwei
    int tv_releaseHyh_fabufanwei_val -> tv_releaseHyh_fabufanwei_val
    int tv_releaseHyh_huifurenshu -> tv_releaseHyh_huifurenshu
    int tv_releaseHyh_shangjialexing -> tv_releaseHyh_shangjialexing
    int tv_releaseHyh_shangjialexing_val -> tv_releaseHyh_shangjialexing_val
    int tv_releaseHyh_youxiaoshijian -> tv_releaseHyh_youxiaoshijian
    int tv_releaseHyh_youxiaoshijian_val -> tv_releaseHyh_youxiaoshijian_val
    int tv_replace_picture -> tv_replace_picture
    int tv_reply -> tv_reply
    int tv_ruhetuiguang -> tv_ruhetuiguang
    int tv_select -> tv_select
    int tv_service -> tv_service
    int tv_session_item_context -> tv_session_item_context
    int tv_session_item_name -> tv_session_item_name
    int tv_session_item_time -> tv_session_item_time
    int tv_sex -> tv_sex
    int tv_sex_val -> tv_sex_val
    int tv_shangjia -> tv_shangjia
    int tv_shangjiaDetailed_blacklist -> tv_shangjiaDetailed_blacklist
    int tv_shangjiaDetailed_del -> tv_shangjiaDetailed_del
    int tv_shangjiaDetailed_diqu -> tv_shangjiaDetailed_diqu
    int tv_shangjiaDetailed_enterprisename -> tv_shangjiaDetailed_enterprisename
    int tv_shangjiaDetailed_enterprisetype -> tv_shangjiaDetailed_enterprisetype
    int tv_shangjiaDetailed_setting -> tv_shangjiaDetailed_setting
    int tv_shangjiaDetailed_xingbiao -> tv_shangjiaDetailed_xingbiao
    int tv_shangjiabBill_beizhu -> tv_shangjiabBill_beizhu
    int tv_shangjiabBill_buyersaddress -> tv_shangjiabBill_buyersaddress
    int tv_shangjiabBill_buyerscontact -> tv_shangjiabBill_buyerscontact
    int tv_shangjiabBill_buyersname -> tv_shangjiabBill_buyersname
    int tv_shangjiabBill_jine -> tv_shangjiabBill_jine
    int tv_shangjiabBill_merchantsaddress -> tv_shangjiabBill_merchantsaddress
    int tv_shangjiabBill_merchantscontact -> tv_shangjiabBill_merchantscontact
    int tv_shangjiabBill_merchantsname -> tv_shangjiabBill_merchantsname
    int tv_shangjiabBill_number -> tv_shangjiabBill_number
    int tv_shangjiabBill_time -> tv_shangjiabBill_time
    int tv_shangjiabBillbuyersaddress -> tv_shangjiabBillbuyersaddress
    int tv_shangjiabBillbuyerscontact -> tv_shangjiabBillbuyerscontact
    int tv_shangjiabBillbuyersname -> tv_shangjiabBillbuyersname
    int tv_shangjiabBilljine -> tv_shangjiabBilljine
    int tv_shangjiabBillmerchantsaddress -> tv_shangjiabBillmerchantsaddress
    int tv_shangjiabBillmerchantscontact -> tv_shangjiabBillmerchantscontact
    int tv_shangjiabBillmerchantsname -> tv_shangjiabBillmerchantsname
    int tv_shangjiabBillnumber -> tv_shangjiabBillnumber
    int tv_shangjiabBilltime -> tv_shangjiabBilltime
    int tv_shangjialexing -> tv_shangjialexing
    int tv_shengshi -> tv_shengshi
    int tv_shengyu -> tv_shengyu
    int tv_shengyu_time -> tv_shengyu_time
    int tv_shengyu_time_val -> tv_shengyu_time_val
    int tv_shengyushijian -> tv_shengyushijian
    int tv_shijian1 -> tv_shijian1
    int tv_shijian2 -> tv_shijian2
    int tv_shiqu -> tv_shiqu
    int tv_shop_name -> tv_shop_name
    int tv_shop_service -> tv_shop_service
    int tv_shop_username -> tv_shop_username
    int tv_shouru -> tv_shouru
    int tv_shourunumber -> tv_shourunumber
    int tv_start_time -> tv_start_time
    int tv_state -> tv_state
    int tv_system_title -> tv_system_title
    int tv_systemmessage_banben -> tv_systemmessage_banben
    int tv_systemsetting_banbengengxin -> tv_systemsetting_banbengengxin
    int tv_systemsetting_contact -> tv_systemsetting_contact
    int tv_systemsetting_exit -> tv_systemsetting_exit
    int tv_systemsetting_feedback -> tv_systemsetting_feedback
    int tv_systemsetting_xinxiaoxitixing -> tv_systemsetting_xinxiaoxitixing
    int tv_systemsetting_xiugaimima -> tv_systemsetting_xiugaimima
    int tv_ticheng -> tv_ticheng
    int tv_time -> tv_time
    int tv_time_2 -> tv_time_2
    int tv_time_3 -> tv_time_3
    int tv_time_4 -> tv_time_4
    int tv_time_pay -> tv_time_pay
    int tv_time_paynumber -> tv_time_paynumber
    int tv_time_title -> tv_time_title
    int tv_time_val -> tv_time_val
    int tv_title -> tv_title
    int tv_tixian_jine -> tv_tixian_jine
    int tv_top_chat -> tv_top_chat
    int tv_topup_account -> tv_topup_account
    int tv_topup_money -> tv_topup_money
    int tv_tuiguangfangfa_one -> tv_tuiguangfangfa_one
    int tv_tuiguangfangfa_two -> tv_tuiguangfangfa_two
    int tv_tuiguangfangfa_yonghu -> tv_tuiguangfangfa_yonghu
    int tv_type4 -> tv_type4
    int tv_type_price_range_title -> tv_type_price_range_title
    int tv_unreadcount -> tv_unreadcount
    int tv_unreadcount_hyh -> tv_unreadcount_hyh
    int tv_unreadcount_private -> tv_unreadcount_private
    int tv_username -> tv_username
    int tv_username3 -> tv_username3
    int tv_verification_code -> tv_verification_code
    int tv_vibration -> tv_vibration
    int tv_voice -> tv_voice
    int tv_wdfb_cancel -> tv_wdfb_cancel
    int tv_withdrawal_bank -> tv_withdrawal_bank
    int tv_withdrawal_bankchoose -> tv_withdrawal_bankchoose
    int tv_withdrawal_kaihuhang -> tv_withdrawal_kaihuhang
    int tv_yaoqingma -> tv_yaoqingma
    int tv_yonghu -> tv_yonghu
    int tv_youxiang -> tv_youxiang
    int tv_yuanyin -> tv_yuanyin
    int tv_yue -> tv_yue
    int tv_yuenumber -> tv_yuenumber
    int tv_zhanghao -> tv_zhanghao
    int tv_zhanghu_name -> tv_zhanghu_name
    int tv_zhichu -> tv_zhichu
    int tv_zhichunumber -> tv_zhichunumber
    int tv_zuoji -> tv_zuoji
    int txtContent -> txtContent
    int txt_title -> txt_title
    int umeng_common_icon_view -> umeng_common_icon_view
    int umeng_common_notification -> umeng_common_notification
    int umeng_common_notification_controller -> umeng_common_notification_controller
    int umeng_common_progress_bar -> umeng_common_progress_bar
    int umeng_common_progress_text -> umeng_common_progress_text
    int umeng_common_rich_notification_cancel -> umeng_common_rich_notification_cancel
    int umeng_common_rich_notification_continue -> umeng_common_rich_notification_continue
    int umeng_common_title -> umeng_common_title
    int umeng_fb_back -> umeng_fb_back
    int umeng_fb_contact_header -> umeng_fb_contact_header
    int umeng_fb_contact_info -> umeng_fb_contact_info
    int umeng_fb_contact_update_at -> umeng_fb_contact_update_at
    int umeng_fb_conversation_contact_entry -> umeng_fb_conversation_contact_entry
    int umeng_fb_conversation_header -> umeng_fb_conversation_header
    int umeng_fb_conversation_list_wrapper -> umeng_fb_conversation_list_wrapper
    int umeng_fb_conversation_umeng_logo -> umeng_fb_conversation_umeng_logo
    int umeng_fb_list_reply_header -> umeng_fb_list_reply_header
    int umeng_fb_reply_content -> umeng_fb_reply_content
    int umeng_fb_reply_content_wrapper -> umeng_fb_reply_content_wrapper
    int umeng_fb_reply_date -> umeng_fb_reply_date
    int umeng_fb_reply_list -> umeng_fb_reply_list
    int umeng_fb_save -> umeng_fb_save
    int umeng_fb_send -> umeng_fb_send
    int umeng_update_content -> umeng_update_content
    int umeng_update_id_cancel -> umeng_update_id_cancel
    int umeng_update_id_check -> umeng_update_id_check
    int umeng_update_id_close -> umeng_update_id_close
    int umeng_update_id_ignore -> umeng_update_id_ignore
    int umeng_update_id_ok -> umeng_update_id_ok
    int umeng_update_wifi_indicator -> umeng_update_wifi_indicator
    int umeng_xp_ScrollView -> umeng_xp_ScrollView
    int umeng_xp_actionBar -> umeng_xp_actionBar
    int umeng_xp_ad_action_btn -> umeng_xp_ad_action_btn
    int umeng_xp_appIcon0 -> umeng_xp_appIcon0
    int umeng_xp_appname -> umeng_xp_appname
    int umeng_xp_back -> umeng_xp_back
    int umeng_xp_banner -> umeng_xp_banner
    int umeng_xp_banner_bg -> umeng_xp_banner_bg
    int umeng_xp_banner_more_txt -> umeng_xp_banner_more_txt
    int umeng_xp_bottom -> umeng_xp_bottom
    int umeng_xp_button -> umeng_xp_button
    int umeng_xp_cancel -> umeng_xp_cancel
    int umeng_xp_content -> umeng_xp_content
    int umeng_xp_content0 -> umeng_xp_content0
    int umeng_xp_des -> umeng_xp_des
    int umeng_xp_des0 -> umeng_xp_des0
    int umeng_xp_descript -> umeng_xp_descript
    int umeng_xp_detail0 -> umeng_xp_detail0
    int umeng_xp_dev -> umeng_xp_dev
    int umeng_xp_display_first -> umeng_xp_display_first
    int umeng_xp_display_second -> umeng_xp_display_second
    int umeng_xp_display_switch -> umeng_xp_display_switch
    int umeng_xp_dlCon -> umeng_xp_dlCon
    int umeng_xp_download -> umeng_xp_download
    int umeng_xp_download_popup_title -> umeng_xp_download_popup_title
    int umeng_xp_flipper -> umeng_xp_flipper
    int umeng_xp_float_dialog_close -> umeng_xp_float_dialog_close
    int umeng_xp_float_dialog_content -> umeng_xp_float_dialog_content
    int umeng_xp_float_dialog_root -> umeng_xp_float_dialog_root
    int umeng_xp_gallery -> umeng_xp_gallery
    int umeng_xp_gallery_entity -> umeng_xp_gallery_entity
    int umeng_xp_gallery_errorpage -> umeng_xp_gallery_errorpage
    int umeng_xp_gallery_page_pointer -> umeng_xp_gallery_page_pointer
    int umeng_xp_gallery_pointer -> umeng_xp_gallery_pointer
    int umeng_xp_gallery_progress -> umeng_xp_gallery_progress
    int umeng_xp_handler_grid_item_icon -> umeng_xp_handler_grid_item_icon
    int umeng_xp_handler_grid_item_tv -> umeng_xp_handler_grid_item_tv
    int umeng_xp_icon -> umeng_xp_icon
    int umeng_xp_icon_area -> umeng_xp_icon_area
    int umeng_xp_imagev -> umeng_xp_imagev
    int umeng_xp_large_gallery_item_imv -> umeng_xp_large_gallery_item_imv
    int umeng_xp_large_gallery_item_progressbar -> umeng_xp_large_gallery_item_progressbar
    int umeng_xp_list -> umeng_xp_list
    int umeng_xp_loading -> umeng_xp_loading
    int umeng_xp_loading_progress -> umeng_xp_loading_progress
    int umeng_xp_loading_view -> umeng_xp_loading_view
    int umeng_xp_message -> umeng_xp_message
    int umeng_xp_more -> umeng_xp_more
    int umeng_xp_name -> umeng_xp_name
    int umeng_xp_name0 -> umeng_xp_name0
    int umeng_xp_new_tip -> umeng_xp_new_tip
    int umeng_xp_ok -> umeng_xp_ok
    int umeng_xp_open_type -> umeng_xp_open_type
    int umeng_xp_panelHeight -> umeng_xp_panelHeight
    int umeng_xp_pb -> umeng_xp_pb
    int umeng_xp_photo -> umeng_xp_photo
    int umeng_xp_recom -> umeng_xp_recom
    int umeng_xp_rootId -> umeng_xp_rootId
    int umeng_xp_scroll_view_item_id -> umeng_xp_scroll_view_item_id
    int umeng_xp_size -> umeng_xp_size
    int umeng_xp_size0 -> umeng_xp_size0
    int umeng_xp_template_content -> umeng_xp_template_content
    int umeng_xp_title -> umeng_xp_title
    int umeng_xp_titleContainer -> umeng_xp_titleContainer
    int umeng_xp_web_main -> umeng_xp_web_main
    int umeng_xp_webview -> umeng_xp_webview
    int v_c_line -> v_c_line
    int v_head_height -> v_head_height
    int v_hyh_line -> v_hyh_line
    int v_line -> v_line
    int v_line1 -> v_line1
    int v_line2 -> v_line2
    int vf_ad -> vf_ad
    int vibration -> vibration
    int voice -> voice
    int vp_emoji -> vp_emoji
    int vp_session_box -> vp_session_box
    int webView -> webView
    int withdrawal_bank -> withdrawal_bank
    int wv_content -> wv_content
    int xuantian -> xuantian
    int youxiang -> youxiang
    int yue -> yue
    int zhanghao -> zhanghao
    int zhanghu_name -> zhanghu_name
    int zhichu -> zhichu
    int zhuye_content -> zhuye_content
    int zhuye_group -> zhuye_group
    int zuoji -> zuoji
com.hyh.www.R$layout -> com.hyh.www.R$layout:
    int activity_add -> activity_add
    int activity_add_template -> activity_add_template
    int activity_album -> activity_album
    int activity_become_service -> activity_become_service
    int activity_become_shangjia -> activity_become_shangjia
    int activity_bill_detail_bak -> activity_bill_detail_bak
    int activity_changepassworld -> activity_changepassworld
    int activity_chat -> activity_chat
    int activity_chat_messages -> activity_chat_messages
    int activity_choose -> activity_choose
    int activity_contacts -> activity_contacts
    int activity_contacts_add_buddy_phone -> activity_contacts_add_buddy_phone
    int activity_default -> activity_default
    int activity_edit_data -> activity_edit_data
    int activity_editbill -> activity_editbill
    int activity_feedback -> activity_feedback
    int activity_forget -> activity_forget
    int activity_image_dialog -> activity_image_dialog
    int activity_image_dialog_item -> activity_image_dialog_item
    int activity_income -> activity_income
    int activity_individual_account -> activity_individual_account
    int activity_login -> activity_login
    int activity_look_service -> activity_look_service
    int activity_look_shangjia -> activity_look_shangjia
    int activity_map -> activity_map
    int activity_my_post_msg -> activity_my_post_msg
    int activity_my_promotion -> activity_my_promotion
    int activity_my_release -> activity_my_release
    int activity_mymap -> activity_mymap
    int activity_new_friend -> activity_new_friend
    int activity_new_message -> activity_new_message
    int activity_new_msg_hint -> activity_new_msg_hint
    int activity_notes -> activity_notes
    int activity_order -> activity_order
    int activity_order_detail -> activity_order_detail
    int activity_pay -> activity_pay
    int activity_person_detailed_information -> activity_person_detailed_information
    int activity_photo -> activity_photo
    int activity_post_msg -> activity_post_msg
    int activity_price_range -> activity_price_range
    int activity_registered -> activity_registered
    int activity_release_hyh -> activity_release_hyh
    int activity_search_chat_content -> activity_search_chat_content
    int activity_search_friend -> activity_search_friend
    int activity_select_template -> activity_select_template
    int activity_service -> activity_service
    int activity_shangjia_detailed_information -> activity_shangjia_detailed_information
    int activity_shangjiab_bill -> activity_shangjiab_bill
    int activity_system_message -> activity_system_message
    int activity_system_message_detail -> activity_system_message_detail
    int activity_system_setting -> activity_system_setting
    int activity_topup -> activity_topup
    int activity_user_complain -> activity_user_complain
    int activity_wechat_data -> activity_wechat_data
    int activity_wechat_pay_result -> activity_wechat_pay_result
    int activity_welcome -> activity_welcome
    int activity_withdrawal -> activity_withdrawal
    int activity_ym_dialog -> activity_ym_dialog
    int activity_zhuye -> activity_zhuye
    int alert_dialog_bottom_pupwindow -> alert_dialog_bottom_pupwindow
    int alert_dialog_loading -> alert_dialog_loading
    int alert_dialog_reset -> alert_dialog_reset
    int bpush_download_progress -> bpush_download_progress
    int bpush_media_list -> bpush_media_list
    int bpush_media_list_item -> bpush_media_list_item
    int chat_more -> chat_more
    int cmp_customer_actionbar -> cmp_customer_actionbar
    int common_dialog -> common_dialog
    int common_head -> common_head
    int common_head_text -> common_head_text
    int dialog_comment_box_dialog -> dialog_comment_box_dialog
    int footer_more -> footer_more
    int fragment_multi_image -> fragment_multi_image
    int framgent_home -> framgent_home
    int framgent_nearby -> framgent_nearby
    int framgent_person -> framgent_person
    int framgent_session -> framgent_session
    int head -> head
    int item_adv -> item_adv
    int item_face -> item_face
    int list_add_request -> list_add_request
    int list_album -> list_album
    int list_chat_content -> list_chat_content
    int list_chat_content_hint -> list_chat_content_hint
    int list_comment_list -> list_comment_list
    int list_contacts_item -> list_contacts_item
    int list_image -> list_image
    int list_image_add -> list_image_add
    int list_image_button -> list_image_button
    int list_income -> list_income
    int list_item_camera -> list_item_camera
    int list_item_folder -> list_item_folder
    int list_item_image -> list_item_image
    int list_my_release -> list_my_release
    int list_nearby -> list_nearby
    int list_new_msg_hint -> list_new_msg_hint
    int list_news -> list_news
    int list_option -> list_option
    int list_option_radio -> list_option_radio
    int list_order -> list_order
    int list_phone_item -> list_phone_item
    int list_photo -> list_photo
    int list_price_range -> list_price_range
    int list_session_hyh_item -> list_session_hyh_item
    int list_session_item -> list_session_item
    int list_template -> list_template
    int more_option_dialog -> more_option_dialog
    int my_alert_dialog -> my_alert_dialog
    int notification_custom_builder -> notification_custom_builder
    int option_dialog -> option_dialog
    int releasehyh_text_dialog -> releasehyh_text_dialog
    int releasehyh_yuyin_dialog -> releasehyh_yuyin_dialog
    int round_group_item -> round_group_item
    int select_photo_item -> select_photo_item
    int share_item -> share_item
    int share_layout -> share_layout
    int skyblue_editpage -> skyblue_editpage
    int skyblue_editpage_at_layout -> skyblue_editpage_at_layout
    int skyblue_editpage_inc_image_layout -> skyblue_editpage_inc_image_layout
    int skyblue_share_actionbar -> skyblue_share_actionbar
    int skyblue_share_platform_list -> skyblue_share_platform_list
    int skyblue_share_platform_list_item -> skyblue_share_platform_list_item
    int umeng_common_download_notification -> umeng_common_download_notification
    int umeng_fb_activity_contact -> umeng_fb_activity_contact
    int umeng_fb_activity_conversation -> umeng_fb_activity_conversation
    int umeng_fb_list_header -> umeng_fb_list_header
    int umeng_fb_list_item -> umeng_fb_list_item
    int umeng_fb_new_reply_alert_dialog -> umeng_fb_new_reply_alert_dialog
    int umeng_update_dialog -> umeng_update_dialog
    int umeng_xp_banner -> umeng_xp_banner
    int umeng_xp_clould_dialog -> umeng_xp_clould_dialog
    int umeng_xp_component_back_bottom -> umeng_xp_component_back_bottom
    int umeng_xp_component_back_top -> umeng_xp_component_back_top
    int umeng_xp_component_flipper_content -> umeng_xp_component_flipper_content
    int umeng_xp_component_focus_banner -> umeng_xp_component_focus_banner
    int umeng_xp_component_foucused_app -> umeng_xp_component_foucused_app
    int umeng_xp_container_banner -> umeng_xp_container_banner
    int umeng_xp_container_banner_more -> umeng_xp_container_banner_more
    int umeng_xp_download_dialog -> umeng_xp_download_dialog
    int umeng_xp_download_dialog_landscape -> umeng_xp_download_dialog_landscape
    int umeng_xp_fimageview_landscape -> umeng_xp_fimageview_landscape
    int umeng_xp_fimageview_portrait -> umeng_xp_fimageview_portrait
    int umeng_xp_floatdialog_content -> umeng_xp_floatdialog_content
    int umeng_xp_full_screen_focus -> umeng_xp_full_screen_focus
    int umeng_xp_full_screen_list -> umeng_xp_full_screen_list
    int umeng_xp_full_screen_list_layout -> umeng_xp_full_screen_list_layout
    int umeng_xp_handler_gallery -> umeng_xp_handler_gallery
    int umeng_xp_handler_grid_item -> umeng_xp_handler_grid_item
    int umeng_xp_handler_template -> umeng_xp_handler_template
    int umeng_xp_highlight_banner -> umeng_xp_highlight_banner
    int umeng_xp_highlight_banner_more -> umeng_xp_highlight_banner_more
    int umeng_xp_large_gallery -> umeng_xp_large_gallery
    int umeng_xp_large_gallery_item -> umeng_xp_large_gallery_item
    int umeng_xp_normal_banner -> umeng_xp_normal_banner
    int umeng_xp_partners_banner -> umeng_xp_partners_banner
    int umeng_xp_partners_banner_grid_item -> umeng_xp_partners_banner_grid_item
    int umeng_xp_recom_header -> umeng_xp_recom_header
    int umeng_xp_scroll_view_list -> umeng_xp_scroll_view_list
    int umeng_xp_webview_landing_page -> umeng_xp_webview_landing_page
    int viewpage_contacts -> viewpage_contacts
    int viewpage_item -> viewpage_item
    int viewpage_titled -> viewpage_titled
com.hyh.www.R$menu -> com.hyh.www.R$menu:
    int add -> add
    int become_shangjia -> become_shangjia
    int detailed_information -> detailed_information
    int edit_data -> edit_data
    int individual_account -> individual_account
    int my_promotion -> my_promotion
    int my_release -> my_release
    int new__friend -> new__friend
    int release_hyh -> release_hyh
    int shangjia_detailed_information -> shangjia_detailed_information
    int shangjiab_bill -> shangjiab_bill
com.hyh.www.R$raw -> com.hyh.www.R$raw:
    int soundmp3 -> soundmp3
com.hyh.www.R$string -> com.hyh.www.R$string:
    int UMAppUpdate -> UMAppUpdate
    int UMBreak_Network -> UMBreak_Network
    int UMDialog_InstallAPK -> UMDialog_InstallAPK
    int UMGprsCondition -> UMGprsCondition
    int UMIgnore -> UMIgnore
    int UMNewVersion -> UMNewVersion
    int UMNotNow -> UMNotNow
    int UMTargetSize -> UMTargetSize
    int UMToast_IsUpdating -> UMToast_IsUpdating
    int UMUpdateCheck -> UMUpdateCheck
    int UMUpdateContent -> UMUpdateContent
    int UMUpdateNow -> UMUpdateNow
    int UMUpdateSize -> UMUpdateSize
    int UMUpdateTitle -> UMUpdateTitle
    int about -> about
    int account -> account
    int action_settings -> action_settings
    int add -> add
    int api_key -> api_key
    int api_key_map -> api_key_map
    int app_name -> app_name
    int app_name_directory -> app_name_directory
    int app_upload -> app_upload
    int app_upload_extinfo -> app_upload_extinfo
    int auto_login_hint -> auto_login_hint
    int baidutieba -> baidutieba
    int baidutieba_client_inavailable -> baidutieba_client_inavailable
    int banbengengxin -> banbengengxin
    int banquan -> banquan
    int beaccounts -> beaccounts
    int beizhuwenzishili -> beizhuwenzishili
    int bianjizhangdan -> bianjizhangdan
    int bianjiziliao -> bianjiziliao
    int biaoweixingbiaohaoyou -> biaoweixingbiaohaoyou
    int bill_amount -> bill_amount
    int bluetooth -> bluetooth
    int bq -> bq
    int buy_bills -> buy_bills
    int buy_failed -> buy_failed
    int buy_success -> buy_success
    int cancel -> cancel
    int chakangeren -> chakangeren
    int chakanshangjia -> chakanshangjia
    int changdizhaopian -> changdizhaopian
    int changepassworld -> changepassworld
    int chat_hint -> chat_hint
    int chazhaoliaotianjilu -> chazhaoliaotianjilu
    int check_version -> check_version
    int chengweishangjia -> chengweishangjia
    int chongzhi -> chongzhi
    int chongzhijine -> chongzhijine
    int chongzhizhanghu -> chongzhizhanghu
    int chuanzhen -> chuanzhen
    int ciweizhangdanbeizhuwenzi -> ciweizhangdanbeizhuwenzi
    int close -> close
    int company -> company
    int company_skill -> company_skill
    int confirm -> confirm
    int conggerenshouyi -> conggerenshouyi
    int congshangjiashouyi -> congshangjiashouyi
    int contacts -> contacts
    int danweidianhua -> danweidianhua
    int danweidizhi -> danweidizhi
    int danweimingcheng -> danweimingcheng
    int data_error -> data_error
    int default_coupons -> default_coupons
    int delete -> delete
    int delete_fail -> delete_fail
    int delete_loading -> delete_loading
    int dianjiyouce -> dianjiyouce
    int diqu -> diqu
    int dizhi -> dizhi
    int dongjie -> dongjie
    int douban -> douban
    int dropbox -> dropbox
    int edit_data -> edit_data
    int email -> email
    int emoji_upload -> emoji_upload
    int emoji_upload_bm -> emoji_upload_bm
    int emoji_upload_url -> emoji_upload_url
    int evenote_title -> evenote_title
    int evernote -> evernote
    int fabu_huihua -> fabu_huihua
    int fabu_kan -> fabu_kan
    int fabu_xuqiu -> fabu_xuqiu
    int fabuchenggong -> fabuchenggong
    int fabufanwei -> fabufanwei
    int fabuhanyihan -> fabuhanyihan
    int facebook -> facebook
    int facebookmessenger -> facebookmessenger
    int fangfa_one -> fangfa_one
    int fangfa_two -> fangfa_two
    int fankuineirong -> fankuineirong
    int fasongyanzhengma -> fasongyanzhengma
    int fasongzhangdan -> fasongzhangdan
    int faxiaoxi -> faxiaoxi
    int feedback -> feedback
    int feedback_hint -> feedback_hint
    int feekback_fail -> feekback_fail
    int feekback_success -> feekback_success
    int file_upload -> file_upload
    int find_mail -> find_mail
    int find_pass -> find_pass
    int find_pass_fail -> find_pass_fail
    int find_pass_success -> find_pass_success
    int finish -> finish
    int flickr -> flickr
    int folder_all -> folder_all
    int forgetpass -> forgetpass
    int foursquare -> foursquare
    int genghuantouxiang -> genghuantouxiang
    int get_phone_code_fail -> get_phone_code_fail
    int google_plus_client_inavailable -> google_plus_client_inavailable
    int googleplus -> googleplus
    int guanbiliaotian -> guanbiliaotian
    int hanyihan -> hanyihan
    int hanyihan_register -> hanyihan_register
    int hello_world -> hello_world
    int hint_nodata_content -> hint_nodata_content
    int homepage -> homepage
    int huifurenshu -> huifurenshu
    int huodongjuan -> huodongjuan
    int hyh_banben -> hyh_banben
    int hyh_banquan -> hyh_banquan
    int hyh_gift -> hyh_gift
    int image_upload -> image_upload
    int image_upload_bitmap -> image_upload_bitmap
    int image_upload_url -> image_upload_url
    int instagram -> instagram
    int instagram_client_inavailable -> instagram_client_inavailable
    int instapager_email_or_password_incorrect -> instapager_email_or_password_incorrect
    int instapager_login_html -> instapager_login_html
    int instapaper -> instapaper
    int instapaper_email -> instapaper_email
    int instapaper_login -> instapaper_login
    int instapaper_logining -> instapaper_logining
    int instapaper_pwd -> instapaper_pwd
    int jiaruheimingdan -> jiaruheimingdan
    int jiaweihaoyou -> jiaweihaoyou
    int jibenxinxi -> jibenxinxi
    int jieshouxinxiaoxitongzhi -> jieshouxinxiaoxitongzhi
    int jieshushijian -> jieshushijian
    int jingyingxukezheng -> jingyingxukezheng
    int jujue -> jujue
    int jujuezhifu -> jujuezhifu
    int kaihuhang -> kaihuhang
    int kaishishijian -> kaishishijian
    int kaixin -> kaixin
    int kakaostory -> kakaostory
    int kakaostory_client_inavailable -> kakaostory_client_inavailable
    int kakaotalk -> kakaotalk
    int kakaotalk_client_inavailable -> kakaotalk_client_inavailable
    int kefu_replay -> kefu_replay
    int laiwang -> laiwang
    int laiyuan -> laiyuan
    int lianxidianhua -> lianxidianhua
    int lianxifangshi -> lianxifangshi
    int lianxikefu -> lianxikefu
    int lianxirenzhaopian -> lianxirenzhaopian
    int lianxiwomen -> lianxiwomen
    int liaotianxinxi -> liaotianxinxi
    int line -> line
    int line_client_inavailable -> line_client_inavailable
    int linkedin -> linkedin
    int linkman -> linkman
    int list_friends -> list_friends
    int load -> load
    int load_error -> load_error
    int loading -> loading
    int loading_fail_hint -> loading_fail_hint
    int loading_hint -> loading_hint
    int login -> login
    int login_fail -> login_fail
    int login_loading -> login_loading
    int login_success -> login_success
    int maijiaxingming -> maijiaxingming
    int mail_find -> mail_find
    int message_invalid_username_password -> message_invalid_username_password
    int message_server_unavailable -> message_server_unavailable
    int message_user_disabled -> message_user_disabled
    int message_user_expired -> message_user_expired
    int message_userip_no_access -> message_userip_no_access
    int mingdao -> mingdao
    int mingdao_share_content -> mingdao_share_content
    int msg_amount_limit -> msg_amount_limit
    int msg_no_camera -> msg_no_camera
    int multi_share -> multi_share
    int music_upload -> music_upload
    int my_post_msg -> my_post_msg
    int my_promotion -> my_promotion
    int my_release -> my_release
    int name_loading -> name_loading
    int nearby -> nearby
    int net_rest -> net_rest
    int neteasemicroblog -> neteasemicroblog
    int network_error -> network_error
    int new_friend -> new_friend
    int nicheng -> nicheng
    int nickname -> nickname
    int no_data -> no_data
    int not_yet_authorized -> not_yet_authorized
    int passworld -> passworld
    int person -> person
    int person_account -> person_account
    int phone -> phone
    int phone_account -> phone_account
    int phonenumber -> phonenumber
    int picture -> picture
    int pinterest -> pinterest
    int pinterest_client_inavailable -> pinterest_client_inavailable
    int pocket -> pocket
    int preview -> preview
    int private_chat -> private_chat
    int pull_to_refresh -> pull_to_refresh
    int pulldown -> pulldown
    int qingkongliaotianjilu -> qingkongliaotianjilu
    int qingxuanze -> qingxuanze
    int qiyeleixing -> qiyeleixing
    int qiyemingcheng -> qiyemingcheng
    int qiyerenzheng -> qiyerenzheng
    int qq -> qq
    int qq_client_inavailable -> qq_client_inavailable
    int querentianjia -> querentianjia
    int querentixian -> querentixian
    int querenxiugai -> querenxiugai
    int querenzhifu -> querenzhifu
    int qurenzhifu -> qurenzhifu
    int quxiaofabu -> quxiaofabu
    int qzone -> qzone
    int qzone_add_blog_sample -> qzone_add_blog_sample
    int qzone_customer_share_style -> qzone_customer_share_style
    int receive_rewards -> receive_rewards
    int refresh -> refresh
    int refreshing -> refreshing
    int register -> register
    int register_fail -> register_fail
    int register_loading -> register_loading
    int release_range -> release_range
    int release_to_refresh -> release_to_refresh
    int remaining_time -> remaining_time
    int renren -> renren
    int reply_number -> reply_number
    int reset -> reset
    int reset_pass_mail -> reset_pass_mail
    int ruhetuiguang -> ruhetuiguang
    int sales_bills -> sales_bills
    int save_fail -> save_fail
    int save_loading -> save_loading
    int save_userinfo -> save_userinfo
    int save_userinfoPass_fail -> save_userinfoPass_fail
    int save_userinfoPass_success -> save_userinfoPass_success
    int save_userinfo_fail -> save_userinfo_fail
    int save_userinfo_success -> save_userinfo_success
    int select_a_friend -> select_a_friend
    int select_one_plat_at_least -> select_one_plat_at_least
    int send_address -> send_address
    int send_fail -> send_fail
    int send_loading -> send_loading
    int send_msg -> send_msg
    int send_success -> send_success
    int session -> session
    int shake2share -> shake2share
    int shanchu -> shanchu
    int shangjia_type -> shangjia_type
    int shangjiabB -> shangjiabB
    int shangjialeixing -> shangjialeixing
    int shangjiaxingming -> shangjiaxingming
    int share -> share
    int share_canceled -> share_canceled
    int share_completed -> share_completed
    int share_content -> share_content
    int share_content_short -> share_content_short
    int share_failed -> share_failed
    int share_to -> share_to
    int share_to_baidutieba -> share_to_baidutieba
    int share_to_favorite -> share_to_favorite
    int share_to_mingdao -> share_to_mingdao
    int share_to_moment -> share_to_moment
    int share_to_qq -> share_to_qq
    int share_to_qzone -> share_to_qzone
    int share_to_qzone_default -> share_to_qzone_default
    int share_to_wechat -> share_to_wechat
    int share_to_yixin -> share_to_yixin
    int share_to_yixin_favorite -> share_to_yixin_favorite
    int share_to_yixin_moment -> share_to_yixin_moment
    int share_url -> share_url
    int sharing -> sharing
    int shengfenzhenghaoma -> shengfenzhenghaoma
    int shengyin -> shengyin
    int shengyushijian -> shengyushijian
    int shezhibeizhu -> shezhibeizhu
    int shezhimiandaraoshiduan -> shezhimiandaraoshiduan
    int shortmessage -> shortmessage
    int shouji -> shouji
    int shouru -> shouru
    int shurumima -> shurumima
    int sinaweibo -> sinaweibo
    int sohumicroblog -> sohumicroblog
    int sohusuishenkan -> sohusuishenkan
    int songkai -> songkai
    int start_pic -> start_pic
    int submit -> submit
    int submit_fail -> submit_fail
    int submit_loading -> submit_loading
    int submit_success -> submit_success
    int syn_fail -> syn_fail
    int syn_loading -> syn_loading
    int syn_success -> syn_success
    int system_message -> system_message
    int system_message_detail -> system_message_detail
    int system_settings -> system_settings
    int tencentweibo -> tencentweibo
    int thanks_hyh -> thanks_hyh
    int thanks_hyhtwo -> thanks_hyhtwo
    int tianjiahaoyouqingqiu -> tianjiahaoyouqingqiu
    int tianjiamoban -> tianjiamoban
    int tianjiatongxunluhaoyou -> tianjiatongxunluhaoyou
    int tianjiaweibohaoyou -> tianjiaweibohaoyou
    int tianjiaweixinhaoyou -> tianjiaweixinhaoyou
    int tianjiawenzi -> tianjiawenzi
    int tijiao -> tijiao
    int tijiaorenzheng -> tijiaorenzheng
    int time_pay -> time_pay
    int title_activity_add -> title_activity_add
    int title_activity_become_shangjia -> title_activity_become_shangjia
    int title_activity_change_passworld -> title_activity_change_passworld
    int title_activity_chat_messages -> title_activity_chat_messages
    int title_activity_choose -> title_activity_choose
    int title_activity_contacts -> title_activity_contacts
    int title_activity_edit_data -> title_activity_edit_data
    int title_activity_editbill -> title_activity_editbill
    int title_activity_feedback -> title_activity_feedback
    int title_activity_individual_account -> title_activity_individual_account
    int title_activity_login -> title_activity_login
    int title_activity_my_promotion -> title_activity_my_promotion
    int title_activity_my_release -> title_activity_my_release
    int title_activity_new__friend -> title_activity_new__friend
    int title_activity_new_message -> title_activity_new_message
    int title_activity_person_detailed_information -> title_activity_person_detailed_information
    int title_activity_registered -> title_activity_registered
    int title_activity_release_hyh -> title_activity_release_hyh
    int title_activity_shangjia_detailed_information -> title_activity_shangjia_detailed_information
    int title_activity_shangjiab_bill -> title_activity_shangjiab_bill
    int title_activity_system_message -> title_activity_system_message
    int title_activity_system_setting -> title_activity_system_setting
    int title_activity_topup -> title_activity_topup
    int title_activity_welcome -> title_activity_welcome
    int title_activity_withdrawal -> title_activity_withdrawal
    int title_activity_zhuye -> title_activity_zhuye
    int tixian -> tixian
    int tixian_error -> tixian_error
    int tixian_succ -> tixian_succ
    int tixianjine -> tixianjine
    int tixianyihang -> tixianyihang
    int tongyi -> tongyi
    int tousu -> tousu
    int tousu_hyh -> tousu_hyh
    int tuichudangqianzhanghao -> tuichudangqianzhanghao
    int tumblr -> tumblr
    int twitter -> twitter
    int type -> type
    int umeng_appkey -> umeng_appkey
    int umeng_channel -> umeng_channel
    int umeng_common_action_cancel -> umeng_common_action_cancel
    int umeng_common_action_continue -> umeng_common_action_continue
    int umeng_common_action_info_exist -> umeng_common_action_info_exist
    int umeng_common_action_pause -> umeng_common_action_pause
    int umeng_common_download_failed -> umeng_common_download_failed
    int umeng_common_download_finish -> umeng_common_download_finish
    int umeng_common_download_notification_prefix -> umeng_common_download_notification_prefix
    int umeng_common_icon -> umeng_common_icon
    int umeng_common_info_interrupt -> umeng_common_info_interrupt
    int umeng_common_network_break_alert -> umeng_common_network_break_alert
    int umeng_common_patch_finish -> umeng_common_patch_finish
    int umeng_common_pause_notification_prefix -> umeng_common_pause_notification_prefix
    int umeng_common_silent_download_finish -> umeng_common_silent_download_finish
    int umeng_common_start_download_notification -> umeng_common_start_download_notification
    int umeng_common_start_patch_notification -> umeng_common_start_patch_notification
    int umeng_fb_back -> umeng_fb_back
    int umeng_fb_contact_info -> umeng_fb_contact_info
    int umeng_fb_contact_info_hint -> umeng_fb_contact_info_hint
    int umeng_fb_contact_title -> umeng_fb_contact_title
    int umeng_fb_contact_update_at -> umeng_fb_contact_update_at
    int umeng_fb_notification_content_formatter_multiple_msg -> umeng_fb_notification_content_formatter_multiple_msg
    int umeng_fb_notification_content_formatter_single_msg -> umeng_fb_notification_content_formatter_single_msg
    int umeng_fb_notification_ticker_text -> umeng_fb_notification_ticker_text
    int umeng_fb_powered_by -> umeng_fb_powered_by
    int umeng_fb_reply_content_default -> umeng_fb_reply_content_default
    int umeng_fb_reply_content_hint -> umeng_fb_reply_content_hint
    int umeng_fb_reply_date_default -> umeng_fb_reply_date_default
    int umeng_fb_send -> umeng_fb_send
    int umeng_fb_title -> umeng_fb_title
    int umeng_xp_action_browse -> umeng_xp_action_browse
    int umeng_xp_action_callphone -> umeng_xp_action_callphone
    int umeng_xp_action_download -> umeng_xp_action_download
    int umeng_xp_action_open -> umeng_xp_action_open
    int umeng_xp_back -> umeng_xp_back
    int umeng_xp_back_to_top -> umeng_xp_back_to_top
    int umeng_xp_dowloadOrNot -> umeng_xp_dowloadOrNot
    int umeng_xp_dowload_dialog_cinfo -> umeng_xp_dowload_dialog_cinfo
    int umeng_xp_dowload_dialog_dinfo -> umeng_xp_dowload_dialog_dinfo
    int umeng_xp_failed_loading -> umeng_xp_failed_loading
    int umeng_xp_info_banner_deprecated -> umeng_xp_info_banner_deprecated
    int umeng_xp_more -> umeng_xp_more
    int umeng_xp_network_break_alert -> umeng_xp_network_break_alert
    int umeng_xp_no_browser_tips -> umeng_xp_no_browser_tips
    int umeng_xp_size -> umeng_xp_size
    int umeng_xp_tip_download_pre -> umeng_xp_tip_download_pre
    int umeng_xp_title_info -> umeng_xp_title_info
    int unrecoverable_error -> unrecoverable_error
    int update -> update
    int updatepass -> updatepass
    int upload_head_error -> upload_head_error
    int upload_head_success -> upload_head_success
    int use_login_button -> use_login_button
    int username_passwd_error_hint -> username_passwd_error_hint
    int video_upload -> video_upload
    int vkontakte -> vkontakte
    int webpage_upload -> webpage_upload
    int webpage_upload_bitmap -> webpage_upload_bitmap
    int webpage_upload_url -> webpage_upload_url
    int website -> website
    int wechat -> wechat
    int wechat_client_inavailable -> wechat_client_inavailable
    int wechat_client_is_not_installed_correctly -> wechat_client_is_not_installed_correctly
    int wechat_client_not_support_following_operation -> wechat_client_not_support_following_operation
    int wechat_demo_title -> wechat_demo_title
    int wechatfavorite -> wechatfavorite
    int wechatmoments -> wechatmoments
    int weibo_oauth_regiseter -> weibo_oauth_regiseter
    int weibo_upload_content -> weibo_upload_content
    int weidianmingcheng -> weidianmingcheng
    int whatsapp -> whatsapp
    int whatsapp_client_inavailable -> whatsapp_client_inavailable
    int wodefabu -> wodefabu
    int wodeyaoqingma -> wodeyaoqingma
    int xiangxiziliao -> xiangxiziliao
    int xianshizhifu -> xianshizhifu
    int xinbanbengonggao -> xinbanbengonggao
    int xindepengyou -> xindepengyou
    int xinmima -> xinmima
    int xinxiaoxitixing -> xinxiaoxitixing
    int xinxiaoxitongzhi -> xinxiaoxitongzhi
    int xitongshezhi -> xitongshezhi
    int xiugaimima -> xiugaimima
    int xuantian -> xuantian
    int xuanzemoban -> xuanzemoban
    int yanzhengma -> yanzhengma
    int yaoqing -> yaoqing
    int yaoqingma -> yaoqingma
    int yijianfankui -> yijianfankui
    int yingyezhizhao -> yingyezhizhao
    int yinhangkahao -> yinhangkahao
    int yixin -> yixin
    int yixin_client_inavailable -> yixin_client_inavailable
    int yixin_demo_title -> yixin_demo_title
    int yixinmoments -> yixinmoments
    int yiyouzhanghao -> yiyouzhanghao
    int yonghu -> yonghu
    int youdao -> youdao
    int youxiang -> youxiang
    int youxiaoshijian -> youxiaoshijian
    int yuan -> yuan
    int yuanmima -> yuanmima
    int yue -> yue
    int zaicishuru -> zaicishuru
    int zh -> zh
    int zhangdanbeizhu -> zhangdanbeizhu
    int zhangdanbianhao -> zhangdanbianhao
    int zhangdanjine -> zhangdanjine
    int zhanghao -> zhanghao
    int zhanghuxingming -> zhanghuxingming
    int zhendong -> zhendong
    int zhenshixingming -> zhenshixingming
    int zhichu -> zhichu
    int zhidingliaotian -> zhidingliaotian
    int zp -> zp
    int zuoji -> zuoji
com.hyh.www.R$style -> com.hyh.www.R$style:
    int AnimBottom -> AnimBottom
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int MyDialogStyleBottom -> MyDialogStyleBottom
    int about_tv_style -> about_tv_style
    int button_blue -> button_blue
    int button_gray -> button_gray
    int button_red -> button_red
    int dialog_full -> dialog_full
    int dialog_load -> dialog_load
    int dialog_load1 -> dialog_load1
    int main_menu_animstyle -> main_menu_animstyle
    int umeng_xp_dialog_animations -> umeng_xp_dialog_animations
    int umeng_xp_dialog_but -> umeng_xp_dialog_but
    int umeng_xp_dialog_cancel -> umeng_xp_dialog_cancel
    int umeng_xp_dialog_download -> umeng_xp_dialog_download
    int umeng_xp_dialog_download_window -> umeng_xp_dialog_download_window
    int umeng_xp_download_but -> umeng_xp_download_but
    int umeng_xp_grad_but -> umeng_xp_grad_but
    int umeng_xp_more_but -> umeng_xp_more_but
com.hyh.www.R$styleable -> com.hyh.www.R$styleable:
    int[] LockPatternView -> LockPatternView
    int LockPatternView_aspect -> LockPatternView_aspect
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
    int[] Switch -> Switch
    int Switch_switchMinWidth -> Switch_switchMinWidth
    int Switch_switchPadding -> Switch_switchPadding
    int Switch_switchTextAppearance -> Switch_switchTextAppearance
    int Switch_textOff -> Switch_textOff
    int Switch_textOn -> Switch_textOn
    int Switch_thumb -> Switch_thumb
    int Switch_thumbTextPadding -> Switch_thumbTextPadding
    int Switch_track -> Switch_track
    int[] TextAppearanceSwitch -> TextAppearanceSwitch
    int TextAppearanceSwitch_fontFamily -> TextAppearanceSwitch_fontFamily
    int TextAppearanceSwitch_textColor -> TextAppearanceSwitch_textColor
    int TextAppearanceSwitch_textColorHighlight -> TextAppearanceSwitch_textColorHighlight
    int TextAppearanceSwitch_textColorHint -> TextAppearanceSwitch_textColorHint
    int TextAppearanceSwitch_textColorLink -> TextAppearanceSwitch_textColorLink
    int TextAppearanceSwitch_textSize -> TextAppearanceSwitch_textSize
    int TextAppearanceSwitch_textStyle -> TextAppearanceSwitch_textStyle
    int TextAppearanceSwitch_typeface -> TextAppearanceSwitch_typeface
com.hyh.www.RegisteredActivity -> com.hyh.www.RegisteredActivity:
    com.hyh.www.RegisteredActivity _this -> a
    android.widget.Button registered -> b
    android.widget.Button registered_account -> c
    com.gezitech.widget.ExtendViewFlipper pager_slide -> d
    android.widget.LinearLayout pager_control -> e
    com.gezitech.entity.PageList advList -> f
    android.widget.ImageView[] contorls -> g
    android.view.animation.Animation in -> h
    android.view.animation.Animation out -> i
    android.widget.Button bt_my_post -> j
    android.widget.Button bt_send_verification_code -> k
    android.widget.EditText ed_verification_code -> l
    android.widget.EditText ed_phonenumber -> m
    android.widget.EditText ed_enter_password -> n
    android.widget.EditText ed_input_again -> o
    android.widget.EditText ed_invite_code -> p
    android.widget.Button bt_home_msg -> q
    android.widget.RadioGroup rg_user_type -> r
    int isbusiness -> s
    android.widget.TextView tv_service -> t
    android.widget.TextView xuantian -> u
    android.os.Handler mHandler -> v
    java.lang.Runnable countdown -> w
    java.lang.Runnable advtime -> x
    android.content.BroadcastReceiver receiver -> y
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    void _initAdv() -> b
    void advData() -> c
    void _viewFlipper() -> d
    void setectStyle(boolean) -> a
    void onDestroy() -> onDestroy
    android.os.Handler access$0(com.hyh.www.RegisteredActivity) -> a
    java.lang.Runnable access$1(com.hyh.www.RegisteredActivity) -> b
    android.widget.Button access$2(com.hyh.www.RegisteredActivity) -> c
    com.hyh.www.RegisteredActivity access$3(com.hyh.www.RegisteredActivity) -> d
    com.gezitech.widget.ExtendViewFlipper access$4(com.hyh.www.RegisteredActivity) -> e
    android.view.animation.Animation access$5(com.hyh.www.RegisteredActivity) -> f
    android.view.animation.Animation access$6(com.hyh.www.RegisteredActivity) -> g
    java.lang.Runnable access$7(com.hyh.www.RegisteredActivity) -> h
    android.widget.Button access$8(com.hyh.www.RegisteredActivity) -> i
    android.widget.EditText access$9(com.hyh.www.RegisteredActivity) -> j
    void access$10(com.hyh.www.RegisteredActivity,int) -> a
    com.gezitech.entity.PageList access$11(com.hyh.www.RegisteredActivity) -> k
    void access$12(com.hyh.www.RegisteredActivity,com.gezitech.entity.PageList) -> a
    void access$13(com.hyh.www.RegisteredActivity) -> l
com.hyh.www.RegisteredActivity$1 -> com.hyh.www.v:
    com.hyh.www.RegisteredActivity this$0 -> a
    void run() -> run
com.hyh.www.RegisteredActivity$10 -> com.hyh.www.w:
    com.hyh.www.RegisteredActivity this$0 -> a
    void selectStyle(boolean) -> a
    void countDownTimerAction(boolean) -> b
com.hyh.www.RegisteredActivity$2 -> com.hyh.www.x:
    com.hyh.www.RegisteredActivity this$0 -> a
    void run() -> run
com.hyh.www.RegisteredActivity$3 -> com.hyh.www.y:
    com.hyh.www.RegisteredActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.RegisteredActivity$4 -> com.hyh.www.z:
    com.hyh.www.RegisteredActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.RegisteredActivity access$0(com.hyh.www.RegisteredActivity$4) -> a
com.hyh.www.RegisteredActivity$4$1 -> com.hyh.www.aa:
    com.hyh.www.RegisteredActivity$4 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
com.hyh.www.RegisteredActivity$5 -> com.hyh.www.ab:
    com.hyh.www.RegisteredActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.RegisteredActivity$6 -> com.hyh.www.ac:
    com.hyh.www.RegisteredActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.hyh.www.RegisteredActivity$7 -> com.hyh.www.ad:
    com.hyh.www.RegisteredActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.RegisteredActivity$8 -> com.hyh.www.ae:
    com.hyh.www.RegisteredActivity this$0 -> a
    com.loopj.android.http.RequestParams val$params -> b
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    com.hyh.www.RegisteredActivity access$0(com.hyh.www.RegisteredActivity$8) -> a
com.hyh.www.RegisteredActivity$8$1 -> com.hyh.www.af:
    com.hyh.www.RegisteredActivity$8 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
com.hyh.www.RegisteredActivity$9 -> com.hyh.www.ag:
    com.hyh.www.RegisteredActivity this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    com.hyh.www.RegisteredActivity access$0(com.hyh.www.RegisteredActivity$9) -> a
com.hyh.www.RegisteredActivity$9$1 -> com.hyh.www.ah:
    com.hyh.www.RegisteredActivity$9 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.ServiceActivity -> com.hyh.www.ServiceActivity:
    com.hyh.www.ServiceActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.webkit.WebView wv_content -> d
    int from -> e
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.ServiceActivity access$0(com.hyh.www.ServiceActivity) -> a
com.hyh.www.ServiceActivity$1 -> com.hyh.www.ai:
    com.hyh.www.ServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.ServiceActivity$2 -> com.hyh.www.aj:
    com.hyh.www.ServiceActivity this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.hyh.www.WechatDataActivity -> com.hyh.www.WechatDataActivity:
    com.hyh.www.WechatDataActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.TextView xuantian -> c
    android.widget.EditText ed_phone -> d
    android.widget.EditText ed_yaoqingma -> e
    com.gezitech.service.sqlitedb.GezitechDBHelper db -> f
    java.lang.String userHead -> g
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    android.widget.EditText access$0(com.hyh.www.WechatDataActivity) -> a
    android.widget.EditText access$1(com.hyh.www.WechatDataActivity) -> b
    com.hyh.www.WechatDataActivity access$2(com.hyh.www.WechatDataActivity) -> c
    com.gezitech.service.sqlitedb.GezitechDBHelper access$3(com.hyh.www.WechatDataActivity) -> d
    java.lang.String access$4(com.hyh.www.WechatDataActivity) -> e
com.hyh.www.WechatDataActivity$1 -> com.hyh.www.ak:
    com.hyh.www.WechatDataActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.WechatDataActivity access$0(com.hyh.www.WechatDataActivity$1) -> a
com.hyh.www.WechatDataActivity$1$1 -> com.hyh.www.al:
    com.hyh.www.WechatDataActivity$1 this$1 -> a
    java.lang.String val$phoneVal -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
com.hyh.www.WelcomeActivity -> com.hyh.www.WelcomeActivity:
    com.hyh.www.WelcomeActivity _this -> a
    android.widget.ImageView iv -> b
    void onCreate(android.os.Bundle) -> onCreate
    void _initBaiduPush() -> a
    com.hyh.www.WelcomeActivity access$0(com.hyh.www.WelcomeActivity) -> a
    android.widget.ImageView access$1(com.hyh.www.WelcomeActivity) -> b
com.hyh.www.WelcomeActivity$1 -> com.hyh.www.am:
    com.hyh.www.WelcomeActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.hyh.www.WelcomeActivity$2 -> com.hyh.www.an:
    com.hyh.www.WelcomeActivity this$0 -> a
    android.view.animation.AlphaAnimation val$bb -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.hyh.www.ZhuyeActivity -> com.hyh.www.ZhuyeActivity:
    android.widget.RadioGroup group -> a
    android.widget.RadioButton home -> b
    android.widget.RadioButton person -> c
    android.widget.RadioButton session -> d
    android.support.v4.app.FragmentManager fragmentManager -> e
    android.support.v4.app.Fragment[] mFragments -> f
    com.hyh.www.home.HomeFramgent fghome -> g
    com.hyh.www.session.SessionFramgent fsession -> h
    com.hyh.www.user.PersonFramgent fperson -> i
    android.widget.LinearLayout ll_unreadcount -> j
    android.widget.TextView tv_unreadcount -> k
    java.lang.String flag_global -> l
    android.widget.RadioButton nearby -> m
    com.hyh.www.nearby.NearbyFramgent fNearby -> n
    android.widget.LinearLayout ll_nearbycount -> o
    android.widget.LinearLayout ll_like_comment_count -> p
    android.widget.TextView tv_like_comment_count -> q
    android.content.BroadcastReceiver receiver -> r
    java.lang.Boolean isExit -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void _jumpActivity(android.content.Intent) -> a
    void loadNewsDetail(long) -> a
    void setSelectFragment() -> d
    void onClick(android.view.View) -> onClick
    void onResume() -> onResume
    void onResumeFragments() -> onResumeFragments
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void like_comment_count(android.widget.TextView,android.widget.LinearLayout) -> a
    void unreadcount() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void getNewNearByCount() -> b
    void _getData(java.lang.String,java.lang.String) -> a
    void hideNewMsgHint() -> c
    android.widget.TextView access$0(com.hyh.www.ZhuyeActivity) -> a
    android.widget.LinearLayout access$1(com.hyh.www.ZhuyeActivity) -> b
    void access$3(com.hyh.www.ZhuyeActivity,java.lang.String,java.lang.String) -> a
    android.widget.LinearLayout access$4(com.hyh.www.ZhuyeActivity) -> c
com.hyh.www.ZhuyeActivity$1 -> com.hyh.www.ao:
    com.hyh.www.ZhuyeActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.ZhuyeActivity$2 -> com.hyh.www.ap:
    com.hyh.www.ZhuyeActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.ZhuyeActivity$4 -> com.hyh.www.aq:
    com.hyh.www.ZhuyeActivity this$0 -> a
    void callfunction(java.lang.String,java.lang.String,java.lang.String) -> a
com.hyh.www.ZhuyeActivity$5 -> com.hyh.www.ar:
    com.hyh.www.ZhuyeActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetJSONObjectDone(org.json.JSONObject) -> a
com.hyh.www.adapter.BasicAdapter -> com.hyh.www.adapter.a:
    com.hyh.www.adapter.BasicAdapter instance -> a
    com.gezitech.entity.PageList list -> b
    android.view.LayoutInflater inflater -> c
    android.content.Context context -> d
    com.hyh.www.adapter.BasicAdapter$OnClickDataPress onClickDataPress -> e
    void addList(java.util.ArrayList,boolean) -> a
    void addItem(com.gezitech.contract.GezitechEntity_I,boolean) -> a
    java.util.ArrayList getList() -> a
    com.gezitech.contract.GezitechEntity_I getItemList(int) -> b
    void removeAll() -> b
    void remove(int) -> c
    void setItem(com.gezitech.contract.GezitechEntity_I,int) -> a
    void setItem(com.gezitech.contract.GezitechEntity_I,int,boolean) -> a
    void setOnClickDataPress(com.hyh.www.adapter.BasicAdapter$OnClickDataPress) -> a
com.hyh.www.adapter.BasicAdapter$OnClickDataPress -> com.hyh.www.adapter.b:
    void onDataPerss(com.gezitech.contract.GezitechEntity_I,int) -> a
com.hyh.www.adapter.ChatAdapter -> com.hyh.www.adapter.c:
    int isfriend -> f
    android.app.Activity activity -> g
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    android.app.Activity access$1(com.hyh.www.adapter.ChatAdapter) -> a
com.hyh.www.adapter.ChatAdapter$1 -> com.hyh.www.adapter.d:
    com.hyh.www.adapter.ChatAdapter this$0 -> a
    com.hyh.www.entity.Chat val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatAdapter$2 -> com.hyh.www.adapter.e:
    com.hyh.www.adapter.ChatAdapter this$0 -> a
    com.hyh.www.entity.Chat val$item -> b
    int val$position -> c
    boolean onLongClick(android.view.View) -> onLongClick
    com.hyh.www.adapter.ChatAdapter access$0(com.hyh.www.adapter.ChatAdapter$2) -> a
com.hyh.www.adapter.ChatAdapter$2$1 -> com.hyh.www.adapter.f:
    com.hyh.www.adapter.ChatAdapter$2 this$1 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    com.hyh.www.entity.Chat val$item -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatAdapter$2$2 -> com.hyh.www.adapter.g:
    com.hyh.www.adapter.ChatAdapter$2 this$1 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatAdapter$Hv -> com.hyh.www.adapter.h:
    com.gezitech.widget.RemoteImageView iv_session_item -> a
    android.widget.TextView bt_session_item -> b
    android.widget.TextView tv_session_item_name -> c
    android.widget.TextView tv_session_item_time -> d
    android.widget.TextView tv_session_item_context -> e
    android.widget.RelativeLayout session_item -> f
    android.view.View v_line -> g
    com.hyh.www.adapter.ChatAdapter this$0 -> h
com.hyh.www.adapter.ChatContentAdapter -> com.hyh.www.adapter.i:
    com.gezitech.entity.User user -> g
    java.lang.String head -> h
    com.gezitech.basic.GezitechActivity activity -> i
    int lastTimeposition -> j
    int currTimeposition -> k
    com.gezitech.widget.MyListView listView -> l
    java.lang.String currentAudioPath -> m
    android.media.MediaPlayer mediaPlayer -> f
    long fid -> n
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void hyhAction(boolean,android.widget.RelativeLayout,android.widget.RelativeLayout,android.widget.TextView,android.widget.TextView,android.widget.ImageView,com.gezitech.widget.RemoteImageView,android.widget.TextView,java.lang.String) -> a
    void hyhAction(boolean,android.widget.RelativeLayout,android.widget.RelativeLayout,android.widget.TextView,android.widget.TextView,android.widget.ImageView,com.gezitech.widget.RemoteImageView,android.widget.TextView,java.lang.String,int) -> a
    void receiptcomplete(android.widget.LinearLayout,android.widget.TextView,android.widget.TextView,java.lang.String,int) -> a
    void createPay(android.widget.RelativeLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,java.lang.String) -> a
    void billpaycomplete(android.widget.LinearLayout,android.widget.TextView,java.lang.String) -> a
    void cbillAction(android.widget.RelativeLayout,android.widget.TextView,android.widget.TextView,android.widget.TextView,android.widget.TextView,java.lang.String) -> a
    void cardAction(android.widget.LinearLayout,com.gezitech.widget.RemoteImageView,android.widget.TextView,android.widget.TextView,android.widget.TextView,java.lang.String,long) -> a
    void mapAction(android.widget.RelativeLayout,com.gezitech.widget.RemoteImageView,android.widget.TextView,java.lang.String) -> a
    void voiceAction(boolean,android.widget.RelativeLayout,android.widget.LinearLayout,android.widget.TextView,android.widget.ImageView,int,java.lang.String) -> a
    com.hyh.www.entity.ChatContent parseData(java.lang.String) -> a
    void refreshAnim(int) -> d
    void playAudio(java.lang.String,android.widget.ImageView,boolean) -> a
    void stopAudio() -> c
    void LookFriendData(long) -> a
    java.lang.String getDateStr(long) -> b
    void refreshcountdown(com.gezitech.widget.MyListView) -> a
    void loadBillDetail(long) -> c
    android.widget.RelativeLayout$LayoutParams _params(int,int,int,int,int) -> a
    java.lang.Object getItem(int) -> getItem
    com.gezitech.basic.GezitechActivity access$1(com.hyh.www.adapter.ChatContentAdapter) -> a
    void access$2(com.hyh.www.adapter.ChatContentAdapter,int) -> a
    int access$3(com.hyh.www.adapter.ChatContentAdapter) -> b
    void access$4(com.hyh.www.adapter.ChatContentAdapter,java.lang.String,android.widget.ImageView,boolean) -> a
    void access$5(com.hyh.www.adapter.ChatContentAdapter,long) -> a
com.hyh.www.adapter.ChatContentAdapter$1 -> com.hyh.www.adapter.j:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    com.hyh.www.entity.ChatContent val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$10 -> com.hyh.www.adapter.k:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    long val$id -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$11 -> com.hyh.www.adapter.l:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    long val$uid -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$12 -> com.hyh.www.adapter.m:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    com.hyh.www.entity.ChatContent val$chatContent -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$13 -> com.hyh.www.adapter.n:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    com.hyh.www.entity.ChatContent val$chatContent -> b
    int val$position -> c
    android.widget.ImageView val$iv_voice_sign -> d
    boolean val$isFriend -> e
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.ChatContentAdapter access$0(com.hyh.www.adapter.ChatContentAdapter$13) -> a
com.hyh.www.adapter.ChatContentAdapter$13$1 -> com.hyh.www.adapter.o:
    com.hyh.www.adapter.ChatContentAdapter$13 this$1 -> a
    int val$position -> b
    android.widget.ImageView val$iv_voice_sign -> c
    boolean val$isFriend -> d
    void onCacheComplete(java.lang.String,boolean,java.lang.String,java.lang.Object) -> a
com.hyh.www.adapter.ChatContentAdapter$14 -> com.hyh.www.adapter.p:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.hyh.www.adapter.ChatContentAdapter$15 -> com.hyh.www.adapter.q:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.adapter.ChatContentAdapter$16 -> com.hyh.www.adapter.r:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.adapter.ChatContentAdapter$2 -> com.hyh.www.adapter.s:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    com.hyh.www.entity.ChatContent val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$3 -> com.hyh.www.adapter.t:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    com.hyh.www.entity.ChatContent val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$4 -> com.hyh.www.adapter.u:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    com.hyh.www.entity.ChatContent val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$5 -> com.hyh.www.adapter.v:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    java.lang.String val$litpic -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$6 -> com.hyh.www.adapter.w:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    java.lang.String val$speech -> b
    int val$position -> c
    android.widget.ImageView val$iv_hyh_voice_sign -> d
    boolean val$isFriend -> e
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.ChatContentAdapter access$0(com.hyh.www.adapter.ChatContentAdapter$6) -> a
com.hyh.www.adapter.ChatContentAdapter$6$1 -> com.hyh.www.adapter.x:
    com.hyh.www.adapter.ChatContentAdapter$6 this$1 -> a
    int val$position -> b
    android.widget.ImageView val$iv_hyh_voice_sign -> c
    boolean val$isFriend -> d
    void onCacheComplete(java.lang.String,boolean,java.lang.String,java.lang.Object) -> a
com.hyh.www.adapter.ChatContentAdapter$7 -> com.hyh.www.adapter.y:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    long val$id -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$8 -> com.hyh.www.adapter.z:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    long val$id -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$9 -> com.hyh.www.adapter.aa:
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    long val$id -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatContentAdapter$Hv -> com.hyh.www.adapter.ab:
    android.widget.TextView tv_time -> b
    android.widget.RelativeLayout ll_my_box -> c
    com.gezitech.widget.RemoteImageView iv_my_head -> d
    android.widget.TextView tv_my_text -> e
    android.widget.LinearLayout ll_my_yuyin -> f
    android.widget.TextView tv_my_yuyin_len -> g
    android.widget.ImageView iv_my_voice_sign -> h
    android.widget.LinearLayout ll_my_pic -> i
    com.gezitech.widget.RemoteImageView iv_my_pic -> j
    android.widget.LinearLayout ll_my_card -> k
    com.gezitech.widget.RemoteImageView iv_my_card_head -> l
    android.widget.TextView tv_my_name_val -> m
    android.widget.TextView tv_my_phone_val -> n
    android.widget.TextView tv_my_address_val -> o
    android.widget.RelativeLayout ll_f_box -> p
    com.gezitech.widget.RemoteImageView iv_f_head -> q
    android.widget.TextView tv_f_text -> r
    android.widget.LinearLayout ll_f_yuyin -> s
    android.widget.TextView tv_f_yuyin_len -> t
    android.widget.ImageView iv_f_voice_sign -> u
    android.widget.LinearLayout ll_f_pic -> v
    com.gezitech.widget.RemoteImageView iv_f_pic -> w
    android.widget.LinearLayout ll_f_card -> x
    com.gezitech.widget.RemoteImageView iv_f_card_head -> y
    android.widget.TextView tv_f_name_val -> z
    android.widget.TextView tv_f_phone_val -> A
    android.widget.TextView tv_f_address_val -> B
    android.widget.RelativeLayout ll_f_map -> C
    com.gezitech.widget.RemoteImageView iv_f_map -> D
    android.widget.TextView tv_f_address -> E
    android.widget.RelativeLayout ll_my_map -> F
    com.gezitech.widget.RemoteImageView iv_my_map -> G
    android.widget.TextView tv_my_address -> H
    android.widget.RelativeLayout rl_bill -> I
    android.widget.TextView tv_bill_code_val -> J
    android.widget.TextView tv_bill_notes -> K
    android.widget.TextView tv_bill_money_val -> L
    android.widget.TextView tv_bill_time_val -> M
    android.widget.RelativeLayout rl_bill_padding -> N
    android.widget.LinearLayout rl_pay_bill -> O
    android.widget.TextView tv_pay_tradecode -> P
    android.widget.RelativeLayout rl_c_pay -> Q
    android.widget.TextView tv_c_txt -> R
    android.widget.TextView tv_c_pay -> S
    android.widget.TextView tv_c_code_val -> T
    android.widget.TextView tv_c_notes -> U
    android.widget.TextView tv_c_money_val -> V
    android.widget.TextView tv_c_time_val -> W
    android.widget.TextView tv_pay_head -> X
    android.widget.RelativeLayout rl_hyh -> Y
    android.widget.TextView tv_hyh_notes -> Z
    android.widget.TextView tv_hyh_yuyin_len -> aa
    android.widget.ImageView iv_hyh_voice_sign -> ab
    com.gezitech.widget.RemoteImageView iv_hyh_pic -> ac
    android.widget.TextView tv_hyh_time_val -> ad
    android.widget.RelativeLayout rl_f_yuyin -> ae
    android.widget.RelativeLayout rl_my_yuyin -> af
    android.widget.RelativeLayout rl_hyh_yuyin -> ag
    com.gezitech.widget.RemoteImageView iv_sys_head -> ah
    com.hyh.www.adapter.ChatContentAdapter this$0 -> a
    android.widget.TextView access$0(com.hyh.www.adapter.ChatContentAdapter$Hv) -> a
    android.widget.RelativeLayout access$1(com.hyh.www.adapter.ChatContentAdapter$Hv) -> b
    android.widget.RelativeLayout access$2(com.hyh.www.adapter.ChatContentAdapter$Hv) -> c
    android.widget.RelativeLayout access$3(com.hyh.www.adapter.ChatContentAdapter$Hv) -> d
    android.widget.LinearLayout access$4(com.hyh.www.adapter.ChatContentAdapter$Hv) -> e
    android.widget.RelativeLayout access$5(com.hyh.www.adapter.ChatContentAdapter$Hv) -> f
    android.widget.RelativeLayout access$6(com.hyh.www.adapter.ChatContentAdapter$Hv) -> g
    com.gezitech.widget.RemoteImageView access$7(com.hyh.www.adapter.ChatContentAdapter$Hv) -> h
    android.widget.TextView access$8(com.hyh.www.adapter.ChatContentAdapter$Hv) -> i
    android.widget.LinearLayout access$9(com.hyh.www.adapter.ChatContentAdapter$Hv) -> j
    com.gezitech.widget.RemoteImageView access$10(com.hyh.www.adapter.ChatContentAdapter$Hv) -> k
    android.widget.RelativeLayout access$11(com.hyh.www.adapter.ChatContentAdapter$Hv) -> l
    android.widget.LinearLayout access$12(com.hyh.www.adapter.ChatContentAdapter$Hv) -> m
    android.widget.TextView access$13(com.hyh.www.adapter.ChatContentAdapter$Hv) -> n
    android.widget.ImageView access$14(com.hyh.www.adapter.ChatContentAdapter$Hv) -> o
    android.widget.RelativeLayout access$15(com.hyh.www.adapter.ChatContentAdapter$Hv) -> p
    com.gezitech.widget.RemoteImageView access$16(com.hyh.www.adapter.ChatContentAdapter$Hv) -> q
    android.widget.TextView access$17(com.hyh.www.adapter.ChatContentAdapter$Hv) -> r
    android.widget.LinearLayout access$18(com.hyh.www.adapter.ChatContentAdapter$Hv) -> s
    com.gezitech.widget.RemoteImageView access$19(com.hyh.www.adapter.ChatContentAdapter$Hv) -> t
    android.widget.TextView access$20(com.hyh.www.adapter.ChatContentAdapter$Hv) -> u
    android.widget.TextView access$21(com.hyh.www.adapter.ChatContentAdapter$Hv) -> v
    android.widget.TextView access$22(com.hyh.www.adapter.ChatContentAdapter$Hv) -> w
    android.widget.TextView access$23(com.hyh.www.adapter.ChatContentAdapter$Hv) -> x
    android.widget.TextView access$24(com.hyh.www.adapter.ChatContentAdapter$Hv) -> y
    android.widget.TextView access$25(com.hyh.www.adapter.ChatContentAdapter$Hv) -> z
    android.widget.TextView access$26(com.hyh.www.adapter.ChatContentAdapter$Hv) -> A
    android.widget.TextView access$27(com.hyh.www.adapter.ChatContentAdapter$Hv) -> B
    android.widget.TextView access$28(com.hyh.www.adapter.ChatContentAdapter$Hv) -> C
    android.widget.TextView access$29(com.hyh.www.adapter.ChatContentAdapter$Hv) -> D
    android.widget.TextView access$30(com.hyh.www.adapter.ChatContentAdapter$Hv) -> E
    android.widget.TextView access$31(com.hyh.www.adapter.ChatContentAdapter$Hv) -> F
    android.widget.TextView access$32(com.hyh.www.adapter.ChatContentAdapter$Hv) -> G
    android.widget.TextView access$33(com.hyh.www.adapter.ChatContentAdapter$Hv) -> H
    android.widget.TextView access$34(com.hyh.www.adapter.ChatContentAdapter$Hv) -> I
    com.gezitech.widget.RemoteImageView access$35(com.hyh.www.adapter.ChatContentAdapter$Hv) -> J
    com.gezitech.widget.RemoteImageView access$36(com.hyh.www.adapter.ChatContentAdapter$Hv) -> K
    android.widget.TextView access$37(com.hyh.www.adapter.ChatContentAdapter$Hv) -> L
    android.widget.LinearLayout access$38(com.hyh.www.adapter.ChatContentAdapter$Hv) -> M
    com.gezitech.widget.RemoteImageView access$39(com.hyh.www.adapter.ChatContentAdapter$Hv) -> N
    android.widget.RelativeLayout access$40(com.hyh.www.adapter.ChatContentAdapter$Hv) -> O
    android.widget.LinearLayout access$41(com.hyh.www.adapter.ChatContentAdapter$Hv) -> P
    android.widget.TextView access$42(com.hyh.www.adapter.ChatContentAdapter$Hv) -> Q
    android.widget.ImageView access$43(com.hyh.www.adapter.ChatContentAdapter$Hv) -> R
    android.widget.RelativeLayout access$44(com.hyh.www.adapter.ChatContentAdapter$Hv) -> S
    com.gezitech.widget.RemoteImageView access$45(com.hyh.www.adapter.ChatContentAdapter$Hv) -> T
    android.widget.TextView access$46(com.hyh.www.adapter.ChatContentAdapter$Hv) -> U
    android.widget.LinearLayout access$47(com.hyh.www.adapter.ChatContentAdapter$Hv) -> V
    com.gezitech.widget.RemoteImageView access$48(com.hyh.www.adapter.ChatContentAdapter$Hv) -> W
    android.widget.TextView access$49(com.hyh.www.adapter.ChatContentAdapter$Hv) -> X
    android.widget.TextView access$50(com.hyh.www.adapter.ChatContentAdapter$Hv) -> Y
    android.widget.TextView access$51(com.hyh.www.adapter.ChatContentAdapter$Hv) -> Z
    android.widget.RelativeLayout access$52(com.hyh.www.adapter.ChatContentAdapter$Hv) -> aa
    android.widget.TextView access$53(com.hyh.www.adapter.ChatContentAdapter$Hv) -> ab
    android.widget.TextView access$54(com.hyh.www.adapter.ChatContentAdapter$Hv) -> ac
    android.widget.ImageView access$55(com.hyh.www.adapter.ChatContentAdapter$Hv) -> ad
    com.gezitech.widget.RemoteImageView access$56(com.hyh.www.adapter.ChatContentAdapter$Hv) -> ae
    android.widget.TextView access$57(com.hyh.www.adapter.ChatContentAdapter$Hv) -> af
com.hyh.www.adapter.ChatHYHAdapter -> com.hyh.www.adapter.ac:
    int isfriend -> g
    android.app.Activity activity -> h
    int lastTimeposition -> i
    int currTimeposition -> j
    com.gezitech.widget.MyListView listView -> k
    java.lang.String currentAudioPath -> l
    android.media.MediaPlayer mediaPlayer -> f
    com.gezitech.entity.User user -> m
    com.gezitech.service.sqlitedb.GezitechDBHelper chatDb -> n
    com.gezitech.service.sqlitedb.GezitechDBHelper chatContentDB -> o
    com.hyh.www.session.SessionFramgent sessionFramgent -> p
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void hyhAction(android.widget.TextView,android.widget.TextView,android.widget.TextView,com.gezitech.widget.RemoteImageView,android.widget.RelativeLayout,android.widget.ImageView,android.widget.TextView,android.widget.LinearLayout,android.widget.LinearLayout,android.view.View,android.view.View,android.widget.TextView,boolean,com.hyh.www.entity.ChatContent,int,boolean) -> a
    java.lang.String getDateStr(long) -> a
    void refreshAnim(int) -> d
    void playAudio(java.lang.String,android.widget.ImageView) -> a
    void stopAudio() -> c
    void refreshcountdown() -> d
    java.lang.Object getItem(int) -> getItem
    android.app.Activity access$1(com.hyh.www.adapter.ChatHYHAdapter) -> a
    com.gezitech.service.sqlitedb.GezitechDBHelper access$2(com.hyh.www.adapter.ChatHYHAdapter) -> b
    com.hyh.www.session.SessionFramgent access$3(com.hyh.www.adapter.ChatHYHAdapter) -> c
    com.gezitech.entity.User access$4(com.hyh.www.adapter.ChatHYHAdapter) -> d
    com.gezitech.service.sqlitedb.GezitechDBHelper access$5(com.hyh.www.adapter.ChatHYHAdapter) -> e
    void access$6(com.hyh.www.adapter.ChatHYHAdapter,int) -> a
    int access$7(com.hyh.www.adapter.ChatHYHAdapter) -> f
    void access$8(com.hyh.www.adapter.ChatHYHAdapter,java.lang.String,android.widget.ImageView) -> a
com.hyh.www.adapter.ChatHYHAdapter$1 -> com.hyh.www.adapter.ad:
    com.hyh.www.adapter.ChatHYHAdapter this$0 -> a
    com.hyh.www.entity.Chat val$chat -> b
    com.hyh.www.entity.ChatContent val$itme -> c
    int val$index -> d
    int val$position -> e
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.ChatHYHAdapter access$0(com.hyh.www.adapter.ChatHYHAdapter$1) -> a
com.hyh.www.adapter.ChatHYHAdapter$1$1 -> com.hyh.www.adapter.ae:
    com.hyh.www.adapter.ChatHYHAdapter$1 this$1 -> a
    com.hyh.www.entity.Chat val$chat -> b
    com.hyh.www.entity.ChatContent val$itme -> c
    int val$index -> d
    int val$position -> e
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.adapter.ChatHYHAdapter$2 -> com.hyh.www.adapter.af:
    com.hyh.www.adapter.ChatHYHAdapter this$0 -> a
    com.hyh.www.entity.Chat val$chat -> b
    com.hyh.www.entity.ChatContent val$itme -> c
    com.hyh.www.adapter.ChatHYHAdapter$Hv val$hv -> d
    int val$index -> e
    boolean onLongClick(android.view.View) -> onLongClick
    com.hyh.www.adapter.ChatHYHAdapter access$0(com.hyh.www.adapter.ChatHYHAdapter$2) -> a
com.hyh.www.adapter.ChatHYHAdapter$2$1 -> com.hyh.www.adapter.ag:
    com.hyh.www.adapter.ChatHYHAdapter$2 this$1 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    com.hyh.www.entity.Chat val$chat -> c
    com.hyh.www.entity.ChatContent val$itme -> d
    com.hyh.www.adapter.ChatHYHAdapter$Hv val$hv -> e
    int val$index -> f
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.ChatHYHAdapter$2 access$0(com.hyh.www.adapter.ChatHYHAdapter$2$1) -> a
com.hyh.www.adapter.ChatHYHAdapter$2$1$1 -> com.hyh.www.adapter.ah:
    com.hyh.www.adapter.ChatHYHAdapter$2$1 this$2 -> a
    com.hyh.www.entity.ChatContent val$itme -> b
    com.hyh.www.entity.Chat val$chat -> c
    com.hyh.www.adapter.ChatHYHAdapter$Hv val$hv -> d
    int val$index -> e
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.adapter.ChatHYHAdapter$2$2 -> com.hyh.www.adapter.ai:
    com.hyh.www.adapter.ChatHYHAdapter$2 this$1 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatHYHAdapter$3 -> com.hyh.www.adapter.aj:
    com.hyh.www.adapter.ChatHYHAdapter this$0 -> a
    com.hyh.www.entity.ChatContent val$itme -> b
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.ChatHYHAdapter access$0(com.hyh.www.adapter.ChatHYHAdapter$3) -> a
com.hyh.www.adapter.ChatHYHAdapter$3$1 -> com.hyh.www.adapter.ak:
    com.hyh.www.adapter.ChatHYHAdapter$3 this$1 -> a
    com.hyh.www.entity.ChatContent val$itme -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.adapter.ChatHYHAdapter$3$1$1 -> com.hyh.www.adapter.al:
    com.hyh.www.adapter.ChatHYHAdapter$3$1 this$2 -> a
    com.hyh.www.widget.YMDialog2 val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatHYHAdapter$4 -> com.hyh.www.adapter.am:
    com.hyh.www.adapter.ChatHYHAdapter this$0 -> a
    com.hyh.www.entity.ChatContent val$itme -> b
    int val$position -> c
    boolean onLongClick(android.view.View) -> onLongClick
    com.hyh.www.adapter.ChatHYHAdapter access$0(com.hyh.www.adapter.ChatHYHAdapter$4) -> a
com.hyh.www.adapter.ChatHYHAdapter$4$1 -> com.hyh.www.adapter.an:
    com.hyh.www.adapter.ChatHYHAdapter$4 this$1 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    com.hyh.www.entity.ChatContent val$itme -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.ChatHYHAdapter$4 access$0(com.hyh.www.adapter.ChatHYHAdapter$4$1) -> a
com.hyh.www.adapter.ChatHYHAdapter$4$1$1 -> com.hyh.www.adapter.ao:
    com.hyh.www.adapter.ChatHYHAdapter$4$1 this$2 -> a
    int val$position -> b
    com.hyh.www.entity.ChatContent val$itme -> c
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.adapter.ChatHYHAdapter$4$2 -> com.hyh.www.adapter.ap:
    com.hyh.www.adapter.ChatHYHAdapter$4 this$1 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatHYHAdapter$5 -> com.hyh.www.adapter.aq:
    com.hyh.www.adapter.ChatHYHAdapter this$0 -> a
    com.hyh.www.entity.ChatContent val$itme -> b
    com.hyh.www.adapter.ChatHYHAdapter$Hv val$hv -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatHYHAdapter$6 -> com.hyh.www.adapter.ar:
    com.hyh.www.adapter.ChatHYHAdapter this$0 -> a
    java.lang.String val$litpic -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.ChatHYHAdapter$7 -> com.hyh.www.adapter.as:
    com.hyh.www.adapter.ChatHYHAdapter this$0 -> a
    java.lang.String val$speech -> b
    int val$position -> c
    android.widget.ImageView val$iv_voice_sign -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.ChatHYHAdapter access$0(com.hyh.www.adapter.ChatHYHAdapter$7) -> a
com.hyh.www.adapter.ChatHYHAdapter$7$1 -> com.hyh.www.adapter.at:
    com.hyh.www.adapter.ChatHYHAdapter$7 this$1 -> a
    int val$position -> b
    android.widget.ImageView val$iv_voice_sign -> c
    void onCacheComplete(java.lang.String,boolean,java.lang.String,java.lang.Object) -> a
com.hyh.www.adapter.ChatHYHAdapter$8 -> com.hyh.www.adapter.au:
    com.hyh.www.adapter.ChatHYHAdapter this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.hyh.www.adapter.ChatHYHAdapter$Hv -> com.hyh.www.adapter.av:
    android.widget.TextView tv_receive_time -> b
    android.widget.TextView tv_diff_time -> c
    android.widget.RelativeLayout myrelease_yuyin -> d
    android.widget.TextView myrelease_NUMBER -> e
    android.widget.RelativeLayout rl_yuyin_bg -> f
    android.widget.ImageView iv_voice_sign -> g
    com.gezitech.widget.RemoteImageView iv_pic -> h
    android.widget.TextView tv_beizhu -> i
    android.widget.TextView tv_reply -> j
    android.widget.LinearLayout ll_chat_person -> k
    android.view.View v_line1 -> l
    android.view.View v_line2 -> m
    android.widget.LinearLayout myrelease_bg -> n
    android.widget.TextView tv_diff_time_name -> o
    com.hyh.www.adapter.ChatHYHAdapter this$0 -> a
    android.widget.TextView access$0(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> a
    android.widget.TextView access$1(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> b
    android.widget.LinearLayout access$2(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> c
    android.widget.TextView access$3(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> d
    android.widget.TextView access$4(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> e
    android.widget.TextView access$5(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> f
    com.gezitech.widget.RemoteImageView access$6(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> g
    android.widget.RelativeLayout access$7(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> h
    android.widget.ImageView access$8(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> i
    android.widget.LinearLayout access$9(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> j
    android.view.View access$10(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> k
    android.view.View access$11(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> l
    android.widget.TextView access$12(com.hyh.www.adapter.ChatHYHAdapter$Hv) -> m
com.hyh.www.adapter.FaceAdapter -> com.hyh.www.adapter.aw:
    java.util.ArrayList data -> f
    android.view.LayoutInflater inflater -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.hyh.www.adapter.FaceAdapter$ViewHolder -> com.hyh.www.adapter.ax:
    android.widget.ImageView iv_face -> a
    com.hyh.www.adapter.FaceAdapter this$0 -> b
com.hyh.www.adapter.FriendRequestOrSearchAdapter -> com.hyh.www.adapter.ay:
    int type -> f
    com.gezitech.basic.GezitechActivity activity -> g
    com.gezitech.entity.User user -> h
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void LookFriendData(long) -> a
    void refusedRequest(com.hyh.www.entity.Friend,int) -> a
    void agreeRequest(com.gezitech.contract.GezitechEntity_I,int,android.widget.Button) -> a
    java.lang.Object getItem(int) -> getItem
    com.gezitech.basic.GezitechActivity access$1(com.hyh.www.adapter.FriendRequestOrSearchAdapter) -> a
com.hyh.www.adapter.FriendRequestOrSearchAdapter$1 -> com.hyh.www.adapter.az:
    com.hyh.www.adapter.FriendRequestOrSearchAdapter this$0 -> a
    com.gezitech.entity.User val$item_ -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.FriendRequestOrSearchAdapter$2 -> com.hyh.www.adapter.ba:
    com.hyh.www.adapter.FriendRequestOrSearchAdapter this$0 -> a
    com.gezitech.contract.GezitechEntity_I val$item -> b
    int val$position -> c
    android.widget.Button val$newFriend_agreedone -> d
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.FriendRequestOrSearchAdapter$3 -> com.hyh.www.adapter.bb:
    com.hyh.www.adapter.FriendRequestOrSearchAdapter this$0 -> a
    com.gezitech.contract.GezitechEntity_I val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.FriendRequestOrSearchAdapter$4 -> com.hyh.www.adapter.bc:
    com.hyh.www.adapter.FriendRequestOrSearchAdapter this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.adapter.FriendRequestOrSearchAdapter$5 -> com.hyh.www.adapter.bd:
    com.hyh.www.adapter.FriendRequestOrSearchAdapter this$0 -> a
    int val$position -> b
    com.hyh.www.entity.Friend val$item -> c
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.adapter.FriendRequestOrSearchAdapter$6 -> com.hyh.www.adapter.be:
    com.hyh.www.adapter.FriendRequestOrSearchAdapter this$0 -> a
    int val$position -> b
    com.hyh.www.entity.Friend val$item_ -> c
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.adapter.FriendRequestOrSearchAdapter$7 -> com.hyh.www.adapter.bf:
    com.hyh.www.adapter.FriendRequestOrSearchAdapter this$0 -> a
    com.gezitech.entity.User val$item_ -> b
    android.widget.Button val$newFriend_agreedone -> c
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.adapter.FriendsAdapter -> com.hyh.www.adapter.bg:
    int mLocationPosition -> f
    java.util.List mFriendsSections -> g
    java.util.List mFriendsPositions -> h
    int count -> i
    void setFriendsSections(java.util.List) -> a
    void setFriendsPositions(java.util.List) -> b
    void setCount(int) -> d
    int getNumberCount() -> c
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> e
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    int getPinnedHeaderState(int) -> a
    void configurePinnedHeader(android.view.View,int,int) -> a
    java.lang.Object[] getSections() -> getSections
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object getItem(int) -> getItem
com.hyh.www.adapter.FriendsAdapter$1 -> com.hyh.www.adapter.bh:
    com.hyh.www.adapter.FriendsAdapter this$0 -> a
    com.hyh.www.entity.Contacts val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.IncomeAdapter -> com.hyh.www.adapter.bi:
    int type -> f
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.hyh.www.adapter.MyPagerAdapter -> com.hyh.www.adapter.MyPagerAdapter:
    java.util.ArrayList mPageViews -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    int getItemPosition(java.lang.Object) -> getItemPosition
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    android.os.Parcelable saveState() -> saveState
    void startUpdate(android.view.View) -> startUpdate
    void finishUpdate(android.view.View) -> finishUpdate
com.hyh.www.adapter.MyPostAdapter -> com.hyh.www.adapter.bj:
    android.media.MediaPlayer mediaPlayer -> g
    java.lang.String currentAudioPath -> h
    com.gezitech.basic.GezitechActivity activity -> i
    java.util.Timer tr -> f
    com.gezitech.widget.MyListView listView -> j
    int lastTimeposition -> k
    int currTimeposition -> l
    boolean isdated -> m
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void cannel(com.hyh.www.entity.Shout,int) -> a
    java.lang.String getDateStr(long) -> a
    void refreshAnim(int) -> d
    void refreshcountdown(com.gezitech.widget.MyListView) -> a
    void playAudio(java.lang.String,android.widget.ImageView) -> a
    void stopAudio() -> c
    java.lang.Object getItem(int) -> getItem
    void access$1(com.hyh.www.adapter.MyPostAdapter,int) -> a
    int access$2(com.hyh.www.adapter.MyPostAdapter) -> a
    void access$3(com.hyh.www.adapter.MyPostAdapter,java.lang.String,android.widget.ImageView) -> a
    com.gezitech.basic.GezitechActivity access$4(com.hyh.www.adapter.MyPostAdapter) -> b
    void access$5(com.hyh.www.adapter.MyPostAdapter,com.hyh.www.entity.Shout,int) -> a
    void access$6(com.hyh.www.adapter.MyPostAdapter) -> c
com.hyh.www.adapter.MyPostAdapter$1 -> com.hyh.www.adapter.bk:
    com.hyh.www.adapter.MyPostAdapter this$0 -> a
    com.hyh.www.entity.Shout val$item -> b
    int val$position -> c
    com.hyh.www.adapter.MyPostAdapter$Hv val$hv -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.MyPostAdapter access$0(com.hyh.www.adapter.MyPostAdapter$1) -> a
com.hyh.www.adapter.MyPostAdapter$1$1 -> com.hyh.www.adapter.bl:
    com.hyh.www.adapter.MyPostAdapter$1 this$1 -> a
    int val$position -> b
    com.hyh.www.adapter.MyPostAdapter$Hv val$hv -> c
    void onCacheComplete(java.lang.String,boolean,java.lang.String,java.lang.Object) -> a
com.hyh.www.adapter.MyPostAdapter$2 -> com.hyh.www.adapter.bm:
    com.hyh.www.adapter.MyPostAdapter this$0 -> a
    com.hyh.www.entity.Shout val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.MyPostAdapter$3 -> com.hyh.www.adapter.bn:
    com.hyh.www.adapter.MyPostAdapter this$0 -> a
    com.hyh.www.entity.Shout val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.MyPostAdapter$4 -> com.hyh.www.adapter.bo:
    com.hyh.www.adapter.MyPostAdapter this$0 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    com.hyh.www.entity.Shout val$item -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.MyPostAdapter access$0(com.hyh.www.adapter.MyPostAdapter$4) -> a
com.hyh.www.adapter.MyPostAdapter$4$1 -> com.hyh.www.adapter.bp:
    com.hyh.www.adapter.MyPostAdapter$4 this$1 -> a
    int val$position -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.adapter.MyPostAdapter$5 -> com.hyh.www.adapter.bq:
    com.hyh.www.adapter.MyPostAdapter this$0 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.MyPostAdapter$6 -> com.hyh.www.adapter.br:
    com.hyh.www.adapter.MyPostAdapter this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.hyh.www.adapter.MyPostAdapter$Hv -> com.hyh.www.adapter.bs:
    android.widget.TextView tv_shangjia -> b
    android.widget.TextView tv_fabu -> c
    android.widget.TextView tv_huifu -> d
    android.widget.TextView tv_shengyu -> e
    android.widget.TextView tv_myrelease_beizhu -> f
    android.widget.TextView myrelease_NUMBER -> g
    com.gezitech.widget.RemoteImageView iv_pic -> h
    android.widget.RelativeLayout myrelease_wdfb_cancel -> i
    android.widget.ImageView iv_voice_sign -> j
    android.widget.RelativeLayout rl_yuyin_bg -> k
    com.hyh.www.adapter.MyPostAdapter this$0 -> a
    android.widget.TextView access$0(com.hyh.www.adapter.MyPostAdapter$Hv) -> a
    android.widget.TextView access$1(com.hyh.www.adapter.MyPostAdapter$Hv) -> b
    android.widget.TextView access$2(com.hyh.www.adapter.MyPostAdapter$Hv) -> c
    android.widget.TextView access$3(com.hyh.www.adapter.MyPostAdapter$Hv) -> d
    android.widget.TextView access$4(com.hyh.www.adapter.MyPostAdapter$Hv) -> e
    android.widget.TextView access$5(com.hyh.www.adapter.MyPostAdapter$Hv) -> f
    android.widget.RelativeLayout access$6(com.hyh.www.adapter.MyPostAdapter$Hv) -> g
    android.widget.ImageView access$7(com.hyh.www.adapter.MyPostAdapter$Hv) -> h
    com.gezitech.widget.RemoteImageView access$8(com.hyh.www.adapter.MyPostAdapter$Hv) -> i
    android.widget.RelativeLayout access$9(com.hyh.www.adapter.MyPostAdapter$Hv) -> j
com.hyh.www.adapter.NearbyAdapter -> com.hyh.www.adapter.bt:
    android.app.Activity activity -> g
    com.gezitech.util.ImageDownloader mImageDownloader -> h
    boolean mImageDownloaderOpen -> f
    android.util.DisplayMetrics dm -> i
    boolean isShowHead -> j
    android.support.v4.app.Fragment FragmentObj -> k
    boolean isJump -> l
    com.gezitech.widget.MyListView listView -> m
    com.gezitech.entity.User user -> n
    void isShowHead(boolean) -> a
    void setFragmentVal(android.support.v4.app.Fragment) -> a
    void setisJump(boolean) -> b
    void setListView(com.gezitech.widget.MyListView) -> a
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void initGetView(com.hyh.www.adapter.NearbyAdapter$Hv,com.hyh.www.entity.NearMsg,int,android.view.View) -> a
    void initCommentList(com.hyh.www.entity.NearMsg,com.hyh.www.adapter.NearbyAdapter$Hv,int,int,android.view.View) -> a
    void setKeyworkClickable(android.widget.TextView,android.text.SpannableString,java.util.regex.Pattern,android.text.style.ClickableSpan) -> a
    void setClickTextView(android.widget.TextView,android.text.SpannableString,int,int,android.text.style.ClickableSpan) -> a
    void getViewByPosition(int,android.view.View) -> a
    org.json.JSONArray addJsonArray(org.json.JSONArray,org.json.JSONObject) -> a
    java.lang.Object getItem(int) -> getItem
    android.app.Activity access$1(com.hyh.www.adapter.NearbyAdapter) -> a
    com.gezitech.entity.User access$2(com.hyh.www.adapter.NearbyAdapter) -> b
    org.json.JSONArray access$3(com.hyh.www.adapter.NearbyAdapter,org.json.JSONArray,org.json.JSONObject) -> a
    void access$4(com.hyh.www.adapter.NearbyAdapter,com.hyh.www.entity.NearMsg,com.hyh.www.adapter.NearbyAdapter$Hv,int,int,android.view.View) -> a
    void access$5(com.hyh.www.adapter.NearbyAdapter,boolean) -> a
    android.support.v4.app.Fragment access$6(com.hyh.www.adapter.NearbyAdapter) -> c
    boolean access$7(com.hyh.www.adapter.NearbyAdapter) -> d
com.hyh.www.adapter.NearbyAdapter$1 -> com.hyh.www.adapter.bu:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    com.hyh.www.adapter.NearbyAdapter$Hv val$hv -> b
    java.lang.String val$content -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NearbyAdapter$10 -> com.hyh.www.adapter.bv:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    org.json.JSONObject val$feed -> b
    void setStyle(android.text.TextPaint) -> a
    void clickTextView() -> a
com.hyh.www.adapter.NearbyAdapter$11 -> com.hyh.www.adapter.bw:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    org.json.JSONObject val$feed -> b
    void setStyle(android.text.TextPaint) -> a
    void clickTextView() -> a
com.hyh.www.adapter.NearbyAdapter$12 -> com.hyh.www.adapter.bx:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    com.hyh.www.entity.NearMsg val$item -> b
    org.json.JSONObject val$feed -> c
    int val$position -> d
    android.view.View val$view -> e
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.NearbyAdapter access$0(com.hyh.www.adapter.NearbyAdapter$12) -> a
com.hyh.www.adapter.NearbyAdapter$12$1 -> com.hyh.www.adapter.by:
    com.hyh.www.adapter.NearbyAdapter$12 this$1 -> a
    com.hyh.www.entity.NearMsg val$item -> b
    int val$position -> c
    android.view.View val$view -> d
    void setCommentCallBack(org.json.JSONObject) -> a
com.hyh.www.adapter.NearbyAdapter$13 -> com.hyh.www.adapter.bz:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    org.json.JSONObject val$feed -> b
    com.hyh.www.entity.NearMsg val$item -> c
    int val$position -> d
    com.hyh.www.adapter.NearbyAdapter$Hv val$hv -> e
    android.view.View val$cv -> f
    android.view.View val$view -> g
    boolean onLongClick(android.view.View) -> onLongClick
    com.hyh.www.adapter.NearbyAdapter access$0(com.hyh.www.adapter.NearbyAdapter$13) -> a
com.hyh.www.adapter.NearbyAdapter$13$1 -> com.hyh.www.adapter.ca:
    com.hyh.www.adapter.NearbyAdapter$13 this$1 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NearbyAdapter$13$2 -> com.hyh.www.adapter.cb:
    com.hyh.www.adapter.NearbyAdapter$13 this$1 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    org.json.JSONObject val$feed -> c
    com.hyh.www.entity.NearMsg val$item -> d
    int val$position -> e
    com.hyh.www.adapter.NearbyAdapter$Hv val$hv -> f
    android.view.View val$cv -> g
    android.view.View val$view -> h
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.NearbyAdapter$13 access$0(com.hyh.www.adapter.NearbyAdapter$13$2) -> a
com.hyh.www.adapter.NearbyAdapter$13$2$1 -> com.hyh.www.adapter.cc:
    com.hyh.www.adapter.NearbyAdapter$13$2 this$2 -> a
    com.hyh.www.entity.NearMsg val$item -> b
    org.json.JSONObject val$feed -> c
    int val$position -> d
    com.hyh.www.adapter.NearbyAdapter$Hv val$hv -> e
    android.view.View val$cv -> f
    android.view.View val$view -> g
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetJSONObjectDone(org.json.JSONObject) -> a
com.hyh.www.adapter.NearbyAdapter$14 -> com.hyh.www.adapter.cd:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    org.json.JSONObject val$feed -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NearbyAdapter$2 -> com.hyh.www.adapter.ce:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    java.lang.String[] val$images -> b
    int val$index -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NearbyAdapter$3 -> com.hyh.www.adapter.cf:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    com.hyh.www.entity.NearMsg val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NearbyAdapter$4 -> com.hyh.www.adapter.cg:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    com.hyh.www.entity.NearMsg val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NearbyAdapter$5 -> com.hyh.www.adapter.ch:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    com.hyh.www.entity.NearMsg val$item -> b
    int val$position -> c
    android.view.View val$view -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.NearbyAdapter access$0(com.hyh.www.adapter.NearbyAdapter$5) -> a
com.hyh.www.adapter.NearbyAdapter$5$1 -> com.hyh.www.adapter.ci:
    com.hyh.www.adapter.NearbyAdapter$5 this$1 -> a
    com.hyh.www.entity.NearMsg val$item -> b
    int val$position -> c
    android.view.View val$view -> d
    void setCommentCallBack(org.json.JSONObject) -> a
com.hyh.www.adapter.NearbyAdapter$6 -> com.hyh.www.adapter.cj:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    org.json.JSONObject val$publisher -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NearbyAdapter$7 -> com.hyh.www.adapter.ck:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    com.hyh.www.entity.NearMsg val$item -> b
    int val$position -> c
    android.view.View val$view -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.NearbyAdapter access$0(com.hyh.www.adapter.NearbyAdapter$7) -> a
com.hyh.www.adapter.NearbyAdapter$7$1 -> com.hyh.www.adapter.cl:
    com.hyh.www.adapter.NearbyAdapter$7 this$1 -> a
    com.hyh.www.entity.NearMsg val$item -> b
    int val$position -> c
    android.view.View val$view -> d
    void setCommentCallBack(org.json.JSONObject) -> a
com.hyh.www.adapter.NearbyAdapter$8 -> com.hyh.www.adapter.cm:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    com.hyh.www.adapter.NearbyAdapter$Hv val$hv -> b
    com.hyh.www.entity.NearMsg val$item -> c
    int val$position -> d
    android.view.View val$view -> e
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NearbyAdapter$9 -> com.hyh.www.adapter.cn:
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    com.hyh.www.entity.NearMsg val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.NearbyAdapter access$0(com.hyh.www.adapter.NearbyAdapter$9) -> a
com.hyh.www.adapter.NearbyAdapter$9$1 -> com.hyh.www.adapter.co:
    com.hyh.www.adapter.NearbyAdapter$9 this$1 -> a
    int val$position -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetJSONObjectDone(org.json.JSONObject) -> a
com.hyh.www.adapter.NearbyAdapter$Hv -> com.hyh.www.adapter.cp:
    android.widget.TextView tv_content -> b
    com.gezitech.widget.FlowLayout ll_pic_list -> c
    android.widget.Button bt_expand -> d
    android.widget.ImageView iv_head -> e
    android.widget.TextView tv_username -> f
    android.widget.ImageView iv_sex -> g
    android.widget.TextView tv_time -> h
    android.widget.TextView tv_distance -> i
    android.widget.ImageView iv_like -> j
    android.view.View v_line -> k
    android.widget.ImageView iv_comment -> l
    com.gezitech.widget.FlowLayout ll_like_list -> m
    android.widget.LinearLayout ll_comment_list -> n
    android.widget.LinearLayout ll_comment_box -> o
    android.widget.Button bt_more_comment -> p
    android.widget.TextView tv_delete -> q
    com.hyh.www.adapter.NearbyAdapter this$0 -> a
    android.widget.TextView access$0(com.hyh.www.adapter.NearbyAdapter$Hv) -> a
    android.widget.Button access$1(com.hyh.www.adapter.NearbyAdapter$Hv) -> b
    com.gezitech.widget.FlowLayout access$2(com.hyh.www.adapter.NearbyAdapter$Hv) -> c
    android.widget.ImageView access$3(com.hyh.www.adapter.NearbyAdapter$Hv) -> d
    android.widget.TextView access$4(com.hyh.www.adapter.NearbyAdapter$Hv) -> e
    android.widget.ImageView access$5(com.hyh.www.adapter.NearbyAdapter$Hv) -> f
    android.widget.TextView access$6(com.hyh.www.adapter.NearbyAdapter$Hv) -> g
    android.widget.TextView access$7(com.hyh.www.adapter.NearbyAdapter$Hv) -> h
    android.widget.ImageView access$8(com.hyh.www.adapter.NearbyAdapter$Hv) -> i
    android.widget.LinearLayout access$9(com.hyh.www.adapter.NearbyAdapter$Hv) -> j
    com.gezitech.widget.FlowLayout access$10(com.hyh.www.adapter.NearbyAdapter$Hv) -> k
    android.widget.ImageView access$11(com.hyh.www.adapter.NearbyAdapter$Hv) -> l
    android.view.View access$12(com.hyh.www.adapter.NearbyAdapter$Hv) -> m
    android.widget.LinearLayout access$13(com.hyh.www.adapter.NearbyAdapter$Hv) -> n
    android.widget.Button access$14(com.hyh.www.adapter.NearbyAdapter$Hv) -> o
    android.widget.TextView access$15(com.hyh.www.adapter.NearbyAdapter$Hv) -> p
com.hyh.www.adapter.NearbyAdapter$OnTextViewClickListener -> com.hyh.www.adapter.cq:
    void clickTextView() -> a
    void setStyle(android.text.TextPaint) -> a
com.hyh.www.adapter.NewMsgHintAdapter -> com.hyh.www.adapter.cr:
    com.gezitech.util.ImageDownloader mImageDownloader -> h
    boolean mImageDownloaderOpen -> f
    com.hyh.www.adapter.NewMsgHintAdapter _this -> g
    android.app.Activity activity -> i
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    android.app.Activity access$1(com.hyh.www.adapter.NewMsgHintAdapter) -> a
com.hyh.www.adapter.NewMsgHintAdapter$1 -> com.hyh.www.adapter.cs:
    com.hyh.www.adapter.NewMsgHintAdapter this$0 -> a
    com.hyh.www.entity.NearHintMsg val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NewMsgHintAdapter$2 -> com.hyh.www.adapter.ct:
    com.hyh.www.adapter.NewMsgHintAdapter this$0 -> a
    com.hyh.www.entity.NearHintMsg val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NewMsgHintAdapter$3 -> com.hyh.www.adapter.cu:
    com.hyh.www.adapter.NewMsgHintAdapter this$0 -> a
    com.hyh.www.entity.NearHintMsg val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.NewMsgHintAdapter$Hv -> com.hyh.www.adapter.cv:
    android.widget.ImageView iv_head -> b
    android.widget.TextView tv_username -> c
    android.widget.TextView tv_content -> d
    android.widget.TextView tv_near_content -> e
    android.widget.ImageView iv_near_img -> f
    android.widget.ImageView iv_like -> g
    android.widget.LinearLayout ll_list_nearby -> h
    com.hyh.www.adapter.NewMsgHintAdapter this$0 -> a
    android.widget.ImageView access$0(com.hyh.www.adapter.NewMsgHintAdapter$Hv) -> a
    android.widget.TextView access$1(com.hyh.www.adapter.NewMsgHintAdapter$Hv) -> b
    android.widget.TextView access$2(com.hyh.www.adapter.NewMsgHintAdapter$Hv) -> c
    android.widget.ImageView access$3(com.hyh.www.adapter.NewMsgHintAdapter$Hv) -> d
    android.widget.ImageView access$4(com.hyh.www.adapter.NewMsgHintAdapter$Hv) -> e
    android.widget.TextView access$5(com.hyh.www.adapter.NewMsgHintAdapter$Hv) -> f
    android.widget.LinearLayout access$6(com.hyh.www.adapter.NewMsgHintAdapter$Hv) -> g
com.hyh.www.adapter.NewsAdapter -> com.hyh.www.adapter.cw:
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.hyh.www.adapter.NewsAdapter$1 -> com.hyh.www.adapter.cx:
    com.hyh.www.adapter.NewsAdapter this$0 -> a
    com.hyh.www.entity.News val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.OrderAdapter -> com.hyh.www.adapter.cy:
    int type -> f
    com.gezitech.entity.User user -> g
    com.gezitech.basic.GezitechActivity activity -> h
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void layoutShow(boolean,android.view.View) -> a
    java.lang.String getDateStr(long) -> b
    void refreshcountdown(com.gezitech.widget.MyListView) -> a
    void lookFriendData(long) -> a
    java.lang.Object getItem(int) -> getItem
    com.gezitech.entity.User access$1(com.hyh.www.adapter.OrderAdapter) -> a
    com.gezitech.basic.GezitechActivity access$2(com.hyh.www.adapter.OrderAdapter) -> b
com.hyh.www.adapter.OrderAdapter$1 -> com.hyh.www.adapter.cz:
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.OrderAdapter$10 -> com.hyh.www.adapter.da:
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.adapter.OrderAdapter$2 -> com.hyh.www.adapter.db:
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.OrderAdapter$3 -> com.hyh.www.adapter.dc:
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.OrderAdapter access$0(com.hyh.www.adapter.OrderAdapter$3) -> a
com.hyh.www.adapter.OrderAdapter$3$1 -> com.hyh.www.adapter.dd:
    com.hyh.www.adapter.OrderAdapter$3 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    com.hyh.www.entity.Bill val$item -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.OrderAdapter$3 access$0(com.hyh.www.adapter.OrderAdapter$3$1) -> a
com.hyh.www.adapter.OrderAdapter$3$1$1 -> com.hyh.www.adapter.de:
    com.hyh.www.adapter.OrderAdapter$3$1 this$2 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.adapter.OrderAdapter$3$2 -> com.hyh.www.adapter.df:
    com.hyh.www.adapter.OrderAdapter$3 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.OrderAdapter$4 -> com.hyh.www.adapter.dg:
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.OrderAdapter access$0(com.hyh.www.adapter.OrderAdapter$4) -> a
com.hyh.www.adapter.OrderAdapter$4$1 -> com.hyh.www.adapter.dh:
    com.hyh.www.adapter.OrderAdapter$4 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    com.hyh.www.entity.Bill val$item -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.OrderAdapter$4 access$0(com.hyh.www.adapter.OrderAdapter$4$1) -> a
com.hyh.www.adapter.OrderAdapter$4$1$1 -> com.hyh.www.adapter.di:
    com.hyh.www.adapter.OrderAdapter$4$1 this$2 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.adapter.OrderAdapter$4$2 -> com.hyh.www.adapter.dj:
    com.hyh.www.adapter.OrderAdapter$4 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.OrderAdapter$5 -> com.hyh.www.adapter.dk:
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.OrderAdapter access$0(com.hyh.www.adapter.OrderAdapter$5) -> a
com.hyh.www.adapter.OrderAdapter$5$1 -> com.hyh.www.adapter.dl:
    com.hyh.www.adapter.OrderAdapter$5 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    com.hyh.www.entity.Bill val$item -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.OrderAdapter$5 access$0(com.hyh.www.adapter.OrderAdapter$5$1) -> a
com.hyh.www.adapter.OrderAdapter$5$1$1 -> com.hyh.www.adapter.dm:
    com.hyh.www.adapter.OrderAdapter$5$1 this$2 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.adapter.OrderAdapter$5$2 -> com.hyh.www.adapter.dn:
    com.hyh.www.adapter.OrderAdapter$5 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.OrderAdapter$6 -> com.hyh.www.adapter.do:
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.OrderAdapter access$0(com.hyh.www.adapter.OrderAdapter$6) -> a
com.hyh.www.adapter.OrderAdapter$6$1 -> com.hyh.www.adapter.dp:
    com.hyh.www.adapter.OrderAdapter$6 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    com.hyh.www.entity.Bill val$item -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.OrderAdapter$6 access$0(com.hyh.www.adapter.OrderAdapter$6$1) -> a
com.hyh.www.adapter.OrderAdapter$6$1$1 -> com.hyh.www.adapter.dq:
    com.hyh.www.adapter.OrderAdapter$6$1 this$2 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.adapter.OrderAdapter$6$2 -> com.hyh.www.adapter.dr:
    com.hyh.www.adapter.OrderAdapter$6 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.OrderAdapter$7 -> com.hyh.www.adapter.ds:
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.OrderAdapter access$0(com.hyh.www.adapter.OrderAdapter$7) -> a
com.hyh.www.adapter.OrderAdapter$7$1 -> com.hyh.www.adapter.dt:
    com.hyh.www.adapter.OrderAdapter$7 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    com.hyh.www.entity.Bill val$item -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.OrderAdapter$7 access$0(com.hyh.www.adapter.OrderAdapter$7$1) -> a
com.hyh.www.adapter.OrderAdapter$7$1$1 -> com.hyh.www.adapter.du:
    com.hyh.www.adapter.OrderAdapter$7$1 this$2 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.adapter.OrderAdapter$7$2 -> com.hyh.www.adapter.dv:
    com.hyh.www.adapter.OrderAdapter$7 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.OrderAdapter$8 -> com.hyh.www.adapter.dw:
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.OrderAdapter$9 -> com.hyh.www.adapter.dx:
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.OrderAdapter$Hv -> com.hyh.www.adapter.dy:
    android.widget.TextView tv_order_number -> b
    android.widget.TextView tv_state -> c
    android.widget.TextView tv_order_time -> d
    android.widget.TextView tv_shengyu -> e
    android.widget.TextView tv_myrelease_beizhu -> f
    android.widget.TextView tv_linkman -> g
    android.widget.TextView tv_company_name -> h
    android.widget.LinearLayout ll_chat -> i
    android.widget.TextView tv_cancel -> j
    android.widget.LinearLayout ll_two_button -> k
    android.widget.TextView tv_refund -> l
    android.widget.LinearLayout myrelease_wdfb_cancel -> m
    android.widget.LinearLayout myrelease_shengyu -> n
    com.gezitech.widget.RemoteImageView iv_img -> o
    com.hyh.www.adapter.OrderAdapter this$0 -> a
    android.widget.TextView access$0(com.hyh.www.adapter.OrderAdapter$Hv) -> a
    android.widget.TextView access$1(com.hyh.www.adapter.OrderAdapter$Hv) -> b
    android.widget.TextView access$2(com.hyh.www.adapter.OrderAdapter$Hv) -> c
    android.widget.TextView access$3(com.hyh.www.adapter.OrderAdapter$Hv) -> d
    android.widget.TextView access$4(com.hyh.www.adapter.OrderAdapter$Hv) -> e
    android.widget.LinearLayout access$5(com.hyh.www.adapter.OrderAdapter$Hv) -> f
    android.widget.LinearLayout access$6(com.hyh.www.adapter.OrderAdapter$Hv) -> g
    android.widget.LinearLayout access$7(com.hyh.www.adapter.OrderAdapter$Hv) -> h
    android.widget.TextView access$8(com.hyh.www.adapter.OrderAdapter$Hv) -> i
    android.widget.LinearLayout access$9(com.hyh.www.adapter.OrderAdapter$Hv) -> j
    android.widget.TextView access$10(com.hyh.www.adapter.OrderAdapter$Hv) -> k
    android.widget.TextView access$11(com.hyh.www.adapter.OrderAdapter$Hv) -> l
    android.widget.TextView access$12(com.hyh.www.adapter.OrderAdapter$Hv) -> m
    com.gezitech.widget.RemoteImageView access$13(com.hyh.www.adapter.OrderAdapter$Hv) -> n
com.hyh.www.adapter.PriceRangeAdapter -> com.hyh.www.adapter.dz:
    android.app.Activity activity -> h
    int selectedID -> f
    com.hyh.www.adapter.PriceRangeAdapter _this -> g
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.hyh.www.adapter.PriceRangeAdapter$1 -> com.hyh.www.adapter.ea:
    com.hyh.www.adapter.PriceRangeAdapter this$0 -> a
    int val$position -> b
    com.hyh.www.entity.PriceRange val$pr -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.PriceRangeAdapter$Hv -> com.hyh.www.adapter.eb:
    android.widget.RadioButton rb_pay_item -> b
    com.hyh.www.adapter.PriceRangeAdapter this$0 -> a
    android.widget.RadioButton access$0(com.hyh.www.adapter.PriceRangeAdapter$Hv) -> a
com.hyh.www.adapter.TemplateAdapter -> com.hyh.www.adapter.ec:
    com.gezitech.basic.GezitechActivity activity -> f
    int getCount() -> getCount
    com.gezitech.contract.GezitechEntity_I getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    com.gezitech.basic.GezitechActivity access$1(com.hyh.www.adapter.TemplateAdapter) -> a
com.hyh.www.adapter.TemplateAdapter$1 -> com.hyh.www.adapter.ed:
    com.hyh.www.adapter.TemplateAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.TemplateAdapter$2 -> com.hyh.www.adapter.ee:
    com.hyh.www.adapter.TemplateAdapter this$0 -> a
    int val$position -> b
    boolean onLongClick(android.view.View) -> onLongClick
    com.hyh.www.adapter.TemplateAdapter access$0(com.hyh.www.adapter.TemplateAdapter$2) -> a
com.hyh.www.adapter.TemplateAdapter$2$1 -> com.hyh.www.adapter.ef:
    com.hyh.www.adapter.TemplateAdapter$2 this$1 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    com.hyh.www.entity.Bill val$bill -> c
    int val$position -> d
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.TemplateAdapter$2 access$0(com.hyh.www.adapter.TemplateAdapter$2$1) -> a
com.hyh.www.adapter.TemplateAdapter$2$1$1 -> com.hyh.www.adapter.eg:
    com.hyh.www.adapter.TemplateAdapter$2$1 this$2 -> a
    int val$position -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.adapter.TemplateAdapter$2$2 -> com.hyh.www.adapter.eh:
    com.hyh.www.adapter.TemplateAdapter$2 this$1 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.TemplateAdapter$3 -> com.hyh.www.adapter.ei:
    com.hyh.www.adapter.TemplateAdapter this$0 -> a
    com.hyh.www.entity.Bill val$item -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.adapter.TemplateAdapter$Hv -> com.hyh.www.adapter.ej:
    android.widget.TextView tv_myrelease_beizhu -> b
    android.widget.TextView tv_shangjia -> c
    android.widget.TextView tv_fabu -> d
    com.gezitech.widget.RemoteImageView iv_pic -> e
    android.widget.RelativeLayout myrelease_yuyin -> f
    android.widget.TextView myrelease_nopic -> g
    com.hyh.www.adapter.TemplateAdapter this$0 -> a
    com.gezitech.widget.RemoteImageView access$0(com.hyh.www.adapter.TemplateAdapter$Hv) -> a
    android.widget.TextView access$1(com.hyh.www.adapter.TemplateAdapter$Hv) -> b
    android.widget.TextView access$2(com.hyh.www.adapter.TemplateAdapter$Hv) -> c
    android.widget.TextView access$3(com.hyh.www.adapter.TemplateAdapter$Hv) -> d
    android.widget.TextView access$4(com.hyh.www.adapter.TemplateAdapter$Hv) -> e
com.hyh.www.adapter.ViewPagerAdapter -> com.hyh.www.adapter.ViewPagerAdapter:
    java.util.List pageViews -> a
    int getCount() -> getCount
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    int getItemPosition(java.lang.Object) -> getItemPosition
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
com.hyh.www.chat.AddTemplateActivity -> com.hyh.www.chat.AddTemplateActivity:
    com.hyh.www.chat.AddTemplateActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    android.widget.EditText ed_edit_beizhu -> f
    android.widget.EditText ed_editbill_jine -> g
    android.widget.RelativeLayout editbill_pay -> h
    android.widget.ImageButton iv_camera -> i
    android.widget.RelativeLayout rl_releaseHyh_photo -> j
    com.gezitech.widget.RemoteImageView iv_releaseHyh_photo -> k
    android.widget.ImageView play_del_xx -> l
    java.io.File litpic -> m
    android.widget.TextView tv_editbill_choose -> n
    android.widget.Button bt_editbill_send -> o
    java.util.HashMap validtimelist -> p
    int activetime -> a
    long activetimeVal -> b
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void _submitData() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void returnData() -> c
    void onBackPressed() -> onBackPressed
    void validtimelistDialog(java.util.ArrayList) -> a
    void access$0(com.hyh.www.chat.AddTemplateActivity) -> a
    com.hyh.www.chat.AddTemplateActivity access$1(com.hyh.www.chat.AddTemplateActivity) -> b
    android.widget.RelativeLayout access$2(com.hyh.www.chat.AddTemplateActivity) -> c
    void access$3(com.hyh.www.chat.AddTemplateActivity,java.io.File) -> a
    void access$4(com.hyh.www.chat.AddTemplateActivity) -> d
    void access$5(com.hyh.www.chat.AddTemplateActivity,java.util.HashMap) -> a
    android.widget.TextView access$6(com.hyh.www.chat.AddTemplateActivity) -> e
com.hyh.www.chat.AddTemplateActivity$1 -> com.hyh.www.chat.a:
    com.hyh.www.chat.AddTemplateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.AddTemplateActivity$2 -> com.hyh.www.chat.b:
    com.hyh.www.chat.AddTemplateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.AddTemplateActivity access$0(com.hyh.www.chat.AddTemplateActivity$2) -> a
com.hyh.www.chat.AddTemplateActivity$2$1 -> com.hyh.www.chat.c:
    com.hyh.www.chat.AddTemplateActivity$2 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.chat.AddTemplateActivity$3 -> com.hyh.www.chat.d:
    com.hyh.www.chat.AddTemplateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.AddTemplateActivity$4 -> com.hyh.www.chat.e:
    com.hyh.www.chat.AddTemplateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.AddTemplateActivity$5 -> com.hyh.www.chat.f:
    com.hyh.www.chat.AddTemplateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.AddTemplateActivity$6 -> com.hyh.www.chat.g:
    com.hyh.www.chat.AddTemplateActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.AddTemplateActivity$7 -> com.hyh.www.chat.h:
    com.hyh.www.chat.AddTemplateActivity this$0 -> a
    java.util.ArrayList val$list -> b
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.chat.BillDetailActivity_bak -> com.hyh.www.chat.BillDetailActivity_bak:
    com.hyh.www.chat.BillDetailActivity_bak _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_number -> d
    android.widget.TextView tv_merchantsname -> e
    android.widget.TextView tv_merchantsaddress -> f
    android.widget.TextView tv_merchantscontact -> g
    android.widget.TextView tv_buyersname -> h
    android.widget.RelativeLayout rl_releaseHyh_photo -> i
    com.gezitech.widget.RemoteImageView iv_releaseHyh_photo -> j
    android.widget.TextView tv_buyersaddress -> k
    android.widget.EditText ed_edit_beizhu -> l
    android.widget.TextView tv_buyerscontact -> m
    android.widget.EditText ed_editbill_jine -> n
    android.widget.RelativeLayout editbill_pay -> o
    android.widget.TextView tv_editbill_choose -> p
    java.lang.String litpicUrl -> q
    com.hyh.www.entity.Bill billdetail -> r
    android.widget.ImageView iv_editbill_pay -> s
    android.widget.TextView tv_editbill_pay -> t
    android.os.Handler mHandler -> u
    android.widget.LinearLayout ll_action_box -> v
    int type -> w
    android.widget.Button bt_jujue -> x
    android.widget.Button bt_zhifu -> y
    int from -> z
    long curr -> A
    long startTime -> B
    java.lang.Runnable countdown -> C
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void setTiem() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void returnData() -> c
    void onBackPressed() -> onBackPressed
    java.lang.String getDateStr(long) -> a
    void onDestroy() -> onDestroy
    void access$0(com.hyh.www.chat.BillDetailActivity_bak) -> a
    android.os.Handler access$1(com.hyh.www.chat.BillDetailActivity_bak) -> b
    java.lang.Runnable access$2(com.hyh.www.chat.BillDetailActivity_bak) -> c
    void access$3(com.hyh.www.chat.BillDetailActivity_bak) -> d
    com.hyh.www.entity.Bill access$4(com.hyh.www.chat.BillDetailActivity_bak) -> e
    com.hyh.www.chat.BillDetailActivity_bak access$5(com.hyh.www.chat.BillDetailActivity_bak) -> f
    int access$6(com.hyh.www.chat.BillDetailActivity_bak) -> g
com.hyh.www.chat.BillDetailActivity_bak$1 -> com.hyh.www.chat.i:
    com.hyh.www.chat.BillDetailActivity_bak this$0 -> a
    void run() -> run
com.hyh.www.chat.BillDetailActivity_bak$2 -> com.hyh.www.chat.j:
    com.hyh.www.chat.BillDetailActivity_bak this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.BillDetailActivity_bak$3 -> com.hyh.www.chat.k:
    com.hyh.www.chat.BillDetailActivity_bak this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.BillDetailActivity_bak$4 -> com.hyh.www.chat.l:
    com.hyh.www.chat.BillDetailActivity_bak this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.BillDetailActivity_bak$5 -> com.hyh.www.chat.m:
    com.hyh.www.chat.BillDetailActivity_bak this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.BillDetailActivity_bak access$0(com.hyh.www.chat.BillDetailActivity_bak$5) -> a
com.hyh.www.chat.BillDetailActivity_bak$5$1 -> com.hyh.www.chat.n:
    com.hyh.www.chat.BillDetailActivity_bak$5 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.ChatActivity -> com.hyh.www.chat.ChatActivity:
    com.hyh.www.chat.ChatActivity _this -> i
    android.widget.Button bt_my_post -> j
    android.widget.Button bt_home_msg -> k
    com.gezitech.widget.MyListView list_view -> l
    android.widget.LinearLayout ll_chat_action_box -> m
    android.widget.ImageButton ib_card -> n
    android.widget.ImageButton ib_switch_sort -> o
    android.widget.EditText et_post_msg -> p
    android.widget.ImageButton ib_post_smile -> q
    android.widget.Button bt_talk -> r
    android.widget.ImageButton ib_post_send -> s
    android.widget.ImageButton ib_post_select -> t
    boolean isTalk -> u
    android.widget.LinearLayout ll_bottom_action_box -> v
    boolean bottomBoxIsShow -> w
    boolean SmileBoxIsShow -> x
    android.support.v4.view.ViewPager vp_emoji -> y
    android.widget.LinearLayout ll_select_origin -> z
    java.util.ArrayList emojis -> A
    java.util.ArrayList faceAdapters -> B
    java.util.ArrayList pageViews -> C
    java.util.ArrayList pointViews -> D
    int current -> E
    android.widget.LinearLayout rl_emoji_action_box -> F
    long uid -> G
    java.lang.String username -> H
    java.lang.String head -> I
    int page -> J
    int pageSize -> K
    com.gezitech.service.sqlitedb.GezitechDBHelper chatDb -> L
    com.gezitech.service.sqlitedb.GezitechDBHelper chatContentDB -> M
    java.util.ArrayList chatContentList -> N
    com.hyh.www.adapter.ChatContentAdapter chatContentAdapter -> O
    java.lang.Thread thread -> a
    int isfriend -> P
    org.jivesoftware.smack.Chat chat -> Q
    com.hyh.www.entity.Friend friend -> R
    int flag -> S
    android.view.View i_voice -> T
    java.lang.String path -> b
    long startVoiceT -> c
    java.lang.String voiceName -> d
    java.lang.String voicefile -> e
    com.gezitech.util.SoundMeter mSensor -> U
    android.os.Handler mHandler -> V
    android.widget.ImageView iv_size -> W
    long endVoiceT -> f
    long hyhid -> X
    android.widget.LinearLayout ll_time_box -> Y
    android.widget.TextView tv_time_title -> Z
    android.widget.TextView tv_time_val -> aa
    long hyhtimeVal -> ab
    java.lang.String hyhbody -> ac
    boolean istimeout -> g
    android.widget.TextView tv_count_down_voice_time -> ad
    int isbusiness -> ae
    android.os.Handler handler -> h
    java.lang.String ImageName -> af
    android.content.BroadcastReceiver receiver -> ag
    java.lang.Runnable mPollTask -> ah
    java.lang.Runnable countdown -> ai
    java.lang.Runnable hyhtime -> aj
    java.lang.Runnable count_down_voice_time -> ak
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void sendMessage(java.lang.String,int) -> a
    void sendMessage(java.lang.String,int,int) -> a
    void postVoice() -> b
    void _initChatContent() -> c
    void onBackPressed() -> onBackPressed
    void _closeKeybordShow(boolean) -> a
    void _setEditBackGround(boolean) -> b
    void uploadImage(android.view.View) -> uploadImage
    void billList(android.view.View) -> billList
    void payAction(android.view.View) -> payAction
    void shareAddress() -> d
    void addressShare(android.view.View) -> addressShare
    void cardShareCommon() -> e
    void cardShare(android.view.View) -> cardShare
    void _initEmojiView() -> f
    void _initEmojiPoint() -> g
    void _initEmojiData() -> h
    void draw_Point(int) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void uploadPicCallBack(com.loopj.android.http.RequestParams,com.gezitech.contract.GezitechManager_I$OnAsynInsertListener) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void updateDisplay(double) -> a
    void surplusTime() -> i
    java.lang.String getDateStr(long) -> a
    void ring() -> j
    boolean copyAssetsToFilesystem(java.io.InputStream,java.io.OutputStream) -> a
    java.util.ArrayList access$0(com.hyh.www.chat.ChatActivity) -> a
    com.hyh.www.adapter.ChatContentAdapter access$1(com.hyh.www.chat.ChatActivity) -> b
    com.gezitech.widget.MyListView access$2(com.hyh.www.chat.ChatActivity) -> c
    long access$3(com.hyh.www.chat.ChatActivity) -> d
    long access$4(com.hyh.www.chat.ChatActivity) -> e
    com.gezitech.util.SoundMeter access$5(com.hyh.www.chat.ChatActivity) -> f
    void access$6(com.hyh.www.chat.ChatActivity,double) -> a
    android.os.Handler access$7(com.hyh.www.chat.ChatActivity) -> g
    java.lang.Runnable access$8(com.hyh.www.chat.ChatActivity) -> h
    java.lang.Runnable access$9(com.hyh.www.chat.ChatActivity) -> i
    long access$10(com.hyh.www.chat.ChatActivity) -> j
    void access$11(com.hyh.www.chat.ChatActivity,long) -> a
    android.widget.TextView access$12(com.hyh.www.chat.ChatActivity) -> k
    java.lang.String access$13(com.hyh.www.chat.ChatActivity) -> l
    com.hyh.www.chat.ChatActivity access$14(com.hyh.www.chat.ChatActivity) -> m
    java.lang.Runnable access$15(com.hyh.www.chat.ChatActivity) -> n
    java.lang.String access$16(com.hyh.www.chat.ChatActivity,long) -> b
    android.widget.TextView access$17(com.hyh.www.chat.ChatActivity) -> o
    java.lang.Runnable access$18(com.hyh.www.chat.ChatActivity) -> p
    void access$19(com.hyh.www.chat.ChatActivity) -> q
    int access$20(com.hyh.www.chat.ChatActivity) -> r
    int access$21(com.hyh.www.chat.ChatActivity) -> s
    void access$22(com.hyh.www.chat.ChatActivity,int) -> a
    android.view.View access$23(com.hyh.www.chat.ChatActivity) -> t
    android.widget.EditText access$24(com.hyh.www.chat.ChatActivity) -> u
    boolean access$25(com.hyh.www.chat.ChatActivity) -> v
    void access$26(com.hyh.www.chat.ChatActivity,boolean) -> a
    android.widget.Button access$27(com.hyh.www.chat.ChatActivity) -> w
    android.widget.ImageButton access$28(com.hyh.www.chat.ChatActivity) -> x
    android.widget.ImageButton access$29(com.hyh.www.chat.ChatActivity) -> y
    void access$30(com.hyh.www.chat.ChatActivity,boolean) -> b
    void access$31(com.hyh.www.chat.ChatActivity,boolean) -> c
    android.widget.LinearLayout access$32(com.hyh.www.chat.ChatActivity) -> z
    void access$33(com.hyh.www.chat.ChatActivity,boolean) -> d
    android.widget.LinearLayout access$34(com.hyh.www.chat.ChatActivity) -> A
    void access$35(com.hyh.www.chat.ChatActivity,boolean) -> e
    android.widget.ImageButton access$36(com.hyh.www.chat.ChatActivity) -> B
    android.widget.ImageButton access$37(com.hyh.www.chat.ChatActivity) -> C
    int access$38(com.hyh.www.chat.ChatActivity) -> D
    void access$39(com.hyh.www.chat.ChatActivity,int) -> b
    int access$40(com.hyh.www.chat.ChatActivity) -> E
    void access$41(com.hyh.www.chat.ChatActivity,java.util.ArrayList) -> a
    void access$42(com.hyh.www.chat.ChatActivity,int) -> c
    android.support.v4.view.ViewPager access$43(com.hyh.www.chat.ChatActivity) -> F
    android.widget.LinearLayout access$44(com.hyh.www.chat.ChatActivity) -> G
com.hyh.www.chat.ChatActivity$1 -> com.hyh.www.chat.o:
    com.hyh.www.chat.ChatActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.hyh.www.chat.ChatActivity$10 -> com.hyh.www.chat.p:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.ChatActivity$11 -> com.hyh.www.chat.q:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.ChatActivity$12 -> com.hyh.www.chat.r:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.ChatActivity$13 -> com.hyh.www.chat.s:
    com.hyh.www.chat.ChatActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.hyh.www.chat.ChatActivity$14 -> com.hyh.www.chat.t:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.hyh.www.chat.ChatActivity$15 -> com.hyh.www.chat.u:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.ChatActivity$16 -> com.hyh.www.chat.v:
    com.hyh.www.chat.ChatActivity this$0 -> a
    com.hyh.www.widget.YMDialog2 val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.ChatActivity$17 -> com.hyh.www.chat.w:
    com.hyh.www.chat.ChatActivity this$0 -> a
    long val$time -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.ChatActivity$18 -> com.hyh.www.chat.x:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void onRefresh() -> a
    com.hyh.www.chat.ChatActivity access$0(com.hyh.www.chat.ChatActivity$18) -> a
com.hyh.www.chat.ChatActivity$18$1 -> com.hyh.www.chat.y:
    com.hyh.www.chat.ChatActivity$18 this$1 -> a
    void run() -> run
com.hyh.www.chat.ChatActivity$19 -> com.hyh.www.chat.z:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.hyh.www.chat.ChatActivity$2 -> com.hyh.www.chat.aa:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.chat.ChatActivity$20 -> com.hyh.www.chat.ab:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.ChatActivity$21 -> com.hyh.www.chat.ac:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.ChatActivity$22 -> com.hyh.www.chat.ad:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.ChatActivity$23 -> com.hyh.www.chat.ae:
    com.hyh.www.chat.ChatActivity this$0 -> a
    com.gezitech.contract.GezitechManager_I$OnAsynInsertListener val$listener -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.ChatActivity$24 -> com.hyh.www.chat.af:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.ChatActivity$3 -> com.hyh.www.chat.ag:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void run() -> run
com.hyh.www.chat.ChatActivity$4 -> com.hyh.www.chat.ah:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void run() -> run
com.hyh.www.chat.ChatActivity$5 -> com.hyh.www.chat.ai:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void run() -> run
com.hyh.www.chat.ChatActivity$5$1 -> com.hyh.www.chat.aj:
    com.hyh.www.chat.ChatActivity$5 this$1 -> a
    com.hyh.www.widget.YMDialog2 val$ym2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.ChatActivity$6 -> com.hyh.www.chat.ak:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void run() -> run
com.hyh.www.chat.ChatActivity$7 -> com.hyh.www.chat.al:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.ChatActivity$8 -> com.hyh.www.chat.am:
    com.hyh.www.chat.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.ChatActivity$9 -> com.hyh.www.chat.an:
    com.hyh.www.chat.ChatActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.hyh.www.chat.ChatUtils -> com.hyh.www.chat.ao:
    java.lang.String getTypeStr(java.lang.String,int) -> a
    java.lang.String getOrderStr(int) -> a
com.hyh.www.chat.CreateBillActivity -> com.hyh.www.chat.CreateBillActivity:
    com.hyh.www.chat.CreateBillActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    java.lang.String title -> f
    android.widget.TextView tv_number -> g
    android.widget.TextView tv_merchantsname -> h
    android.widget.TextView tv_merchantsaddress -> i
    android.widget.TextView tv_merchantscontact -> j
    android.widget.TextView tv_buyersname -> k
    android.widget.RelativeLayout rl_releaseHyh_photo -> l
    com.gezitech.widget.RemoteImageView iv_releaseHyh_photo -> m
    android.widget.ImageView play_del_xx -> n
    android.widget.Button bt_editbill_send -> o
    android.widget.TextView tv_buyersaddress -> p
    android.widget.EditText ed_edit_beizhu -> q
    android.widget.TextView tv_buyerscontact -> r
    android.widget.EditText ed_editbill_jine -> s
    android.widget.RelativeLayout editbill_pay -> t
    android.widget.TextView tv_editbill_choose -> u
    android.widget.ImageButton iv_camera -> v
    java.io.File litpic -> w
    java.lang.String litpicUrl -> x
    long fid -> y
    java.util.HashMap validtimelist -> z
    int activetime -> a
    long activetimeVal -> b
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void returnData() -> b
    void onBackPressed() -> onBackPressed
    void validtimelistDialog(java.util.ArrayList) -> a
    void _submitData() -> c
    com.hyh.www.chat.CreateBillActivity access$0(com.hyh.www.chat.CreateBillActivity) -> a
    void access$1(com.hyh.www.chat.CreateBillActivity) -> b
    android.widget.TextView access$2(com.hyh.www.chat.CreateBillActivity) -> c
    android.widget.TextView access$3(com.hyh.www.chat.CreateBillActivity) -> d
    android.widget.TextView access$4(com.hyh.www.chat.CreateBillActivity) -> e
    android.widget.RelativeLayout access$5(com.hyh.www.chat.CreateBillActivity) -> f
    void access$6(com.hyh.www.chat.CreateBillActivity,java.io.File) -> a
    void access$7(com.hyh.www.chat.CreateBillActivity,java.lang.String) -> a
    void access$8(com.hyh.www.chat.CreateBillActivity) -> g
    void access$9(com.hyh.www.chat.CreateBillActivity,java.util.HashMap) -> a
    android.widget.TextView access$10(com.hyh.www.chat.CreateBillActivity) -> h
com.hyh.www.chat.CreateBillActivity$1 -> com.hyh.www.chat.ap:
    com.hyh.www.chat.CreateBillActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.CreateBillActivity$10 -> com.hyh.www.chat.aq:
    com.hyh.www.chat.CreateBillActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.chat.CreateBillActivity$2 -> com.hyh.www.chat.ar:
    com.hyh.www.chat.CreateBillActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.CreateBillActivity$3 -> com.hyh.www.chat.as:
    com.hyh.www.chat.CreateBillActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.chat.CreateBillActivity$4 -> com.hyh.www.chat.at:
    com.hyh.www.chat.CreateBillActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.CreateBillActivity access$0(com.hyh.www.chat.CreateBillActivity$4) -> a
com.hyh.www.chat.CreateBillActivity$4$1 -> com.hyh.www.chat.au:
    com.hyh.www.chat.CreateBillActivity$4 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.chat.CreateBillActivity$5 -> com.hyh.www.chat.av:
    com.hyh.www.chat.CreateBillActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.CreateBillActivity$6 -> com.hyh.www.chat.aw:
    com.hyh.www.chat.CreateBillActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.CreateBillActivity$7 -> com.hyh.www.chat.ax:
    com.hyh.www.chat.CreateBillActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.CreateBillActivity$8 -> com.hyh.www.chat.ay:
    com.hyh.www.chat.CreateBillActivity this$0 -> a
    com.hyh.www.entity.Bill val$template -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.CreateBillActivity$9 -> com.hyh.www.chat.az:
    com.hyh.www.chat.CreateBillActivity this$0 -> a
    java.util.ArrayList val$list -> b
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.chat.CreatePayActivity -> com.hyh.www.chat.CreatePayActivity:
    com.hyh.www.chat.CreatePayActivity _this -> d
    android.widget.Button bt_my_post -> e
    android.widget.Button bt_home_msg -> f
    java.lang.String title -> g
    android.widget.TextView tv_number -> h
    android.widget.TextView tv_merchantsname -> i
    android.widget.TextView tv_merchantsaddress -> j
    android.widget.TextView tv_merchantscontact -> k
    android.widget.TextView tv_buyersname -> l
    android.widget.RelativeLayout rl_releaseHyh_photo -> m
    com.gezitech.widget.RemoteImageView iv_releaseHyh_photo -> n
    android.widget.ImageView play_del_xx -> o
    android.widget.Button bt_editbill_send -> p
    android.widget.TextView tv_buyersaddress -> q
    android.widget.EditText ed_edit_beizhu -> r
    android.widget.TextView tv_buyerscontact -> s
    android.widget.EditText ed_editbill_jine -> t
    android.widget.RelativeLayout editbill_pay -> u
    android.widget.TextView tv_editbill_choose -> v
    android.widget.ImageButton iv_camera -> w
    java.io.File litpic -> x
    java.lang.String litpicUrl -> y
    long fid -> z
    android.widget.TextView tv_editbill_pay -> A
    boolean isSubmitSuccess -> B
    long sid -> C
    java.util.HashMap validtimelist -> D
    int activetime -> a
    long activetimeVal -> b
    com.hyh.www.entity.Bill bill -> c
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void returnData() -> b
    void onBackPressed() -> onBackPressed
    void validtimelistDialog(java.util.ArrayList) -> a
    void _submitData() -> c
    void jumpPay() -> d
    void access$0(com.hyh.www.chat.CreatePayActivity) -> a
    android.widget.TextView access$1(com.hyh.www.chat.CreatePayActivity) -> b
    android.widget.TextView access$2(com.hyh.www.chat.CreatePayActivity) -> c
    android.widget.TextView access$3(com.hyh.www.chat.CreatePayActivity) -> d
    com.hyh.www.chat.CreatePayActivity access$4(com.hyh.www.chat.CreatePayActivity) -> e
    android.widget.RelativeLayout access$5(com.hyh.www.chat.CreatePayActivity) -> f
    void access$6(com.hyh.www.chat.CreatePayActivity,java.io.File) -> a
    void access$7(com.hyh.www.chat.CreatePayActivity,java.lang.String) -> a
    void access$8(com.hyh.www.chat.CreatePayActivity) -> g
    void access$9(com.hyh.www.chat.CreatePayActivity,java.util.HashMap) -> a
    android.widget.TextView access$10(com.hyh.www.chat.CreatePayActivity) -> h
    void access$11(com.hyh.www.chat.CreatePayActivity,boolean) -> a
    void access$12(com.hyh.www.chat.CreatePayActivity) -> i
com.hyh.www.chat.CreatePayActivity$1 -> com.hyh.www.chat.ba:
    com.hyh.www.chat.CreatePayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.CreatePayActivity$2 -> com.hyh.www.chat.bb:
    com.hyh.www.chat.CreatePayActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.chat.CreatePayActivity$3 -> com.hyh.www.chat.bc:
    com.hyh.www.chat.CreatePayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.CreatePayActivity access$0(com.hyh.www.chat.CreatePayActivity$3) -> a
com.hyh.www.chat.CreatePayActivity$3$1 -> com.hyh.www.chat.bd:
    com.hyh.www.chat.CreatePayActivity$3 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.chat.CreatePayActivity$4 -> com.hyh.www.chat.be:
    com.hyh.www.chat.CreatePayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.CreatePayActivity$5 -> com.hyh.www.chat.bf:
    com.hyh.www.chat.CreatePayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.CreatePayActivity$6 -> com.hyh.www.chat.bg:
    com.hyh.www.chat.CreatePayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.CreatePayActivity$7 -> com.hyh.www.chat.bh:
    com.hyh.www.chat.CreatePayActivity this$0 -> a
    java.util.ArrayList val$list -> b
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.chat.CreatePayActivity$8 -> com.hyh.www.chat.bi:
    com.hyh.www.chat.CreatePayActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.chat.MapActivity -> com.hyh.www.chat.MapActivity:
    com.hyh.www.chat.MapActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    com.hyh.www.entity.ChatContent map -> f
    com.baidu.mapapi.map.BaiduMap mp -> g
    com.baidu.mapapi.map.MapView bmapView -> a
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode mCurrentMode -> h
    boolean isFirstLoc -> b
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
com.hyh.www.chat.MyMapActivity -> com.hyh.www.chat.MyMapActivity:
    com.hyh.www.chat.MyMapActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    com.baidu.mapapi.map.BaiduMap mp -> f
    com.baidu.mapapi.map.MapView bmapView -> a
    boolean isFirstLoc -> b
    com.baidu.mapapi.map.MyLocationConfiguration$LocationMode mCurrentMode -> g
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    com.hyh.www.chat.MyMapActivity access$0(com.hyh.www.chat.MyMapActivity) -> a
    com.baidu.mapapi.map.BaiduMap access$1(com.hyh.www.chat.MyMapActivity) -> b
com.hyh.www.chat.MyMapActivity$1 -> com.hyh.www.chat.bj:
    com.hyh.www.chat.MyMapActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.MyMapActivity access$0(com.hyh.www.chat.MyMapActivity$1) -> a
com.hyh.www.chat.MyMapActivity$1$1 -> com.hyh.www.chat.bk:
    com.hyh.www.chat.MyMapActivity$1 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.MyMapActivity$1 access$0(com.hyh.www.chat.MyMapActivity$1$1) -> a
com.hyh.www.chat.MyMapActivity$1$1$1 -> com.hyh.www.chat.bl:
    com.hyh.www.chat.MyMapActivity$1$1 this$2 -> a
    void onSnapshotReady(android.graphics.Bitmap) -> onSnapshotReady
com.hyh.www.chat.MyMapActivity$1$2 -> com.hyh.www.chat.bm:
    com.hyh.www.chat.MyMapActivity$1 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.MyMapActivity$2 -> com.hyh.www.chat.bn:
    com.hyh.www.chat.MyMapActivity this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.hyh.www.chat.OrderDetailActivity -> com.hyh.www.chat.OrderDetailActivity:
    com.hyh.www.chat.OrderDetailActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_number -> d
    android.widget.TextView tv_merchantsname -> e
    android.widget.TextView tv_merchantsaddress -> f
    android.widget.TextView tv_merchantscontact -> g
    android.widget.TextView tv_buyersname -> h
    android.widget.RelativeLayout rl_releaseHyh_photo -> i
    com.gezitech.widget.RemoteImageView iv_releaseHyh_photo -> j
    android.widget.TextView tv_buyersaddress -> k
    android.widget.TextView ed_edit_beizhu -> l
    android.widget.TextView tv_buyerscontact -> m
    android.widget.TextView ed_editbill_jine -> n
    android.widget.RelativeLayout editbill_pay -> o
    android.widget.TextView tv_editbill_choose -> p
    java.lang.String litpicUrl -> q
    com.hyh.www.entity.Bill billdetail -> r
    android.os.Handler mHandler -> s
    android.widget.LinearLayout ll_action_box -> t
    android.widget.Button bt_jujue -> u
    android.widget.Button bt_zhifu -> v
    int from -> w
    long curr -> x
    long startTime -> y
    android.widget.RelativeLayout rl_shengyu_time -> z
    android.widget.TextView tv_shengyu_time_val -> A
    java.lang.Runnable countdown -> B
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void stateSwitch() -> b
    void setTiem() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void returnData(int,int) -> a
    void onBackPressed() -> onBackPressed
    java.lang.String getDateStr(long) -> a
    void onDestroy() -> onDestroy
    void access$0(com.hyh.www.chat.OrderDetailActivity) -> a
    android.os.Handler access$1(com.hyh.www.chat.OrderDetailActivity) -> b
    java.lang.Runnable access$2(com.hyh.www.chat.OrderDetailActivity) -> c
    int access$3(com.hyh.www.chat.OrderDetailActivity) -> d
    void access$4(com.hyh.www.chat.OrderDetailActivity,int,int) -> a
    com.hyh.www.entity.Bill access$5(com.hyh.www.chat.OrderDetailActivity) -> e
    com.hyh.www.chat.OrderDetailActivity access$6(com.hyh.www.chat.OrderDetailActivity) -> f
    void access$7(com.hyh.www.chat.OrderDetailActivity) -> g
com.hyh.www.chat.OrderDetailActivity$1 -> com.hyh.www.chat.bo:
    com.hyh.www.chat.OrderDetailActivity this$0 -> a
    void run() -> run
com.hyh.www.chat.OrderDetailActivity$2 -> com.hyh.www.chat.bp:
    com.hyh.www.chat.OrderDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.OrderDetailActivity$3 -> com.hyh.www.chat.bq:
    com.hyh.www.chat.OrderDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.OrderDetailActivity$4 -> com.hyh.www.chat.br:
    com.hyh.www.chat.OrderDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.OrderDetailActivity$5 -> com.hyh.www.chat.bs:
    com.hyh.www.chat.OrderDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.OrderDetailActivity access$0(com.hyh.www.chat.OrderDetailActivity$5) -> a
com.hyh.www.chat.OrderDetailActivity$5$1 -> com.hyh.www.chat.bt:
    com.hyh.www.chat.OrderDetailActivity$5 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.OrderDetailActivity$5 access$0(com.hyh.www.chat.OrderDetailActivity$5$1) -> a
com.hyh.www.chat.OrderDetailActivity$5$1$1 -> com.hyh.www.chat.bu:
    com.hyh.www.chat.OrderDetailActivity$5$1 this$2 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.OrderDetailActivity$5$2 -> com.hyh.www.chat.bv:
    com.hyh.www.chat.OrderDetailActivity$5 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.OrderDetailActivity$6 -> com.hyh.www.chat.bw:
    com.hyh.www.chat.OrderDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.OrderDetailActivity access$0(com.hyh.www.chat.OrderDetailActivity$6) -> a
com.hyh.www.chat.OrderDetailActivity$6$1 -> com.hyh.www.chat.bx:
    com.hyh.www.chat.OrderDetailActivity$6 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.OrderDetailActivity$6 access$0(com.hyh.www.chat.OrderDetailActivity$6$1) -> a
com.hyh.www.chat.OrderDetailActivity$6$1$1 -> com.hyh.www.chat.by:
    com.hyh.www.chat.OrderDetailActivity$6$1 this$2 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.OrderDetailActivity$6$2 -> com.hyh.www.chat.bz:
    com.hyh.www.chat.OrderDetailActivity$6 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.OrderDetailActivity$7 -> com.hyh.www.chat.ca:
    com.hyh.www.chat.OrderDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.OrderDetailActivity access$0(com.hyh.www.chat.OrderDetailActivity$7) -> a
com.hyh.www.chat.OrderDetailActivity$7$1 -> com.hyh.www.chat.cb:
    com.hyh.www.chat.OrderDetailActivity$7 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.OrderDetailActivity$7 access$0(com.hyh.www.chat.OrderDetailActivity$7$1) -> a
com.hyh.www.chat.OrderDetailActivity$7$1$1 -> com.hyh.www.chat.cc:
    com.hyh.www.chat.OrderDetailActivity$7$1 this$2 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.OrderDetailActivity$7$2 -> com.hyh.www.chat.cd:
    com.hyh.www.chat.OrderDetailActivity$7 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.OrderDetailActivity$8 -> com.hyh.www.chat.ce:
    com.hyh.www.chat.OrderDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.OrderDetailActivity access$0(com.hyh.www.chat.OrderDetailActivity$8) -> a
com.hyh.www.chat.OrderDetailActivity$8$1 -> com.hyh.www.chat.cf:
    com.hyh.www.chat.OrderDetailActivity$8 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.OrderDetailActivity$8 access$0(com.hyh.www.chat.OrderDetailActivity$8$1) -> a
com.hyh.www.chat.OrderDetailActivity$8$1$1 -> com.hyh.www.chat.cg:
    com.hyh.www.chat.OrderDetailActivity$8$1 this$2 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.OrderDetailActivity$8$2 -> com.hyh.www.chat.ch:
    com.hyh.www.chat.OrderDetailActivity$8 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.OrderDetailActivity$9 -> com.hyh.www.chat.ci:
    com.hyh.www.chat.OrderDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.OrderDetailActivity access$0(com.hyh.www.chat.OrderDetailActivity$9) -> a
com.hyh.www.chat.OrderDetailActivity$9$1 -> com.hyh.www.chat.cj:
    com.hyh.www.chat.OrderDetailActivity$9 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.OrderDetailActivity$9 access$0(com.hyh.www.chat.OrderDetailActivity$9$1) -> a
com.hyh.www.chat.OrderDetailActivity$9$1$1 -> com.hyh.www.chat.ck:
    com.hyh.www.chat.OrderDetailActivity$9$1 this$2 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
com.hyh.www.chat.OrderDetailActivity$9$2 -> com.hyh.www.chat.cl:
    com.hyh.www.chat.OrderDetailActivity$9 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.PayActivity -> com.hyh.www.chat.PayActivity:
    com.hyh.www.chat.PayActivity _this -> b
    android.widget.Button bt_my_post -> c
    android.widget.Button bt_home_msg -> d
    android.widget.RadioGroup rg_pay_list -> e
    android.widget.Button bt_jujue -> f
    android.widget.Button bt_zhifu -> g
    int payway -> h
    java.lang.String tradecode -> i
    long id -> j
    double money -> k
    java.lang.String paytype -> l
    com.tencent.mm.sdk.openapi.IWXAPI msgApi -> a
    android.os.Handler mHandler -> m
    android.content.BroadcastReceiver receiver -> n
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    android.os.Handler createHandler() -> b
    void returnData() -> c
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    com.hyh.www.chat.PayActivity access$0(com.hyh.www.chat.PayActivity) -> a
    void access$1(com.hyh.www.chat.PayActivity) -> b
    void access$2(com.hyh.www.chat.PayActivity,int) -> a
    int access$3(com.hyh.www.chat.PayActivity) -> c
    long access$4(com.hyh.www.chat.PayActivity) -> d
    java.lang.String access$5(com.hyh.www.chat.PayActivity) -> e
    java.lang.String access$6(com.hyh.www.chat.PayActivity) -> f
    double access$7(com.hyh.www.chat.PayActivity) -> g
    android.os.Handler access$8(com.hyh.www.chat.PayActivity) -> h
com.hyh.www.chat.PayActivity$1 -> com.hyh.www.chat.cm:
    com.hyh.www.chat.PayActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.chat.PayActivity$2 -> com.hyh.www.chat.cn:
    com.hyh.www.chat.PayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.PayActivity$3 -> com.hyh.www.chat.co:
    com.hyh.www.chat.PayActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.hyh.www.chat.PayActivity$4 -> com.hyh.www.chat.cp:
    com.hyh.www.chat.PayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.PayActivity$5 -> com.hyh.www.chat.cq:
    com.hyh.www.chat.PayActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.chat.PayActivity access$0(com.hyh.www.chat.PayActivity$5) -> a
com.hyh.www.chat.PayActivity$5$1 -> com.hyh.www.chat.cr:
    com.hyh.www.chat.PayActivity$5 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onInsertDone(java.lang.String) -> a
    com.hyh.www.chat.PayActivity$5 access$0(com.hyh.www.chat.PayActivity$5$1) -> a
com.hyh.www.chat.PayActivity$5$1$1 -> com.hyh.www.chat.cs:
    com.hyh.www.chat.PayActivity$5$1 this$2 -> a
    com.hyh.www.widget.YMDialog2 val$dialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.PayActivity$5$2 -> com.hyh.www.chat.ct:
    com.hyh.www.chat.PayActivity$5 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.chat.PayActivity$6 -> com.hyh.www.chat.cu:
    com.hyh.www.chat.PayActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.hyh.www.chat.PayActivity access$0(com.hyh.www.chat.PayActivity$6) -> a
com.hyh.www.chat.PayActivity$6$1 -> com.hyh.www.chat.cv:
    com.hyh.www.chat.PayActivity$6 this$1 -> a
    com.hyh.www.widget.YMDialog2 val$dialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.PayActivity$6$2 -> com.hyh.www.chat.cw:
    com.hyh.www.chat.PayActivity$6 this$1 -> a
    com.hyh.www.widget.YMDialog2 val$dialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.PayActivity$6$3 -> com.hyh.www.chat.cx:
    com.hyh.www.chat.PayActivity$6 this$1 -> a
    com.hyh.www.widget.YMDialog2 val$dialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.PayActivity$6$4 -> com.hyh.www.chat.cy:
    com.hyh.www.chat.PayActivity$6 this$1 -> a
    com.hyh.www.widget.YMDialog2 val$dialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.SelectTemplateActivity -> com.hyh.www.chat.SelectTemplateActivity:
    com.hyh.www.chat.SelectTemplateActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    com.gezitech.widget.MyListView list_view -> d
    com.hyh.www.adapter.TemplateAdapter templateAdapter -> e
    int page -> f
    int pageSize -> g
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> b
    void loadData() -> a
    void returnData() -> c
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.hyh.www.chat.SelectTemplateActivity access$0(com.hyh.www.chat.SelectTemplateActivity) -> a
    void access$1(com.hyh.www.chat.SelectTemplateActivity) -> b
    void access$2(com.hyh.www.chat.SelectTemplateActivity,int) -> a
    int access$3(com.hyh.www.chat.SelectTemplateActivity) -> c
    com.gezitech.widget.MyListView access$4(com.hyh.www.chat.SelectTemplateActivity) -> d
    com.hyh.www.adapter.TemplateAdapter access$5(com.hyh.www.chat.SelectTemplateActivity) -> e
    int access$6(com.hyh.www.chat.SelectTemplateActivity) -> f
com.hyh.www.chat.SelectTemplateActivity$1 -> com.hyh.www.chat.cz:
    com.hyh.www.chat.SelectTemplateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.SelectTemplateActivity$2 -> com.hyh.www.chat.da:
    com.hyh.www.chat.SelectTemplateActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.chat.SelectTemplateActivity$3 -> com.hyh.www.chat.db:
    com.hyh.www.chat.SelectTemplateActivity this$0 -> a
    void onRefresh() -> a
com.hyh.www.chat.SelectTemplateActivity$4 -> com.hyh.www.chat.dc:
    com.hyh.www.chat.SelectTemplateActivity this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.chat.SelectTemplateActivity$5 -> com.hyh.www.chat.dd:
    com.hyh.www.chat.SelectTemplateActivity this$0 -> a
    void onDataPerss(com.gezitech.contract.GezitechEntity_I,int) -> a
com.hyh.www.chat.SelectTemplateActivity$6 -> com.hyh.www.chat.de:
    com.hyh.www.chat.SelectTemplateActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.entity.Adv -> com.hyh.www.entity.Adv:
    long serialVersionUID -> serialVersionUID
    java.lang.String ad_name -> ad_name
    java.lang.String ad_litpic -> ad_litpic
    long ctime -> ctime
    java.lang.String city -> city
    int isPause -> isPause
    int sort -> sort
    int isdefault -> isdefault
    int drawable -> drawable
com.hyh.www.entity.Banktype -> com.hyh.www.entity.Banktype:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String litpic -> litpic
    int sort -> sort
com.hyh.www.entity.Bill -> com.hyh.www.entity.Bill:
    long serialVersionUID -> serialVersionUID
    long tradecode -> tradecode
    long bid -> bid
    long uid -> uid
    java.lang.String notes -> notes
    double money -> money
    long activetime -> activetime
    java.lang.String litpicUrl -> litpicUrl
    org.json.JSONArray litpic -> litpic
    long ctime -> ctime
    int state -> state
    long paytime -> paytime
    long checktime -> checktime
    long activechecktime -> activechecktime
    java.lang.String invite_username -> invite_username
    java.lang.String invite_nickname -> invite_nickname
    java.lang.String company_name -> company_name
    int tradetype -> tradetype
    java.lang.String user_name -> user_name
    java.lang.String user_nickname -> user_nickname
    java.lang.String user_phone -> user_phone
    java.lang.String user_address -> user_address
    java.lang.String company_tel -> company_tel
    java.lang.String company_address -> company_address
    java.lang.String activetimeName -> activetimeName
    int alltradenumber -> alltradenumber
    int collecttradenumber -> collecttradenumber
    int servicetradenumber -> servicetradenumber
    long surplustime -> surplustime
    long sid -> sid
    org.json.JSONObject info -> info
    java.lang.String username -> username
    java.lang.String head -> head
    int isfriend -> isfriend
    java.lang.String nickname -> nickname
    long common_time -> common_time
    java.lang.String typename -> typename
com.hyh.www.entity.Businesslist -> com.hyh.www.entity.Businesslist:
    long serialVersionUID -> serialVersionUID
    long bid -> bid
    long uid -> uid
    long buyuid -> buyuid
    double trademoney -> trademoney
    double gotmoney -> gotmoney
    long ctime -> ctime
    java.lang.String invite_username -> invite_username
    java.lang.String invite_nickname -> invite_nickname
    java.lang.String businesslist -> businesslist
    java.lang.String company_name -> company_name
com.hyh.www.entity.Chat -> com.hyh.www.entity.Chat:
    long serialVersionUID -> serialVersionUID
    long uid -> uid
    java.lang.String username -> username
    java.lang.String lastcontent -> lastcontent
    long ctime -> ctime
    java.lang.String head -> head
    int unreadcount -> unreadcount
    int isfriend -> isfriend
    int istop -> istop
    long myuid -> myuid
    long hyhid -> hyhid
com.hyh.www.entity.ChatContent -> com.hyh.www.entity.ChatContent:
    long serialVersionUID -> serialVersionUID
    java.lang.String body -> body
    long ctime -> ctime
    java.lang.String audiourl -> audiourl
    long audiolength -> audiolength
    java.lang.String city -> city
    java.lang.String locationAddress -> locationAddress
    double latitude -> latitude
    java.lang.String locationPic -> locationPic
    double longitude -> longitude
    java.lang.String province -> province
    int type -> type
    long chatid -> chatid
    long uid -> uid
    long myuid -> myuid
    long hyhid -> hyhid
    int isfriend -> isfriend
    long sender -> sender
    long receiver -> receiver
    java.lang.String createdate -> createdate
    com.gezitech.entity.PageList chatUser -> chatUser
    int isunfold -> isunfold
    int iswelcome -> iswelcome
    int unreadcount -> unreadcount
com.hyh.www.entity.City -> com.hyh.www.entity.City:
    long serialVersionUID -> serialVersionUID
    long parentId -> parentId
    java.lang.String name -> name
    int level -> level
com.hyh.www.entity.Companytype -> com.hyh.www.entity.Companytype:
    long serialVersionUID -> serialVersionUID
    java.lang.String typename -> typename
    int sort -> sort
    long range -> range
    long activetimeName -> activetimeName
    int answernumber -> answernumber
    java.lang.String range_rangename -> range_rangename
    long range_range -> range_range
    java.lang.String range_activetimeName -> range_activetimeName
    long range_activetime -> range_activetime
    java.lang.String rangeoption -> rangeoption
    java.lang.String activetimeoption -> activetimeoption
    long pid -> pid
    org.json.JSONArray childtype -> childtype
    int isselected -> isselected
com.hyh.www.entity.Configuration -> com.hyh.www.entity.Configuration:
    long serialVersionUID -> serialVersionUID
    int system_id -> system_id
    java.lang.String variable -> variable
    java.lang.String value -> value
    java.lang.String name -> name
    java.lang.String descript -> descript
    java.lang.String ctime -> ctime
com.hyh.www.entity.Contacts -> com.hyh.www.entity.Contacts:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    long usertype -> usertype
    long ctime -> ctime
    java.lang.String nickname -> nickname
    java.lang.String head -> head
    int isLine -> isLine
    int isblacklist -> isblacklist
    long uid -> uid
    long fid -> fid
    java.lang.String notes -> notes
com.hyh.www.entity.Country -> com.hyh.www.entity.Country:
    long serialVersionUID -> serialVersionUID
    long range -> range
    java.lang.String rangename -> rangename
    long ctime -> ctime
    long sort -> sort
com.hyh.www.entity.Emotion -> com.hyh.www.entity.Emotion:
    long serialVersionUID -> serialVersionUID
    java.lang.String title -> title
    java.lang.String emotion -> emotion
    java.lang.String filename -> filename
    int drawable -> drawable
    java.util.ArrayList emojis -> emojis
    java.util.HashMap emojiMap -> emojiMap
    com.hyh.www.entity.Emotion mEmotion -> mEmotion
    int pageSize -> pageSize
    com.hyh.www.entity.Emotion getInstace() -> getInstace
    java.util.ArrayList getDefaultList() -> getDefaultList
    com.gezitech.contract.GezitechEntity_I getEmotionByEmotion(java.lang.String) -> getEmotionByEmotion
    com.gezitech.contract.GezitechEntity_I getEmotionByFilename(java.lang.String) -> getEmotionByFilename
    android.graphics.drawable.Drawable getEmotionDrawable() -> getEmotionDrawable
    java.util.ArrayList getParseEmojiList() -> getParseEmojiList
    java.util.ArrayList getData(int) -> getData
    android.text.SpannableString getExpressionString(android.content.Context,java.lang.String) -> getExpressionString
    android.text.SpannableString getExpressionString(android.content.Context,android.text.SpannableString) -> getExpressionString
    void dealExpression(android.content.Context,android.text.SpannableString,java.util.regex.Pattern,int) -> dealExpression
com.hyh.www.entity.FieldVal -> com.hyh.www.entity.FieldVal:
    java.lang.String value(java.lang.String) -> value
    java.lang.String getSex(int) -> getSex
    java.lang.String getSend(int) -> getSend
com.hyh.www.entity.Friend -> com.hyh.www.entity.Friend:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    int groupId -> groupId
    long ctime -> ctime
    java.lang.String nickname -> nickname
    java.lang.String head -> head
    int isLine -> isLine
    long uid -> uid
    long fid -> fid
    long utime -> utime
    java.lang.String phone -> phone
    int isbusiness -> isbusiness
    int online -> online
    java.lang.String city -> city
    java.lang.String longitude -> longitude
    java.lang.String lat -> lat
    long lasttime -> lasttime
    long thistime -> thistime
    int isPause -> isPause
    long storetotal -> storetotal
    double personaltotal -> personaltotal
    java.lang.String access_token -> access_token
    long expires_in -> expires_in
    java.lang.String refresh_token -> refresh_token
    int islogin -> islogin
    java.lang.String realname -> realname
    java.lang.String IDnumber -> IDnumber
    java.lang.String tel -> tel
    java.lang.String email -> email
    java.lang.String address -> address
    java.lang.String inviteCode -> inviteCode
    int isfriend -> isfriend
    int isstar -> isstar
    int isblacklist -> isblacklist
    java.lang.String Source -> Source
    java.lang.String notes -> notes
    int friendtype -> friendtype
    long fctime -> fctime
    int istop -> istop
    int isremind -> isremind
    int isclose -> isclose
    java.lang.String company_name -> company_name
    java.lang.String company_type -> company_type
    java.lang.String company_address -> company_address
    java.lang.String company_tel -> company_tel
    int sex -> sex
    int hasactivitysession -> hasactivitysession
com.hyh.www.entity.Incomelist -> com.hyh.www.entity.Incomelist:
    long serialVersionUID -> serialVersionUID
    long uid -> uid
    long invite_uid -> invite_uid
    double invite_money -> invite_money
    long coupon_id -> coupon_id
    long ctime -> ctime
    java.lang.String invite_username -> invite_username
    java.lang.String invite_nickname -> invite_nickname
com.hyh.www.entity.NearFeedBack -> com.hyh.www.entity.NearFeedBack:
    long serialVersionUID -> serialVersionUID
    java.lang.String content -> content
    long nid -> nid
    long uid -> uid
    long ruid -> ruid
    java.lang.String address -> address
    java.lang.String longs -> longs
    java.lang.String lat -> lat
    long ctime -> ctime
    org.json.JSONObject publisher -> publisher
    org.json.JSONObject replyer -> replyer
com.hyh.www.entity.NearHintMsg -> com.hyh.www.entity.NearHintMsg:
    long serialVersionUID -> serialVersionUID
    long uid -> uid
    java.lang.String nickname -> nickname
    java.lang.String head -> head
    java.lang.String content -> content
    int isLike -> isLike
    long ctime -> ctime
    java.lang.String nearbycontent -> nearbycontent
    java.lang.String nearbyimage -> nearbyimage
    long nid -> nid
    int isRead -> isRead
    int position -> position
com.hyh.www.entity.NearMsg -> com.hyh.www.entity.NearMsg:
    long serialVersionUID -> serialVersionUID
    java.lang.String content -> content
    long uid -> uid
    long range -> range
    java.lang.String address -> address
    org.json.JSONArray attachment -> attachment
    java.lang.String longs -> longs
    java.lang.String lat -> lat
    long ctime -> ctime
    int like_count -> like_count
    int comment_count -> comment_count
    double m -> m
    int islike -> islike
    org.json.JSONObject publisher -> publisher
    org.json.JSONArray likeList -> likeList
    org.json.JSONArray feedbackList -> feedbackList
com.hyh.www.entity.News -> com.hyh.www.entity.News:
    long serialVersionUID -> serialVersionUID
    long id -> id
    long ctime -> ctime
    java.lang.String title -> title
    java.lang.String content -> content
    java.lang.String userids -> userids
com.hyh.www.entity.Pay -> com.hyh.www.entity.Pay:
    long serialVersionUID -> serialVersionUID
    java.lang.String sign -> sign
com.hyh.www.entity.PriceRange -> com.hyh.www.entity.PriceRange:
    long serialVersionUID -> serialVersionUID
    double price -> price
    long days -> days
    java.lang.String description -> description
    long sort -> sort
com.hyh.www.entity.PubRange -> com.hyh.www.entity.PubRange:
    long serialVersionUID -> serialVersionUID
    java.lang.String rangetitle -> rangetitle
    long range -> range
    java.lang.String description -> description
    long sort -> sort
com.hyh.www.entity.RangeBuyRecord -> com.hyh.www.entity.RangeBuyRecord:
    long serialVersionUID -> serialVersionUID
    double price -> price
    long uid -> uid
    long pid -> pid
    java.lang.String tradecode -> tradecode
    long ctime -> ctime
    java.lang.String note -> note
com.hyh.www.entity.Releasescope -> com.hyh.www.entity.Releasescope:
    long serialVersionUID -> serialVersionUID
    java.lang.String rangename -> rangename
    long range -> range
    int sort -> sort
com.hyh.www.entity.Session -> com.hyh.www.entity.Session:
    long serialVersionUID -> serialVersionUID
    long sender -> sender
    long receiver -> receiver
    java.lang.String createdate -> createdate
    long length -> length
    java.lang.String content -> content
    int state -> state
    int type -> type
    java.lang.String sid -> sid
com.hyh.www.entity.Shout -> com.hyh.www.entity.Shout:
    long serialVersionUID -> serialVersionUID
    java.lang.String type -> type
    java.lang.String rangename -> rangename
    int maxReplycount -> maxReplycount
    long activetime -> activetime
    java.lang.String caption -> caption
    java.lang.String litpic -> litpic
    int replycount -> replycount
    java.lang.String speech -> speech
    long ctime -> ctime
    int speechtime -> speechtime
    int typeid -> typeid
    long range -> range
    long uid -> uid
    double longitude -> longitude
    double latitude -> latitude
    long bid -> bid
    org.json.JSONArray sessionlist -> sessionlist
    org.json.JSONObject user -> user
com.hyh.www.entity.Validtimelist -> com.hyh.www.entity.Validtimelist:
    long serialVersionUID -> serialVersionUID
    java.lang.String activetimeName -> activetimeName
    long activetime -> activetime
    int sort -> sort
com.hyh.www.home.HomeFramgent -> com.hyh.www.home.HomeFramgent:
    android.view.View view -> n
    android.widget.ImageView bt_home_circle -> o
    com.gezitech.widget.ExtendViewFlipper pager_slide -> p
    android.widget.LinearLayout pager_control -> q
    com.gezitech.entity.PageList advList -> r
    android.widget.ImageView[] contorls -> s
    com.hyh.www.home.HomeFramgent _this -> t
    android.view.animation.Animation in -> u
    android.view.animation.Animation out -> v
    android.widget.Button bt_my_post -> w
    android.widget.Button bt_home_msg -> x
    com.gezitech.util.SoundMeter mSensor -> y
    android.widget.LinearLayout ll_voice -> z
    android.view.View i_voice -> A
    android.widget.ImageView iv_size -> B
    int flag -> d
    java.lang.String path -> e
    long startVoiceT -> f
    java.lang.String voiceName -> g
    java.lang.String voicefile -> h
    long endVoiceT -> i
    long isClickTemp -> j
    boolean isclick -> k
    android.widget.TextView tv_count_down_voice_time -> C
    boolean istimeout -> l
    android.widget.TextView tv_gps -> D
    com.hyh.www.home.HomeFramgent fragment -> m
    android.os.Handler mHandler -> E
    java.lang.Runnable advtime -> F
    java.lang.Runnable mPollTask -> G
    java.lang.Runnable count_down_voice_time -> H
    android.content.BroadcastReceiver receiver -> I
    com.hyh.www.home.HomeFramgent newInstance() -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void _init() -> c
    void postVoice() -> d
    void _initAdv() -> e
    void advData() -> f
    void _viewFlipper() -> g
    void setectStyle(boolean) -> a
    void onResume() -> onResume
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void destroyThread() -> b
    void onDetach() -> onDetach
    void updateDisplay(double) -> a
    com.gezitech.widget.ExtendViewFlipper access$0(com.hyh.www.home.HomeFramgent) -> a
    android.view.animation.Animation access$1(com.hyh.www.home.HomeFramgent) -> b
    android.view.animation.Animation access$2(com.hyh.www.home.HomeFramgent) -> c
    com.hyh.www.home.HomeFramgent access$3(com.hyh.www.home.HomeFramgent) -> d
    android.os.Handler access$4(com.hyh.www.home.HomeFramgent) -> e
    java.lang.Runnable access$5(com.hyh.www.home.HomeFramgent) -> f
    com.gezitech.util.SoundMeter access$6(com.hyh.www.home.HomeFramgent) -> g
    void access$7(com.hyh.www.home.HomeFramgent,double) -> a
    java.lang.Runnable access$8(com.hyh.www.home.HomeFramgent) -> h
    android.widget.TextView access$9(com.hyh.www.home.HomeFramgent) -> i
    java.lang.Runnable access$10(com.hyh.www.home.HomeFramgent) -> j
    void access$11(com.hyh.www.home.HomeFramgent) -> k
    android.widget.Button access$12(com.hyh.www.home.HomeFramgent) -> l
    android.view.View access$13(com.hyh.www.home.HomeFramgent) -> m
    com.gezitech.entity.PageList access$14(com.hyh.www.home.HomeFramgent) -> n
    void access$15(com.hyh.www.home.HomeFramgent,com.gezitech.entity.PageList) -> a
    void access$16(com.hyh.www.home.HomeFramgent) -> o
com.hyh.www.home.HomeFramgent$1 -> com.hyh.www.home.a:
    com.hyh.www.home.HomeFramgent this$0 -> a
    void run() -> run
com.hyh.www.home.HomeFramgent$2 -> com.hyh.www.home.b:
    com.hyh.www.home.HomeFramgent this$0 -> a
    void run() -> run
com.hyh.www.home.HomeFramgent$3 -> com.hyh.www.home.c:
    com.hyh.www.home.HomeFramgent this$0 -> a
    void run() -> run
com.hyh.www.home.HomeFramgent$4 -> com.hyh.www.home.d:
    com.hyh.www.home.HomeFramgent this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.home.HomeFramgent$5 -> com.hyh.www.home.e:
    com.hyh.www.home.HomeFramgent this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.home.HomeFramgent$6 -> com.hyh.www.home.f:
    com.hyh.www.home.HomeFramgent this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.hyh.www.home.HomeFramgent$7 -> com.hyh.www.home.g:
    com.hyh.www.home.HomeFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.home.HomeFramgent$8 -> com.hyh.www.home.h:
    com.hyh.www.home.HomeFramgent this$0 -> a
    void selectStyle(boolean) -> a
    void countDownTimerAction(boolean) -> b
com.hyh.www.home.MyReleaseActivity -> com.hyh.www.home.MyReleaseActivity:
    com.hyh.www.home.MyReleaseActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    int page -> a
    int pageSize -> b
    com.gezitech.widget.MyListView list_view -> f
    com.hyh.www.adapter.MyPostAdapter myPostAdapter -> g
    android.os.Handler mHandler -> h
    java.lang.Runnable countdown -> i
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void loadData() -> b
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    com.hyh.www.adapter.MyPostAdapter access$0(com.hyh.www.home.MyReleaseActivity) -> a
    com.gezitech.widget.MyListView access$1(com.hyh.www.home.MyReleaseActivity) -> b
    android.os.Handler access$2(com.hyh.www.home.MyReleaseActivity) -> c
    java.lang.Runnable access$3(com.hyh.www.home.MyReleaseActivity) -> d
    void access$4(com.hyh.www.home.MyReleaseActivity) -> e
    com.hyh.www.home.MyReleaseActivity access$5(com.hyh.www.home.MyReleaseActivity) -> f
com.hyh.www.home.MyReleaseActivity$1 -> com.hyh.www.home.i:
    com.hyh.www.home.MyReleaseActivity this$0 -> a
    void run() -> run
com.hyh.www.home.MyReleaseActivity$2 -> com.hyh.www.home.j:
    com.hyh.www.home.MyReleaseActivity this$0 -> a
    void onRefresh() -> a
com.hyh.www.home.MyReleaseActivity$3 -> com.hyh.www.home.k:
    com.hyh.www.home.MyReleaseActivity this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.home.MyReleaseActivity$4 -> com.hyh.www.home.l:
    com.hyh.www.home.MyReleaseActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.home.ReleaseHyhActivity -> com.hyh.www.home.ReleaseHyhActivity:
    com.hyh.www.home.ReleaseHyhActivity _this -> m
    android.widget.Button bt_my_post -> n
    android.widget.Button bt_home_msg -> o
    android.widget.TextView tv_title -> p
    android.widget.RelativeLayout releaseHyh_shangjialexing -> q
    long company_typeid -> r
    long range -> s
    int activetime -> t
    android.widget.TextView tv_releaseHyh_shangjialexing -> u
    android.widget.RelativeLayout releaseHyh_fabufanwei -> v
    android.widget.TextView tv_releaseHyh_fabufanwei -> w
    android.widget.EditText ed_releaseHyh_huifurenshu -> x
    android.widget.RelativeLayout releaseHyh_youxiaoshijian -> y
    android.widget.TextView tv_releaseHyh_youxiaoshijian -> z
    android.widget.EditText ed_releaseHyh_content -> A
    android.widget.ImageButton iv_releaseHyh_camera -> B
    com.gezitech.widget.RemoteImageView iv_releaseHyh_photo -> C
    android.widget.RelativeLayout rl_releaseHyh_photo -> D
    android.widget.ImageView play_del_xx -> E
    java.io.File litpic -> F
    android.widget.TextView releaseHyh_fbhyh_speak -> G
    android.widget.LinearLayout ll_voice -> H
    com.gezitech.util.SoundMeter mSensor -> I
    android.os.Handler mHandler -> J
    android.widget.ImageView iv_size -> K
    int flag -> a
    int isverify -> b
    long startVoiceT -> c
    java.lang.String voiceName -> d
    long endVoiceT -> e
    java.lang.String path -> f
    java.lang.String voicefile -> g
    com.loopj.android.http.RequestParams params -> L
    org.jivesoftware.smack.Chat chat -> M
    android.view.View i_voice -> N
    java.lang.String Prevoicefile -> O
    java.io.File PrevoicefileFile -> P
    boolean isVoice -> Q
    long speechtime -> R
    android.widget.TextView tv_count_down_voice_time -> S
    boolean istimeout -> h
    int pubway -> T
    java.lang.String provinces_nameVal -> U
    java.lang.String urban_nameVal -> V
    java.lang.String county_nameVal -> W
    java.lang.String streets_nameVal -> X
    android.widget.LinearLayout ll_juli_box -> Y
    android.widget.LinearLayout ll_diqu_box -> Z
    android.widget.TextView ed_shengshi -> aa
    android.widget.TextView ed_shiqu -> ab
    android.widget.TextView ed_quxian -> ac
    android.widget.TextView ed_jiedao -> ad
    java.lang.Runnable mPollTask -> ae
    java.lang.Runnable count_down_voice_time -> af
    java.lang.String ImageName -> ag
    boolean isSubmit -> ah
    com.hyh.www.entity.Companytype typeList -> ai
    java.lang.String rangeoption -> i
    java.lang.String activetimeoption -> j
    java.util.HashMap releasescopeList -> aj
    long rangeVal -> k
    java.util.HashMap validtimelist -> ak
    long activetimeVal -> l
    java.util.HashMap guojiaList -> al
    java.util.HashMap shengshiList -> am
    java.util.HashMap shiquList -> an
    java.util.HashMap quxianList -> ao
    java.util.HashMap jiedaoList -> ap
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void postVoice() -> b
    void _initYuyinDataSubmit(long) -> a
    void updateDisplay(double) -> a
    void _initPhoto() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean _initYuyinData() -> d
    void typeDialog(java.util.ArrayList) -> a
    void releasescopeDialog(java.util.ArrayList) -> b
    void validtimelistDialog(java.util.ArrayList) -> c
    void getCityList(java.lang.String,java.util.HashMap,int,java.lang.String) -> a
    void regionalDialog(java.util.ArrayList,java.lang.String,java.util.HashMap,int) -> a
    void setDefaultValue(int) -> a
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    com.gezitech.util.SoundMeter access$0(com.hyh.www.home.ReleaseHyhActivity) -> a
    void access$1(com.hyh.www.home.ReleaseHyhActivity,double) -> a
    android.os.Handler access$2(com.hyh.www.home.ReleaseHyhActivity) -> b
    java.lang.Runnable access$3(com.hyh.www.home.ReleaseHyhActivity) -> c
    android.widget.TextView access$4(com.hyh.www.home.ReleaseHyhActivity) -> d
    java.lang.Runnable access$5(com.hyh.www.home.ReleaseHyhActivity) -> e
    void access$6(com.hyh.www.home.ReleaseHyhActivity) -> f
    com.hyh.www.home.ReleaseHyhActivity access$7(com.hyh.www.home.ReleaseHyhActivity) -> g
    android.widget.EditText access$8(com.hyh.www.home.ReleaseHyhActivity) -> h
    boolean access$9(com.hyh.www.home.ReleaseHyhActivity) -> i
    com.loopj.android.http.RequestParams access$10(com.hyh.www.home.ReleaseHyhActivity) -> j
    java.io.File access$11(com.hyh.www.home.ReleaseHyhActivity) -> k
    long access$12(com.hyh.www.home.ReleaseHyhActivity) -> l
    android.view.View access$13(com.hyh.www.home.ReleaseHyhActivity) -> m
    boolean access$14(com.hyh.www.home.ReleaseHyhActivity) -> n
    android.widget.TextView access$15(com.hyh.www.home.ReleaseHyhActivity) -> o
    void access$16(com.hyh.www.home.ReleaseHyhActivity,org.jivesoftware.smack.Chat) -> a
    int access$17(com.hyh.www.home.ReleaseHyhActivity) -> p
    java.lang.String access$18(com.hyh.www.home.ReleaseHyhActivity) -> q
    java.lang.String access$19(com.hyh.www.home.ReleaseHyhActivity) -> r
    java.lang.String access$20(com.hyh.www.home.ReleaseHyhActivity) -> s
    java.lang.String access$21(com.hyh.www.home.ReleaseHyhActivity) -> t
    long access$22(com.hyh.www.home.ReleaseHyhActivity) -> u
    org.jivesoftware.smack.Chat access$23(com.hyh.www.home.ReleaseHyhActivity) -> v
    android.widget.RelativeLayout access$24(com.hyh.www.home.ReleaseHyhActivity) -> w
    void access$25(com.hyh.www.home.ReleaseHyhActivity,java.io.File) -> a
    void access$26(com.hyh.www.home.ReleaseHyhActivity,com.hyh.www.entity.Companytype) -> a
    com.hyh.www.entity.Companytype access$27(com.hyh.www.home.ReleaseHyhActivity) -> x
    android.widget.TextView access$28(com.hyh.www.home.ReleaseHyhActivity) -> y
    void access$29(com.hyh.www.home.ReleaseHyhActivity,long) -> a
    android.widget.TextView access$30(com.hyh.www.home.ReleaseHyhActivity) -> z
    void access$31(com.hyh.www.home.ReleaseHyhActivity,long) -> b
    android.widget.EditText access$32(com.hyh.www.home.ReleaseHyhActivity) -> A
    android.widget.TextView access$33(com.hyh.www.home.ReleaseHyhActivity) -> B
    void access$34(com.hyh.www.home.ReleaseHyhActivity,int) -> a
    void access$35(com.hyh.www.home.ReleaseHyhActivity,java.util.HashMap) -> a
    void access$36(com.hyh.www.home.ReleaseHyhActivity,int) -> b
    android.widget.LinearLayout access$37(com.hyh.www.home.ReleaseHyhActivity) -> C
    void access$38(com.hyh.www.home.ReleaseHyhActivity,java.util.HashMap) -> b
    int access$39(com.hyh.www.home.ReleaseHyhActivity) -> D
    void access$40(com.hyh.www.home.ReleaseHyhActivity,java.util.HashMap) -> c
    void access$41(com.hyh.www.home.ReleaseHyhActivity,java.lang.String) -> a
    android.widget.TextView access$42(com.hyh.www.home.ReleaseHyhActivity) -> E
    void access$43(com.hyh.www.home.ReleaseHyhActivity,java.util.HashMap) -> d
    void access$44(com.hyh.www.home.ReleaseHyhActivity,java.lang.String) -> b
    android.widget.TextView access$45(com.hyh.www.home.ReleaseHyhActivity) -> F
    void access$46(com.hyh.www.home.ReleaseHyhActivity,java.util.HashMap) -> e
    void access$47(com.hyh.www.home.ReleaseHyhActivity,java.lang.String) -> c
    android.widget.TextView access$48(com.hyh.www.home.ReleaseHyhActivity) -> G
    void access$49(com.hyh.www.home.ReleaseHyhActivity,java.util.HashMap) -> f
    void access$50(com.hyh.www.home.ReleaseHyhActivity,java.lang.String) -> d
    android.widget.TextView access$51(com.hyh.www.home.ReleaseHyhActivity) -> H
    void access$52(com.hyh.www.home.ReleaseHyhActivity,int) -> c
com.hyh.www.home.ReleaseHyhActivity$1 -> com.hyh.www.home.m:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void run() -> run
com.hyh.www.home.ReleaseHyhActivity$10 -> com.hyh.www.home.n:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    long val$time -> b
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    com.hyh.www.home.ReleaseHyhActivity access$0(com.hyh.www.home.ReleaseHyhActivity$10) -> a
com.hyh.www.home.ReleaseHyhActivity$10$1 -> com.hyh.www.home.o:
    com.hyh.www.home.ReleaseHyhActivity$10 this$1 -> a
    double val$Longitude -> b
    double val$Latitude -> c
    long val$time -> d
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
    com.hyh.www.home.ReleaseHyhActivity$10 access$0(com.hyh.www.home.ReleaseHyhActivity$10$1) -> a
com.hyh.www.home.ReleaseHyhActivity$10$1$1 -> com.hyh.www.home.p:
    com.hyh.www.home.ReleaseHyhActivity$10$1 this$2 -> a
    com.hyh.www.widget.YMDialog2 val$ymdialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.home.ReleaseHyhActivity$11 -> com.hyh.www.home.q:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.home.ReleaseHyhActivity$12 -> com.hyh.www.home.r:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.home.ReleaseHyhActivity$13 -> com.hyh.www.home.s:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void onDataCallBack(com.gezitech.contract.GezitechEntity_I) -> a
com.hyh.www.home.ReleaseHyhActivity$14 -> com.hyh.www.home.t:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    java.util.ArrayList val$list -> b
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.home.ReleaseHyhActivity$15 -> com.hyh.www.home.u:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    java.util.ArrayList val$list -> b
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.home.ReleaseHyhActivity$16 -> com.hyh.www.home.v:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    java.lang.String val$typeName -> b
    int val$type -> c
    java.lang.String val$title -> d
    java.util.HashMap val$hm -> e
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.home.ReleaseHyhActivity$17 -> com.hyh.www.home.w:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    int val$type -> b
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.home.ReleaseHyhActivity$2 -> com.hyh.www.home.x:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void run() -> run
com.hyh.www.home.ReleaseHyhActivity$3 -> com.hyh.www.home.y:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.home.ReleaseHyhActivity$4 -> com.hyh.www.home.z:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.home.ReleaseHyhActivity access$0(com.hyh.www.home.ReleaseHyhActivity$4) -> a
com.hyh.www.home.ReleaseHyhActivity$4$1 -> com.hyh.www.home.aa:
    com.hyh.www.home.ReleaseHyhActivity$4 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.home.ReleaseHyhActivity$5 -> com.hyh.www.home.ab:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.home.ReleaseHyhActivity access$0(com.hyh.www.home.ReleaseHyhActivity$5) -> a
com.hyh.www.home.ReleaseHyhActivity$5$1 -> com.hyh.www.home.ac:
    com.hyh.www.home.ReleaseHyhActivity$5 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.home.ReleaseHyhActivity$6 -> com.hyh.www.home.ad:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.home.ReleaseHyhActivity access$0(com.hyh.www.home.ReleaseHyhActivity$6) -> a
com.hyh.www.home.ReleaseHyhActivity$6$1 -> com.hyh.www.home.ae:
    com.hyh.www.home.ReleaseHyhActivity$6 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.home.ReleaseHyhActivity$7 -> com.hyh.www.home.af:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.hyh.www.home.ReleaseHyhActivity$8 -> com.hyh.www.home.ag:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.home.ReleaseHyhActivity$9 -> com.hyh.www.home.ah:
    com.hyh.www.home.ReleaseHyhActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.hyh.www.nearby.CommentBoxDialog -> com.hyh.www.nearby.a:
    com.hyh.www.nearby.CommentBoxDialog _this -> e
    android.content.Context context -> f
    android.util.DisplayMetrics dm -> g
    java.util.ArrayList emojis -> h
    java.util.ArrayList pageViews -> i
    java.util.ArrayList faceAdapters -> j
    java.util.ArrayList pointViews -> k
    android.widget.LinearLayout ll_select_origin -> l
    android.support.v4.view.ViewPager vp_emoji -> m
    int current -> n
    android.widget.EditText et_post_msg -> o
    android.widget.ImageButton ib_post_smile -> p
    android.widget.LinearLayout rl_emoji_action_box -> q
    boolean SmileBoxIsShow -> r
    long ruid -> a
    long nid -> b
    java.lang.String replayHint -> c
    com.hyh.www.nearby.CommentBoxDialog$CommentListener commentListener -> s
    com.hyh.www.entity.NearMsg itemData -> d
    void initData() -> a
    void setEditTextFocus() -> b
    void setEditTextHeight() -> c
    void cannelAction() -> d
    void setDefaultVal() -> e
    void clearDefaultVal() -> f
    void _initEmojiView() -> g
    void _initEmojiPoint() -> h
    void _initEmojiData() -> i
    void draw_Point(int) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void _closeKeybordShow(boolean) -> a
    void _setEditBackGround(boolean) -> b
    void onBackPressed() -> onBackPressed
    void setCommentListener(com.hyh.www.nearby.CommentBoxDialog$CommentListener) -> a
    void access$0(com.hyh.www.nearby.CommentBoxDialog) -> a
    android.widget.LinearLayout access$1(com.hyh.www.nearby.CommentBoxDialog) -> b
    void access$2(com.hyh.www.nearby.CommentBoxDialog,boolean) -> a
    void access$3(com.hyh.www.nearby.CommentBoxDialog,boolean) -> b
    android.widget.EditText access$4(com.hyh.www.nearby.CommentBoxDialog) -> c
    void access$5(com.hyh.www.nearby.CommentBoxDialog,boolean) -> c
    void access$6(com.hyh.www.nearby.CommentBoxDialog) -> d
    void access$7(com.hyh.www.nearby.CommentBoxDialog) -> e
    android.content.Context access$8(com.hyh.www.nearby.CommentBoxDialog) -> f
    com.hyh.www.nearby.CommentBoxDialog access$9(com.hyh.www.nearby.CommentBoxDialog) -> g
    void access$10(com.hyh.www.nearby.CommentBoxDialog) -> h
    com.hyh.www.nearby.CommentBoxDialog$CommentListener access$11(com.hyh.www.nearby.CommentBoxDialog) -> i
    void access$12(com.hyh.www.nearby.CommentBoxDialog,int) -> a
    android.support.v4.view.ViewPager access$13(com.hyh.www.nearby.CommentBoxDialog) -> j
com.hyh.www.nearby.CommentBoxDialog$1 -> com.hyh.www.nearby.b:
    com.hyh.www.nearby.CommentBoxDialog this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.hyh.www.nearby.CommentBoxDialog$2 -> com.hyh.www.nearby.c:
    com.hyh.www.nearby.CommentBoxDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.nearby.CommentBoxDialog$3 -> com.hyh.www.nearby.d:
    com.hyh.www.nearby.CommentBoxDialog this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.hyh.www.nearby.CommentBoxDialog$4 -> com.hyh.www.nearby.e:
    com.hyh.www.nearby.CommentBoxDialog this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.hyh.www.nearby.CommentBoxDialog$5 -> com.hyh.www.nearby.f:
    com.hyh.www.nearby.CommentBoxDialog this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.nearby.CommentBoxDialog access$0(com.hyh.www.nearby.CommentBoxDialog$5) -> a
com.hyh.www.nearby.CommentBoxDialog$5$1 -> com.hyh.www.nearby.g:
    com.hyh.www.nearby.CommentBoxDialog$5 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetJSONObjectDone(org.json.JSONObject) -> a
com.hyh.www.nearby.CommentBoxDialog$6 -> com.hyh.www.nearby.h:
    com.hyh.www.nearby.CommentBoxDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.nearby.CommentBoxDialog$7 -> com.hyh.www.nearby.i:
    com.hyh.www.nearby.CommentBoxDialog this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.hyh.www.nearby.CommentBoxDialog$CommentListener -> com.hyh.www.nearby.j:
    void setCommentCallBack(org.json.JSONObject) -> a
com.hyh.www.nearby.NearUtils -> com.hyh.www.nearby.k:
    void likeSubmit(android.app.Activity,com.loopj.android.http.RequestParams,com.hyh.www.nearby.CommentBoxDialog$CommentListener) -> a
com.hyh.www.nearby.NearUtils$1 -> com.hyh.www.nearby.l:
    android.app.Activity val$activity -> a
    com.hyh.www.nearby.CommentBoxDialog$CommentListener val$commentListener -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetJSONObjectDone(org.json.JSONObject) -> a
com.hyh.www.nearby.NearbyFramgent -> com.hyh.www.nearby.NearbyFramgent:
    com.hyh.www.nearby.NearbyFramgent fragment -> d
    android.view.View view -> e
    com.hyh.www.nearby.NearbyFramgent _this -> f
    android.widget.Button bt_my_post -> g
    android.widget.Button bt_home_msg -> h
    android.widget.TextView tv_gps -> i
    com.gezitech.widget.MyListView list_view -> j
    com.hyh.www.adapter.NearbyAdapter nearbyAdapter -> k
    int page -> l
    int pageSize -> m
    android.widget.TextView tv_near_new_msg -> n
    android.content.BroadcastReceiver receiver -> o
    android.os.Handler mHandler -> p
    java.lang.Runnable countdown -> q
    com.hyh.www.nearby.NearbyFramgent newInstance() -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void _init() -> b
    void _initGetData() -> c
    void _getData(java.lang.String,java.lang.String,java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void onHiddenChanged(boolean) -> onHiddenChanged
    void onDestroy() -> onDestroy
    android.widget.Button access$0(com.hyh.www.nearby.NearbyFramgent) -> a
    android.widget.TextView access$1(com.hyh.www.nearby.NearbyFramgent) -> b
    com.hyh.www.nearby.NearbyFramgent access$2(com.hyh.www.nearby.NearbyFramgent) -> c
    android.os.Handler access$3(com.hyh.www.nearby.NearbyFramgent) -> d
    java.lang.Runnable access$4(com.hyh.www.nearby.NearbyFramgent) -> e
    void access$5(com.hyh.www.nearby.NearbyFramgent,int) -> a
    void access$6(com.hyh.www.nearby.NearbyFramgent) -> f
    int access$7(com.hyh.www.nearby.NearbyFramgent) -> g
    com.gezitech.widget.MyListView access$8(com.hyh.www.nearby.NearbyFramgent) -> h
    void access$9(com.hyh.www.nearby.NearbyFramgent,java.lang.String,java.lang.String,java.lang.String) -> a
    com.hyh.www.adapter.NearbyAdapter access$10(com.hyh.www.nearby.NearbyFramgent) -> i
    int access$11(com.hyh.www.nearby.NearbyFramgent) -> j
com.hyh.www.nearby.NearbyFramgent$1 -> com.hyh.www.nearby.m:
    com.hyh.www.nearby.NearbyFramgent this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.nearby.NearbyFramgent$2 -> com.hyh.www.nearby.n:
    com.hyh.www.nearby.NearbyFramgent this$0 -> a
    void run() -> run
com.hyh.www.nearby.NearbyFramgent$3 -> com.hyh.www.nearby.o:
    com.hyh.www.nearby.NearbyFramgent this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.nearby.NearbyFramgent access$0(com.hyh.www.nearby.NearbyFramgent$3) -> a
com.hyh.www.nearby.NearbyFramgent$3$1 -> com.hyh.www.nearby.p:
    com.hyh.www.nearby.NearbyFramgent$3 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.nearby.NearbyFramgent$4 -> com.hyh.www.nearby.q:
    com.hyh.www.nearby.NearbyFramgent this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.nearby.NearbyFramgent$5 -> com.hyh.www.nearby.r:
    com.hyh.www.nearby.NearbyFramgent this$0 -> a
    void onRefresh() -> a
com.hyh.www.nearby.NearbyFramgent$6 -> com.hyh.www.nearby.s:
    com.hyh.www.nearby.NearbyFramgent this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.nearby.NearbyFramgent$7 -> com.hyh.www.nearby.t:
    com.hyh.www.nearby.NearbyFramgent this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.nearby.NearbyFramgent$8 -> com.hyh.www.nearby.u:
    com.hyh.www.nearby.NearbyFramgent this$0 -> a
    void callfunction(java.lang.String,java.lang.String,java.lang.String) -> a
com.hyh.www.nearby.NearbyFramgent$9 -> com.hyh.www.nearby.v:
    com.hyh.www.nearby.NearbyFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.pay.BaseHelper -> com.hyh.www.a.a:
    void showDialog(android.app.Activity,java.lang.String,java.lang.String,int,com.hyh.www.widget.YMDialog2,android.view.View$OnClickListener) -> a
    void log(java.lang.String,java.lang.String) -> a
    org.json.JSONObject string2JSON(java.lang.String) -> a
com.hyh.www.pay.MobileSecurePayer -> com.hyh.www.a.b:
    java.lang.Integer lock -> a
    com.yintong.android.app.IPayService payService -> b
    boolean mbPaying -> c
    android.app.Activity mActivity -> d
    android.content.ServiceConnection mSecurePayConnection -> e
    com.yintong.android.app.IRemoteServiceCallback mCallback -> f
    boolean pay(java.lang.String,android.os.Handler,int,android.app.Activity,boolean) -> a
    com.yintong.android.app.IRemoteServiceCallback access$0(com.hyh.www.pay.MobileSecurePayer) -> a
    android.content.ServiceConnection access$1(com.hyh.www.pay.MobileSecurePayer) -> b
com.hyh.www.pay.MobileSecurePayer$1 -> com.hyh.www.a.c:
    com.hyh.www.pay.MobileSecurePayer this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.hyh.www.pay.MobileSecurePayer$2 -> com.hyh.www.a.d:
    com.hyh.www.pay.MobileSecurePayer this$0 -> a
    void startActivity(java.lang.String,java.lang.String,int,android.os.Bundle) -> startActivity
    boolean isHideLoadingScreen() -> isHideLoadingScreen
    void payEnd(boolean,java.lang.String) -> payEnd
com.hyh.www.pay.MobileSecurePayer$3 -> com.hyh.www.a.e:
    com.hyh.www.pay.MobileSecurePayer this$0 -> a
    java.lang.String val$payinfo -> b
    int val$myWhat -> c
    android.os.Handler val$callback -> d
    void run() -> run
com.hyh.www.pay.ResultChecker -> com.hyh.www.a.f:
    java.lang.String mContent -> a
com.hyh.www.session.ChatMessagesActivity -> com.hyh.www.session.ChatMessagesActivity:
    com.hyh.www.session.ChatMessagesActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    com.gezitech.service.sqlitedb.GezitechDBHelper DB -> d
    long uid -> e
    com.hyh.www.entity.Friend friend -> f
    android.widget.CheckBox Check_top_chat -> g
    android.widget.CheckBox Check_new_alerts -> h
    android.widget.TextView tv_chatmessages_close -> i
    com.gezitech.service.sqlitedb.GezitechDBHelper chatDb -> j
    int isfriend -> k
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void _initData() -> b
    void onClick(android.view.View) -> onClick
    void access$0(com.hyh.www.session.ChatMessagesActivity,com.hyh.www.entity.Friend) -> a
    void access$1(com.hyh.www.session.ChatMessagesActivity) -> a
    com.hyh.www.session.ChatMessagesActivity access$2(com.hyh.www.session.ChatMessagesActivity) -> b
    long access$3(com.hyh.www.session.ChatMessagesActivity) -> c
    com.hyh.www.entity.Friend access$4(com.hyh.www.session.ChatMessagesActivity) -> d
    void access$5(com.hyh.www.session.ChatMessagesActivity) -> e
    com.gezitech.service.sqlitedb.GezitechDBHelper access$6(com.hyh.www.session.ChatMessagesActivity) -> f
    com.gezitech.service.sqlitedb.GezitechDBHelper access$7(com.hyh.www.session.ChatMessagesActivity) -> g
com.hyh.www.session.ChatMessagesActivity$1 -> com.hyh.www.session.a:
    com.hyh.www.session.ChatMessagesActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.session.ChatMessagesActivity$2 -> com.hyh.www.session.b:
    com.hyh.www.session.ChatMessagesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.session.ChatMessagesActivity access$0(com.hyh.www.session.ChatMessagesActivity$2) -> a
com.hyh.www.session.ChatMessagesActivity$2$1 -> com.hyh.www.session.c:
    com.hyh.www.session.ChatMessagesActivity$2 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.session.ChatMessagesActivity$3 -> com.hyh.www.session.d:
    com.hyh.www.session.ChatMessagesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.session.ChatMessagesActivity access$0(com.hyh.www.session.ChatMessagesActivity$3) -> a
com.hyh.www.session.ChatMessagesActivity$3$1 -> com.hyh.www.session.e:
    com.hyh.www.session.ChatMessagesActivity$3 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.session.ChatMessagesActivity$4 -> com.hyh.www.session.f:
    com.hyh.www.session.ChatMessagesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.session.ChatMessagesActivity$5 -> com.hyh.www.session.g:
    com.hyh.www.session.ChatMessagesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.session.ChatMessagesActivity access$0(com.hyh.www.session.ChatMessagesActivity$5) -> a
com.hyh.www.session.ChatMessagesActivity$5$1 -> com.hyh.www.session.h:
    com.hyh.www.session.ChatMessagesActivity$5 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.session.ChatMessagesActivity$5$2 -> com.hyh.www.session.i:
    com.hyh.www.session.ChatMessagesActivity$5 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
    com.hyh.www.session.ChatMessagesActivity$5 access$0(com.hyh.www.session.ChatMessagesActivity$5$2) -> a
com.hyh.www.session.ChatMessagesActivity$5$2$1 -> com.hyh.www.session.j:
    com.hyh.www.session.ChatMessagesActivity$5$2 this$2 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.session.ChatMessagesActivity$6 -> com.hyh.www.session.k:
    com.hyh.www.session.ChatMessagesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.session.ChatMessagesActivity access$0(com.hyh.www.session.ChatMessagesActivity$6) -> a
com.hyh.www.session.ChatMessagesActivity$6$1 -> com.hyh.www.session.l:
    com.hyh.www.session.ChatMessagesActivity$6 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.session.ChatMessagesActivity$7 -> com.hyh.www.session.m:
    com.hyh.www.session.ChatMessagesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.session.ChatMessagesActivity$8 -> com.hyh.www.session.n:
    com.hyh.www.session.ChatMessagesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.session.ChatMessagesActivity access$0(com.hyh.www.session.ChatMessagesActivity$8) -> a
com.hyh.www.session.ChatMessagesActivity$8$1 -> com.hyh.www.session.o:
    com.hyh.www.session.ChatMessagesActivity$8 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.session.ContactsAddBuddyPhoneActivity -> com.hyh.www.session.ContactsAddBuddyPhoneActivity:
    com.hyh.www.session.ContactsAddBuddyPhoneActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    android.widget.TextView tv_title -> f
    int page -> a
    int pageSize -> b
    java.util.List data -> g
    java.util.List contactsItems -> h
    com.gezitech.widget.MyListView listView -> i
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    java.util.List QueryContact() -> b
    void onClick(android.view.View) -> onClick
    java.util.List access$0(com.hyh.www.session.ContactsAddBuddyPhoneActivity) -> a
    java.util.List access$1(com.hyh.www.session.ContactsAddBuddyPhoneActivity) -> b
com.hyh.www.session.ContactsAddBuddyPhoneActivity$1 -> com.hyh.www.session.p:
    com.hyh.www.session.ContactsAddBuddyPhoneActivity this$0 -> a
    int val$index -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.session.ContactsAddBuddyPhoneActivity$ListViewBaseAdapter -> com.hyh.www.session.q:
    java.util.List datas -> a
    com.hyh.www.session.ContactsAddBuddyPhoneActivity this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.hyh.www.session.NewFriendActivity -> com.hyh.www.session.NewFriendActivity:
    com.hyh.www.session.NewFriendActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_title -> d
    android.widget.EditText ed_newFriend_phone_account -> e
    android.widget.Button btn_newFriend_phone_account -> f
    com.gezitech.widget.ListViewNoScroll list_view_no_scroll -> g
    android.widget.Button newFriend_weixin -> h
    android.widget.Button newFriend_tongxunlu -> i
    android.widget.Button personDetailed_weibo -> j
    android.widget.TextView newFriend_no -> k
    java.util.ArrayList friendRequestList -> l
    com.hyh.www.adapter.FriendRequestOrSearchAdapter friendRequestOrSearchAdapter -> m
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void setShowState(boolean) -> a
    void onClick(android.view.View) -> onClick
    void _phoneBook() -> b
    void returnData() -> c
    void onBackPressed() -> onBackPressed
    android.widget.EditText access$0(com.hyh.www.session.NewFriendActivity) -> a
    com.hyh.www.session.NewFriendActivity access$1(com.hyh.www.session.NewFriendActivity) -> b
com.hyh.www.session.NewFriendActivity$1 -> com.hyh.www.session.r:
    com.hyh.www.session.NewFriendActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.session.NotesActivity -> com.hyh.www.session.NotesActivity:
    com.hyh.www.session.NotesActivity _this -> a
    java.lang.String notes -> b
    android.widget.Button bt_my_post -> c
    android.widget.Button bt_home_msg -> d
    android.widget.TextView tv_title -> e
    android.widget.EditText et_notes -> f
    long fid -> g
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    void returnData() -> b
    void onBackPressed() -> onBackPressed
    android.widget.EditText access$0(com.hyh.www.session.NotesActivity) -> a
    java.lang.String access$1(com.hyh.www.session.NotesActivity) -> b
    void access$2(com.hyh.www.session.NotesActivity,java.lang.String) -> a
    com.hyh.www.session.NotesActivity access$3(com.hyh.www.session.NotesActivity) -> c
    long access$4(com.hyh.www.session.NotesActivity) -> d
    void access$5(com.hyh.www.session.NotesActivity) -> e
com.hyh.www.session.NotesActivity$1 -> com.hyh.www.session.s:
    com.hyh.www.session.NotesActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.session.NotesActivity access$0(com.hyh.www.session.NotesActivity$1) -> a
com.hyh.www.session.NotesActivity$1$1 -> com.hyh.www.session.t:
    com.hyh.www.session.NotesActivity$1 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.session.SearchChatContentActivity -> com.hyh.www.session.SearchChatContentActivity:
    com.hyh.www.session.SearchChatContentActivity _this -> b
    android.widget.Button bt_my_post -> c
    android.widget.Button bt_home_msg -> d
    android.widget.TextView tv_title -> e
    android.widget.EditText ed_newFriend_phone_account -> f
    android.widget.Button btn_newFriend_phone_account -> g
    com.gezitech.widget.MyListView list_view -> h
    com.hyh.www.entity.Friend friend -> i
    int page -> j
    int pageSize -> k
    com.hyh.www.adapter.ChatContentAdapter chatContentAdapter -> l
    java.lang.String content -> a
    boolean isLoading -> m
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> b
    void loadData() -> a
    void onClick(android.view.View) -> onClick
    android.widget.EditText access$0(com.hyh.www.session.SearchChatContentActivity) -> a
    com.hyh.www.session.SearchChatContentActivity access$1(com.hyh.www.session.SearchChatContentActivity) -> b
    boolean access$2(com.hyh.www.session.SearchChatContentActivity) -> c
    int access$3(com.hyh.www.session.SearchChatContentActivity) -> d
    void access$4(com.hyh.www.session.SearchChatContentActivity,boolean) -> a
    com.gezitech.widget.MyListView access$5(com.hyh.www.session.SearchChatContentActivity) -> e
    int access$6(com.hyh.www.session.SearchChatContentActivity) -> f
    void access$7(com.hyh.www.session.SearchChatContentActivity,int) -> a
    com.hyh.www.adapter.ChatContentAdapter access$8(com.hyh.www.session.SearchChatContentActivity) -> g
com.hyh.www.session.SearchChatContentActivity$1 -> com.hyh.www.session.u:
    com.hyh.www.session.SearchChatContentActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.session.SearchChatContentActivity$2 -> com.hyh.www.session.v:
    com.hyh.www.session.SearchChatContentActivity this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.session.SearchChatContentActivity$3 -> com.hyh.www.session.w:
    com.hyh.www.session.SearchChatContentActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.session.SearchFriendActivity -> com.hyh.www.session.SearchFriendActivity:
    com.hyh.www.session.SearchFriendActivity _this -> c
    java.lang.String key -> d
    android.widget.Button bt_my_post -> e
    android.widget.Button bt_home_msg -> f
    android.widget.TextView tv_title -> g
    com.gezitech.widget.MyListView list_view -> h
    int page -> a
    int pageSize -> b
    com.hyh.www.adapter.FriendRequestOrSearchAdapter friendRequestOrSearchAdapter -> i
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void loadData() -> b
    void onClick(android.view.View) -> onClick
    com.gezitech.widget.MyListView access$0(com.hyh.www.session.SearchFriendActivity) -> a
    void access$1(com.hyh.www.session.SearchFriendActivity) -> b
    com.hyh.www.session.SearchFriendActivity access$2(com.hyh.www.session.SearchFriendActivity) -> c
    com.hyh.www.adapter.FriendRequestOrSearchAdapter access$3(com.hyh.www.session.SearchFriendActivity) -> d
com.hyh.www.session.SearchFriendActivity$1 -> com.hyh.www.session.x:
    com.hyh.www.session.SearchFriendActivity this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.session.SearchFriendActivity$2 -> com.hyh.www.session.y:
    com.hyh.www.session.SearchFriendActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.session.SessionFramgent -> com.hyh.www.session.SessionFramgent:
    android.view.View view -> h
    com.hyh.www.session.SessionFramgent _this -> i
    android.widget.Button bt_my_post -> j
    android.support.v4.view.ViewPager vp_session_box -> k
    android.widget.RadioGroup session_radioGroup -> l
    android.widget.RadioButton[] tabRadioButton -> m
    android.view.LayoutInflater mInflater -> n
    android.view.ViewGroup viewLayoutListView_hyh -> o
    android.view.ViewGroup viewLayoutListView_chat -> p
    android.view.ViewGroup viewLayoutListView_contacts -> q
    com.gezitech.widget.MyListView list_hyh -> r
    com.gezitech.widget.MyListView list_chat -> s
    com.gezitech.widget.listgroup.PinnedHeaderListView list_contacts -> t
    java.util.ArrayList mPageViews -> u
    com.hyh.www.adapter.MyPagerAdapter myPagerAdapter -> v
    com.hyh.www.adapter.ChatHYHAdapter chatAdapter1 -> w
    com.hyh.www.adapter.ChatAdapter chatAdapter2 -> x
    com.hyh.www.session.SessionFramgent fragment -> d
    com.hyh.www.adapter.FriendsAdapter FriendsAdapter -> y
    android.widget.Button bt_home_msg -> z
    android.view.View kefuView -> A
    com.gezitech.service.sqlitedb.GezitechDBHelper chatDb -> B
    com.gezitech.service.sqlitedb.GezitechDBHelper chatContentDB -> C
    int contactPosition -> e
    int count -> f
    java.lang.Thread thread -> D
    int start -> E
    android.widget.LinearLayout hyh_loading_bg -> F
    android.widget.TextView tv_unreadcount_hyh -> G
    android.widget.TextView tv_unreadcount_private -> H
    android.widget.TextView tv_friend_request_count -> I
    boolean isHidden -> J
    android.content.BroadcastReceiver receiver -> K
    android.widget.TextView tv_gps -> L
    android.os.Handler mHandler -> M
    java.lang.Runnable countdown -> N
    java.util.ArrayList hyhList -> O
    android.os.Handler handler -> g
    com.hyh.www.session.SessionFramgent newInstance() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroyView() -> onDestroyView
    void onHiddenChanged(boolean) -> onHiddenChanged
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void updateUnreadcount() -> b
    void onResume() -> onResume
    void _init() -> h
    void _initHyhData() -> i
    void loadHyhListCommone(boolean) -> a
    void remoteLoadData(long) -> b
    void loadHyhList(boolean) -> b
    void _initChatData() -> j
    void initKefu() -> c
    void loadKefuList() -> d
    void refreshChatList(int) -> a
    void _initContactsData() -> k
    void lookFriendData(long) -> a
    void loadFriendList() -> e
    void getfriendnumber() -> f
    void addNewFriend() -> g
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void access$0(com.hyh.www.session.SessionFramgent,boolean) -> a
    void access$1(com.hyh.www.session.SessionFramgent,int) -> a
    android.widget.Button access$2(com.hyh.www.session.SessionFramgent) -> a
    com.hyh.www.adapter.ChatHYHAdapter access$3(com.hyh.www.session.SessionFramgent) -> b
    android.os.Handler access$4(com.hyh.www.session.SessionFramgent) -> c
    java.lang.Runnable access$5(com.hyh.www.session.SessionFramgent) -> d
    int access$6(com.hyh.www.session.SessionFramgent) -> e
    com.gezitech.widget.MyListView access$7(com.hyh.www.session.SessionFramgent) -> f
    java.util.ArrayList access$8(com.hyh.www.session.SessionFramgent) -> g
    void access$9(com.hyh.www.session.SessionFramgent,int) -> b
    void access$10(com.hyh.www.session.SessionFramgent,long) -> a
    android.widget.LinearLayout access$11(com.hyh.www.session.SessionFramgent) -> h
    android.widget.RadioButton[] access$12(com.hyh.www.session.SessionFramgent) -> i
    void access$13(com.hyh.www.session.SessionFramgent) -> j
    void access$14(com.hyh.www.session.SessionFramgent) -> k
    void access$15(com.hyh.www.session.SessionFramgent) -> l
    android.support.v4.view.ViewPager access$16(com.hyh.www.session.SessionFramgent) -> m
    void access$17(com.hyh.www.session.SessionFramgent,boolean) -> b
    com.gezitech.service.sqlitedb.GezitechDBHelper access$18(com.hyh.www.session.SessionFramgent) -> n
    com.gezitech.service.sqlitedb.GezitechDBHelper access$19(com.hyh.www.session.SessionFramgent) -> o
    java.lang.Thread access$20(com.hyh.www.session.SessionFramgent) -> p
    com.hyh.www.session.SessionFramgent access$21(com.hyh.www.session.SessionFramgent) -> q
    com.hyh.www.adapter.ChatAdapter access$22(com.hyh.www.session.SessionFramgent) -> r
    com.hyh.www.adapter.FriendsAdapter access$23(com.hyh.www.session.SessionFramgent) -> s
    android.widget.TextView access$24(com.hyh.www.session.SessionFramgent) -> t
com.hyh.www.session.SessionFramgent$1 -> com.hyh.www.session.z:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.session.SessionFramgent$10 -> com.hyh.www.session.aa:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.session.SessionFramgent$11 -> com.hyh.www.session.ab:
    com.hyh.www.session.SessionFramgent this$0 -> a
    boolean val$isnew -> b
    void run() -> run
com.hyh.www.session.SessionFramgent$12 -> com.hyh.www.session.ac:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void onDataPerss(com.gezitech.contract.GezitechEntity_I,int) -> a
    com.hyh.www.session.SessionFramgent access$0(com.hyh.www.session.SessionFramgent$12) -> a
com.hyh.www.session.SessionFramgent$12$1 -> com.hyh.www.session.ad:
    com.hyh.www.session.SessionFramgent$12 this$1 -> a
    com.hyh.www.entity.Chat val$chat -> b
    int val$position -> c
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.session.SessionFramgent$13 -> com.hyh.www.session.ae:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.session.SessionFramgent$14 -> com.hyh.www.session.af:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
    com.hyh.www.session.SessionFramgent access$0(com.hyh.www.session.SessionFramgent$14) -> a
com.hyh.www.session.SessionFramgent$14$1 -> com.hyh.www.session.ag:
    com.hyh.www.session.SessionFramgent$14 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.session.SessionFramgent$15 -> com.hyh.www.session.ah:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
com.hyh.www.session.SessionFramgent$16 -> com.hyh.www.session.ai:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void onDataPerss(com.gezitech.contract.GezitechEntity_I,int) -> a
com.hyh.www.session.SessionFramgent$17 -> com.hyh.www.session.aj:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.session.SessionFramgent$18 -> com.hyh.www.session.ak:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> a
com.hyh.www.session.SessionFramgent$19 -> com.hyh.www.session.al:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.session.SessionFramgent$2 -> com.hyh.www.session.am:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void run() -> run
com.hyh.www.session.SessionFramgent$20 -> com.hyh.www.session.an:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.session.SessionFramgent$3 -> com.hyh.www.session.ao:
    com.hyh.www.session.SessionFramgent this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.hyh.www.session.SessionFramgent$4 -> com.hyh.www.session.ap:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.hyh.www.session.SessionFramgent$5 -> com.hyh.www.session.aq:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.hyh.www.session.SessionFramgent$6 -> com.hyh.www.session.ar:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.session.SessionFramgent$7 -> com.hyh.www.session.as:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void onDataPerss(com.gezitech.contract.GezitechEntity_I,int) -> a
com.hyh.www.session.SessionFramgent$8 -> com.hyh.www.session.at:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.session.SessionFramgent$9 -> com.hyh.www.session.au:
    com.hyh.www.session.SessionFramgent this$0 -> a
    void onRefresh() -> a
com.hyh.www.session.UsercomplainActivity -> com.hyh.www.session.UsercomplainActivity:
    com.hyh.www.session.UsercomplainActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_title -> d
    long fid -> e
    android.widget.EditText ed_feedback_content -> f
    android.widget.Button feedback_tijiao -> g
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    android.widget.EditText access$0(com.hyh.www.session.UsercomplainActivity) -> a
    com.hyh.www.session.UsercomplainActivity access$1(com.hyh.www.session.UsercomplainActivity) -> b
    long access$2(com.hyh.www.session.UsercomplainActivity) -> c
com.hyh.www.session.UsercomplainActivity$1 -> com.hyh.www.session.av:
    com.hyh.www.session.UsercomplainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.session.UsercomplainActivity access$0(com.hyh.www.session.UsercomplainActivity$1) -> a
com.hyh.www.session.UsercomplainActivity$1$1 -> com.hyh.www.session.aw:
    com.hyh.www.session.UsercomplainActivity$1 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.user.AccountDetailActivity -> com.hyh.www.user.AccountDetailActivity:
    com.hyh.www.user.AccountDetailActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    int page -> a
    int pageSize -> b
    com.gezitech.widget.MyListView list_view -> f
    com.hyh.www.adapter.IncomeAdapter incomeAdapter -> g
    android.widget.LinearLayout ll_head4 -> h
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void loadData() -> b
    void requestFail(java.lang.String,java.lang.String) -> a
    void getListDone(java.util.ArrayList) -> a
    void onClick(android.view.View) -> onClick
    void access$0(com.hyh.www.user.AccountDetailActivity) -> a
    com.gezitech.widget.MyListView access$1(com.hyh.www.user.AccountDetailActivity) -> b
    void access$2(com.hyh.www.user.AccountDetailActivity,java.lang.String,java.lang.String) -> a
    void access$3(com.hyh.www.user.AccountDetailActivity,java.util.ArrayList) -> a
com.hyh.www.user.AccountDetailActivity$1 -> com.hyh.www.user.a:
    com.hyh.www.user.AccountDetailActivity this$0 -> a
    void onRefresh() -> a
com.hyh.www.user.AccountDetailActivity$2 -> com.hyh.www.user.b:
    com.hyh.www.user.AccountDetailActivity this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.user.AccountDetailActivity$3 -> com.hyh.www.user.c:
    com.hyh.www.user.AccountDetailActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.AddActivity -> com.hyh.www.user.AddActivity:
    com.hyh.www.user.AddActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity -> com.hyh.www.user.BecomeServiceActivity:
    com.hyh.www.user.BecomeServiceActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    android.widget.TextView tv_title -> f
    android.widget.Button Login_login -> g
    android.widget.RelativeLayout becomeshangjia_qiyemingcheng -> h
    android.widget.TextView tv_becomeshangjia_qiyeleixingchoose -> i
    com.hyh.www.entity.Companytype typeList -> j
    com.gezitech.widget.RemoteImageView iv_yinyezhizhao -> k
    com.gezitech.widget.RemoteImageView iv_jingyingxukezheng -> l
    com.gezitech.widget.RemoteImageView iv_lianxirenzhaopian -> m
    android.widget.LinearLayout ll_changdizhaopian_box -> n
    int isSubmit -> o
    android.widget.Button btn_becomeshangjia_yinyezhizhao -> p
    android.widget.Button btn_becomeshangjia_jingyingxukezheng -> q
    android.widget.Button btn_becomeshangjia_lianxirenzhaopian -> r
    android.widget.Button btn_becomeshangjia_changdizhaopian -> s
    com.loopj.android.http.RequestParams params -> a
    java.lang.String[] images -> t
    int from -> u
    android.widget.EditText ed_shop_name -> v
    android.widget.EditText ed_numbers -> w
    android.widget.EditText ed_company_phone -> x
    android.widget.RelativeLayout rl_issend -> y
    android.widget.TextView tv_issend_val -> z
    com.gezitech.service.sqlitedb.GezitechDBHelper db -> A
    android.widget.TextView ed_time_start -> B
    android.widget.TextView ed_time_end -> C
    android.widget.CheckBox bt_remember_agree -> D
    int bt_remember_agreeVal -> E
    android.widget.EditText ed_company_zhanghao -> F
    android.widget.EditText ed_company_kaihuname -> G
    android.widget.EditText ed_company_kaihuhang -> H
    java.util.HashMap sendList -> I
    int sendVal -> b
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> b
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void _initData() -> c
    void buttonEnabled() -> d
    void select_photo_item(java.lang.String,android.graphics.Bitmap,boolean,int) -> a
    void onClick(android.view.View) -> onClick
    void sendDialog(java.util.ArrayList) -> a
    void typeDialog(java.util.ArrayList) -> b
    void _submitData() -> e
    void _submitDataServer() -> f
    void registerSubmit() -> g
    void updateauthenticatestate(com.hyh.www.widget.YMDialog) -> a
    void loadKefuList() -> a
    com.hyh.www.user.BecomeServiceActivity access$0(com.hyh.www.user.BecomeServiceActivity) -> a
    void access$1(com.hyh.www.user.BecomeServiceActivity,int) -> a
    android.widget.TextView access$2(com.hyh.www.user.BecomeServiceActivity) -> b
    android.widget.TextView access$3(com.hyh.www.user.BecomeServiceActivity) -> c
    android.widget.LinearLayout access$4(com.hyh.www.user.BecomeServiceActivity) -> d
    java.lang.String[] access$5(com.hyh.www.user.BecomeServiceActivity) -> e
    void access$6(com.hyh.www.user.BecomeServiceActivity,java.util.HashMap) -> a
    android.widget.TextView access$7(com.hyh.www.user.BecomeServiceActivity) -> f
    void access$8(com.hyh.www.user.BecomeServiceActivity,com.hyh.www.entity.Companytype) -> a
    com.hyh.www.entity.Companytype access$9(com.hyh.www.user.BecomeServiceActivity) -> g
    android.widget.TextView access$10(com.hyh.www.user.BecomeServiceActivity) -> h
    void access$11(com.hyh.www.user.BecomeServiceActivity) -> i
    com.gezitech.service.sqlitedb.GezitechDBHelper access$12(com.hyh.www.user.BecomeServiceActivity) -> j
    int access$13(com.hyh.www.user.BecomeServiceActivity) -> k
    void access$14(com.hyh.www.user.BecomeServiceActivity,com.hyh.www.widget.YMDialog) -> a
    android.widget.Button access$15(com.hyh.www.user.BecomeServiceActivity) -> l
    void access$16(com.hyh.www.user.BecomeServiceActivity) -> m
    void access$17(com.hyh.www.user.BecomeServiceActivity) -> n
com.hyh.www.user.BecomeServiceActivity$1 -> com.hyh.www.user.d:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$10 -> com.hyh.www.user.e:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.hyh.www.user.BecomeServiceActivity$11 -> com.hyh.www.user.f:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$12 -> com.hyh.www.user.g:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$13 -> com.hyh.www.user.h:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$14 -> com.hyh.www.user.i:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    android.view.View val$view -> b
    int val$index -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$15 -> com.hyh.www.user.j:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    int val$index -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$16 -> com.hyh.www.user.k:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.BecomeServiceActivity$17 -> com.hyh.www.user.l:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.user.BecomeServiceActivity$18 -> com.hyh.www.user.m:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onDataCallBack(com.gezitech.contract.GezitechEntity_I) -> a
com.hyh.www.user.BecomeServiceActivity$19 -> com.hyh.www.user.n:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$2 -> com.hyh.www.user.o:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$20 -> com.hyh.www.user.p:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$21 -> com.hyh.www.user.q:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
    com.hyh.www.user.BecomeServiceActivity access$0(com.hyh.www.user.BecomeServiceActivity$21) -> a
com.hyh.www.user.BecomeServiceActivity$21$1 -> com.hyh.www.user.r:
    com.hyh.www.user.BecomeServiceActivity$21 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymdialog1 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$21$2 -> com.hyh.www.user.s:
    com.hyh.www.user.BecomeServiceActivity$21 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymdialog1 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$22 -> com.hyh.www.user.t:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$23 -> com.hyh.www.user.u:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$24 -> com.hyh.www.user.v:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
com.hyh.www.user.BecomeServiceActivity$25 -> com.hyh.www.user.w:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.BecomeServiceActivity$3 -> com.hyh.www.user.x:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$4 -> com.hyh.www.user.y:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$5 -> com.hyh.www.user.z:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$6 -> com.hyh.www.user.aa:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$7 -> com.hyh.www.user.ab:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.hyh.www.user.BecomeServiceActivity$8 -> com.hyh.www.user.ac:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeServiceActivity$9 -> com.hyh.www.user.ad:
    com.hyh.www.user.BecomeServiceActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.hyh.www.user.BecomeShangjiaActivity -> com.hyh.www.user.BecomeShangjiaActivity:
    com.hyh.www.user.BecomeShangjiaActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    android.widget.TextView tv_title -> f
    android.widget.Button Login_login -> g
    android.widget.RelativeLayout becomeshangjia_qiyemingcheng -> h
    android.widget.TextView tv_becomeshangjia_qiyeleixingchoose -> i
    com.hyh.www.entity.Companytype typeList -> j
    com.gezitech.widget.RemoteImageView iv_yinyezhizhao -> k
    com.gezitech.widget.RemoteImageView iv_jingyingxukezheng -> l
    com.gezitech.widget.RemoteImageView iv_lianxirenzhaopian -> m
    android.widget.LinearLayout ll_changdizhaopian_box -> n
    int isSubmit -> o
    android.widget.Button btn_becomeshangjia_yinyezhizhao -> p
    android.widget.Button btn_becomeshangjia_jingyingxukezheng -> q
    android.widget.Button btn_becomeshangjia_lianxirenzhaopian -> r
    android.widget.Button btn_becomeshangjia_changdizhaopian -> s
    com.loopj.android.http.RequestParams params -> a
    java.lang.String[] images -> t
    int from -> u
    android.widget.EditText ed_shop_name -> v
    android.widget.EditText ed_linkman -> w
    android.widget.EditText ed_numbers -> x
    android.widget.EditText ed_company_phone -> y
    android.widget.RelativeLayout rl_issend -> z
    android.widget.TextView tv_issend_val -> A
    com.gezitech.service.sqlitedb.GezitechDBHelper db -> B
    android.widget.TextView ed_time_start -> C
    android.widget.TextView ed_time_end -> D
    android.widget.CheckBox bt_remember_agree -> E
    int bt_remember_agreeVal -> F
    android.widget.EditText ed_company_zhanghao -> G
    android.widget.EditText ed_company_kaihuname -> H
    android.widget.EditText ed_company_kaihuhang -> I
    java.util.HashMap sendList -> J
    int sendVal -> b
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> b
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void _initData() -> c
    void buttonEnabled() -> d
    void select_photo_item(java.lang.String,android.graphics.Bitmap,boolean,int) -> a
    void onClick(android.view.View) -> onClick
    void sendDialog(java.util.ArrayList) -> a
    void typeDialog(java.util.ArrayList) -> b
    void _submitData() -> e
    void _submitDataServer() -> f
    void registerSubmit() -> g
    void updateauthenticatestate(com.hyh.www.widget.YMDialog) -> a
    void loadKefuList() -> a
    com.hyh.www.user.BecomeShangjiaActivity access$0(com.hyh.www.user.BecomeShangjiaActivity) -> a
    void access$1(com.hyh.www.user.BecomeShangjiaActivity,int) -> a
    android.widget.TextView access$2(com.hyh.www.user.BecomeShangjiaActivity) -> b
    android.widget.TextView access$3(com.hyh.www.user.BecomeShangjiaActivity) -> c
    android.widget.LinearLayout access$4(com.hyh.www.user.BecomeShangjiaActivity) -> d
    java.lang.String[] access$5(com.hyh.www.user.BecomeShangjiaActivity) -> e
    void access$6(com.hyh.www.user.BecomeShangjiaActivity,java.util.HashMap) -> a
    android.widget.TextView access$7(com.hyh.www.user.BecomeShangjiaActivity) -> f
    void access$8(com.hyh.www.user.BecomeShangjiaActivity,com.hyh.www.entity.Companytype) -> a
    com.hyh.www.entity.Companytype access$9(com.hyh.www.user.BecomeShangjiaActivity) -> g
    android.widget.TextView access$10(com.hyh.www.user.BecomeShangjiaActivity) -> h
    void access$11(com.hyh.www.user.BecomeShangjiaActivity) -> i
    com.gezitech.service.sqlitedb.GezitechDBHelper access$12(com.hyh.www.user.BecomeShangjiaActivity) -> j
    int access$13(com.hyh.www.user.BecomeShangjiaActivity) -> k
    void access$14(com.hyh.www.user.BecomeShangjiaActivity,com.hyh.www.widget.YMDialog) -> a
    android.widget.Button access$15(com.hyh.www.user.BecomeShangjiaActivity) -> l
    void access$16(com.hyh.www.user.BecomeShangjiaActivity) -> m
    void access$17(com.hyh.www.user.BecomeShangjiaActivity) -> n
com.hyh.www.user.BecomeShangjiaActivity$1 -> com.hyh.www.user.ae:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$10 -> com.hyh.www.user.af:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.hyh.www.user.BecomeShangjiaActivity$11 -> com.hyh.www.user.ag:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$12 -> com.hyh.www.user.ah:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$13 -> com.hyh.www.user.ai:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$14 -> com.hyh.www.user.aj:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    android.view.View val$view -> b
    int val$index -> c
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$15 -> com.hyh.www.user.ak:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    int val$index -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$16 -> com.hyh.www.user.al:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.BecomeShangjiaActivity$17 -> com.hyh.www.user.am:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.user.BecomeShangjiaActivity$18 -> com.hyh.www.user.an:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onDataCallBack(com.gezitech.contract.GezitechEntity_I) -> a
com.hyh.www.user.BecomeShangjiaActivity$19 -> com.hyh.www.user.ao:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$2 -> com.hyh.www.user.ap:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$20 -> com.hyh.www.user.aq:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$21 -> com.hyh.www.user.ar:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
    com.hyh.www.user.BecomeShangjiaActivity access$0(com.hyh.www.user.BecomeShangjiaActivity$21) -> a
com.hyh.www.user.BecomeShangjiaActivity$21$1 -> com.hyh.www.user.as:
    com.hyh.www.user.BecomeShangjiaActivity$21 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymdialog1 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$21$2 -> com.hyh.www.user.at:
    com.hyh.www.user.BecomeShangjiaActivity$21 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymdialog1 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$22 -> com.hyh.www.user.au:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$23 -> com.hyh.www.user.av:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$24 -> com.hyh.www.user.aw:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ym -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
com.hyh.www.user.BecomeShangjiaActivity$25 -> com.hyh.www.user.ax:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.BecomeShangjiaActivity$3 -> com.hyh.www.user.ay:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$4 -> com.hyh.www.user.az:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$5 -> com.hyh.www.user.ba:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$6 -> com.hyh.www.user.bb:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$7 -> com.hyh.www.user.bc:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.hyh.www.user.BecomeShangjiaActivity$8 -> com.hyh.www.user.bd:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.BecomeShangjiaActivity$9 -> com.hyh.www.user.be:
    com.hyh.www.user.BecomeShangjiaActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.hyh.www.user.ChangePassworldActivity -> com.hyh.www.user.ChangePassworldActivity:
    com.hyh.www.user.ChangePassworldActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.Button changepassworld_OK -> d
    android.widget.EditText ed_changepassworld_yuanmima -> e
    android.widget.EditText ed_changepassworld_xinmima -> f
    android.widget.EditText ed_changepassworld_zaicishuru -> g
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    void _submitData() -> b
    com.hyh.www.user.ChangePassworldActivity access$0(com.hyh.www.user.ChangePassworldActivity) -> a
com.hyh.www.user.ChangePassworldActivity$1 -> com.hyh.www.user.bf:
    com.hyh.www.user.ChangePassworldActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
com.hyh.www.user.ChooseActivity -> com.hyh.www.user.ChooseActivity:
    com.hyh.www.user.ChooseActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.ContactsActivity -> com.hyh.www.user.ContactsActivity:
    com.hyh.www.user.ContactsActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    java.util.ArrayList config -> d
    android.widget.TextView tv_contacts_title -> e
    android.widget.TextView tv_contacts_company -> f
    android.widget.TextView tv_contacts_phonenumber -> g
    android.widget.TextView tv_contacts_chuanzhennumber -> h
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> b
    void onClick(android.view.View) -> onClick
    void loadKefuList() -> a
    com.hyh.www.user.ContactsActivity access$0(com.hyh.www.user.ContactsActivity) -> a
com.hyh.www.user.ContactsActivity$1 -> com.hyh.www.user.bg:
    com.hyh.www.user.ContactsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.ContactsActivity$2 -> com.hyh.www.user.bh:
    com.hyh.www.user.ContactsActivity this$0 -> a
    java.lang.String val$value -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.ContactsActivity$3 -> com.hyh.www.user.bi:
    com.hyh.www.user.ContactsActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.EditDataActivity -> com.hyh.www.user.EditDataActivity:
    com.hyh.www.user.EditDataActivity _this -> d
    android.widget.Button bt_my_post -> e
    android.widget.Button bt_home_msg -> f
    android.widget.Button shangjia -> g
    com.gezitech.service.sqlitedb.GezitechDBHelper db -> h
    com.gezitech.widget.RemoteImageView iv_replace_picture -> i
    android.widget.TextView tv_replace_picture -> j
    android.widget.EditText ed_nickname -> k
    android.widget.RelativeLayout replace_picture -> l
    android.widget.EditText ed_real_name -> m
    android.widget.EditText ed_zuoji -> n
    android.widget.EditText ed_youxiang -> o
    android.widget.EditText ed_dizhi -> p
    android.widget.Button btn_editdata -> q
    android.widget.RelativeLayout rl_sex -> r
    android.widget.TextView tv_sex_val -> s
    int from -> t
    android.widget.EditText ed_phone -> u
    android.widget.Button service -> v
    android.widget.TextView tv_chengweishangjia -> w
    android.widget.LinearLayout tv_chengweiservice -> x
    android.widget.TextView ed_shengshi -> y
    android.widget.TextView ed_shiqu -> z
    android.widget.TextView ed_quxian -> A
    android.widget.TextView ed_jiedao -> B
    java.lang.String provinces_nameVal -> C
    java.lang.String urban_nameVal -> D
    java.lang.String county_nameVal -> E
    java.lang.String streets_nameVal -> F
    java.lang.String country_nameVal -> G
    android.widget.TextView ed_guojia -> H
    java.lang.String userHead -> I
    java.util.HashMap sexList -> J
    int sexVal -> a
    java.util.HashMap guojiaList -> K
    java.util.HashMap shengshiList -> L
    java.util.HashMap shiquList -> M
    java.util.HashMap quxianList -> N
    java.util.HashMap jiedaoList -> O
    java.util.HashMap authList -> P
    int authVal -> b
    java.lang.String ImageName -> Q
    android.view.View$OnClickListener uploadHead -> c
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> b
    void initUserData(boolean) -> a
    void sexDialog(java.util.ArrayList) -> a
    void onClick(android.view.View) -> onClick
    void getCityList(java.lang.String,java.util.HashMap,int,java.lang.String) -> a
    void regionalDialog(java.util.ArrayList,java.lang.String,java.util.HashMap,int) -> a
    void setDefaultValue(int) -> a
    void _updateUserInfo() -> c
    void authDialog(java.util.ArrayList) -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startPhotoZoom(android.net.Uri) -> a
    void uploadHead(android.graphics.Bitmap,boolean) -> uploadHead
    java.lang.String getStringToday() -> a
    void onBackPressed() -> onBackPressed
    void _returnData() -> d
    com.hyh.www.user.EditDataActivity access$0(com.hyh.www.user.EditDataActivity) -> a
    void access$1(com.hyh.www.user.EditDataActivity,boolean) -> a
    android.widget.EditText access$2(com.hyh.www.user.EditDataActivity) -> b
    void access$3(com.hyh.www.user.EditDataActivity,java.util.HashMap) -> a
    android.widget.TextView access$4(com.hyh.www.user.EditDataActivity) -> c
    java.util.HashMap access$5(com.hyh.www.user.EditDataActivity) -> d
    void access$6(com.hyh.www.user.EditDataActivity,java.util.HashMap) -> b
    void access$7(com.hyh.www.user.EditDataActivity,java.lang.String) -> a
    android.widget.TextView access$8(com.hyh.www.user.EditDataActivity) -> e
    void access$9(com.hyh.www.user.EditDataActivity,int) -> a
    void access$10(com.hyh.www.user.EditDataActivity,java.util.HashMap) -> c
    void access$11(com.hyh.www.user.EditDataActivity,java.lang.String) -> b
    android.widget.TextView access$12(com.hyh.www.user.EditDataActivity) -> f
    void access$13(com.hyh.www.user.EditDataActivity,java.util.HashMap) -> d
    void access$14(com.hyh.www.user.EditDataActivity,java.lang.String) -> c
    android.widget.TextView access$15(com.hyh.www.user.EditDataActivity) -> g
    void access$16(com.hyh.www.user.EditDataActivity,java.util.HashMap) -> e
    void access$17(com.hyh.www.user.EditDataActivity,java.lang.String) -> d
    android.widget.TextView access$18(com.hyh.www.user.EditDataActivity) -> h
    void access$19(com.hyh.www.user.EditDataActivity,java.util.HashMap) -> f
    void access$20(com.hyh.www.user.EditDataActivity,java.lang.String) -> e
    android.widget.TextView access$21(com.hyh.www.user.EditDataActivity) -> i
    java.lang.String access$22(com.hyh.www.user.EditDataActivity) -> j
    java.lang.String access$23(com.hyh.www.user.EditDataActivity) -> k
    java.lang.String access$24(com.hyh.www.user.EditDataActivity) -> l
    java.lang.String access$25(com.hyh.www.user.EditDataActivity) -> m
    java.lang.String access$26(com.hyh.www.user.EditDataActivity) -> n
    com.gezitech.service.sqlitedb.GezitechDBHelper access$27(com.hyh.www.user.EditDataActivity) -> o
    int access$28(com.hyh.www.user.EditDataActivity) -> p
    void access$29(com.hyh.www.user.EditDataActivity) -> q
    void access$30(com.hyh.www.user.EditDataActivity,java.util.HashMap) -> g
com.hyh.www.user.EditDataActivity$1 -> com.hyh.www.user.bj:
    com.hyh.www.user.EditDataActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.EditDataActivity$10 -> com.hyh.www.user.bk:
    com.hyh.www.user.EditDataActivity this$0 -> a
    java.lang.String val$typeName -> b
    int val$type -> c
    java.lang.String val$title -> d
    java.util.HashMap val$hm -> e
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.EditDataActivity$11 -> com.hyh.www.user.bl:
    com.hyh.www.user.EditDataActivity this$0 -> a
    int val$type -> b
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.user.EditDataActivity$12 -> com.hyh.www.user.bm:
    com.hyh.www.user.EditDataActivity this$0 -> a
    java.lang.String val$ed_nickname_val -> b
    java.lang.String val$ed_real_name_val -> c
    java.lang.String val$ed_telephone_val -> d
    java.lang.String val$ed_dizhi_val -> e
    java.lang.String val$ed_youxiang_val -> f
    java.lang.String val$ed_zuoji_val -> g
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
com.hyh.www.user.EditDataActivity$13 -> com.hyh.www.user.bn:
    com.hyh.www.user.EditDataActivity this$0 -> a
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.user.EditDataActivity$14 -> com.hyh.www.user.bo:
    com.hyh.www.user.EditDataActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
    void OnProgress(int,int) -> a
com.hyh.www.user.EditDataActivity$2 -> com.hyh.www.user.bp:
    com.hyh.www.user.EditDataActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.EditDataActivity$3 -> com.hyh.www.user.bq:
    com.hyh.www.user.EditDataActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.EditDataActivity$4 -> com.hyh.www.user.br:
    com.hyh.www.user.EditDataActivity this$0 -> a
    boolean val$isupload -> b
    void bitmap(android.graphics.Bitmap) -> a
com.hyh.www.user.EditDataActivity$5 -> com.hyh.www.user.bs:
    com.hyh.www.user.EditDataActivity this$0 -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.hyh.www.user.EditDataActivity$6 -> com.hyh.www.user.bt:
    com.hyh.www.user.EditDataActivity this$0 -> a
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.user.EditDataActivity$7 -> com.hyh.www.user.bu:
    com.hyh.www.user.EditDataActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.EditDataActivity$8 -> com.hyh.www.user.bv:
    com.hyh.www.user.EditDataActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.EditDataActivity$9 -> com.hyh.www.user.bw:
    com.hyh.www.user.EditDataActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
    com.hyh.www.user.EditDataActivity access$0(com.hyh.www.user.EditDataActivity$9) -> a
com.hyh.www.user.EditDataActivity$9$1 -> com.hyh.www.user.bx:
    com.hyh.www.user.EditDataActivity$9 this$1 -> a
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.user.FeedbackActivity -> com.hyh.www.user.FeedbackActivity:
    com.hyh.www.user.FeedbackActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.EditText ed_feedback_content -> d
    android.widget.Button feedback_tijiao -> e
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    void _submitData() -> b
    android.widget.EditText access$0(com.hyh.www.user.FeedbackActivity) -> a
com.hyh.www.user.FeedbackActivity$1 -> com.hyh.www.user.by:
    com.hyh.www.user.FeedbackActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
com.hyh.www.user.IncomeActivity -> com.hyh.www.user.IncomeActivity:
    com.hyh.www.user.IncomeActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    int type -> f
    java.lang.String title -> g
    android.widget.LinearLayout ll_head1 -> h
    android.widget.LinearLayout ll_head2 -> i
    com.gezitech.widget.MyListView list_view -> j
    com.hyh.www.adapter.IncomeAdapter incomeAdapter -> k
    int page -> a
    int pageSize -> b
    android.widget.LinearLayout ll_head3 -> l
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> b
    void loadData() -> a
    void requestFail(java.lang.String,java.lang.String) -> a
    void getListDone(java.util.ArrayList) -> a
    void onClick(android.view.View) -> onClick
    com.gezitech.widget.MyListView access$0(com.hyh.www.user.IncomeActivity) -> a
    void access$1(com.hyh.www.user.IncomeActivity,java.lang.String,java.lang.String) -> a
    void access$2(com.hyh.www.user.IncomeActivity,java.util.ArrayList) -> a
com.hyh.www.user.IncomeActivity$1 -> com.hyh.www.user.bz:
    com.hyh.www.user.IncomeActivity this$0 -> a
    void onRefresh() -> a
com.hyh.www.user.IncomeActivity$2 -> com.hyh.www.user.ca:
    com.hyh.www.user.IncomeActivity this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.user.IncomeActivity$3 -> com.hyh.www.user.cb:
    com.hyh.www.user.IncomeActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.IncomeActivity$4 -> com.hyh.www.user.cc:
    com.hyh.www.user.IncomeActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.IncomeActivity$5 -> com.hyh.www.user.cd:
    com.hyh.www.user.IncomeActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.IndividualAccountActivity -> com.hyh.www.user.IndividualAccountActivity:
    com.hyh.www.user.IndividualAccountActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_title -> d
    com.gezitech.entity.User account -> e
    android.widget.RelativeLayout individualaccount_chongzhi -> f
    android.widget.RelativeLayout individualaccount_tixian -> g
    android.widget.TextView tv_yuenumber -> h
    android.widget.TextView tv_shourunumber -> i
    android.widget.TextView tv_zhichunumber -> j
    android.widget.TextView text_individualaccount_huodongjuan -> k
    android.widget.TextView tv_individualaccount_tixian_balance -> l
    android.widget.RelativeLayout individualaccount_huodongjuan -> m
    android.widget.RelativeLayout individualaccount_detail -> n
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void _initData() -> b
    void onClick(android.view.View) -> onClick
    void spendCoupon() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void _loadData() -> d
    void access$0(com.hyh.www.user.IndividualAccountActivity) -> a
    void access$1(com.hyh.www.user.IndividualAccountActivity) -> b
    void access$2(com.hyh.www.user.IndividualAccountActivity,com.gezitech.entity.User) -> a
    void access$3(com.hyh.www.user.IndividualAccountActivity) -> c
com.hyh.www.user.IndividualAccountActivity$1 -> com.hyh.www.user.ce:
    com.hyh.www.user.IndividualAccountActivity this$0 -> a
    com.hyh.www.widget.YMDialog2 val$ymdialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.IndividualAccountActivity$2 -> com.hyh.www.user.cf:
    com.hyh.www.user.IndividualAccountActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.IndividualAccountActivity$3 -> com.hyh.www.user.cg:
    com.hyh.www.user.IndividualAccountActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.IndividualAccountActivity$4 -> com.hyh.www.user.ch:
    com.hyh.www.user.IndividualAccountActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
com.hyh.www.user.IndividualAccountActivity$5 -> com.hyh.www.user.ci:
    com.hyh.www.user.IndividualAccountActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.LookServiceActivity -> com.hyh.www.user.LookServiceActivity:
    com.hyh.www.user.LookServiceActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_title -> d
    com.gezitech.entity.User shangjia -> e
    com.gezitech.widget.RemoteImageView iv_yinyezhizhao -> f
    com.gezitech.widget.RemoteImageView iv_jingyingxukezheng -> g
    com.gezitech.widget.RemoteImageView iv_lianxirenzhaopian -> h
    android.widget.LinearLayout ll_changdizhaopian_box -> i
    java.lang.String[] images -> j
    android.widget.TextView ed_company_zhanghao -> k
    android.widget.TextView ed_company_kaihuname -> l
    android.widget.TextView ed_company_kaihuhang -> m
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void _initData() -> b
    void select_photo_item(java.lang.String,android.graphics.Bitmap,boolean,int) -> a
    void onClick(android.view.View) -> onClick
    com.gezitech.entity.User access$0(com.hyh.www.user.LookServiceActivity) -> a
    com.hyh.www.user.LookServiceActivity access$1(com.hyh.www.user.LookServiceActivity) -> b
    java.lang.String[] access$2(com.hyh.www.user.LookServiceActivity) -> c
com.hyh.www.user.LookServiceActivity$1 -> com.hyh.www.user.cj:
    com.hyh.www.user.LookServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.LookServiceActivity$2 -> com.hyh.www.user.ck:
    com.hyh.www.user.LookServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.LookServiceActivity$3 -> com.hyh.www.user.cl:
    com.hyh.www.user.LookServiceActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.LookServiceActivity$4 -> com.hyh.www.user.cm:
    com.hyh.www.user.LookServiceActivity this$0 -> a
    int val$index -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.LookShangjiaActivity -> com.hyh.www.user.LookShangjiaActivity:
    com.hyh.www.user.LookShangjiaActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_title -> d
    com.gezitech.entity.User shangjia -> e
    com.gezitech.widget.RemoteImageView iv_yinyezhizhao -> f
    com.gezitech.widget.RemoteImageView iv_jingyingxukezheng -> g
    com.gezitech.widget.RemoteImageView iv_lianxirenzhaopian -> h
    android.widget.LinearLayout ll_changdizhaopian_box -> i
    java.lang.String[] images -> j
    android.widget.TextView ed_company_zhanghao -> k
    android.widget.TextView ed_company_kaihuname -> l
    android.widget.TextView ed_company_kaihuhang -> m
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void _initData() -> b
    void select_photo_item(java.lang.String,android.graphics.Bitmap,boolean,int) -> a
    void onClick(android.view.View) -> onClick
    com.gezitech.entity.User access$0(com.hyh.www.user.LookShangjiaActivity) -> a
    com.hyh.www.user.LookShangjiaActivity access$1(com.hyh.www.user.LookShangjiaActivity) -> b
    java.lang.String[] access$2(com.hyh.www.user.LookShangjiaActivity) -> c
com.hyh.www.user.LookShangjiaActivity$1 -> com.hyh.www.user.cn:
    com.hyh.www.user.LookShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.LookShangjiaActivity$2 -> com.hyh.www.user.co:
    com.hyh.www.user.LookShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.LookShangjiaActivity$3 -> com.hyh.www.user.cp:
    com.hyh.www.user.LookShangjiaActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.LookShangjiaActivity$4 -> com.hyh.www.user.cq:
    com.hyh.www.user.LookShangjiaActivity this$0 -> a
    int val$index -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.MyPromotionActivity -> com.hyh.www.user.MyPromotionActivity:
    com.hyh.www.user.MyPromotionActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_mypromotion_yaoqingmanumber -> d
    android.widget.Button btn_mypromotion_congshangjiashouyi -> e
    android.widget.Button btn_mypromotion_conggerenshouyi -> f
    com.gezitech.entity.User spreadcount -> g
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.NewMessageActivity -> com.hyh.www.user.NewMessageActivity:
    com.hyh.www.user.NewMessageActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_title -> d
    android.widget.CheckBox Check_receive_notifications -> e
    android.widget.CheckBox Check_voice -> f
    android.widget.CheckBox Check_vibration -> g
    android.widget.CheckBox Check_disturb -> h
    android.widget.TextView text_start_time -> i
    android.widget.TextView text_end_time -> j
    android.content.SharedPreferences$Editor edit -> k
    android.widget.LinearLayout ll_time_box -> l
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    android.content.SharedPreferences$Editor access$0(com.hyh.www.user.NewMessageActivity) -> a
    android.widget.LinearLayout access$1(com.hyh.www.user.NewMessageActivity) -> b
    android.widget.TextView access$2(com.hyh.www.user.NewMessageActivity) -> c
    android.widget.TextView access$3(com.hyh.www.user.NewMessageActivity) -> d
    com.hyh.www.user.NewMessageActivity access$4(com.hyh.www.user.NewMessageActivity) -> e
com.hyh.www.user.NewMessageActivity$1 -> com.hyh.www.user.cr:
    com.hyh.www.user.NewMessageActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.hyh.www.user.NewMessageActivity$2 -> com.hyh.www.user.cs:
    com.hyh.www.user.NewMessageActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.hyh.www.user.NewMessageActivity$3 -> com.hyh.www.user.ct:
    com.hyh.www.user.NewMessageActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.hyh.www.user.NewMessageActivity$4 -> com.hyh.www.user.cu:
    com.hyh.www.user.NewMessageActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.hyh.www.user.NewMessageActivity$5 -> com.hyh.www.user.cv:
    com.hyh.www.user.NewMessageActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.NewMessageActivity$6 -> com.hyh.www.user.cw:
    com.hyh.www.user.NewMessageActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.NewMessageActivity$7 -> com.hyh.www.user.cx:
    com.hyh.www.user.NewMessageActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.hyh.www.user.NewMessageActivity$8 -> com.hyh.www.user.cy:
    com.hyh.www.user.NewMessageActivity this$0 -> a
    void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.hyh.www.user.OrderActivity -> com.hyh.www.user.OrderActivity:
    com.hyh.www.user.OrderActivity _this -> d
    android.widget.Button bt_my_post -> e
    android.widget.Button bt_home_msg -> f
    int type -> g
    java.lang.String title -> h
    com.gezitech.widget.MyListView list_view -> i
    int page -> a
    int pageSize -> b
    com.hyh.www.adapter.OrderAdapter orderAdapter -> j
    int position -> c
    long uid -> k
    android.os.Handler mHandler -> l
    java.lang.Runnable countdown -> m
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> b
    void loadData() -> a
    void loadBillDetail(com.hyh.www.entity.Bill,int) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    com.hyh.www.adapter.OrderAdapter access$0(com.hyh.www.user.OrderActivity) -> a
    com.gezitech.widget.MyListView access$1(com.hyh.www.user.OrderActivity) -> b
    android.os.Handler access$2(com.hyh.www.user.OrderActivity) -> c
    java.lang.Runnable access$3(com.hyh.www.user.OrderActivity) -> d
    com.hyh.www.user.OrderActivity access$4(com.hyh.www.user.OrderActivity) -> e
    void access$5(com.hyh.www.user.OrderActivity,com.hyh.www.entity.Bill,int) -> a
com.hyh.www.user.OrderActivity$1 -> com.hyh.www.user.cz:
    com.hyh.www.user.OrderActivity this$0 -> a
    void run() -> run
com.hyh.www.user.OrderActivity$2 -> com.hyh.www.user.da:
    com.hyh.www.user.OrderActivity this$0 -> a
    void onRefresh() -> a
com.hyh.www.user.OrderActivity$3 -> com.hyh.www.user.db:
    com.hyh.www.user.OrderActivity this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.user.OrderActivity$4 -> com.hyh.www.user.dc:
    com.hyh.www.user.OrderActivity this$0 -> a
    void onDataPerss(com.gezitech.contract.GezitechEntity_I,int) -> a
com.hyh.www.user.OrderActivity$5 -> com.hyh.www.user.dd:
    com.hyh.www.user.OrderActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.OrderActivity$6 -> com.hyh.www.user.de:
    com.hyh.www.user.OrderActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.PersonDetailedInformationActivity -> com.hyh.www.user.PersonDetailedInformationActivity:
    com.hyh.www.user.PersonDetailedInformationActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_title -> d
    com.hyh.www.entity.Friend friendinfo -> e
    android.widget.RelativeLayout personDetailed_withoutfriend -> f
    android.widget.Button personDetailed_send -> g
    android.widget.LinearLayout personDetailed_havefriends -> h
    com.gezitech.widget.RemoteImageView personDetailed_photo -> i
    android.widget.TextView personDetailed_nickname -> j
    android.widget.TextView personDetailed_accountnumber -> k
    android.widget.ImageView personDetailed_xxzl_star -> l
    android.widget.TextView text_personDetailed_diqu -> m
    android.widget.TextView text_personDetailed_laiyuan -> n
    android.widget.TextView tv_personDetailed_setting -> o
    android.widget.CheckBox Check_personDetailed_common_on -> p
    android.widget.TextView tv_personDetailed_blacklist -> q
    android.widget.TextView tv_personDetailed_del -> r
    java.lang.String action -> s
    android.widget.CheckBox Check_personDetailedarrow_blacklist -> t
    android.widget.LinearLayout ll_company_box -> u
    android.widget.TextView text_shangjiaDetailed_enterprisename -> v
    android.widget.TextView text_shangjiaDetailed_enterprisetype -> w
    android.widget.Button personDetailed_addfriend -> x
    android.widget.ImageView iv_sex -> y
    android.widget.TextView tv_shangjiaDetailed_enterprisename -> z
    android.widget.TextView tv_shangjiaDetailed_enterprisetype -> A
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onClick(android.view.View) -> onClick
    void returnData() -> b
    void onBackPressed() -> onBackPressed
    com.hyh.www.user.PersonDetailedInformationActivity access$0(com.hyh.www.user.PersonDetailedInformationActivity) -> a
    com.hyh.www.entity.Friend access$1(com.hyh.www.user.PersonDetailedInformationActivity) -> b
    android.widget.ImageView access$2(com.hyh.www.user.PersonDetailedInformationActivity) -> c
    android.widget.CheckBox access$3(com.hyh.www.user.PersonDetailedInformationActivity) -> d
    android.widget.CheckBox access$4(com.hyh.www.user.PersonDetailedInformationActivity) -> e
    android.widget.TextView access$5(com.hyh.www.user.PersonDetailedInformationActivity) -> f
com.hyh.www.user.PersonDetailedInformationActivity$1 -> com.hyh.www.user.df:
    com.hyh.www.user.PersonDetailedInformationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.PersonDetailedInformationActivity access$0(com.hyh.www.user.PersonDetailedInformationActivity$1) -> a
com.hyh.www.user.PersonDetailedInformationActivity$1$1 -> com.hyh.www.user.dg:
    com.hyh.www.user.PersonDetailedInformationActivity$1 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.PersonDetailedInformationActivity$2 -> com.hyh.www.user.dh:
    com.hyh.www.user.PersonDetailedInformationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.PersonDetailedInformationActivity access$0(com.hyh.www.user.PersonDetailedInformationActivity$2) -> a
com.hyh.www.user.PersonDetailedInformationActivity$2$1 -> com.hyh.www.user.di:
    com.hyh.www.user.PersonDetailedInformationActivity$2 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.user.PersonDetailedInformationActivity$3 -> com.hyh.www.user.dj:
    com.hyh.www.user.PersonDetailedInformationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.PersonDetailedInformationActivity$4 -> com.hyh.www.user.dk:
    com.hyh.www.user.PersonDetailedInformationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.PersonDetailedInformationActivity$5 -> com.hyh.www.user.dl:
    com.hyh.www.user.PersonDetailedInformationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.PersonDetailedInformationActivity$6 -> com.hyh.www.user.dm:
    com.hyh.www.user.PersonDetailedInformationActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    com.hyh.www.user.PersonDetailedInformationActivity access$0(com.hyh.www.user.PersonDetailedInformationActivity$6) -> a
com.hyh.www.user.PersonDetailedInformationActivity$6$1 -> com.hyh.www.user.dn:
    com.hyh.www.user.PersonDetailedInformationActivity$6 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.user.PersonDetailedInformationActivity$7 -> com.hyh.www.user.do:
    com.hyh.www.user.PersonDetailedInformationActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
    com.hyh.www.user.PersonDetailedInformationActivity access$0(com.hyh.www.user.PersonDetailedInformationActivity$7) -> a
com.hyh.www.user.PersonDetailedInformationActivity$7$1 -> com.hyh.www.user.dp:
    com.hyh.www.user.PersonDetailedInformationActivity$7 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.user.PersonDetailedInformationActivity$8 -> com.hyh.www.user.dq:
    com.hyh.www.user.PersonDetailedInformationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.PersonDetailedInformationActivity access$0(com.hyh.www.user.PersonDetailedInformationActivity$8) -> a
com.hyh.www.user.PersonDetailedInformationActivity$8$1 -> com.hyh.www.user.dr:
    com.hyh.www.user.PersonDetailedInformationActivity$8 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.PersonDetailedInformationActivity$8$2 -> com.hyh.www.user.ds:
    com.hyh.www.user.PersonDetailedInformationActivity$8 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.PersonDetailedInformationActivity$8 access$0(com.hyh.www.user.PersonDetailedInformationActivity$8$2) -> a
com.hyh.www.user.PersonDetailedInformationActivity$8$2$1 -> com.hyh.www.user.dt:
    com.hyh.www.user.PersonDetailedInformationActivity$8$2 this$2 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnAsynRequestCallBack(java.lang.Object) -> a
com.hyh.www.user.PersonFramgent -> com.hyh.www.user.PersonFramgent:
    com.hyh.www.user.PersonFramgent fragment -> d
    android.view.View view -> e
    com.hyh.www.user.PersonFramgent _this -> f
    android.widget.Button bt_my_post -> g
    android.widget.RelativeLayout person_editdata -> h
    android.widget.RelativeLayout person_account -> i
    android.widget.RelativeLayout person_promotion -> j
    android.widget.RelativeLayout person_setting -> k
    com.gezitech.widget.RemoteImageView person_photo -> l
    android.widget.TextView person_nickname -> m
    android.widget.TextView person_accountnumber -> n
    android.widget.Button bt_home_msg -> o
    android.widget.ImageView iv_sex -> p
    android.widget.LinearLayout ll_all_order -> q
    android.widget.LinearLayout ll_end_pay -> r
    android.widget.LinearLayout ll_service -> s
    android.widget.TextView tv_gps -> t
    java.lang.String userHead -> u
    com.gezitech.service.sqlitedb.GezitechDBHelper db -> v
    android.widget.RelativeLayout person_my_post -> w
    android.widget.TextView tv_like_comment_count -> x
    android.content.BroadcastReceiver receiver -> y
    com.hyh.www.user.PersonFramgent newInstance() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void _init() -> c
    void _initUserData(boolean) -> a
    void onResume() -> onResume
    void onHiddenChanged(boolean) -> onHiddenChanged
    void loadOrderNumber() -> d
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void uploadHead(android.graphics.Bitmap) -> uploadHead
    java.lang.String getStringToday() -> b
    android.widget.Button access$0(com.hyh.www.user.PersonFramgent) -> a
    com.hyh.www.user.PersonFramgent access$1(com.hyh.www.user.PersonFramgent) -> b
    android.widget.TextView access$2(com.hyh.www.user.PersonFramgent) -> c
    android.view.View access$3(com.hyh.www.user.PersonFramgent) -> d
    com.gezitech.service.sqlitedb.GezitechDBHelper access$4(com.hyh.www.user.PersonFramgent) -> e
com.hyh.www.user.PersonFramgent$1 -> com.hyh.www.user.du:
    com.hyh.www.user.PersonFramgent this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.user.PersonFramgent$2 -> com.hyh.www.user.dv:
    com.hyh.www.user.PersonFramgent this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.PersonFramgent$3 -> com.hyh.www.user.dw:
    com.hyh.www.user.PersonFramgent this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.PersonFramgent$4 -> com.hyh.www.user.dx:
    com.hyh.www.user.PersonFramgent this$0 -> a
    void bitmap(android.graphics.Bitmap) -> a
com.hyh.www.user.PersonFramgent$5 -> com.hyh.www.user.dy:
    com.hyh.www.user.PersonFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.PersonFramgent$6 -> com.hyh.www.user.dz:
    com.hyh.www.user.PersonFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.PersonFramgent$7 -> com.hyh.www.user.ea:
    com.hyh.www.user.PersonFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.PersonFramgent$8 -> com.hyh.www.user.eb:
    com.hyh.www.user.PersonFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.PersonFramgent$9 -> com.hyh.www.user.ec:
    com.hyh.www.user.PersonFramgent this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
    void OnProgress(int,int) -> a
com.hyh.www.user.ShangjiaDetailedInformationActivity_bak -> com.hyh.www.user.ShangjiaDetailedInformationActivity_bak:
    com.hyh.www.user.ShangjiaDetailedInformationActivity_bak _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_title -> d
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.ShangjiabBillActivity_bak -> com.hyh.www.user.ShangjiabBillActivity_bak:
    com.hyh.www.user.ShangjiabBillActivity_bak _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.TextView tv_title -> d
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.SystemMessageActivity -> com.hyh.www.user.SystemMessageActivity:
    com.hyh.www.user.SystemMessageActivity _this -> c
    android.widget.Button bt_my_post -> d
    android.widget.Button bt_home_msg -> e
    com.gezitech.widget.MyListView list_view -> f
    int page -> a
    int pageSize -> b
    com.hyh.www.adapter.NewsAdapter newsAdapter -> g
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void loadData() -> b
    void loadNewsDetail(com.hyh.www.entity.News) -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.SystemMessageActivity access$0(com.hyh.www.user.SystemMessageActivity) -> a
    void access$1(com.hyh.www.user.SystemMessageActivity) -> b
    com.gezitech.widget.MyListView access$2(com.hyh.www.user.SystemMessageActivity) -> c
    void access$3(com.hyh.www.user.SystemMessageActivity,com.hyh.www.entity.News) -> a
    com.hyh.www.adapter.NewsAdapter access$4(com.hyh.www.user.SystemMessageActivity) -> d
com.hyh.www.user.SystemMessageActivity$1 -> com.hyh.www.user.ed:
    com.hyh.www.user.SystemMessageActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.SystemMessageActivity access$0(com.hyh.www.user.SystemMessageActivity$1) -> a
com.hyh.www.user.SystemMessageActivity$1$1 -> com.hyh.www.user.ee:
    com.hyh.www.user.SystemMessageActivity$1 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.SystemMessageActivity$2 -> com.hyh.www.user.ef:
    com.hyh.www.user.SystemMessageActivity this$0 -> a
    void onRefresh() -> a
com.hyh.www.user.SystemMessageActivity$3 -> com.hyh.www.user.eg:
    com.hyh.www.user.SystemMessageActivity this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.user.SystemMessageActivity$4 -> com.hyh.www.user.eh:
    com.hyh.www.user.SystemMessageActivity this$0 -> a
    void onDataPerss(com.gezitech.contract.GezitechEntity_I,int) -> a
com.hyh.www.user.SystemMessageActivity$5 -> com.hyh.www.user.ei:
    com.hyh.www.user.SystemMessageActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.SystemMessageActivity$6 -> com.hyh.www.user.ej:
    com.hyh.www.user.SystemMessageActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.SystemMessageDetailActivity -> com.hyh.www.user.SystemMessageDetailActivity:
    com.hyh.www.user.SystemMessageDetailActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    com.hyh.www.entity.News news -> d
    android.widget.TextView tv_system_title -> e
    android.widget.TextView tv_time -> f
    android.webkit.WebView wv_content -> g
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.SystemMessageDetailActivity access$0(com.hyh.www.user.SystemMessageDetailActivity) -> a
com.hyh.www.user.SystemMessageDetailActivity$1 -> com.hyh.www.user.ek:
    com.hyh.www.user.SystemMessageDetailActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.SystemMessageDetailActivity access$0(com.hyh.www.user.SystemMessageDetailActivity$1) -> a
com.hyh.www.user.SystemMessageDetailActivity$1$1 -> com.hyh.www.user.el:
    com.hyh.www.user.SystemMessageDetailActivity$1 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.SystemSettingActivity -> com.hyh.www.user.SystemSettingActivity:
    com.hyh.www.user.SystemSettingActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    android.widget.RelativeLayout systemsetting_xiugaimima -> d
    android.widget.RelativeLayout systemsetting_xinxiaoxitixing -> e
    android.widget.RelativeLayout systemsetting_banbengengxin -> f
    android.widget.RelativeLayout systemsetting_feedback -> g
    android.widget.RelativeLayout systemsetting_contact -> h
    android.widget.RelativeLayout systemsetting_exit -> i
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> b
    void onClick(android.view.View) -> onClick
    void loadKefuList() -> a
    com.hyh.www.user.SystemSettingActivity access$0(com.hyh.www.user.SystemSettingActivity) -> a
com.hyh.www.user.SystemSettingActivity$1 -> com.hyh.www.user.em:
    com.hyh.www.user.SystemSettingActivity this$0 -> a
    void onUpdateReturned(int,com.umeng.update.UpdateResponse) -> onUpdateReturned
com.hyh.www.user.SystemSettingActivity$2 -> com.hyh.www.user.en:
    com.hyh.www.user.SystemSettingActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.SystemSettingActivity$3 -> com.hyh.www.user.eo:
    com.hyh.www.user.SystemSettingActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.SystemSettingActivity$4 -> com.hyh.www.user.ep:
    com.hyh.www.user.SystemSettingActivity this$0 -> a
    com.hyh.www.widget.YMDialog val$ymdialog -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.SystemSettingActivity$5 -> com.hyh.www.user.eq:
    com.hyh.www.user.SystemSettingActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.TopupActivity -> com.hyh.www.user.TopupActivity:
    com.hyh.www.user.TopupActivity _this -> b
    android.widget.Button bt_my_post -> c
    android.widget.Button bt_home_msg -> d
    android.widget.EditText ed_topup_account -> e
    android.widget.EditText ed_topup_money -> f
    android.widget.Button topup_tijiao -> g
    android.widget.RadioGroup rg_pay_list -> h
    int payWay -> i
    com.tencent.mm.sdk.openapi.IWXAPI msgApi -> a
    android.os.Handler mHandler -> j
    android.content.BroadcastReceiver receiver -> k
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    android.os.Handler createHandler() -> b
    void onDestroy() -> onDestroy
    com.hyh.www.user.TopupActivity access$0(com.hyh.www.user.TopupActivity) -> a
    void access$1(com.hyh.www.user.TopupActivity,int) -> a
    int access$2(com.hyh.www.user.TopupActivity) -> b
    android.os.Handler access$3(com.hyh.www.user.TopupActivity) -> c
    android.widget.EditText access$4(com.hyh.www.user.TopupActivity) -> d
com.hyh.www.user.TopupActivity$1 -> com.hyh.www.user.er:
    com.hyh.www.user.TopupActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.user.TopupActivity$2 -> com.hyh.www.user.es:
    com.hyh.www.user.TopupActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.hyh.www.user.TopupActivity$3 -> com.hyh.www.user.et:
    com.hyh.www.user.TopupActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.TopupActivity$4 -> com.hyh.www.user.eu:
    com.hyh.www.user.TopupActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.hyh.www.user.TopupActivity access$0(com.hyh.www.user.TopupActivity$4) -> a
com.hyh.www.user.TopupActivity$4$1 -> com.hyh.www.user.ev:
    com.hyh.www.user.TopupActivity$4 this$1 -> a
    com.hyh.www.widget.YMDialog2 val$dialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.TopupActivity$4$2 -> com.hyh.www.user.ew:
    com.hyh.www.user.TopupActivity$4 this$1 -> a
    com.hyh.www.widget.YMDialog2 val$dialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.TopupActivity$4$3 -> com.hyh.www.user.ex:
    com.hyh.www.user.TopupActivity$4 this$1 -> a
    com.hyh.www.widget.YMDialog2 val$dialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.TopupActivity$4$4 -> com.hyh.www.user.ey:
    com.hyh.www.user.TopupActivity$4 this$1 -> a
    com.hyh.www.widget.YMDialog2 val$dialog2 -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.user.WithdrawalActivity -> com.hyh.www.user.WithdrawalActivity:
    com.hyh.www.user.WithdrawalActivity _this -> b
    android.widget.Button bt_my_post -> c
    android.widget.Button bt_home_msg -> d
    android.widget.RelativeLayout withdrawal_bank -> e
    java.util.HashMap typeList -> f
    com.loopj.android.http.RequestParams params -> a
    android.widget.TextView tv_withdrawal_bankchoose -> g
    android.content.SharedPreferences sp -> h
    java.lang.String bankname -> i
    java.lang.String bank -> j
    java.lang.String bankaccount -> k
    java.lang.String accountname -> l
    android.widget.EditText ed_kaihuhang -> m
    android.widget.EditText ed_bank_number -> n
    android.widget.EditText ed_zhanghu_name -> o
    android.widget.EditText ed_tixian_jine -> p
    int bankid -> q
    android.widget.Button Withdrawal_querentixian -> r
    double cash -> s
    void onCreate(android.os.Bundle) -> onCreate
    void _init() -> a
    void onClick(android.view.View) -> onClick
    void _submitData() -> b
    void typeDialog(java.util.ArrayList) -> a
    com.hyh.www.user.WithdrawalActivity access$0(com.hyh.www.user.WithdrawalActivity) -> a
    void access$1(com.hyh.www.user.WithdrawalActivity,java.util.HashMap) -> a
    void access$2(com.hyh.www.user.WithdrawalActivity,int) -> a
    android.widget.TextView access$3(com.hyh.www.user.WithdrawalActivity) -> b
com.hyh.www.user.WithdrawalActivity$1 -> com.hyh.www.user.ez:
    com.hyh.www.user.WithdrawalActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.WithdrawalActivity$2 -> com.hyh.www.user.fa:
    com.hyh.www.user.WithdrawalActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
com.hyh.www.user.WithdrawalActivity$3 -> com.hyh.www.user.fb:
    com.hyh.www.user.WithdrawalActivity this$0 -> a
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.user.post.MyPostMsg -> com.hyh.www.user.post.MyPostMsg:
    com.hyh.www.user.post.MyPostMsg _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    com.gezitech.widget.MyListView list_view -> d
    com.hyh.www.adapter.NearbyAdapter nearbyAdapter -> e
    int page -> f
    int pageSize -> g
    android.widget.TextView tv_new_msg -> h
    android.content.BroadcastReceiver receiver -> i
    void onCreate(android.os.Bundle) -> onCreate
    void __init() -> b
    void _initGetData() -> c
    void _getData(java.lang.String,java.lang.String,java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void like_comment_count() -> a
    com.hyh.www.user.post.MyPostMsg access$0(com.hyh.www.user.post.MyPostMsg) -> a
    void access$1(com.hyh.www.user.post.MyPostMsg,int) -> a
    void access$2(com.hyh.www.user.post.MyPostMsg) -> b
    int access$3(com.hyh.www.user.post.MyPostMsg) -> c
    com.gezitech.widget.MyListView access$4(com.hyh.www.user.post.MyPostMsg) -> d
    void access$5(com.hyh.www.user.post.MyPostMsg,java.lang.String,java.lang.String,java.lang.String) -> a
    com.hyh.www.adapter.NearbyAdapter access$6(com.hyh.www.user.post.MyPostMsg) -> e
    int access$7(com.hyh.www.user.post.MyPostMsg) -> f
com.hyh.www.user.post.MyPostMsg$1 -> com.hyh.www.user.post.a:
    com.hyh.www.user.post.MyPostMsg this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.hyh.www.user.post.MyPostMsg$2 -> com.hyh.www.user.post.b:
    com.hyh.www.user.post.MyPostMsg this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.post.MyPostMsg access$0(com.hyh.www.user.post.MyPostMsg$2) -> a
com.hyh.www.user.post.MyPostMsg$2$1 -> com.hyh.www.user.post.c:
    com.hyh.www.user.post.MyPostMsg$2 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.post.MyPostMsg$3 -> com.hyh.www.user.post.d:
    com.hyh.www.user.post.MyPostMsg this$0 -> a
    void onRefresh() -> a
com.hyh.www.user.post.MyPostMsg$4 -> com.hyh.www.user.post.e:
    com.hyh.www.user.post.MyPostMsg this$0 -> a
    void OnMore() -> a
    void OnMore(int,int,int,int) -> a
com.hyh.www.user.post.MyPostMsg$5 -> com.hyh.www.user.post.f:
    com.hyh.www.user.post.MyPostMsg this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.post.MyPostMsg$6 -> com.hyh.www.user.post.g:
    com.hyh.www.user.post.MyPostMsg this$0 -> a
    void callfunction(java.lang.String,java.lang.String,java.lang.String) -> a
com.hyh.www.user.post.MyPostMsg$7 -> com.hyh.www.user.post.h:
    com.hyh.www.user.post.MyPostMsg this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.post.NearDetailActiviy -> com.hyh.www.user.post.NearDetailActiviy:
    com.hyh.www.user.post.NearDetailActiviy _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    com.gezitech.widget.MyListView list_view -> d
    com.hyh.www.adapter.NearbyAdapter nearbyAdapter -> e
    int page -> f
    int pageSize -> g
    com.hyh.www.entity.NearHintMsg nearHintMsg -> h
    void onCreate(android.os.Bundle) -> onCreate
    void __init() -> a
    void _initGetData() -> b
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void returnData() -> c
    void onBackPressed() -> onBackPressed
    void access$0(com.hyh.www.user.post.NearDetailActiviy,int) -> a
    void access$1(com.hyh.www.user.post.NearDetailActiviy) -> a
    com.hyh.www.user.post.NearDetailActiviy access$2(com.hyh.www.user.post.NearDetailActiviy) -> b
    com.gezitech.widget.MyListView access$3(com.hyh.www.user.post.NearDetailActiviy) -> c
    int access$4(com.hyh.www.user.post.NearDetailActiviy) -> d
    com.hyh.www.adapter.NearbyAdapter access$5(com.hyh.www.user.post.NearDetailActiviy) -> e
    com.hyh.www.entity.NearHintMsg access$6(com.hyh.www.user.post.NearDetailActiviy) -> f
    void access$7(com.hyh.www.user.post.NearDetailActiviy) -> g
com.hyh.www.user.post.NearDetailActiviy$1 -> com.hyh.www.user.post.i:
    com.hyh.www.user.post.NearDetailActiviy this$0 -> a
    void onRefresh() -> a
com.hyh.www.user.post.NearDetailActiviy$2 -> com.hyh.www.user.post.j:
    com.hyh.www.user.post.NearDetailActiviy this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
    com.hyh.www.user.post.NearDetailActiviy access$0(com.hyh.www.user.post.NearDetailActiviy$2) -> a
com.hyh.www.user.post.NearDetailActiviy$2$1 -> com.hyh.www.user.post.k:
    com.hyh.www.user.post.NearDetailActiviy$2 this$1 -> a
    void setCommentCallBack(org.json.JSONObject) -> a
com.hyh.www.user.post.NewMsgHintActivity -> com.hyh.www.user.post.NewMsgHintActivity:
    com.hyh.www.user.post.NewMsgHintActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    com.gezitech.widget.MyListView list_view -> d
    com.hyh.www.adapter.NewMsgHintAdapter newMsgHintAdapter -> e
    void onCreate(android.os.Bundle) -> onCreate
    void __init() -> a
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
com.hyh.www.user.post.NewMsgHintActivity$1 -> com.hyh.www.user.post.l:
    com.hyh.www.user.post.NewMsgHintActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.post.PostMsg -> com.hyh.www.user.post.PostMsg:
    com.hyh.www.user.post.PostMsg _this -> d
    android.widget.Button bt_my_post -> e
    android.widget.Button bt_home_msg -> f
    android.widget.EditText ed_post_content -> g
    android.util.DisplayMetrics dm -> h
    android.widget.TextView tv_post_far -> i
    com.hyh.www.entity.PubRange pubRange -> j
    long pubRangeId -> k
    long pubRangeVal -> l
    android.widget.TextView tv_post_distance -> m
    android.widget.ImageButton ib_add_select -> n
    int screenWidth -> o
    com.gezitech.widget.FlowLayout ll_photo_select -> p
    int itemWith -> q
    android.widget.Button btn_post -> r
    java.lang.String et_contentVal -> s
    int ii -> a
    java.lang.String imageTag -> b
    java.lang.String step -> c
    java.lang.String ImageName -> t
    android.graphics.Bitmap originBitMap -> u
    android.graphics.Bitmap reduceBitMap -> v
    java.io.File originFile -> w
    java.lang.String filePath -> x
    java.util.ArrayList uploadFile -> y
    java.util.ArrayList recordFile -> z
    java.util.HashMap releasescopeList -> A
    void onCreate(android.os.Bundle) -> onCreate
    void __init() -> b
    void _postContent() -> c
    void __postMessage() -> a
    void _update() -> d
    void _updatePhotoSelect(int,boolean) -> a
    void _postMessage() -> e
    void _submitData(java.lang.String,java.lang.String,java.lang.String) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void addView(android.graphics.Bitmap,java.io.File,int) -> a
    void releasescopeDialog(java.util.ArrayList) -> a
    void wantPostRange(java.util.ArrayList) -> b
    void onClick(android.view.View) -> onClick
    android.widget.EditText access$0(com.hyh.www.user.post.PostMsg) -> a
    android.util.DisplayMetrics access$1(com.hyh.www.user.post.PostMsg) -> b
    com.hyh.www.user.post.PostMsg access$2(com.hyh.www.user.post.PostMsg) -> c
    void access$3(com.hyh.www.user.post.PostMsg) -> d
    void access$4(com.hyh.www.user.post.PostMsg,java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.ArrayList access$5(com.hyh.www.user.post.PostMsg) -> e
    com.gezitech.widget.FlowLayout access$6(com.hyh.www.user.post.PostMsg) -> f
    void access$7(com.hyh.www.user.post.PostMsg,java.util.HashMap) -> a
    void access$8(com.hyh.www.user.post.PostMsg,long) -> a
    long access$9(com.hyh.www.user.post.PostMsg) -> g
    void access$10(com.hyh.www.user.post.PostMsg,long) -> b
    android.widget.TextView access$11(com.hyh.www.user.post.PostMsg) -> h
com.hyh.www.user.post.PostMsg$1 -> com.hyh.www.user.post.m:
    com.hyh.www.user.post.PostMsg this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.hyh.www.user.post.PostMsg$10 -> com.hyh.www.user.post.n:
    com.hyh.www.user.post.PostMsg this$0 -> a
    java.util.ArrayList val$list -> b
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.user.post.PostMsg$11 -> com.hyh.www.user.post.o:
    com.hyh.www.user.post.PostMsg this$0 -> a
    void onDataCallBack(java.util.HashMap) -> a
com.hyh.www.user.post.PostMsg$2 -> com.hyh.www.user.post.p:
    com.hyh.www.user.post.PostMsg this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.post.PostMsg access$0(com.hyh.www.user.post.PostMsg$2) -> a
com.hyh.www.user.post.PostMsg$2$1 -> com.hyh.www.user.post.q:
    com.hyh.www.user.post.PostMsg$2 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.post.PostMsg$3 -> com.hyh.www.user.post.r:
    com.hyh.www.user.post.PostMsg this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.post.PostMsg access$0(com.hyh.www.user.post.PostMsg$3) -> a
com.hyh.www.user.post.PostMsg$3$1 -> com.hyh.www.user.post.s:
    com.hyh.www.user.post.PostMsg$3 this$1 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.post.PostMsg$4 -> com.hyh.www.user.post.t:
    com.hyh.www.user.post.PostMsg this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.post.PostMsg$5 -> com.hyh.www.user.post.u:
    com.hyh.www.user.post.PostMsg this$0 -> a
    void onClick(android.view.View) -> onClick
com.hyh.www.user.post.PostMsg$6 -> com.hyh.www.user.post.v:
    com.hyh.www.user.post.PostMsg this$0 -> a
    boolean val$isLoop -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void onUpdateDone(java.lang.String) -> a
    void OnProgress(int,int) -> a
com.hyh.www.user.post.PostMsg$7 -> com.hyh.www.user.post.w:
    com.hyh.www.user.post.PostMsg this$0 -> a
    void callfunction(java.lang.String,java.lang.String,java.lang.String) -> a
com.hyh.www.user.post.PostMsg$8 -> com.hyh.www.user.post.x:
    com.hyh.www.user.post.PostMsg this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.post.PostMsg$9 -> com.hyh.www.user.post.y:
    com.hyh.www.user.post.PostMsg this$0 -> a
    int val$index -> b
    java.lang.String val$pathStr -> c
    android.view.View val$view -> d
    void onClick(android.view.View) -> onClick
com.hyh.www.user.post.PriceRangeActivity -> com.hyh.www.user.post.PriceRangeActivity:
    com.hyh.www.user.post.PriceRangeActivity _this -> a
    android.widget.Button bt_my_post -> b
    android.widget.Button bt_home_msg -> c
    long typeid -> d
    java.lang.String rangetitle -> e
    java.lang.String description -> f
    android.widget.ListView listView -> g
    com.hyh.www.adapter.PriceRangeAdapter priceRangeAdapter -> h
    com.hyh.www.entity.PriceRange selectItem -> i
    void onCreate(android.os.Bundle) -> onCreate
    void __init() -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.adapter.PriceRangeAdapter access$0(com.hyh.www.user.post.PriceRangeActivity) -> a
    void access$1(com.hyh.www.user.post.PriceRangeActivity,com.hyh.www.entity.PriceRange) -> a
    com.hyh.www.entity.PriceRange access$2(com.hyh.www.user.post.PriceRangeActivity) -> b
    com.hyh.www.user.post.PriceRangeActivity access$3(com.hyh.www.user.post.PriceRangeActivity) -> c
com.hyh.www.user.post.PriceRangeActivity$1 -> com.hyh.www.user.post.z:
    com.hyh.www.user.post.PriceRangeActivity this$0 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetListDone(java.util.ArrayList) -> a
com.hyh.www.user.post.PriceRangeActivity$2 -> com.hyh.www.user.post.aa:
    com.hyh.www.user.post.PriceRangeActivity this$0 -> a
    void onDataPerss(com.gezitech.contract.GezitechEntity_I,int) -> a
com.hyh.www.user.post.PriceRangeActivity$3 -> com.hyh.www.user.post.ab:
    com.hyh.www.user.post.PriceRangeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.post.PriceRangeActivity access$0(com.hyh.www.user.post.PriceRangeActivity$3) -> a
com.hyh.www.user.post.PriceRangeActivity$3$1 -> com.hyh.www.user.post.ac:
    com.hyh.www.user.post.PriceRangeActivity$3 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
    com.hyh.www.user.post.PriceRangeActivity$3 access$0(com.hyh.www.user.post.PriceRangeActivity$3$1) -> a
com.hyh.www.user.post.PriceRangeActivity$3$1$1 -> com.hyh.www.user.post.ad:
    com.hyh.www.user.post.PriceRangeActivity$3$1 this$2 -> a
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.user.post.PriceRangeActivity$3$2 -> com.hyh.www.user.post.ae:
    com.hyh.www.user.post.PriceRangeActivity$3 this$1 -> a
    com.hyh.www.widget.YMDialog val$ymd -> b
    void onClick(android.view.View) -> onClick
com.hyh.www.widget.ActivityCommon -> com.hyh.www.b.a:
    void lookFriendData(long,android.app.Activity,android.support.v4.app.Fragment) -> a
    void lookFriendData(long,android.app.Activity) -> a
com.hyh.www.widget.ActivityCommon$1 -> com.hyh.www.b.b:
    android.app.Activity val$activity -> a
    android.support.v4.app.Fragment val$fragment -> b
    void OnAsynRequestFail(java.lang.String,java.lang.String) -> OnAsynRequestFail
    void OnGetOneDone(com.gezitech.contract.GezitechEntity_I) -> OnGetOneDone
com.hyh.www.widget.ImageShow -> com.hyh.www.b.c:
    void jumpDisplayPic(java.lang.String[],int,android.app.Activity) -> a
com.hyh.www.widget.YMDialog -> com.hyh.www.b.d:
    com.hyh.www.widget.YMDialog _this -> a
    android.app.Dialog dialog -> b
    android.widget.TextView tv_hint_msg -> c
    android.widget.TextView tv_cancel2 -> d
    android.widget.TextView tv_confim -> e
    com.hyh.www.widget.YMDialog setHintMsg(java.lang.String) -> a
    com.hyh.www.widget.YMDialog setCloseButton(android.view.View$OnClickListener) -> a
    com.hyh.www.widget.YMDialog setCloseButton(java.lang.String,android.view.View$OnClickListener) -> a
    com.hyh.www.widget.YMDialog setConfigButton(android.view.View$OnClickListener) -> b
    com.hyh.www.widget.YMDialog setConfigButton(java.lang.String,android.view.View$OnClickListener) -> b
    void dismiss() -> a
com.hyh.www.widget.YMDialog2 -> com.hyh.www.b.e:
    com.hyh.www.widget.YMDialog2 _this -> a
    android.app.Dialog dialog -> b
    android.widget.TextView tv_fabuchenggong -> c
    android.widget.TextView tv_content -> d
    android.widget.Button Login_login -> e
    com.hyh.www.widget.YMDialog2 setHead(java.lang.String) -> a
    com.hyh.www.widget.YMDialog2 setHintMsg(java.lang.String) -> b
    com.hyh.www.widget.YMDialog2 setConfigText(java.lang.String) -> c
    com.hyh.www.widget.YMDialog2 setCloseButton(android.view.View$OnClickListener) -> a
    void dismiss() -> a
com.hyh.www.wxapi.WXEntryActivity -> com.hyh.www.wxapi.WXEntryActivity:
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onGetMessageFromWXReq
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> onShowMessageFromWXReq
com.hyh.www.wxapi.WXPayEntryActivity -> com.hyh.www.wxapi.WXPayEntryActivity:
    com.tencent.mm.sdk.openapi.IWXAPI api -> a
    android.widget.TextView tv_fabuchenggong -> b
    android.widget.TextView tv_content -> c
    android.widget.Button Login_login -> d
    com.hyh.www.wxapi.WXPayEntryActivity _this -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> onResp
    void onBackPressed() -> onBackPressed
    com.hyh.www.wxapi.WXPayEntryActivity access$0(com.hyh.www.wxapi.WXPayEntryActivity) -> a
com.hyh.www.wxapi.WXPayEntryActivity$1 -> com.hyh.www.wxapi.a:
    com.hyh.www.wxapi.WXPayEntryActivity this$0 -> a
    java.lang.String val$errCode -> b
    void onClick(android.view.View) -> onClick
com.kenai.jbosh.AbstractAttr -> com.a.a.a:
    java.lang.Comparable value -> a
    java.lang.Comparable getValue() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.kenai.jbosh.AbstractBody -> com.a.a.b:
    java.lang.String getAttribute(com.kenai.jbosh.BodyQName) -> a
    java.util.Map getAttributes() -> a
    java.lang.String toXML() -> b
    com.kenai.jbosh.BodyQName getBodyQName() -> c
com.kenai.jbosh.AbstractIntegerAttr -> com.a.a.c:
    void checkMinValue(int) -> a
    int parseInt(java.lang.String) -> a
    int intValue() -> b
com.kenai.jbosh.ApacheHTTPResponse -> com.a.a.d:
    java.lang.String ACCEPT_ENCODING_VAL -> a
    java.util.concurrent.locks.Lock lock -> b
    org.apache.http.protocol.HttpContext context -> c
    org.apache.http.client.HttpClient client -> d
    org.apache.http.client.methods.HttpPost post -> e
    boolean sent -> f
    com.kenai.jbosh.BOSHException toThrow -> g
    com.kenai.jbosh.AbstractBody body -> h
    int statusCode -> i
    void abort() -> a
    com.kenai.jbosh.AbstractBody getBody() -> b
    int getHTTPStatus() -> c
    void awaitResponse() -> d
com.kenai.jbosh.ApacheHTTPSender -> com.a.a.e:
    java.util.concurrent.locks.Lock lock -> a
    com.kenai.jbosh.BOSHClientConfig cfg -> b
    org.apache.http.client.HttpClient httpClient -> c
    void init(com.kenai.jbosh.BOSHClientConfig) -> a
    void destroy() -> a
    com.kenai.jbosh.HTTPResponse send(com.kenai.jbosh.CMSessionParams,com.kenai.jbosh.AbstractBody) -> a
    org.apache.http.client.HttpClient initHttpClient(com.kenai.jbosh.BOSHClientConfig) -> b
com.kenai.jbosh.AttrAccept -> com.a.a.f:
    java.lang.String[] encodings -> a
    com.kenai.jbosh.AttrAccept createFromString(java.lang.String) -> a
    boolean isAccepted(java.lang.String) -> b
com.kenai.jbosh.AttrAck -> com.a.a.g:
    com.kenai.jbosh.AttrAck createFromString(java.lang.String) -> a
com.kenai.jbosh.AttrCharsets -> com.a.a.h:
    java.lang.String[] charsets -> a
    com.kenai.jbosh.AttrCharsets createFromString(java.lang.String) -> a
com.kenai.jbosh.AttrHold -> com.a.a.i:
    com.kenai.jbosh.AttrHold createFromString(java.lang.String) -> a
com.kenai.jbosh.AttrInactivity -> com.a.a.j:
    com.kenai.jbosh.AttrInactivity createFromString(java.lang.String) -> a
com.kenai.jbosh.AttrMaxPause -> com.a.a.k:
    com.kenai.jbosh.AttrMaxPause createFromString(java.lang.String) -> a
com.kenai.jbosh.AttrPause -> com.a.a.l:
    com.kenai.jbosh.AttrPause createFromString(java.lang.String) -> a
    int getInMilliseconds() -> c
com.kenai.jbosh.AttrPolling -> com.a.a.m:
    com.kenai.jbosh.AttrPolling createFromString(java.lang.String) -> a
    int getInMilliseconds() -> c
com.kenai.jbosh.AttrRequests -> com.a.a.n:
    com.kenai.jbosh.AttrRequests createFromString(java.lang.String) -> a
com.kenai.jbosh.AttrSessionID -> com.a.a.o:
    com.kenai.jbosh.AttrSessionID createFromString(java.lang.String) -> a
com.kenai.jbosh.AttrVersion -> com.a.a.p:
    com.kenai.jbosh.AttrVersion DEFAULT -> a
    int major -> b
    int minor -> c
    com.kenai.jbosh.AttrVersion getSupportedVersion() -> b
    com.kenai.jbosh.AttrVersion createFromString(java.lang.String) -> a
    int compareTo(java.lang.Object) -> compareTo
com.kenai.jbosh.AttrWait -> com.a.a.q:
    com.kenai.jbosh.AttrWait createFromString(java.lang.String) -> a
com.kenai.jbosh.Attributes -> com.a.a.r:
    com.kenai.jbosh.BodyQName ACCEPT -> a
    com.kenai.jbosh.BodyQName AUTHID -> b
    com.kenai.jbosh.BodyQName ACK -> c
    com.kenai.jbosh.BodyQName CHARSETS -> d
    com.kenai.jbosh.BodyQName CONDITION -> e
    com.kenai.jbosh.BodyQName CONTENT -> f
    com.kenai.jbosh.BodyQName FROM -> g
    com.kenai.jbosh.BodyQName HOLD -> h
    com.kenai.jbosh.BodyQName INACTIVITY -> i
    com.kenai.jbosh.BodyQName KEY -> j
    com.kenai.jbosh.BodyQName MAXPAUSE -> k
    com.kenai.jbosh.BodyQName NEWKEY -> l
    com.kenai.jbosh.BodyQName PAUSE -> m
    com.kenai.jbosh.BodyQName POLLING -> n
    com.kenai.jbosh.BodyQName REPORT -> o
    com.kenai.jbosh.BodyQName REQUESTS -> p
    com.kenai.jbosh.BodyQName RID -> q
    com.kenai.jbosh.BodyQName ROUTE -> r
    com.kenai.jbosh.BodyQName SECURE -> s
    com.kenai.jbosh.BodyQName SID -> t
    com.kenai.jbosh.BodyQName STREAM -> u
    com.kenai.jbosh.BodyQName TIME -> v
    com.kenai.jbosh.BodyQName TO -> w
    com.kenai.jbosh.BodyQName TYPE -> x
    com.kenai.jbosh.BodyQName VER -> y
    com.kenai.jbosh.BodyQName WAIT -> z
    com.kenai.jbosh.BodyQName XML_LANG -> A
com.kenai.jbosh.BOSHClient -> com.a.a.s:
    java.util.logging.Logger LOG -> b
    int EMPTY_REQUEST_DELAY -> c
    int PAUSE_MARGIN -> d
    boolean ASSERTIONS -> e
    java.util.Set connListeners -> f
    java.util.Set requestListeners -> g
    java.util.Set responseListeners -> h
    java.util.concurrent.locks.ReentrantLock lock -> i
    java.util.concurrent.locks.Condition notEmpty -> j
    java.util.concurrent.locks.Condition notFull -> k
    java.util.concurrent.locks.Condition drained -> l
    com.kenai.jbosh.BOSHClientConfig cfg -> m
    java.lang.Runnable procRunnable -> n
    java.lang.Runnable emptyRequestRunnable -> o
    com.kenai.jbosh.HTTPSender httpSender -> p
    java.util.concurrent.atomic.AtomicReference exchInterceptor -> q
    com.kenai.jbosh.RequestIDSequence requestIDSeq -> r
    java.util.concurrent.ScheduledExecutorService schedExec -> s
    java.lang.Thread procThread -> t
    java.util.concurrent.ScheduledFuture emptyRequestFuture -> u
    com.kenai.jbosh.CMSessionParams cmParams -> v
    java.util.Queue exchanges -> w
    java.util.SortedSet pendingResponseAcks -> x
    java.lang.Long responseAck -> y
    java.util.List pendingRequestAcks -> z
    boolean $assertionsDisabled -> a
    com.kenai.jbosh.BOSHClient create(com.kenai.jbosh.BOSHClientConfig) -> a
    void addBOSHClientConnListener(com.kenai.jbosh.BOSHClientConnListener) -> a
    void addBOSHClientRequestListener(com.kenai.jbosh.BOSHClientRequestListener) -> a
    void addBOSHClientResponseListener(com.kenai.jbosh.BOSHClientResponseListener) -> a
    void send(com.kenai.jbosh.ComposableBody) -> a
    void disconnect(com.kenai.jbosh.ComposableBody) -> b
    void close() -> a
    void init() -> b
    void dispose(java.lang.Throwable) -> a
    boolean isPause(com.kenai.jbosh.AbstractBody) -> a
    boolean isTermination(com.kenai.jbosh.AbstractBody) -> b
    com.kenai.jbosh.TerminalBindingCondition getTerminalBindingCondition(int,com.kenai.jbosh.AbstractBody) -> a
    boolean isImmediatelySendable(com.kenai.jbosh.AbstractBody) -> c
    boolean isWorking() -> c
    void blockUntilSendable(com.kenai.jbosh.AbstractBody) -> d
    com.kenai.jbosh.ComposableBody applySessionCreationRequest(long,com.kenai.jbosh.ComposableBody) -> a
    void applyRoute(com.kenai.jbosh.ComposableBody$Builder) -> a
    void applyFrom(com.kenai.jbosh.ComposableBody$Builder) -> b
    com.kenai.jbosh.ComposableBody applySessionData(long,com.kenai.jbosh.ComposableBody) -> b
    void applyResponseAcknowledgement(com.kenai.jbosh.ComposableBody$Builder,long) -> a
    void processMessages() -> d
    com.kenai.jbosh.HTTPExchange nextExchange() -> e
    void processExchange(com.kenai.jbosh.HTTPExchange) -> a
    void clearEmptyRequest() -> f
    long getDefaultEmptyRequestDelay() -> g
    void scheduleEmptyRequest(long) -> a
    void sendEmptyRequest() -> h
    void assertLocked() -> i
    void assertUnlocked() -> j
    void checkForTerminalBindingConditions(com.kenai.jbosh.AbstractBody,int) -> a
    boolean isRecoverableBindingCondition(com.kenai.jbosh.AbstractBody) -> e
    long processPauseRequest(com.kenai.jbosh.AbstractBody) -> f
    void processRequestAcknowledgements(com.kenai.jbosh.AbstractBody,com.kenai.jbosh.AbstractBody) -> a
    void processResponseAcknowledgementData(com.kenai.jbosh.AbstractBody) -> g
    com.kenai.jbosh.HTTPExchange processResponseAcknowledgementReport(com.kenai.jbosh.AbstractBody) -> h
    void fireRequestSent(com.kenai.jbosh.AbstractBody) -> i
    void fireResponseReceived(com.kenai.jbosh.AbstractBody) -> j
    void fireConnectionEstablished() -> k
    void fireConnectionClosed() -> l
    void fireConnectionClosedOnError(java.lang.Throwable) -> b
    void access$000(com.kenai.jbosh.BOSHClient) -> a
    void access$100(com.kenai.jbosh.BOSHClient) -> b
com.kenai.jbosh.BOSHClient$1 -> com.a.a.t:
    com.kenai.jbosh.BOSHClient this$0 -> a
    void run() -> run
com.kenai.jbosh.BOSHClient$2 -> com.a.a.u:
    com.kenai.jbosh.BOSHClient this$0 -> a
    void run() -> run
com.kenai.jbosh.BOSHClient$ExchangeInterceptor -> com.a.a.v:
    com.kenai.jbosh.HTTPExchange interceptExchange(com.kenai.jbosh.HTTPExchange) -> a
com.kenai.jbosh.BOSHClientConfig -> com.a.a.w:
    java.net.URI uri -> a
    java.lang.String to -> b
    java.lang.String from -> c
    java.lang.String lang -> d
    java.lang.String route -> e
    java.lang.String proxyHost -> f
    int proxyPort -> g
    javax.net.ssl.SSLContext sslContext -> h
    boolean compressionEnabled -> i
    java.net.URI getURI() -> a
    java.lang.String getTo() -> b
    java.lang.String getFrom() -> c
    java.lang.String getLang() -> d
    java.lang.String getRoute() -> e
    java.lang.String getProxyHost() -> f
    int getProxyPort() -> g
    boolean isCompressionEnabled() -> h
com.kenai.jbosh.BOSHClientConfig$1 -> com.a.a.x:
com.kenai.jbosh.BOSHClientConfig$Builder -> com.a.a.y:
    java.net.URI bURI -> a
    java.lang.String bDomain -> b
    java.lang.String bFrom -> c
    java.lang.String bLang -> d
    java.lang.String bRoute -> e
    java.lang.String bProxyHost -> f
    int bProxyPort -> g
    javax.net.ssl.SSLContext bSSLContext -> h
    java.lang.Boolean bCompression -> i
    com.kenai.jbosh.BOSHClientConfig$Builder create(java.net.URI,java.lang.String) -> a
    com.kenai.jbosh.BOSHClientConfig$Builder setProxy(java.lang.String,int) -> a
    com.kenai.jbosh.BOSHClientConfig build() -> a
com.kenai.jbosh.BOSHClientConnEvent -> com.a.a.z:
    boolean connected -> a
    java.util.List requests -> b
    java.lang.Throwable cause -> c
    com.kenai.jbosh.BOSHClientConnEvent createConnectionEstablishedEvent(com.kenai.jbosh.BOSHClient) -> a
    com.kenai.jbosh.BOSHClientConnEvent createConnectionClosedEvent(com.kenai.jbosh.BOSHClient) -> b
    com.kenai.jbosh.BOSHClientConnEvent createConnectionClosedOnErrorEvent(com.kenai.jbosh.BOSHClient,java.util.List,java.lang.Throwable) -> a
    boolean isConnected() -> a
    boolean isError() -> b
    java.lang.Throwable getCause() -> c
com.kenai.jbosh.BOSHClientConnListener -> com.a.a.aa:
    void connectionEvent(com.kenai.jbosh.BOSHClientConnEvent) -> connectionEvent
com.kenai.jbosh.BOSHClientRequestListener -> com.a.a.ab:
    void requestSent(com.kenai.jbosh.BOSHMessageEvent) -> requestSent
com.kenai.jbosh.BOSHClientResponseListener -> com.a.a.ac:
    void responseReceived(com.kenai.jbosh.BOSHMessageEvent) -> responseReceived
com.kenai.jbosh.BOSHException -> com.a.a.ad:
com.kenai.jbosh.BOSHMessageEvent -> com.a.a.ae:
    com.kenai.jbosh.AbstractBody body -> a
    com.kenai.jbosh.BOSHMessageEvent createRequestSentEvent(com.kenai.jbosh.BOSHClient,com.kenai.jbosh.AbstractBody) -> a
    com.kenai.jbosh.BOSHMessageEvent createResponseReceivedEvent(com.kenai.jbosh.BOSHClient,com.kenai.jbosh.AbstractBody) -> b
    com.kenai.jbosh.AbstractBody getBody() -> a
com.kenai.jbosh.BodyParser -> com.a.a.af:
    com.kenai.jbosh.BodyParserResults parse(java.lang.String) -> a
com.kenai.jbosh.BodyParserResults -> com.a.a.ag:
    java.util.Map attrs -> a
    void addBodyAttributeValue(com.kenai.jbosh.BodyQName,java.lang.String) -> a
    java.util.Map getAttributes() -> a
com.kenai.jbosh.BodyParserXmlPull -> com.a.a.ah:
    java.util.logging.Logger LOG -> a
    java.lang.ThreadLocal XPP_PARSER -> b
    com.kenai.jbosh.BodyParserResults parse(java.lang.String) -> a
    org.xmlpull.v1.XmlPullParser getXmlPullParser() -> a
com.kenai.jbosh.BodyParserXmlPull$1 -> com.a.a.ai:
    java.lang.ref.SoftReference initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.kenai.jbosh.BodyQName -> com.a.a.aj:
    com.kenai.jbosh.QName qname -> a
    com.kenai.jbosh.BodyQName create(java.lang.String,java.lang.String) -> a
    com.kenai.jbosh.BodyQName createWithPrefix(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getNamespaceURI() -> a
    java.lang.String getLocalPart() -> b
    java.lang.String getPrefix() -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.kenai.jbosh.BodyQName createBOSH(java.lang.String) -> a
    boolean equalsQName(com.kenai.jbosh.QName) -> a
com.kenai.jbosh.CMSessionParams -> com.a.a.ak:
    com.kenai.jbosh.AttrSessionID sid -> a
    com.kenai.jbosh.AttrWait wait -> b
    com.kenai.jbosh.AttrVersion ver -> c
    com.kenai.jbosh.AttrPolling polling -> d
    com.kenai.jbosh.AttrInactivity inactivity -> e
    com.kenai.jbosh.AttrRequests requests -> f
    com.kenai.jbosh.AttrHold hold -> g
    com.kenai.jbosh.AttrAccept accept -> h
    com.kenai.jbosh.AttrMaxPause maxPause -> i
    com.kenai.jbosh.AttrAck ack -> j
    com.kenai.jbosh.AttrCharsets charsets -> k
    boolean ackingRequests -> l
    com.kenai.jbosh.CMSessionParams fromSessionInit(com.kenai.jbosh.AbstractBody,com.kenai.jbosh.AbstractBody) -> a
    java.lang.String getRequiredAttribute(com.kenai.jbosh.AbstractBody,com.kenai.jbosh.BodyQName) -> a
    com.kenai.jbosh.AttrSessionID getSessionID() -> a
    com.kenai.jbosh.AttrVersion getVersion() -> b
    com.kenai.jbosh.AttrPolling getPollingInterval() -> c
    com.kenai.jbosh.AttrRequests getRequests() -> d
    com.kenai.jbosh.AttrAccept getAccept() -> e
    com.kenai.jbosh.AttrMaxPause getMaxPause() -> f
    boolean isAckingRequests() -> g
com.kenai.jbosh.ComposableBody -> com.a.a.al:
    java.util.regex.Pattern BOSH_START -> a
    java.util.Map attrs -> b
    java.lang.String payload -> c
    java.util.concurrent.atomic.AtomicReference computed -> d
    com.kenai.jbosh.ComposableBody$Builder builder() -> d
    com.kenai.jbosh.ComposableBody$Builder rebuild() -> e
    java.util.Map getAttributes() -> a
    java.lang.String toXML() -> b
    java.lang.String escape(java.lang.String) -> a
    java.lang.String computeXML() -> f
    java.lang.String access$000(com.kenai.jbosh.ComposableBody) -> a
com.kenai.jbosh.ComposableBody$1 -> com.a.a.am:
com.kenai.jbosh.ComposableBody$Builder -> com.a.a.an:
    java.util.Map map -> a
    boolean doMapCopy -> b
    java.lang.String payloadXML -> c
    com.kenai.jbosh.ComposableBody$Builder fromBody(com.kenai.jbosh.ComposableBody) -> b
    com.kenai.jbosh.ComposableBody$Builder setPayloadXML(java.lang.String) -> a
    com.kenai.jbosh.ComposableBody$Builder setAttribute(com.kenai.jbosh.BodyQName,java.lang.String) -> a
    com.kenai.jbosh.ComposableBody$Builder setNamespaceDefinition(java.lang.String,java.lang.String) -> a
    com.kenai.jbosh.ComposableBody build() -> a
    com.kenai.jbosh.ComposableBody$Builder access$300(com.kenai.jbosh.ComposableBody) -> a
com.kenai.jbosh.GZIPCodec -> com.a.a.ao:
    java.lang.String getID() -> a
    byte[] encode(byte[]) -> a
    byte[] decode(byte[]) -> b
com.kenai.jbosh.HTTPExchange -> com.a.a.ap:
    java.util.logging.Logger LOG -> a
    com.kenai.jbosh.AbstractBody request -> b
    java.util.concurrent.locks.Lock lock -> c
    java.util.concurrent.locks.Condition ready -> d
    com.kenai.jbosh.HTTPResponse response -> e
    com.kenai.jbosh.AbstractBody getRequest() -> a
    void setHTTPResponse(com.kenai.jbosh.HTTPResponse) -> a
    com.kenai.jbosh.HTTPResponse getHTTPResponse() -> b
com.kenai.jbosh.HTTPResponse -> com.a.a.aq:
    int getHTTPStatus() -> c
    com.kenai.jbosh.AbstractBody getBody() -> b
com.kenai.jbosh.HTTPSender -> com.a.a.ar:
    void init(com.kenai.jbosh.BOSHClientConfig) -> a
    void destroy() -> a
    com.kenai.jbosh.HTTPResponse send(com.kenai.jbosh.CMSessionParams,com.kenai.jbosh.AbstractBody) -> a
com.kenai.jbosh.QName -> com.a.a.as:
    java.lang.String emptyString -> a
    java.lang.String namespaceURI -> b
    java.lang.String localPart -> c
    java.lang.String prefix -> d
    java.lang.String getNamespaceURI() -> a
    java.lang.String getLocalPart() -> b
    java.lang.String getPrefix() -> c
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.kenai.jbosh.RequestIDSequence -> com.a.a.at:
    java.security.SecureRandom RAND -> a
    java.util.concurrent.locks.Lock LOCK -> b
    java.util.concurrent.atomic.AtomicLong nextRequestID -> c
    long getNextRID() -> a
    long generateInitialValue() -> b
com.kenai.jbosh.StaticBody -> com.a.a.au:
    com.kenai.jbosh.BodyParser PARSER -> a
    java.util.Map attrs -> b
    java.lang.String raw -> c
    com.kenai.jbosh.StaticBody fromString(java.lang.String) -> a
    java.util.Map getAttributes() -> a
    java.lang.String toXML() -> b
com.kenai.jbosh.TerminalBindingCondition -> com.a.a.av:
    java.util.Map COND_TO_INSTANCE -> n
    java.util.Map CODE_TO_INSTANCE -> o
    com.kenai.jbosh.TerminalBindingCondition BAD_REQUEST -> a
    com.kenai.jbosh.TerminalBindingCondition HOST_GONE -> b
    com.kenai.jbosh.TerminalBindingCondition HOST_UNKNOWN -> c
    com.kenai.jbosh.TerminalBindingCondition IMPROPER_ADDRESSING -> d
    com.kenai.jbosh.TerminalBindingCondition INTERNAL_SERVER_ERROR -> e
    com.kenai.jbosh.TerminalBindingCondition ITEM_NOT_FOUND -> f
    com.kenai.jbosh.TerminalBindingCondition OTHER_REQUEST -> g
    com.kenai.jbosh.TerminalBindingCondition POLICY_VIOLATION -> h
    com.kenai.jbosh.TerminalBindingCondition REMOTE_CONNECTION_FAILED -> i
    com.kenai.jbosh.TerminalBindingCondition REMOTE_STREAM_ERROR -> j
    com.kenai.jbosh.TerminalBindingCondition SEE_OTHER_URI -> k
    com.kenai.jbosh.TerminalBindingCondition SYSTEM_SHUTDOWN -> l
    com.kenai.jbosh.TerminalBindingCondition UNDEFINED_CONDITION -> m
    java.lang.String cond -> p
    java.lang.String msg -> q
    com.kenai.jbosh.TerminalBindingCondition create(java.lang.String,java.lang.String) -> a
    com.kenai.jbosh.TerminalBindingCondition createWithCode(java.lang.String,java.lang.String,java.lang.Integer) -> a
    com.kenai.jbosh.TerminalBindingCondition forString(java.lang.String) -> a
    com.kenai.jbosh.TerminalBindingCondition forHTTPResponseCode(int) -> a
    java.lang.String getCondition() -> a
    java.lang.String getMessage() -> b
com.kenai.jbosh.ZLIBCodec -> com.a.a.aw:
    java.lang.String getID() -> a
    byte[] encode(byte[]) -> a
    byte[] decode(byte[]) -> b
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.http.AsyncHttpClient:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    java.lang.String HEADER_CONTENT_RANGE -> HEADER_CONTENT_RANGE
    java.lang.String HEADER_CONTENT_ENCODING -> HEADER_CONTENT_ENCODING
    java.lang.String HEADER_CONTENT_DISPOSITION -> HEADER_CONTENT_DISPOSITION
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_MAX_CONNECTIONS -> DEFAULT_MAX_CONNECTIONS
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    int DEFAULT_RETRY_SLEEP_TIME_MILLIS -> DEFAULT_RETRY_SLEEP_TIME_MILLIS
    int DEFAULT_SOCKET_BUFFER_SIZE -> DEFAULT_SOCKET_BUFFER_SIZE
    int maxConnections -> maxConnections
    int timeout -> timeout
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.Map requestMap -> requestMap
    java.util.Map clientHeaderMap -> clientHeaderMap
    boolean isUrlEncodingEnabled -> isUrlEncodingEnabled
    org.apache.http.conn.scheme.SchemeRegistry getDefaultSchemeRegistry(boolean,int,int) -> getDefaultSchemeRegistry
    void allowRetryExceptionClass(java.lang.Class) -> allowRetryExceptionClass
    void blockRetryExceptionClass(java.lang.Class) -> blockRetryExceptionClass
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    org.apache.http.protocol.HttpContext getHttpContext() -> getHttpContext
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setThreadPool(java.util.concurrent.ExecutorService) -> setThreadPool
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
    java.util.concurrent.ExecutorService getDefaultThreadPool() -> getDefaultThreadPool
    void setEnableRedirects(boolean,boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean) -> setEnableRedirects
    void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    void setUserAgent(java.lang.String) -> setUserAgent
    int getMaxConnections() -> getMaxConnections
    void setMaxConnections(int) -> setMaxConnections
    int getTimeout() -> getTimeout
    void setTimeout(int) -> setTimeout
    void setProxy(java.lang.String,int) -> setProxy
    void setProxy(java.lang.String,int,java.lang.String,java.lang.String) -> setProxy
    void setSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> setSSLSocketFactory
    void setMaxRetriesAndTimeout(int,int) -> setMaxRetriesAndTimeout
    void removeAllHeaders() -> removeAllHeaders
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,boolean) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope,boolean) -> setBasicAuth
    void setAuthenticationPreemptive(boolean) -> setAuthenticationPreemptive
    void clearBasicAuth() -> clearBasicAuth
    void cancelRequests(android.content.Context,boolean) -> cancelRequests
    void cancelAllRequests(boolean) -> cancelAllRequests
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle delete(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.AsyncHttpRequest newAsyncHttpRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> newAsyncHttpRequest
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
    void setURLEncodingEnabled(boolean) -> setURLEncodingEnabled
    java.lang.String getUrlWithQueryString(boolean,java.lang.String,com.loopj.android.http.RequestParams) -> getUrlWithQueryString
    boolean isInputStreamGZIPCompressed(java.io.PushbackInputStream) -> isInputStreamGZIPCompressed
    void silentCloseInputStream(java.io.InputStream) -> silentCloseInputStream
    void silentCloseOutputStream(java.io.OutputStream) -> silentCloseOutputStream
    org.apache.http.HttpEntity paramsToEntity(com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> paramsToEntity
    boolean isUrlEncodingEnabled() -> isUrlEncodingEnabled
    org.apache.http.client.methods.HttpEntityEnclosingRequestBase addEntityToRequestBase(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.HttpEntity) -> addEntityToRequestBase
    void endEntityViaReflection(org.apache.http.HttpEntity) -> endEntityViaReflection
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> access$000
    java.util.Map access$100(com.loopj.android.http.AsyncHttpClient) -> access$100
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.http.AsyncHttpClient$1:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.http.AsyncHttpClient$2:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$3 -> com.loopj.android.http.AsyncHttpClient$3:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$4 -> com.loopj.android.http.AsyncHttpClient$4:
    android.content.Context val$context -> val$context
    boolean val$mayInterruptIfRunning -> val$mayInterruptIfRunning
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void run() -> run
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.http.AsyncHttpClient$InflatingEntity:
    java.io.InputStream wrappedStream -> wrappedStream
    java.io.PushbackInputStream pushbackStream -> pushbackStream
    java.util.zip.GZIPInputStream gzippedStream -> gzippedStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.http.AsyncHttpRequest:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.client.methods.HttpUriRequest request -> request
    com.loopj.android.http.ResponseHandlerInterface responseHandler -> responseHandler
    int executionCount -> executionCount
    boolean isCancelled -> isCancelled
    boolean cancelIsNotified -> cancelIsNotified
    boolean isFinished -> isFinished
    void run() -> run
    void makeRequest() -> makeRequest
    void makeRequestWithRetries() -> makeRequestWithRetries
    boolean isCancelled() -> isCancelled
    void sendCancelNotification() -> sendCancelNotification
    boolean isDone() -> isDone
    boolean cancel(boolean) -> cancel
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.http.AsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    int SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    int FAILURE_MESSAGE -> FAILURE_MESSAGE
    int START_MESSAGE -> START_MESSAGE
    int FINISH_MESSAGE -> FINISH_MESSAGE
    int PROGRESS_MESSAGE -> PROGRESS_MESSAGE
    int RETRY_MESSAGE -> RETRY_MESSAGE
    int CANCEL_MESSAGE -> CANCEL_MESSAGE
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String responseCharset -> responseCharset
    android.os.Handler handler -> handler
    boolean useSynchronousMode -> useSynchronousMode
    java.net.URI requestURI -> requestURI
    org.apache.http.Header[] requestHeaders -> requestHeaders
    java.net.URI getRequestURI() -> getRequestURI
    org.apache.http.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestURI(java.net.URI) -> setRequestURI
    void setRequestHeaders(org.apache.http.Header[]) -> setRequestHeaders
    boolean getUseSynchronousMode() -> getUseSynchronousMode
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    void setCharset(java.lang.String) -> setCharset
    java.lang.String getCharset() -> getCharset
    void onProgress(int,int) -> onProgress
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onRetry(int) -> onRetry
    void onCancel() -> onCancel
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendRetryMessage(int) -> sendRetryMessage
    void sendCancelMessage() -> sendCancelMessage
    void handleMessage(android.os.Message) -> handleMessage
    void sendMessage(android.os.Message) -> sendMessage
    void postRunnable(java.lang.Runnable) -> postRunnable
    android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler:
    com.loopj.android.http.AsyncHttpResponseHandler mResponder -> mResponder
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.Base64 -> com.loopj.android.http.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
com.loopj.android.http.Base64$Coder -> com.loopj.android.http.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
com.loopj.android.http.Base64$Decoder -> com.loopj.android.http.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64$Encoder -> com.loopj.android.http.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64DataException -> com.loopj.android.http.Base64DataException:
com.loopj.android.http.Base64OutputStream -> com.loopj.android.http.Base64OutputStream:
    com.loopj.android.http.Base64$Coder coder -> coder
    int flags -> flags
    byte[] buffer -> buffer
    int bpos -> bpos
    byte[] EMPTY -> EMPTY
    void write(int) -> write
    void flushBuffer() -> flushBuffer
    void write(byte[],int,int) -> write
    void close() -> close
    void internalWrite(byte[],int,int,boolean) -> internalWrite
    byte[] embiggen(byte[],int) -> embiggen
com.loopj.android.http.BaseJsonHttpResponseHandler -> com.loopj.android.http.BaseJsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,org.apache.http.Header[],java.lang.String,java.lang.Object) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.lang.String,java.lang.Object) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(java.lang.String,boolean) -> parseResponse
com.loopj.android.http.BaseJsonHttpResponseHandler$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1:
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$2:
    java.lang.Throwable val$t -> val$t
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2:
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$2:
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BinaryHttpResponseHandler -> com.loopj.android.http.BinaryHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String[] mAllowedContentTypes -> mAllowedContentTypes
    java.lang.String[] getAllowedContentTypes() -> getAllowedContentTypes
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
com.loopj.android.http.BuildConfig -> com.loopj.android.http.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.loopj.android.http.DataAsyncHttpResponseHandler -> com.loopj.android.http.DataAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    int PROGRESS_DATA_MESSAGE -> PROGRESS_DATA_MESSAGE
    void onProgressData(byte[]) -> onProgressData
    void sendProgressDataMessage(byte[]) -> sendProgressDataMessage
    void handleMessage(android.os.Message) -> handleMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    byte[] copyOfRange(byte[],int,int) -> copyOfRange
com.loopj.android.http.FileAsyncHttpResponseHandler -> com.loopj.android.http.FileAsyncHttpResponseHandler:
    java.io.File mFile -> mFile
    java.lang.String LOG_TAG -> LOG_TAG
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean deleteTargetFile() -> deleteTargetFile
    java.io.File getTemporaryFile(android.content.Context) -> getTemporaryFile
    java.io.File getTargetFile() -> getTargetFile
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.io.File) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],java.io.File) -> onSuccess
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
com.loopj.android.http.JsonHttpResponseHandler -> com.loopj.android.http.JsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(byte[]) -> parseResponse
com.loopj.android.http.JsonHttpResponseHandler$1 -> com.loopj.android.http.JsonHttpResponseHandler$1:
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$1 -> com.loopj.android.http.JsonHttpResponseHandler$1$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$2 -> com.loopj.android.http.JsonHttpResponseHandler$1$2:
    org.json.JSONException val$ex -> val$ex
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2 -> com.loopj.android.http.JsonHttpResponseHandler$2:
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$1 -> com.loopj.android.http.JsonHttpResponseHandler$2$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$2 -> com.loopj.android.http.JsonHttpResponseHandler$2$2:
    org.json.JSONException val$ex -> val$ex
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonStreamerEntity -> com.loopj.android.http.JsonStreamerEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.UnsupportedOperationException ERR_UNSUPPORTED -> ERR_UNSUPPORTED
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] buffer -> buffer
    java.lang.StringBuilder BUILDER -> BUILDER
    byte[] JSON_TRUE -> JSON_TRUE
    byte[] JSON_FALSE -> JSON_FALSE
    byte[] JSON_NULL -> JSON_NULL
    byte[] STREAM_NAME -> STREAM_NAME
    byte[] STREAM_TYPE -> STREAM_TYPE
    byte[] STREAM_CONTENTS -> STREAM_CONTENTS
    byte[] STREAM_ELAPSED -> STREAM_ELAPSED
    org.apache.http.Header HEADER_JSON_CONTENT -> HEADER_JSON_CONTENT
    org.apache.http.Header HEADER_GZIP_ENCODING -> HEADER_GZIP_ENCODING
    java.util.Map jsonParams -> jsonParams
    org.apache.http.Header contentEncoding -> contentEncoding
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    void addPart(java.lang.String,java.lang.Object) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    org.apache.http.Header getContentType() -> getContentType
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    void writeToFromStream(java.io.OutputStream,com.loopj.android.http.RequestParams$StreamWrapper) -> writeToFromStream
    void writeToFromFile(java.io.OutputStream,com.loopj.android.http.RequestParams$FileWrapper) -> writeToFromFile
    void writeMetaData(java.io.OutputStream,java.lang.String,java.lang.String) -> writeMetaData
    void endMetaData(java.io.OutputStream) -> endMetaData
    byte[] escape(java.lang.String) -> escape
com.loopj.android.http.MyRedirectHandler -> com.loopj.android.http.MyRedirectHandler:
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean enableRedirects -> enableRedirects
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.loopj.android.http.MySSLSocketFactory -> com.loopj.android.http.MySSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void fixHttpsURLConnection() -> fixHttpsURLConnection
    java.security.KeyStore getKeystoreOfCA(java.io.InputStream) -> getKeystoreOfCA
    java.security.KeyStore getKeystore() -> getKeystore
    org.apache.http.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> getFixedSocketFactory
    org.apache.http.impl.client.DefaultHttpClient getNewHttpClient(java.security.KeyStore) -> getNewHttpClient
com.loopj.android.http.MySSLSocketFactory$1 -> com.loopj.android.http.MySSLSocketFactory$1:
    com.loopj.android.http.MySSLSocketFactory this$0 -> this$0
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.loopj.android.http.PersistentCookieStore -> com.loopj.android.http.PersistentCookieStore:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    boolean omitNonPersistentCookies -> omitNonPersistentCookies
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    void setOmitNonPersistentCookies(boolean) -> setOmitNonPersistentCookies
    void deleteCookie(org.apache.http.cookie.Cookie) -> deleteCookie
    java.lang.String encodeCookie(com.loopj.android.http.SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.loopj.android.http.PreemtiveAuthorizationHttpRequestInterceptor -> com.loopj.android.http.PreemtiveAuthorizationHttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.RangeFileAsyncHttpResponseHandler -> com.loopj.android.http.RangeFileAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    long current -> current
    boolean append -> append
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    void updateRequestHeaders(org.apache.http.client.methods.HttpUriRequest) -> updateRequestHeaders
com.loopj.android.http.RequestHandle -> com.loopj.android.http.RequestHandle:
    java.lang.ref.WeakReference request -> request
    boolean cancel(boolean) -> cancel
    boolean isFinished() -> isFinished
    boolean isCancelled() -> isCancelled
    boolean shouldBeGarbageCollected() -> shouldBeGarbageCollected
com.loopj.android.http.RequestParams -> com.loopj.android.http.RequestParams:
    java.lang.String APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    java.lang.String APPLICATION_JSON -> APPLICATION_JSON
    java.lang.String LOG_TAG -> LOG_TAG
    boolean isRepeatable -> isRepeatable
    boolean useJsonStreamer -> useJsonStreamer
    boolean autoCloseInputStreams -> autoCloseInputStreams
    java.util.concurrent.ConcurrentHashMap urlParams -> urlParams
    java.util.concurrent.ConcurrentHashMap streamParams -> streamParams
    java.util.concurrent.ConcurrentHashMap fileParams -> fileParams
    java.util.concurrent.ConcurrentHashMap urlParamsWithObjects -> urlParamsWithObjects
    java.lang.String contentEncoding -> contentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.io.File,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String,boolean) -> put
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void add(java.lang.String,java.lang.String) -> add
    void remove(java.lang.String) -> remove
    boolean has(java.lang.String) -> has
    java.lang.String toString() -> toString
    void setHttpEntityIsRepeatable(boolean) -> setHttpEntityIsRepeatable
    void setUseJsonStreamer(boolean) -> setUseJsonStreamer
    void setAutoCloseInputStreams(boolean) -> setAutoCloseInputStreams
    org.apache.http.HttpEntity getEntity(com.loopj.android.http.ResponseHandlerInterface) -> getEntity
    org.apache.http.HttpEntity createJsonStreamerEntity(com.loopj.android.http.ResponseHandlerInterface) -> createJsonStreamerEntity
    org.apache.http.HttpEntity createFormEntity() -> createFormEntity
    org.apache.http.HttpEntity createMultipartEntity(com.loopj.android.http.ResponseHandlerInterface) -> createMultipartEntity
    java.util.List getParamsList() -> getParamsList
    java.util.List getParamsList(java.lang.String,java.lang.Object) -> getParamsList
    java.lang.String getParamString() -> getParamString
com.loopj.android.http.RequestParams$1 -> com.loopj.android.http.RequestParams$1:
    java.lang.String val$key -> val$key
    java.lang.String val$value -> val$value
com.loopj.android.http.RequestParams$FileWrapper -> com.loopj.android.http.RequestParams$FileWrapper:
    java.io.File file -> file
    java.lang.String contentType -> contentType
com.loopj.android.http.RequestParams$StreamWrapper -> com.loopj.android.http.RequestParams$StreamWrapper:
    java.io.InputStream inputStream -> inputStream
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    boolean autoClose -> autoClose
    com.loopj.android.http.RequestParams$StreamWrapper newInstance(java.io.InputStream,java.lang.String,java.lang.String,boolean) -> newInstance
com.loopj.android.http.ResponseHandlerInterface -> com.loopj.android.http.ResponseHandlerInterface:
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendCancelMessage() -> sendCancelMessage
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendRetryMessage(int) -> sendRetryMessage
    java.net.URI getRequestURI() -> getRequestURI
    org.apache.http.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestURI(java.net.URI) -> setRequestURI
    void setRequestHeaders(org.apache.http.Header[]) -> setRequestHeaders
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    boolean getUseSynchronousMode() -> getUseSynchronousMode
com.loopj.android.http.RetryHandler -> com.loopj.android.http.RetryHandler:
    java.util.HashSet exceptionWhitelist -> exceptionWhitelist
    java.util.HashSet exceptionBlacklist -> exceptionBlacklist
    int maxRetries -> maxRetries
    int retrySleepTimeMS -> retrySleepTimeMS
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    void addClassToWhitelist(java.lang.Class) -> addClassToWhitelist
    void addClassToBlacklist(java.lang.Class) -> addClassToBlacklist
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> isInList
com.loopj.android.http.SaxAsyncHttpResponseHandler -> com.loopj.android.http.SaxAsyncHttpResponseHandler:
    org.xml.sax.helpers.DefaultHandler handler -> handler
    java.lang.String LOG_TAG -> LOG_TAG
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    void onSuccess(int,org.apache.http.Header[],org.xml.sax.helpers.DefaultHandler) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],org.xml.sax.helpers.DefaultHandler) -> onFailure
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.loopj.android.http.SerializableCookie -> com.loopj.android.http.SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.loopj.android.http.SimpleMultipartEntity -> com.loopj.android.http.SimpleMultipartEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String STR_CR_LF -> STR_CR_LF
    byte[] CR_LF -> CR_LF
    byte[] TRANSFER_ENCODING_BINARY -> TRANSFER_ENCODING_BINARY
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String boundary -> boundary
    byte[] boundaryLine -> boundaryLine
    byte[] boundaryEnd -> boundaryEnd
    boolean isRepeatable -> isRepeatable
    java.util.List fileParts -> fileParts
    java.io.ByteArrayOutputStream out -> out
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    int bytesWritten -> bytesWritten
    int totalSize -> totalSize
    void addPart(java.lang.String,java.lang.String,java.lang.String) -> addPart
    void addPartWithCharset(java.lang.String,java.lang.String,java.lang.String) -> addPartWithCharset
    void addPart(java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) -> addPart
    java.lang.String normalizeContentType(java.lang.String) -> normalizeContentType
    byte[] createContentType(java.lang.String) -> createContentType
    byte[] createContentDisposition(java.lang.String) -> createContentDisposition
    byte[] createContentDisposition(java.lang.String,java.lang.String) -> createContentDisposition
    void updateProgress(int) -> updateProgress
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    void setIsRepeatable(boolean) -> setIsRepeatable
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    byte[] access$000(com.loopj.android.http.SimpleMultipartEntity) -> access$000
    byte[] access$100(com.loopj.android.http.SimpleMultipartEntity,java.lang.String,java.lang.String) -> access$100
    byte[] access$200(com.loopj.android.http.SimpleMultipartEntity,java.lang.String) -> access$200
    byte[] access$300() -> access$300
    byte[] access$400() -> access$400
    void access$500(com.loopj.android.http.SimpleMultipartEntity,int) -> access$500
com.loopj.android.http.SimpleMultipartEntity$FilePart -> com.loopj.android.http.SimpleMultipartEntity$FilePart:
    java.io.File file -> file
    byte[] header -> header
    com.loopj.android.http.SimpleMultipartEntity this$0 -> this$0
    byte[] createHeader(java.lang.String,java.lang.String,java.lang.String) -> createHeader
    long getTotalLength() -> getTotalLength
    void writeTo(java.io.OutputStream) -> writeTo
com.loopj.android.http.SyncHttpClient -> com.loopj.android.http.SyncHttpClient:
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
com.loopj.android.http.TextHttpResponseHandler -> com.loopj.android.http.TextHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.String getResponseString(byte[],java.lang.String) -> getResponseString
com.novell.sasl.client.DigestChallenge -> com.b.a.a.a:
    java.util.ArrayList m_realms -> a
    java.lang.String m_nonce -> b
    int m_qop -> c
    boolean m_staleFlag -> d
    int m_maxBuf -> e
    java.lang.String m_characterSet -> f
    java.lang.String m_algorithm -> g
    int m_cipherOptions -> h
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> a
    void handleNonce(com.novell.sasl.client.ParsedDirective) -> a
    void handleRealm(com.novell.sasl.client.ParsedDirective) -> b
    void handleQop(com.novell.sasl.client.ParsedDirective) -> c
    void handleMaxbuf(com.novell.sasl.client.ParsedDirective) -> d
    void handleCharset(com.novell.sasl.client.ParsedDirective) -> e
    void handleAlgorithm(com.novell.sasl.client.ParsedDirective) -> f
    void handleCipher(com.novell.sasl.client.ParsedDirective) -> g
    void handleStale(com.novell.sasl.client.ParsedDirective) -> h
    java.util.ArrayList getRealms() -> a
    java.lang.String getNonce() -> b
    int getQop() -> c
    java.lang.String getAlgorithm() -> d
com.novell.sasl.client.DigestMD5SaslClient -> com.b.a.a.b:
    java.lang.String m_authorizationId -> a
    java.lang.String m_protocol -> b
    java.lang.String m_serverName -> c
    java.util.Map m_props -> d
    org.apache.harmony.javax.security.auth.callback.CallbackHandler m_cbh -> e
    int m_state -> f
    java.lang.String m_qopValue -> g
    char[] m_HA1 -> h
    java.lang.String m_digestURI -> i
    com.novell.sasl.client.DigestChallenge m_dc -> j
    java.lang.String m_clientNonce -> k
    java.lang.String m_realm -> l
    java.lang.String m_name -> m
    org.apache.harmony.javax.security.sasl.SaslClient getClient(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    char[] convertToHex(byte[]) -> a
    char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    java.lang.String createDigestResponse(byte[]) -> c
    boolean checkServerResponseAuth(byte[]) -> b
    char getHexChar(byte) -> a
    java.lang.String getClientNonce() -> a
    java.lang.String getMechanismName() -> getMechanismName
com.novell.sasl.client.DirectiveList -> com.b.a.a.c:
    int m_curPos -> a
    int m_errorPos -> b
    java.lang.String m_directives -> c
    int m_state -> d
    java.util.ArrayList m_directiveList -> e
    int m_scanStart -> f
    void parseDirectives() -> a
    boolean isValidTokenChar(char) -> a
    boolean isWhiteSpace(char) -> b
    void addDirective(java.lang.String,boolean) -> a
    java.util.Iterator getIterator() -> b
com.novell.sasl.client.ParsedDirective -> com.b.a.a.d:
    int m_valueType -> a
    java.lang.String m_name -> b
    java.lang.String m_value -> c
    java.lang.String getValue() -> a
    java.lang.String getName() -> b
com.novell.sasl.client.ResponseAuth -> com.b.a.a.e:
    java.lang.String m_responseValue -> a
    void checkSemantics(com.novell.sasl.client.DirectiveList) -> a
    java.lang.String getResponseValue() -> a
com.novell.sasl.client.TokenParser -> com.b.a.a.f:
    int m_curPos -> a
    int m_scanStart -> b
    int m_state -> c
    java.lang.String m_tokens -> d
    java.lang.String parseToken() -> a
    boolean isValidTokenChar(char) -> a
    boolean isWhiteSpace(char) -> b
com.roger.quickviewpage.imagecache.DiskCache -> com.roger.quickviewpage.imagecache.DiskCache:
    int DISK_CACHE_SIZE -> DISK_CACHE_SIZE
    java.lang.String DISK_CACHE_DIR -> DISK_CACHE_DIR
    java.io.File mCacheDir -> mCacheDir
    com.roger.quickviewpage.imagecache.DiskCache openCache() -> openCache
    java.io.File getDiskCacheDir(java.lang.String) -> getDiskCacheDir
    void clearCache(java.io.File) -> clearCache
    java.lang.String getFilePath(java.lang.String) -> getFilePath
    java.lang.String createFilePath(java.io.File,java.lang.String) -> createFilePath
    java.lang.String createFilePath(java.lang.String) -> createFilePath
    java.lang.String get(java.lang.String) -> get
    boolean containsKey(java.lang.String) -> containsKey
    void clearCache() -> clearCache
    void clearCache(java.lang.String) -> clearCache
com.roger.quickviewpage.imagecache.ImageCache -> com.roger.quickviewpage.imagecache.ImageCache:
    com.roger.quickviewpage.imagecache.ImageCache INSTANCE -> INSTANCE
    int DEFAULT_MEM_CACHE_SIZE -> DEFAULT_MEM_CACHE_SIZE
    int DEFAULT_REQ_WIDTH -> DEFAULT_REQ_WIDTH
    int DEFAULT_REQ_HEIGHT -> DEFAULT_REQ_HEIGHT
    boolean DEFAULT_MEM_CACHE_ENABLED -> DEFAULT_MEM_CACHE_ENABLED
    boolean DEFAULT_DISK_CACHE_ENABLED -> DEFAULT_DISK_CACHE_ENABLED
    boolean DEFAULT_CLEAR_DISK_CACHE_ON_START -> DEFAULT_CLEAR_DISK_CACHE_ON_START
    com.roger.quickviewpage.imagecache.ImageCache$ImageCacheParams mImageCacheParams -> mImageCacheParams
    com.roger.quickviewpage.imagecache.DiskCache mDiskCache -> mDiskCache
    android.support.v4.util.LruCache mMemoryCache -> mMemoryCache
    java.util.HashMap maps -> maps
    com.roger.quickviewpage.imagecache.ImageCache[] ENUM$VALUES -> ENUM$VALUES
    com.roger.quickviewpage.imagecache.ImageCache createCache() -> createCache
    void setCacheParams(com.roger.quickviewpage.imagecache.ImageCache$ImageCacheParams) -> setCacheParams
    void init(com.roger.quickviewpage.imagecache.ImageCache$ImageCacheParams) -> init
    void addBitmapToCache(java.lang.String,android.graphics.Bitmap) -> addBitmapToCache
    android.graphics.Bitmap getBitmapFromMem(java.lang.String) -> getBitmapFromMem
    android.graphics.Bitmap getBitmapFromDiskCache(java.lang.String) -> getBitmapFromDiskCache
    android.graphics.Bitmap getBitmapFromDiskCache(java.io.File) -> getBitmapFromDiskCache
    void clearCaches() -> clearCaches
    android.graphics.Bitmap decodeBitmap(java.lang.String) -> decodeBitmap
    android.graphics.Bitmap decodeBitmap(java.io.File) -> decodeBitmap
    android.graphics.Bitmap decodeBitmap(java.lang.String,int,int) -> decodeBitmap
    int calculateOriginal(android.graphics.BitmapFactory$Options,int,int) -> calculateOriginal
    com.roger.quickviewpage.imagecache.ImageCache[] values() -> values
    com.roger.quickviewpage.imagecache.ImageCache valueOf(java.lang.String) -> valueOf
com.roger.quickviewpage.imagecache.ImageCache$1 -> com.roger.quickviewpage.imagecache.ImageCache$1:
    com.roger.quickviewpage.imagecache.ImageCache this$0 -> this$0
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.roger.quickviewpage.imagecache.ImageCache$ImageCacheParams -> com.roger.quickviewpage.imagecache.ImageCache$ImageCacheParams:
    boolean memoryCacheEnabled -> memoryCacheEnabled
    boolean diskCacheEnabled -> diskCacheEnabled
    int memCacheSize -> memCacheSize
    boolean clearDiskCacheOnStart -> clearDiskCacheOnStart
    int reqWidth -> reqWidth
    int reqHeight -> reqHeight
    java.lang.Integer loadingResId -> loadingResId
com.roger.quickviewpage.imagecache.ImageWorker -> com.roger.quickviewpage.imagecache.ImageWorker:
    com.roger.quickviewpage.imagecache.ImageWorker INSTANCE -> INSTANCE
    com.roger.quickviewpage.imagecache.ImageCache mImageCache -> mImageCache
    android.content.Context mContext -> mContext
    boolean onScreen -> onScreen
    android.graphics.Bitmap mLoadingBitmap -> mLoadingBitmap
    java.util.concurrent.ExecutorService searchThreadPool -> searchThreadPool
    java.util.HashMap params -> params
    android.os.Handler mHandler -> mHandler
    com.roger.quickviewpage.imagecache.OnHandleCacheListener mIHandleCache -> mIHandleCache
    com.roger.quickviewpage.imagecache.ImageWorker$OnImageLoadedListener mListener -> mListener
    com.roger.quickviewpage.imagecache.ImageWorker[] ENUM$VALUES -> ENUM$VALUES
    com.roger.quickviewpage.imagecache.ImageWorker newInstance(android.content.Context) -> newInstance
    void loadBitmap(java.lang.String,android.widget.ImageView,com.roger.quickviewpage.imagecache.ImageWorker$OnImageLoadedListener) -> loadBitmap
    boolean cancelWork(android.widget.ImageView,java.lang.String) -> cancelWork
    void cancelWork(android.widget.ImageView) -> cancelWork
    com.roger.quickviewpage.imagecache.ImageWorker$SearchTask getSearchTask(android.widget.ImageView) -> getSearchTask
    void setLoadingImage(int) -> setLoadingImage
    void setOnScreen(java.lang.String,boolean) -> setOnScreen
    void restartThreadPool() -> restartThreadPool
    void shutdownThreadPool() -> shutdownThreadPool
    void addParams(java.lang.String,com.roger.quickviewpage.imagecache.ImageCache$ImageCacheParams) -> addParams
    com.roger.quickviewpage.imagecache.ImageCache$ImageCacheParams getParams(java.lang.String) -> getParams
    java.io.File downloadBitmap(java.lang.String) -> downloadBitmap
    com.roger.quickviewpage.imagecache.ImageWorker[] values() -> values
    com.roger.quickviewpage.imagecache.ImageWorker valueOf(java.lang.String) -> valueOf
    com.roger.quickviewpage.imagecache.ImageCache access$2(com.roger.quickviewpage.imagecache.ImageWorker) -> access$2
    boolean access$3(com.roger.quickviewpage.imagecache.ImageWorker) -> access$3
    java.io.File access$4(com.roger.quickviewpage.imagecache.ImageWorker,java.lang.String) -> access$4
    android.os.Handler access$5(com.roger.quickviewpage.imagecache.ImageWorker) -> access$5
    com.roger.quickviewpage.imagecache.ImageWorker$OnImageLoadedListener access$6(com.roger.quickviewpage.imagecache.ImageWorker) -> access$6
com.roger.quickviewpage.imagecache.ImageWorker$1 -> com.roger.quickviewpage.imagecache.ImageWorker$1:
    com.roger.quickviewpage.imagecache.ImageWorker this$0 -> this$0
    void onSetImage(android.widget.ImageView,android.graphics.Bitmap) -> onSetImage
    void onError(android.widget.ImageView) -> onError
    com.roger.quickviewpage.imagecache.ImageWorker access$0(com.roger.quickviewpage.imagecache.ImageWorker$1) -> access$0
com.roger.quickviewpage.imagecache.ImageWorker$1$1 -> com.roger.quickviewpage.imagecache.ImageWorker$1$1:
    com.roger.quickviewpage.imagecache.ImageWorker$1 this$1 -> this$1
    android.widget.ImageView val$imageView -> val$imageView
    android.graphics.Bitmap val$bitmap -> val$bitmap
    void run() -> run
com.roger.quickviewpage.imagecache.ImageWorker$1$2 -> com.roger.quickviewpage.imagecache.ImageWorker$1$2:
    com.roger.quickviewpage.imagecache.ImageWorker$1 this$1 -> this$1
    android.widget.ImageView val$imageView -> val$imageView
    void run() -> run
com.roger.quickviewpage.imagecache.ImageWorker$AsyncDrawable -> com.roger.quickviewpage.imagecache.ImageWorker$AsyncDrawable:
    java.lang.ref.WeakReference task -> task
    com.roger.quickviewpage.imagecache.ImageWorker this$0 -> this$0
    com.roger.quickviewpage.imagecache.ImageWorker$SearchTask getTask() -> getTask
com.roger.quickviewpage.imagecache.ImageWorker$OnImageLoadedListener -> com.roger.quickviewpage.imagecache.ImageWorker$OnImageLoadedListener:
    void onImageLoaded() -> onImageLoaded
    void onImageLoadingStarted() -> onImageLoadingStarted
com.roger.quickviewpage.imagecache.ImageWorker$SearchTask -> com.roger.quickviewpage.imagecache.ImageWorker$SearchTask:
    java.lang.String path -> path
    boolean stop -> stop
    com.roger.quickviewpage.imagecache.OnHandleCacheListener mIHandleCache -> mIHandleCache
    java.lang.ref.WeakReference mImageViewReference -> mImageViewReference
    com.roger.quickviewpage.imagecache.ImageWorker this$0 -> this$0
    void cancelWork() -> cancelWork
    java.lang.String getPath() -> getPath
    void run() -> run
    android.widget.ImageView getAttachedImageView() -> getAttachedImageView
com.roger.quickviewpage.imagecache.Images -> com.roger.quickviewpage.imagecache.Images:
    java.lang.String[] imageUrls -> imageUrls
com.roger.quickviewpage.imagecache.OnDownloadListener -> com.roger.quickviewpage.imagecache.OnDownloadListener:
    void onStart() -> onStart
    void onProgress(int) -> onProgress
    void onFinish(java.io.File) -> onFinish
    void onError() -> onError
com.roger.quickviewpage.imagecache.OnHandleCacheListener -> com.roger.quickviewpage.imagecache.OnHandleCacheListener:
    void onSetImage(android.widget.ImageView,android.graphics.Bitmap) -> onSetImage
    void onError(android.widget.ImageView) -> onError
com.roger.quickviewpage.imagecache.Utils -> com.roger.quickviewpage.imagecache.Utils:
    int IO_BUFFER_SIZE -> IO_BUFFER_SIZE
    void disableConnectionReuseIfNecessary() -> disableConnectionReuseIfNecessary
    int getBitmapSize(android.graphics.Bitmap) -> getBitmapSize
    boolean isExternalStorageRemovable() -> isExternalStorageRemovable
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    long getUsableSpace(java.io.File) -> getUsableSpace
    int getMemoryClass(android.content.Context) -> getMemoryClass
    boolean hasHttpConnectionBug() -> hasHttpConnectionBug
    boolean hasExternalCacheDir() -> hasExternalCacheDir
    boolean hasActionBar() -> hasActionBar
com.roger.quickviewpage.photoview.Compat -> com.roger.quickviewpage.photoview.Compat:
    int SIXTY_FPS_INTERVAL -> SIXTY_FPS_INTERVAL
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
com.roger.quickviewpage.photoview.IPhotoView -> com.roger.quickviewpage.photoview.IPhotoView:
    boolean canZoom() -> canZoom
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    float getMinScale() -> getMinScale
    float getMidScale() -> getMidScale
    float getMaxScale() -> getMaxScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMidScale(float) -> setMidScale
    void setMaxScale(float) -> setMaxScale
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnMatrixChangeListener(com.roger.quickviewpage.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnPhotoTapListener(com.roger.quickviewpage.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(com.roger.quickviewpage.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void zoomTo(float,float,float) -> zoomTo
com.roger.quickviewpage.photoview.PhotoView -> com.roger.quickviewpage.photoview.PhotoView:
    com.roger.quickviewpage.photoview.PhotoViewAttacher mAttacher -> mAttacher
    android.widget.ImageView$ScaleType mPendingScaleType -> mPendingScaleType
    boolean canZoom() -> canZoom
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    float getMinScale() -> getMinScale
    float getMidScale() -> getMidScale
    float getMaxScale() -> getMaxScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMidScale(float) -> setMidScale
    void setMaxScale(float) -> setMaxScale
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    void setImageURI(android.net.Uri) -> setImageURI
    void setOnMatrixChangeListener(com.roger.quickviewpage.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnPhotoTapListener(com.roger.quickviewpage.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(com.roger.quickviewpage.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void zoomTo(float,float,float) -> zoomTo
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.roger.quickviewpage.photoview.PhotoViewAttacher -> com.roger.quickviewpage.photoview.PhotoViewAttacher:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean DEBUG -> DEBUG
    int EDGE_NONE -> EDGE_NONE
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_BOTH -> EDGE_BOTH
    float DEFAULT_MAX_SCALE -> DEFAULT_MAX_SCALE
    float DEFAULT_MID_SCALE -> DEFAULT_MID_SCALE
    float DEFAULT_MIN_SCALE -> DEFAULT_MIN_SCALE
    float mMinScale -> mMinScale
    float mMidScale -> mMidScale
    float mMaxScale -> mMaxScale
    boolean mAllowParentInterceptOnEdge -> mAllowParentInterceptOnEdge
    java.lang.ref.WeakReference mImageView -> mImageView
    android.view.ViewTreeObserver mViewTreeObserver -> mViewTreeObserver
    android.view.GestureDetector mGestureDetector -> mGestureDetector
    com.roger.quickviewpage.photoview.VersionedGestureDetector mScaleDragDetector -> mScaleDragDetector
    android.graphics.Matrix mBaseMatrix -> mBaseMatrix
    android.graphics.Matrix mDrawMatrix -> mDrawMatrix
    android.graphics.Matrix mSuppMatrix -> mSuppMatrix
    android.graphics.RectF mDisplayRect -> mDisplayRect
    float[] mMatrixValues -> mMatrixValues
    com.roger.quickviewpage.photoview.PhotoViewAttacher$OnMatrixChangedListener mMatrixChangeListener -> mMatrixChangeListener
    com.roger.quickviewpage.photoview.PhotoViewAttacher$OnPhotoTapListener mPhotoTapListener -> mPhotoTapListener
    com.roger.quickviewpage.photoview.PhotoViewAttacher$OnViewTapListener mViewTapListener -> mViewTapListener
    android.view.View$OnLongClickListener mLongClickListener -> mLongClickListener
    int mIvTop -> mIvTop
    int mIvRight -> mIvRight
    int mIvBottom -> mIvBottom
    int mIvLeft -> mIvLeft
    com.roger.quickviewpage.photoview.PhotoViewAttacher$FlingRunnable mCurrentFlingRunnable -> mCurrentFlingRunnable
    int mScrollEdge -> mScrollEdge
    boolean mZoomEnabled -> mZoomEnabled
    android.widget.ImageView$ScaleType mScaleType -> mScaleType
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType -> $SWITCH_TABLE$android$widget$ImageView$ScaleType
    void checkZoomLevels(float,float,float) -> checkZoomLevels
    boolean hasDrawable(android.widget.ImageView) -> hasDrawable
    boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> isSupportedScaleType
    void setImageViewScaleTypeMatrix(android.widget.ImageView) -> setImageViewScaleTypeMatrix
    boolean canZoom() -> canZoom
    void cleanup() -> cleanup
    android.graphics.RectF getDisplayRect() -> getDisplayRect
    android.widget.ImageView getImageView() -> getImageView
    float getMinScale() -> getMinScale
    float getMidScale() -> getMidScale
    float getMaxScale() -> getMaxScale
    float getScale() -> getScale
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    void onDrag(float,float) -> onDrag
    void onFling(float,float,float,float) -> onFling
    void onGlobalLayout() -> onGlobalLayout
    void onScale(float,float,float) -> onScale
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    void setMinScale(float) -> setMinScale
    void setMidScale(float) -> setMidScale
    void setMaxScale(float) -> setMaxScale
    void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    void setOnMatrixChangeListener(com.roger.quickviewpage.photoview.PhotoViewAttacher$OnMatrixChangedListener) -> setOnMatrixChangeListener
    void setOnPhotoTapListener(com.roger.quickviewpage.photoview.PhotoViewAttacher$OnPhotoTapListener) -> setOnPhotoTapListener
    void setOnViewTapListener(com.roger.quickviewpage.photoview.PhotoViewAttacher$OnViewTapListener) -> setOnViewTapListener
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void setZoomable(boolean) -> setZoomable
    void update() -> update
    void zoomTo(float,float,float) -> zoomTo
    android.graphics.Matrix getDisplayMatrix() -> getDisplayMatrix
    void cancelFling() -> cancelFling
    void checkAndDisplayMatrix() -> checkAndDisplayMatrix
    void checkImageViewScaleType() -> checkImageViewScaleType
    void checkMatrixBounds() -> checkMatrixBounds
    android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> getDisplayRect
    float getValue(android.graphics.Matrix,int) -> getValue
    void resetMatrix() -> resetMatrix
    void setImageViewMatrix(android.graphics.Matrix) -> setImageViewMatrix
    void updateBaseMatrix(android.graphics.drawable.Drawable) -> updateBaseMatrix
    android.graphics.Matrix access$0(com.roger.quickviewpage.photoview.PhotoViewAttacher) -> access$0
    void access$1(com.roger.quickviewpage.photoview.PhotoViewAttacher) -> access$1
    void access$2(com.roger.quickviewpage.photoview.PhotoViewAttacher,android.graphics.Matrix) -> access$2
    int[] $SWITCH_TABLE$android$widget$ImageView$ScaleType() -> $SWITCH_TABLE$android$widget$ImageView$ScaleType
    android.view.View$OnLongClickListener access$4(com.roger.quickviewpage.photoview.PhotoViewAttacher) -> access$4
    java.lang.ref.WeakReference access$5(com.roger.quickviewpage.photoview.PhotoViewAttacher) -> access$5
com.roger.quickviewpage.photoview.PhotoViewAttacher$1 -> com.roger.quickviewpage.photoview.PhotoViewAttacher$1:
    com.roger.quickviewpage.photoview.PhotoViewAttacher this$0 -> this$0
    void onLongPress(android.view.MotionEvent) -> onLongPress
com.roger.quickviewpage.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> com.roger.quickviewpage.photoview.PhotoViewAttacher$AnimatedZoomRunnable:
    float ANIMATION_SCALE_PER_ITERATION_IN -> ANIMATION_SCALE_PER_ITERATION_IN
    float ANIMATION_SCALE_PER_ITERATION_OUT -> ANIMATION_SCALE_PER_ITERATION_OUT
    float mFocalX -> mFocalX
    float mFocalY -> mFocalY
    float mTargetZoom -> mTargetZoom
    float mDeltaScale -> mDeltaScale
    com.roger.quickviewpage.photoview.PhotoViewAttacher this$0 -> this$0
    void run() -> run
com.roger.quickviewpage.photoview.PhotoViewAttacher$FlingRunnable -> com.roger.quickviewpage.photoview.PhotoViewAttacher$FlingRunnable:
    com.roger.quickviewpage.photoview.ScrollerProxy mScroller -> mScroller
    int mCurrentX -> mCurrentX
    int mCurrentY -> mCurrentY
    com.roger.quickviewpage.photoview.PhotoViewAttacher this$0 -> this$0
    void cancelFling() -> cancelFling
    void fling(int,int,int,int) -> fling
    void run() -> run
com.roger.quickviewpage.photoview.PhotoViewAttacher$OnMatrixChangedListener -> com.roger.quickviewpage.photoview.PhotoViewAttacher$OnMatrixChangedListener:
    void onMatrixChanged(android.graphics.RectF) -> onMatrixChanged
com.roger.quickviewpage.photoview.PhotoViewAttacher$OnPhotoTapListener -> com.roger.quickviewpage.photoview.PhotoViewAttacher$OnPhotoTapListener:
    void onPhotoTap(android.view.View,float,float) -> onPhotoTap
com.roger.quickviewpage.photoview.PhotoViewAttacher$OnViewTapListener -> com.roger.quickviewpage.photoview.PhotoViewAttacher$OnViewTapListener:
    void onViewTap(android.view.View,float,float) -> onViewTap
com.roger.quickviewpage.photoview.SDK16 -> com.roger.quickviewpage.photoview.SDK16:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
com.roger.quickviewpage.photoview.ScrollerProxy -> com.roger.quickviewpage.photoview.ScrollerProxy:
    com.roger.quickviewpage.photoview.ScrollerProxy getScroller(android.content.Context) -> getScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
com.roger.quickviewpage.photoview.ScrollerProxy$GingerScroller -> com.roger.quickviewpage.photoview.ScrollerProxy$GingerScroller:
    android.widget.OverScroller mScroller -> mScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
com.roger.quickviewpage.photoview.ScrollerProxy$PreGingerScroller -> com.roger.quickviewpage.photoview.ScrollerProxy$PreGingerScroller:
    android.widget.Scroller mScroller -> mScroller
    boolean computeScrollOffset() -> computeScrollOffset
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void forceFinished(boolean) -> forceFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
com.roger.quickviewpage.photoview.VersionedGestureDetector -> com.roger.quickviewpage.photoview.VersionedGestureDetector:
    java.lang.String LOG_TAG -> LOG_TAG
    com.roger.quickviewpage.photoview.VersionedGestureDetector$OnGestureListener mListener -> mListener
    com.roger.quickviewpage.photoview.VersionedGestureDetector newInstance(android.content.Context,com.roger.quickviewpage.photoview.VersionedGestureDetector$OnGestureListener) -> newInstance
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isScaling() -> isScaling
com.roger.quickviewpage.photoview.VersionedGestureDetector$CupcakeDetector -> com.roger.quickviewpage.photoview.VersionedGestureDetector$CupcakeDetector:
    float mLastTouchX -> mLastTouchX
    float mLastTouchY -> mLastTouchY
    float mTouchSlop -> mTouchSlop
    float mMinimumVelocity -> mMinimumVelocity
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mIsDragging -> mIsDragging
    float getActiveX(android.view.MotionEvent) -> getActiveX
    float getActiveY(android.view.MotionEvent) -> getActiveY
    boolean isScaling() -> isScaling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.roger.quickviewpage.photoview.VersionedGestureDetector$EclairDetector -> com.roger.quickviewpage.photoview.VersionedGestureDetector$EclairDetector:
    int INVALID_POINTER_ID -> INVALID_POINTER_ID
    int mActivePointerId -> mActivePointerId
    int mActivePointerIndex -> mActivePointerIndex
    float getActiveX(android.view.MotionEvent) -> getActiveX
    float getActiveY(android.view.MotionEvent) -> getActiveY
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.roger.quickviewpage.photoview.VersionedGestureDetector$FroyoDetector -> com.roger.quickviewpage.photoview.VersionedGestureDetector$FroyoDetector:
    android.view.ScaleGestureDetector mDetector -> mDetector
    android.view.ScaleGestureDetector$OnScaleGestureListener mScaleListener -> mScaleListener
    boolean isScaling() -> isScaling
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.roger.quickviewpage.photoview.VersionedGestureDetector$FroyoDetector$1 -> com.roger.quickviewpage.photoview.VersionedGestureDetector$FroyoDetector$1:
    com.roger.quickviewpage.photoview.VersionedGestureDetector$FroyoDetector this$1 -> this$1
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
com.roger.quickviewpage.photoview.VersionedGestureDetector$OnGestureListener -> com.roger.quickviewpage.photoview.VersionedGestureDetector$OnGestureListener:
    void onDrag(float,float) -> onDrag
    void onFling(float,float,float,float) -> onFling
    void onScale(float,float,float) -> onScale
com.roger.quickviewpage.viewpage.HackyViewPager -> com.roger.quickviewpage.viewpage.HackyViewPager:
    java.lang.String TAG -> TAG
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.sina.sso.RemoteSSO -> com.sina.sso.RemoteSSO:
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
    java.lang.String getLoginUserName() -> getLoginUserName
com.sina.sso.RemoteSSO$Stub -> com.sina.sso.RemoteSSO$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_getPackageName -> TRANSACTION_getPackageName
    int TRANSACTION_getActivityName -> TRANSACTION_getActivityName
    int TRANSACTION_getLoginUserName -> TRANSACTION_getLoginUserName
    com.sina.sso.RemoteSSO asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.sina.sso.RemoteSSO$Stub$Proxy -> com.sina.sso.RemoteSSO$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getActivityName() -> getActivityName
    java.lang.String getLoginUserName() -> getLoginUserName
com.sina.weibo.sdk.ApiUtils -> com.sina.weibo.sdk.ApiUtils:
    java.lang.String TAG -> TAG
    int BUILD_INT -> BUILD_INT
    int BUILD_INT_VER_2_2 -> BUILD_INT_VER_2_2
    int BUILD_INT_VER_2_3 -> BUILD_INT_VER_2_3
    int BUILD_INT_VER_2_5 -> BUILD_INT_VER_2_5
    int BUILD_INT_440 -> BUILD_INT_440
    boolean validateWeiboSign(android.content.Context,java.lang.String) -> validateWeiboSign
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> containSign
com.sina.weibo.sdk.BuildConfig -> com.sina.weibo.sdk.BuildConfig:
    boolean DEBUG -> DEBUG
com.sina.weibo.sdk.WbAppInstallActivator -> com.sina.weibo.sdk.WbAppInstallActivator:
    java.lang.String TAG -> TAG
    java.lang.String WB_APK_FILE_DIR -> WB_APK_FILE_DIR
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.WbAppInstallActivator mInstance -> mInstance
    java.util.concurrent.CountDownLatch mCountDownlatch -> mCountDownlatch
    com.sina.weibo.sdk.WbAppInstallActivator$NotificationInfo mNotificationInfo -> mNotificationInfo
    java.lang.String mAppkey -> mAppkey
    boolean isFree -> isFree
    com.sina.weibo.sdk.WbAppInstallActivator getInstance(android.content.Context,java.lang.String) -> getInstance
    void activateWeiboInstall() -> activateWeiboInstall
    void loadNotificationInfo() -> loadNotificationInfo
    android.util.Pair walkDir(android.content.Context,java.lang.String) -> walkDir
    boolean isWeiboApk(android.content.pm.PackageInfo) -> isWeiboApk
    boolean checkPackageName(android.content.pm.PackageInfo) -> checkPackageName
    boolean checkApkSign(android.content.pm.PackageInfo) -> checkApkSign
    void requestNotificationInfo(android.content.Context,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestNotificationInfo
    void showNotification(android.content.Context,java.lang.String,java.lang.String) -> showNotification
    void startDownloadService(android.content.Context,java.lang.String,java.lang.String) -> startDownloadService
    java.lang.String access$0() -> access$0
    android.content.Context access$1(com.sina.weibo.sdk.WbAppInstallActivator) -> access$1
    android.util.Pair access$2(android.content.Context,java.lang.String) -> access$2
    void access$3(com.sina.weibo.sdk.WbAppInstallActivator,boolean) -> access$3
    java.util.concurrent.CountDownLatch access$4(com.sina.weibo.sdk.WbAppInstallActivator) -> access$4
    com.sina.weibo.sdk.WbAppInstallActivator$NotificationInfo access$5(com.sina.weibo.sdk.WbAppInstallActivator) -> access$5
    void access$6(android.content.Context,java.lang.String,java.lang.String) -> access$6
    void access$7(android.content.Context,java.lang.String,java.lang.String) -> access$7
    void access$8(com.sina.weibo.sdk.WbAppInstallActivator,com.sina.weibo.sdk.WbAppInstallActivator$NotificationInfo) -> access$8
com.sina.weibo.sdk.WbAppInstallActivator$1 -> com.sina.weibo.sdk.WbAppInstallActivator$1:
    com.sina.weibo.sdk.WbAppInstallActivator this$0 -> this$0
    java.lang.String val$dir -> val$dir
    void run() -> run
com.sina.weibo.sdk.WbAppInstallActivator$2 -> com.sina.weibo.sdk.WbAppInstallActivator$2:
    com.sina.weibo.sdk.WbAppInstallActivator this$0 -> this$0
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onComplete(java.lang.String) -> onComplete
com.sina.weibo.sdk.WbAppInstallActivator$NotificationInfo -> com.sina.weibo.sdk.WbAppInstallActivator$NotificationInfo:
    java.lang.String notificationContent -> notificationContent
    java.lang.String downloadUrl -> downloadUrl
    int versionCode -> versionCode
    java.lang.String getNotificationContent() -> getNotificationContent
    void setNotificationContent(java.lang.String) -> setNotificationContent
    java.lang.String getDownloadUrl() -> getDownloadUrl
    void setDownloadUrl(java.lang.String) -> setDownloadUrl
    int getVersionCode() -> getVersionCode
    void setVersionCode(int) -> setVersionCode
    boolean isNotificationInfoValid() -> isNotificationInfoValid
    java.lang.String access$0(com.sina.weibo.sdk.WbAppInstallActivator$NotificationInfo) -> access$0
    java.lang.String access$1(com.sina.weibo.sdk.WbAppInstallActivator$NotificationInfo) -> access$1
    int access$2(com.sina.weibo.sdk.WbAppInstallActivator$NotificationInfo) -> access$2
com.sina.weibo.sdk.WeiboAppManager -> com.sina.weibo.sdk.WeiboAppManager:
    java.lang.String TAG -> TAG
    android.net.Uri WEIBO_NAME_URI -> WEIBO_NAME_URI
    java.lang.String WEIBO_IDENTITY_ACTION -> WEIBO_IDENTITY_ACTION
    java.lang.String SDK_INT_FILE_NAME -> SDK_INT_FILE_NAME
    com.sina.weibo.sdk.WeiboAppManager sInstance -> sInstance
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.WeiboAppManager getInstance(android.content.Context) -> getInstance
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo getWeiboInfo() -> getWeiboInfo
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo queryWeiboInfoInternal(android.content.Context) -> queryWeiboInfoInternal
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo queryWeiboInfoByProvider(android.content.Context) -> queryWeiboInfoByProvider
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo queryWeiboInfoByAsset(android.content.Context) -> queryWeiboInfoByAsset
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo parseWeiboInfoByAsset(java.lang.String) -> parseWeiboInfoByAsset
com.sina.weibo.sdk.WeiboAppManager$WeiboInfo -> com.sina.weibo.sdk.WeiboAppManager$WeiboInfo:
    java.lang.String mPackageName -> mPackageName
    int mSupportApi -> mSupportApi
    void setPackageName(java.lang.String) -> setPackageName
    java.lang.String getPackageName() -> getPackageName
    void setSupportApi(int) -> setSupportApi
    int getSupportApi() -> getSupportApi
    boolean isLegal() -> isLegal
    java.lang.String toString() -> toString
    void access$0(com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,java.lang.String) -> access$0
    void access$1(com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,int) -> access$1
com.sina.weibo.sdk.api.BaseMediaObject -> com.sina.weibo.sdk.api.BaseMediaObject:
    int MEDIA_TYPE_TEXT -> MEDIA_TYPE_TEXT
    int MEDIA_TYPE_IMAGE -> MEDIA_TYPE_IMAGE
    int MEDIA_TYPE_MUSIC -> MEDIA_TYPE_MUSIC
    int MEDIA_TYPE_VIDEO -> MEDIA_TYPE_VIDEO
    int MEDIA_TYPE_WEBPAGE -> MEDIA_TYPE_WEBPAGE
    int MEDIA_TYPE_VOICE -> MEDIA_TYPE_VOICE
    int MEDIA_TYPE_CMD -> MEDIA_TYPE_CMD
    java.lang.String actionUrl -> actionUrl
    java.lang.String schema -> schema
    java.lang.String identify -> identify
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getObjType() -> getObjType
    boolean checkArgs() -> checkArgs
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.CmdObject -> com.sina.weibo.sdk.api.CmdObject:
    java.lang.String cmd -> cmd
    java.lang.String CMD_HOME -> CMD_HOME
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.CmdObject$1 -> com.sina.weibo.sdk.api.CmdObject$1:
    com.sina.weibo.sdk.api.CmdObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.CmdObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.ImageObject -> com.sina.weibo.sdk.api.ImageObject:
    int DATA_SIZE -> DATA_SIZE
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setImageObject(android.graphics.Bitmap) -> setImageObject
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.ImageObject$1 -> com.sina.weibo.sdk.api.ImageObject$1:
    com.sina.weibo.sdk.api.ImageObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.ImageObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.MusicObject -> com.sina.weibo.sdk.api.MusicObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.MusicObject$1 -> com.sina.weibo.sdk.api.MusicObject$1:
    com.sina.weibo.sdk.api.MusicObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.MusicObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.TextObject -> com.sina.weibo.sdk.api.TextObject:
    java.lang.String text -> text
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.TextObject$1 -> com.sina.weibo.sdk.api.TextObject$1:
    com.sina.weibo.sdk.api.TextObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.TextObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VideoObject -> com.sina.weibo.sdk.api.VideoObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.VideoObject$1 -> com.sina.weibo.sdk.api.VideoObject$1:
    com.sina.weibo.sdk.api.VideoObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.VideoObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.VoiceObject -> com.sina.weibo.sdk.api.VoiceObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    java.lang.String h5Url -> h5Url
    java.lang.String dataUrl -> dataUrl
    java.lang.String dataHdUrl -> dataHdUrl
    int duration -> duration
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.VoiceObject$1 -> com.sina.weibo.sdk.api.VoiceObject$1:
    com.sina.weibo.sdk.api.VoiceObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.VoiceObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WebpageObject -> com.sina.weibo.sdk.api.WebpageObject:
    java.lang.String EXTRA_KEY_DEFAULTTEXT -> EXTRA_KEY_DEFAULTTEXT
    java.lang.String defaultText -> defaultText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean checkArgs() -> checkArgs
    int getObjType() -> getObjType
    com.sina.weibo.sdk.api.BaseMediaObject toExtraMediaObject(java.lang.String) -> toExtraMediaObject
    java.lang.String toExtraMediaString() -> toExtraMediaString
com.sina.weibo.sdk.api.WebpageObject$1 -> com.sina.weibo.sdk.api.WebpageObject$1:
    com.sina.weibo.sdk.api.WebpageObject createFromParcel(android.os.Parcel) -> createFromParcel
    com.sina.weibo.sdk.api.WebpageObject[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sina.weibo.sdk.api.WeiboMessage -> com.sina.weibo.sdk.api.WeiboMessage:
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> mediaObject
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    com.sina.weibo.sdk.api.WeiboMessage toObject(android.os.Bundle) -> toObject
    boolean checkArgs() -> checkArgs
com.sina.weibo.sdk.api.WeiboMultiMessage -> com.sina.weibo.sdk.api.WeiboMultiMessage:
    java.lang.String TAG -> TAG
    com.sina.weibo.sdk.api.TextObject textObject -> textObject
    com.sina.weibo.sdk.api.ImageObject imageObject -> imageObject
    com.sina.weibo.sdk.api.BaseMediaObject mediaObject -> mediaObject
    android.os.Bundle toBundle(android.os.Bundle) -> toBundle
    com.sina.weibo.sdk.api.WeiboMultiMessage toObject(android.os.Bundle) -> toObject
    boolean checkArgs() -> checkArgs
com.sina.weibo.sdk.api.share.Base -> com.sina.weibo.sdk.api.share.Base:
    java.lang.String transaction -> transaction
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
com.sina.weibo.sdk.api.share.BaseRequest -> com.sina.weibo.sdk.api.share.BaseRequest:
    java.lang.String packageName -> packageName
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.BaseResponse -> com.sina.weibo.sdk.api.share.BaseResponse:
    int errCode -> errCode
    java.lang.String errMsg -> errMsg
    java.lang.String reqPackageName -> reqPackageName
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.IVersionCheckHandler -> com.sina.weibo.sdk.api.share.IVersionCheckHandler:
    boolean checkRequest(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.WeiboMessage) -> checkRequest
    boolean checkRequest(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.WeiboMultiMessage) -> checkRequest
    boolean checkResponse(android.content.Context,java.lang.String,com.sina.weibo.sdk.api.WeiboMessage) -> checkResponse
    boolean checkResponse(android.content.Context,java.lang.String,com.sina.weibo.sdk.api.WeiboMultiMessage) -> checkResponse
com.sina.weibo.sdk.api.share.IWeiboDownloadListener -> com.sina.weibo.sdk.api.share.IWeiboDownloadListener:
    void onCancel() -> onCancel
com.sina.weibo.sdk.api.share.IWeiboHandler -> com.sina.weibo.sdk.api.share.IWeiboHandler:
com.sina.weibo.sdk.api.share.IWeiboHandler$Request -> com.sina.weibo.sdk.api.share.IWeiboHandler$Request:
    void onRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> onRequest
com.sina.weibo.sdk.api.share.IWeiboHandler$Response -> com.sina.weibo.sdk.api.share.IWeiboHandler$Response:
    void onResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> onResponse
com.sina.weibo.sdk.api.share.IWeiboShareAPI -> com.sina.weibo.sdk.api.share.IWeiboShareAPI:
    boolean isWeiboAppInstalled() -> isWeiboAppInstalled
    boolean isWeiboAppSupportAPI() -> isWeiboAppSupportAPI
    int getWeiboAppSupportAPI() -> getWeiboAppSupportAPI
    boolean registerApp() -> registerApp
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> handleWeiboResponse
    boolean handleWeiboRequest(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Request) -> handleWeiboRequest
    boolean launchWeibo(android.app.Activity) -> launchWeibo
    boolean sendRequest(android.app.Activity,com.sina.weibo.sdk.api.share.BaseRequest) -> sendRequest
    boolean sendRequest(android.app.Activity,com.sina.weibo.sdk.api.share.BaseRequest,com.sina.weibo.sdk.auth.AuthInfo,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> sendRequest
    boolean sendResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> sendResponse
    boolean isSupportWeiboPay() -> isSupportWeiboPay
    boolean launchWeiboPay(android.app.Activity,java.lang.String) -> launchWeiboPay
com.sina.weibo.sdk.api.share.IWeiboShareListener -> com.sina.weibo.sdk.api.share.IWeiboShareListener:
    void onAuthorizeComplete(com.sina.weibo.sdk.auth.Oauth2AccessToken) -> onAuthorizeComplete
    void onAuthorizeException(com.sina.weibo.sdk.exception.WeiboException) -> onAuthorizeException
    void onAuthorizeCancel() -> onAuthorizeCancel
    void onTokenError(java.lang.String) -> onTokenError
com.sina.weibo.sdk.api.share.ProvideMessageForWeiboRequest -> com.sina.weibo.sdk.api.share.ProvideMessageForWeiboRequest:
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.ProvideMessageForWeiboResponse -> com.sina.weibo.sdk.api.share.ProvideMessageForWeiboResponse:
    com.sina.weibo.sdk.api.WeiboMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.ProvideMultiMessageForWeiboResponse -> com.sina.weibo.sdk.api.share.ProvideMultiMessageForWeiboResponse:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> multiMessage
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest -> com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest:
    com.sina.weibo.sdk.api.WeiboMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse -> com.sina.weibo.sdk.api.share.SendMessageToWeiboResponse:
    int getType() -> getType
    boolean check(android.content.Context,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest -> com.sina.weibo.sdk.api.share.SendMultiMessageToWeiboRequest:
    com.sina.weibo.sdk.api.WeiboMultiMessage multiMessage -> multiMessage
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean check(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.share.VersionCheckHandler) -> check
com.sina.weibo.sdk.api.share.VersionCheckHandler -> com.sina.weibo.sdk.api.share.VersionCheckHandler:
    java.lang.String TAG -> TAG
    boolean checkRequest(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.WeiboMessage) -> checkRequest
    boolean checkRequest(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,com.sina.weibo.sdk.api.WeiboMultiMessage) -> checkRequest
    boolean checkResponse(android.content.Context,java.lang.String,com.sina.weibo.sdk.api.WeiboMessage) -> checkResponse
    boolean checkResponse(android.content.Context,java.lang.String,com.sina.weibo.sdk.api.WeiboMultiMessage) -> checkResponse
com.sina.weibo.sdk.api.share.WeiboDownloader -> com.sina.weibo.sdk.api.share.WeiboDownloader:
    java.lang.String TITLE_CHINESS -> TITLE_CHINESS
    java.lang.String PROMPT_CHINESS -> PROMPT_CHINESS
    java.lang.String OK_CHINESS -> OK_CHINESS
    java.lang.String CANCEL_CHINESS -> CANCEL_CHINESS
    java.lang.String TITLE_ENGLISH -> TITLE_ENGLISH
    java.lang.String PROMPT_ENGLISH -> PROMPT_ENGLISH
    java.lang.String OK_ENGLISH -> OK_ENGLISH
    java.lang.String CANCEL_ENGLISH -> CANCEL_ENGLISH
    android.app.Dialog createDownloadConfirmDialog(android.content.Context,com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> createDownloadConfirmDialog
    void downloadWeibo(android.content.Context) -> downloadWeibo
    void access$0(android.content.Context) -> access$0
com.sina.weibo.sdk.api.share.WeiboDownloader$1 -> com.sina.weibo.sdk.api.share.WeiboDownloader$1:
    android.content.Context val$context -> val$context
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboDownloader$2 -> com.sina.weibo.sdk.api.share.WeiboDownloader$2:
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener val$listener -> val$listener
    void onClick(android.content.DialogInterface,int) -> onClick
com.sina.weibo.sdk.api.share.WeiboShareAPIImpl -> com.sina.weibo.sdk.api.share.WeiboShareAPIImpl:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    java.lang.String mAppKey -> mAppKey
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo mWeiboInfo -> mWeiboInfo
    boolean mNeedDownloadWeibo -> mNeedDownloadWeibo
    com.sina.weibo.sdk.api.share.IWeiboDownloadListener mDownloadListener -> mDownloadListener
    android.app.Dialog mDownloadConfirmDialog -> mDownloadConfirmDialog
    int getWeiboAppSupportAPI() -> getWeiboAppSupportAPI
    boolean isWeiboAppInstalled() -> isWeiboAppInstalled
    boolean isWeiboAppSupportAPI() -> isWeiboAppSupportAPI
    boolean isSupportWeiboPay() -> isSupportWeiboPay
    boolean registerApp() -> registerApp
    boolean handleWeiboResponse(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Response) -> handleWeiboResponse
    boolean handleWeiboRequest(android.content.Intent,com.sina.weibo.sdk.api.share.IWeiboHandler$Request) -> handleWeiboRequest
    boolean launchWeibo(android.app.Activity) -> launchWeibo
    boolean sendRequest(android.app.Activity,com.sina.weibo.sdk.api.share.BaseRequest) -> sendRequest
    boolean sendRequest(android.app.Activity,com.sina.weibo.sdk.api.share.BaseRequest,com.sina.weibo.sdk.auth.AuthInfo,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> sendRequest
    com.sina.weibo.sdk.api.WeiboMessage adapterMultiMessage2SingleMessage(com.sina.weibo.sdk.api.WeiboMultiMessage) -> adapterMultiMessage2SingleMessage
    boolean startShareWeiboActivity(android.app.Activity,java.lang.String,com.sina.weibo.sdk.api.share.BaseRequest,com.sina.weibo.sdk.auth.WeiboAuthListener) -> startShareWeiboActivity
    boolean sendResponse(com.sina.weibo.sdk.api.share.BaseResponse) -> sendResponse
    void registerWeiboDownloadListener(com.sina.weibo.sdk.api.share.IWeiboDownloadListener) -> registerWeiboDownloadListener
    boolean checkEnvironment(boolean) -> checkEnvironment
    boolean launchWeiboPay(android.app.Activity,java.lang.String) -> launchWeiboPay
    boolean launchWeiboActivity(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> launchWeiboActivity
    void sendBroadcast(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.Bundle) -> sendBroadcast
com.sina.weibo.sdk.api.share.WeiboShareSDK -> com.sina.weibo.sdk.api.share.WeiboShareSDK:
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String,boolean) -> createWeiboAPI
    com.sina.weibo.sdk.api.share.IWeiboShareAPI createWeiboAPI(android.content.Context,java.lang.String) -> createWeiboAPI
com.sina.weibo.sdk.api.share.ui.EditBlogView -> com.sina.weibo.sdk.api.share.ui.EditBlogView:
    android.content.Context ctx -> ctx
    java.util.List listeners -> listeners
    int count -> count
    com.sina.weibo.sdk.api.share.ui.EditBlogView$OnEnterListener mOnEnterListener -> mOnEnterListener
    boolean canSelectionChanged -> canSelectionChanged
    void init() -> init
    void setOnSelectionListener(com.sina.weibo.sdk.api.share.ui.EditBlogView$OnSelectionListener) -> setOnSelectionListener
    void onSelectionChanged(int,int) -> onSelectionChanged
    void enableSelectionChanged(boolean) -> enableSelectionChanged
    void setOnEnterListener(com.sina.weibo.sdk.api.share.ui.EditBlogView$OnEnterListener) -> setOnEnterListener
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    int correctPosition(int) -> correctPosition
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
com.sina.weibo.sdk.api.share.ui.EditBlogView$1 -> com.sina.weibo.sdk.api.share.ui.EditBlogView$1:
    com.sina.weibo.sdk.api.share.ui.EditBlogView this$0 -> this$0
    boolean commitText(java.lang.CharSequence,int) -> commitText
    boolean setComposingText(java.lang.CharSequence,int) -> setComposingText
com.sina.weibo.sdk.api.share.ui.EditBlogView$OnEnterListener -> com.sina.weibo.sdk.api.share.ui.EditBlogView$OnEnterListener:
    void onEnterKey() -> onEnterKey
com.sina.weibo.sdk.api.share.ui.EditBlogView$OnSelectionListener -> com.sina.weibo.sdk.api.share.ui.EditBlogView$OnSelectionListener:
    void onSelectionChanged(int,int) -> onSelectionChanged
com.sina.weibo.sdk.auth.AuthInfo -> com.sina.weibo.sdk.auth.AuthInfo:
    java.lang.String mAppKey -> mAppKey
    java.lang.String mRedirectUrl -> mRedirectUrl
    java.lang.String mScope -> mScope
    java.lang.String mPackageName -> mPackageName
    java.lang.String mKeyHash -> mKeyHash
    java.lang.String getAppKey() -> getAppKey
    java.lang.String getRedirectUrl() -> getRedirectUrl
    java.lang.String getScope() -> getScope
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getKeyHash() -> getKeyHash
    android.os.Bundle getAuthBundle() -> getAuthBundle
    com.sina.weibo.sdk.auth.AuthInfo parseBundleData(android.content.Context,android.os.Bundle) -> parseBundleData
com.sina.weibo.sdk.auth.Oauth2AccessToken -> com.sina.weibo.sdk.auth.Oauth2AccessToken:
    java.lang.String KEY_UID -> KEY_UID
    java.lang.String KEY_ACCESS_TOKEN -> KEY_ACCESS_TOKEN
    java.lang.String KEY_EXPIRES_IN -> KEY_EXPIRES_IN
    java.lang.String KEY_REFRESH_TOKEN -> KEY_REFRESH_TOKEN
    java.lang.String mUid -> mUid
    java.lang.String mAccessToken -> mAccessToken
    java.lang.String mRefreshToken -> mRefreshToken
    long mExpiresTime -> mExpiresTime
    com.sina.weibo.sdk.auth.Oauth2AccessToken parseAccessToken(java.lang.String) -> parseAccessToken
    com.sina.weibo.sdk.auth.Oauth2AccessToken parseAccessToken(android.os.Bundle) -> parseAccessToken
    boolean isSessionValid() -> isSessionValid
    android.os.Bundle toBundle() -> toBundle
    java.lang.String toString() -> toString
    java.lang.String getUid() -> getUid
    void setUid(java.lang.String) -> setUid
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    java.lang.String getRefreshToken() -> getRefreshToken
    void setRefreshToken(java.lang.String) -> setRefreshToken
    long getExpiresTime() -> getExpiresTime
    void setExpiresTime(long) -> setExpiresTime
    void setExpiresIn(java.lang.String) -> setExpiresIn
    java.lang.String getString(android.os.Bundle,java.lang.String,java.lang.String) -> getString
com.sina.weibo.sdk.auth.WeiboAuthListener -> com.sina.weibo.sdk.auth.WeiboAuthListener:
    void onComplete(android.os.Bundle) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onCancel() -> onCancel
com.sina.weibo.sdk.auth.sso.SsoHandler -> com.sina.weibo.sdk.auth.sso.SsoHandler:
    java.lang.String TAG -> TAG
    java.lang.String DEFAULT_WEIBO_REMOTE_SSO_SERVICE_NAME -> DEFAULT_WEIBO_REMOTE_SSO_SERVICE_NAME
    int REQUEST_CODE_SSO_AUTH -> REQUEST_CODE_SSO_AUTH
    com.sina.weibo.sdk.auth.sso.WebAuthHandler mWebAuthHandler -> mWebAuthHandler
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> mAuthListener
    android.app.Activity mAuthActivity -> mAuthActivity
    int mSSOAuthRequestCode -> mSSOAuthRequestCode
    com.sina.weibo.sdk.WeiboAppManager$WeiboInfo mWeiboInfo -> mWeiboInfo
    com.sina.weibo.sdk.auth.AuthInfo mAuthInfo -> mAuthInfo
    java.lang.String AUTH_FAILED_MSG -> AUTH_FAILED_MSG
    java.lang.String AUTH_FAILED_NOT_INSTALL_MSG -> AUTH_FAILED_NOT_INSTALL_MSG
    android.content.ServiceConnection mConnection -> mConnection
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> authorize
    void authorizeClientSso(com.sina.weibo.sdk.auth.WeiboAuthListener) -> authorizeClientSso
    void authorizeWeb(com.sina.weibo.sdk.auth.WeiboAuthListener) -> authorizeWeb
    void authorize(int,com.sina.weibo.sdk.auth.WeiboAuthListener,com.sina.weibo.sdk.auth.sso.SsoHandler$AuthType) -> authorize
    void authorizeCallBack(int,int,android.content.Intent) -> authorizeCallBack
    android.content.ComponentName isServiceExisted(android.content.Context,java.lang.String) -> isServiceExisted
    boolean bindRemoteSSOService(android.content.Context) -> bindRemoteSSOService
    boolean startSingleSignOn(java.lang.String,java.lang.String) -> startSingleSignOn
    boolean isWeiboAppInstalled() -> isWeiboAppInstalled
    com.sina.weibo.sdk.auth.sso.WebAuthHandler access$0(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$0
    com.sina.weibo.sdk.auth.WeiboAuthListener access$1(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$1
    android.app.Activity access$2(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$2
    android.content.ServiceConnection access$3(com.sina.weibo.sdk.auth.sso.SsoHandler) -> access$3
    boolean access$4(com.sina.weibo.sdk.auth.sso.SsoHandler,java.lang.String,java.lang.String) -> access$4
com.sina.weibo.sdk.auth.sso.SsoHandler$1 -> com.sina.weibo.sdk.auth.sso.SsoHandler$1:
    com.sina.weibo.sdk.auth.sso.SsoHandler this$0 -> this$0
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.sina.weibo.sdk.auth.sso.SsoHandler$AuthType -> com.sina.weibo.sdk.auth.sso.SsoHandler$AuthType:
    com.sina.weibo.sdk.auth.sso.SsoHandler$AuthType ALL -> ALL
    com.sina.weibo.sdk.auth.sso.SsoHandler$AuthType SsoOnly -> SsoOnly
    com.sina.weibo.sdk.auth.sso.SsoHandler$AuthType WebOnly -> WebOnly
    com.sina.weibo.sdk.auth.sso.SsoHandler$AuthType[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.auth.sso.SsoHandler$AuthType[] values() -> values
    com.sina.weibo.sdk.auth.sso.SsoHandler$AuthType valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.auth.sso.WebAuthHandler -> com.sina.weibo.sdk.auth.sso.WebAuthHandler:
    java.lang.String TAG -> TAG
    java.lang.String NETWORK_NOT_AVAILABLE_EN -> NETWORK_NOT_AVAILABLE_EN
    java.lang.String NETWORK_NOT_AVAILABLE_ZH_CN -> NETWORK_NOT_AVAILABLE_ZH_CN
    java.lang.String NETWORK_NOT_AVAILABLE_ZH_TW -> NETWORK_NOT_AVAILABLE_ZH_TW
    java.lang.String OAUTH2_BASE_URL -> OAUTH2_BASE_URL
    int OBTAIN_AUTH_CODE -> OBTAIN_AUTH_CODE
    int OBTAIN_AUTH_TOKEN -> OBTAIN_AUTH_TOKEN
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.auth.AuthInfo mAuthInfo -> mAuthInfo
    com.sina.weibo.sdk.auth.AuthInfo getAuthInfo() -> getAuthInfo
    void anthorize(com.sina.weibo.sdk.auth.WeiboAuthListener) -> anthorize
    void authorize(com.sina.weibo.sdk.auth.WeiboAuthListener,int) -> authorize
    void startDialog(com.sina.weibo.sdk.auth.WeiboAuthListener,int) -> startDialog
com.sina.weibo.sdk.component.AuthRequestParam -> com.sina.weibo.sdk.component.AuthRequestParam:
    java.lang.String EXTRA_KEY_AUTHINFO -> EXTRA_KEY_AUTHINFO
    java.lang.String EXTRA_KEY_LISTENER -> EXTRA_KEY_LISTENER
    com.sina.weibo.sdk.auth.AuthInfo mAuthInfo -> mAuthInfo
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> mAuthListener
    java.lang.String mAuthListenerKey -> mAuthListenerKey
    void onSetupRequestParam(android.os.Bundle) -> onSetupRequestParam
    void onCreateRequestParamBundle(android.os.Bundle) -> onCreateRequestParamBundle
    void execRequest(android.app.Activity,int) -> execRequest
    com.sina.weibo.sdk.auth.AuthInfo getAuthInfo() -> getAuthInfo
    void setAuthInfo(com.sina.weibo.sdk.auth.AuthInfo) -> setAuthInfo
    com.sina.weibo.sdk.auth.WeiboAuthListener getAuthListener() -> getAuthListener
    java.lang.String getAuthListenerKey() -> getAuthListenerKey
    void setAuthListener(com.sina.weibo.sdk.auth.WeiboAuthListener) -> setAuthListener
com.sina.weibo.sdk.component.AuthWeiboWebViewClient -> com.sina.weibo.sdk.component.AuthWeiboWebViewClient:
    android.app.Activity mAct -> mAct
    com.sina.weibo.sdk.component.AuthRequestParam mAuthRequestParam -> mAuthRequestParam
    com.sina.weibo.sdk.auth.WeiboAuthListener mListener -> mListener
    boolean isCallBacked -> isCallBacked
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void handleRedirectUrl(java.lang.String) -> handleRedirectUrl
com.sina.weibo.sdk.component.BrowserLauncher -> com.sina.weibo.sdk.component.BrowserLauncher:
    com.sina.weibo.sdk.component.BrowserLauncher AUTH -> AUTH
    com.sina.weibo.sdk.component.BrowserLauncher SHARE -> SHARE
    com.sina.weibo.sdk.component.BrowserLauncher WIDGET -> WIDGET
    com.sina.weibo.sdk.component.BrowserLauncher COMMON -> COMMON
    com.sina.weibo.sdk.component.BrowserLauncher[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.component.BrowserLauncher[] values() -> values
    com.sina.weibo.sdk.component.BrowserLauncher valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.component.BrowserRequestCallBack -> com.sina.weibo.sdk.component.BrowserRequestCallBack:
    void onPageStartedCallBack(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStartedCallBack
    boolean shouldOverrideUrlLoadingCallBack(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoadingCallBack
    void onPageFinishedCallBack(android.webkit.WebView,java.lang.String) -> onPageFinishedCallBack
    void onReceivedErrorCallBack(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedErrorCallBack
    void onReceivedSslErrorCallBack(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslErrorCallBack
com.sina.weibo.sdk.component.BrowserRequestParamBase -> com.sina.weibo.sdk.component.BrowserRequestParamBase:
    int EXEC_REQUEST_ACTION_OK -> EXEC_REQUEST_ACTION_OK
    int EXEC_REQUEST_ACTION_ERROR -> EXEC_REQUEST_ACTION_ERROR
    int EXEC_REQUEST_ACTION_CANCEL -> EXEC_REQUEST_ACTION_CANCEL
    java.lang.String EXTRA_KEY_LAUNCHER -> EXTRA_KEY_LAUNCHER
    java.lang.String EXTRA_KEY_URL -> EXTRA_KEY_URL
    java.lang.String EXTRA_KEY_SPECIFY_TITLE -> EXTRA_KEY_SPECIFY_TITLE
    android.content.Context mContext -> mContext
    java.lang.String mUrl -> mUrl
    com.sina.weibo.sdk.component.BrowserLauncher mLaucher -> mLaucher
    java.lang.String mSpecifyTitle -> mSpecifyTitle
    void setupRequestParam(android.os.Bundle) -> setupRequestParam
    void onSetupRequestParam(android.os.Bundle) -> onSetupRequestParam
    android.os.Bundle createRequestParamBundle() -> createRequestParamBundle
    void onCreateRequestParamBundle(android.os.Bundle) -> onCreateRequestParamBundle
    void execRequest(android.app.Activity,int) -> execRequest
    void setUrl(java.lang.String) -> setUrl
    java.lang.String getUrl() -> getUrl
    void setLauncher(com.sina.weibo.sdk.component.BrowserLauncher) -> setLauncher
    com.sina.weibo.sdk.component.BrowserLauncher getLauncher() -> getLauncher
    void setSpecifyTitle(java.lang.String) -> setSpecifyTitle
    java.lang.String getSpecifyTitle() -> getSpecifyTitle
com.sina.weibo.sdk.component.ShareRequestParam -> com.sina.weibo.sdk.component.ShareRequestParam:
    java.lang.String SHARE_URL -> SHARE_URL
    java.lang.String UPLOAD_PIC_URL -> UPLOAD_PIC_URL
    java.lang.String REQ_PARAM_TITLE -> REQ_PARAM_TITLE
    java.lang.String REQ_PARAM_VERSION -> REQ_PARAM_VERSION
    java.lang.String REQ_PARAM_SOURCE -> REQ_PARAM_SOURCE
    java.lang.String REQ_PARAM_AID -> REQ_PARAM_AID
    java.lang.String REQ_PARAM_PACKAGENAME -> REQ_PARAM_PACKAGENAME
    java.lang.String REQ_PARAM_KEY_HASH -> REQ_PARAM_KEY_HASH
    java.lang.String REQ_PARAM_TOKEN -> REQ_PARAM_TOKEN
    java.lang.String REQ_PARAM_PICINFO -> REQ_PARAM_PICINFO
    java.lang.String REQ_UPLOAD_PIC_PARAM_IMG -> REQ_UPLOAD_PIC_PARAM_IMG
    java.lang.String RESP_UPLOAD_PIC_PARAM_CODE -> RESP_UPLOAD_PIC_PARAM_CODE
    java.lang.String RESP_UPLOAD_PIC_PARAM_DATA -> RESP_UPLOAD_PIC_PARAM_DATA
    int RESP_UPLOAD_PIC_SUCC_CODE -> RESP_UPLOAD_PIC_SUCC_CODE
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> mAuthListener
    java.lang.String mAuthListenerKey -> mAuthListenerKey
    java.lang.String mAppPackage -> mAppPackage
    java.lang.String mToken -> mToken
    java.lang.String mAppKey -> mAppKey
    java.lang.String mHashKey -> mHashKey
    com.sina.weibo.sdk.api.share.BaseRequest mBaseRequest -> mBaseRequest
    java.lang.String mShareContent -> mShareContent
    byte[] mBase64ImgData -> mBase64ImgData
    void onSetupRequestParam(android.os.Bundle) -> onSetupRequestParam
    void handleSharedMessage(android.os.Bundle) -> handleSharedMessage
    void handleMblogPic(java.lang.String,byte[]) -> handleMblogPic
    void onCreateRequestParamBundle(android.os.Bundle) -> onCreateRequestParamBundle
    void execRequest(android.app.Activity,int) -> execRequest
    boolean hasImage() -> hasImage
    com.sina.weibo.sdk.net.WeiboParameters buildUploadPicParam(com.sina.weibo.sdk.net.WeiboParameters) -> buildUploadPicParam
    java.lang.String buildUrl(java.lang.String) -> buildUrl
    void sendSdkResponse(android.app.Activity,int,java.lang.String) -> sendSdkResponse
    void sendSdkCancleResponse(android.app.Activity) -> sendSdkCancleResponse
    void sendSdkOkResponse(android.app.Activity) -> sendSdkOkResponse
    void sendSdkErrorResponse(android.app.Activity,java.lang.String) -> sendSdkErrorResponse
    void setBaseRequest(com.sina.weibo.sdk.api.share.BaseRequest) -> setBaseRequest
    java.lang.String getAppPackage() -> getAppPackage
    void setAppPackage(java.lang.String) -> setAppPackage
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    java.lang.String getAppKey() -> getAppKey
    void setAppKey(java.lang.String) -> setAppKey
    java.lang.String getHashKey() -> getHashKey
    java.lang.String getShareContent() -> getShareContent
    byte[] getBase64ImgData() -> getBase64ImgData
    com.sina.weibo.sdk.auth.WeiboAuthListener getAuthListener() -> getAuthListener
    java.lang.String getAuthListenerKey() -> getAuthListenerKey
    void setAuthListener(com.sina.weibo.sdk.auth.WeiboAuthListener) -> setAuthListener
com.sina.weibo.sdk.component.ShareRequestParam$UploadPicResult -> com.sina.weibo.sdk.component.ShareRequestParam$UploadPicResult:
    int code -> code
    java.lang.String picId -> picId
    int getCode() -> getCode
    java.lang.String getPicId() -> getPicId
    com.sina.weibo.sdk.component.ShareRequestParam$UploadPicResult parse(java.lang.String) -> parse
com.sina.weibo.sdk.component.ShareWeiboWebViewClient -> com.sina.weibo.sdk.component.ShareWeiboWebViewClient:
    java.lang.String RESP_SUCC_CODE -> RESP_SUCC_CODE
    java.lang.String RESP_PARAM_CODE -> RESP_PARAM_CODE
    java.lang.String RESP_PARAM_MSG -> RESP_PARAM_MSG
    android.app.Activity mAct -> mAct
    com.sina.weibo.sdk.component.ShareRequestParam mShareRequestParam -> mShareRequestParam
    com.sina.weibo.sdk.auth.WeiboAuthListener mListener -> mListener
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
com.sina.weibo.sdk.component.WeiboCallbackManager -> com.sina.weibo.sdk.component.WeiboCallbackManager:
    com.sina.weibo.sdk.component.WeiboCallbackManager sInstance -> sInstance
    android.content.Context mContext -> mContext
    java.util.Map mWeiboAuthListenerMap -> mWeiboAuthListenerMap
    java.util.Map mWidgetRequestCallbackMap -> mWidgetRequestCallbackMap
    com.sina.weibo.sdk.component.WeiboCallbackManager getInstance(android.content.Context) -> getInstance
    com.sina.weibo.sdk.auth.WeiboAuthListener getWeiboAuthListener(java.lang.String) -> getWeiboAuthListener
    void setWeiboAuthListener(java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> setWeiboAuthListener
    void removeWeiboAuthListener(java.lang.String) -> removeWeiboAuthListener
    com.sina.weibo.sdk.component.WidgetRequestParam$WidgetRequestCallback getWidgetRequestCallback(java.lang.String) -> getWidgetRequestCallback
    void setWidgetRequestCallback(java.lang.String,com.sina.weibo.sdk.component.WidgetRequestParam$WidgetRequestCallback) -> setWidgetRequestCallback
    void removeWidgetRequestCallback(java.lang.String) -> removeWidgetRequestCallback
    java.lang.String genCallbackKey() -> genCallbackKey
com.sina.weibo.sdk.component.WeiboSdkBrowser -> com.sina.weibo.sdk.component.WeiboSdkBrowser:
    java.lang.String TAG -> TAG
    java.lang.String CANCEL_EN -> CANCEL_EN
    java.lang.String CANCEL_ZH_CN -> CANCEL_ZH_CN
    java.lang.String CANCEL_ZH_TW -> CANCEL_ZH_TW
    java.lang.String EMPTY_PROMPT_BAD_NETWORK_UI_EN -> EMPTY_PROMPT_BAD_NETWORK_UI_EN
    java.lang.String EMPTY_PROMPT_BAD_NETWORK_UI_ZH_CN -> EMPTY_PROMPT_BAD_NETWORK_UI_ZH_CN
    java.lang.String EMPTY_PROMPT_BAD_NETWORK_UI_ZH_TW -> EMPTY_PROMPT_BAD_NETWORK_UI_ZH_TW
    java.lang.String CHANNEL_DATA_ERROR_EN -> CHANNEL_DATA_ERROR_EN
    java.lang.String CHANNEL_DATA_ERROR_ZH_CN -> CHANNEL_DATA_ERROR_ZH_CN
    java.lang.String CHANNEL_DATA_ERROR_ZH_TW -> CHANNEL_DATA_ERROR_ZH_TW
    java.lang.String WEIBOBROWSER_NO_TITLE_EN -> WEIBOBROWSER_NO_TITLE_EN
    java.lang.String WEIBOBROWSER_NO_TITLE_ZH_CN -> WEIBOBROWSER_NO_TITLE_ZH_CN
    java.lang.String WEIBOBROWSER_NO_TITLE_ZH_TW -> WEIBOBROWSER_NO_TITLE_ZH_TW
    java.lang.String LOADINFO_EN -> LOADINFO_EN
    java.lang.String LOADINFO_ZH_CN -> LOADINFO_ZH_CN
    java.lang.String LOADINFO_ZH_TW -> LOADINFO_ZH_TW
    java.lang.String BROWSER_CLOSE_SCHEME -> BROWSER_CLOSE_SCHEME
    java.lang.String BROWSER_WIDGET_SCHEME -> BROWSER_WIDGET_SCHEME
    java.lang.String mSpecifyTitle -> mSpecifyTitle
    java.lang.String mHtmlTitle -> mHtmlTitle
    boolean isLoading -> isLoading
    java.lang.String mUrl -> mUrl
    boolean isErrorPage -> isErrorPage
    android.widget.TextView mLeftBtn -> mLeftBtn
    android.widget.TextView mTitleText -> mTitleText
    android.webkit.WebView mWebView -> mWebView
    com.sina.weibo.sdk.component.view.LoadingBar mLoadingBar -> mLoadingBar
    android.widget.LinearLayout mLoadErrorView -> mLoadErrorView
    android.widget.Button mLoadErrorRetryBtn -> mLoadErrorRetryBtn
    com.sina.weibo.sdk.component.BrowserRequestParamBase mRequestParam -> mRequestParam
    com.sina.weibo.sdk.component.WeiboWebViewClient mWeiboWebViewClient -> mWeiboWebViewClient
    void startAuth(android.content.Context,java.lang.String,com.sina.weibo.sdk.auth.AuthInfo,com.sina.weibo.sdk.auth.WeiboAuthListener) -> startAuth
    void startShared(android.content.Context,java.lang.String,com.sina.weibo.sdk.auth.AuthInfo,com.sina.weibo.sdk.auth.WeiboAuthListener) -> startShared
    void onCreate(android.os.Bundle) -> onCreate
    boolean initDataFromIntent(android.content.Intent) -> initDataFromIntent
    void openUrl(java.lang.String) -> openUrl
    void startShare() -> startShare
    void initWebView() -> initWebView
    void setTopNavTitle() -> setTopNavTitle
    void updateTitleName() -> updateTitleName
    void setContentView() -> setContentView
    void refreshAllViews() -> refreshAllViews
    void setViewNormal() -> setViewNormal
    void setViewLoading() -> setViewLoading
    void handleReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> handleReceivedError
    void promptError() -> promptError
    void hiddenErrorPrompt() -> hiddenErrorPrompt
    boolean isWeiboCustomScheme(java.lang.String) -> isWeiboCustomScheme
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    com.sina.weibo.sdk.component.BrowserRequestParamBase createBrowserRequestParam(android.os.Bundle) -> createBrowserRequestParam
    boolean isWeiboShareRequestParam(com.sina.weibo.sdk.component.BrowserRequestParamBase) -> isWeiboShareRequestParam
    void installAuthWeiboWebViewClient(com.sina.weibo.sdk.component.AuthRequestParam) -> installAuthWeiboWebViewClient
    void installShareWeiboWebViewClient(com.sina.weibo.sdk.component.ShareRequestParam) -> installShareWeiboWebViewClient
    void installWidgetWeiboWebViewClient(com.sina.weibo.sdk.component.WidgetRequestParam) -> installWidgetWeiboWebViewClient
    void onPageStartedCallBack(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStartedCallBack
    boolean shouldOverrideUrlLoadingCallBack(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoadingCallBack
    void onPageFinishedCallBack(android.webkit.WebView,java.lang.String) -> onPageFinishedCallBack
    void onReceivedErrorCallBack(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedErrorCallBack
    void onReceivedSslErrorCallBack(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslErrorCallBack
    void closeBrowser(android.app.Activity,java.lang.String,java.lang.String) -> closeBrowser
    com.sina.weibo.sdk.component.view.LoadingBar access$0(com.sina.weibo.sdk.component.WeiboSdkBrowser) -> access$0
    void access$1(com.sina.weibo.sdk.component.WeiboSdkBrowser,boolean) -> access$1
    boolean access$2(com.sina.weibo.sdk.component.WeiboSdkBrowser) -> access$2
    java.lang.String access$3(com.sina.weibo.sdk.component.WeiboSdkBrowser) -> access$3
    boolean access$4(com.sina.weibo.sdk.component.WeiboSdkBrowser,java.lang.String) -> access$4
    void access$5(com.sina.weibo.sdk.component.WeiboSdkBrowser,java.lang.String) -> access$5
    void access$6(com.sina.weibo.sdk.component.WeiboSdkBrowser) -> access$6
    java.lang.String access$7() -> access$7
    void access$8(com.sina.weibo.sdk.component.WeiboSdkBrowser,java.lang.String) -> access$8
    com.sina.weibo.sdk.component.BrowserRequestParamBase access$9(com.sina.weibo.sdk.component.WeiboSdkBrowser) -> access$9
    void access$10(com.sina.weibo.sdk.component.WeiboSdkBrowser,boolean) -> access$10
com.sina.weibo.sdk.component.WeiboSdkBrowser$1 -> com.sina.weibo.sdk.component.WeiboSdkBrowser$1:
    com.sina.weibo.sdk.component.WeiboSdkBrowser this$0 -> this$0
    com.sina.weibo.sdk.component.ShareRequestParam val$req -> val$req
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onComplete(java.lang.String) -> onComplete
com.sina.weibo.sdk.component.WeiboSdkBrowser$2 -> com.sina.weibo.sdk.component.WeiboSdkBrowser$2:
    com.sina.weibo.sdk.component.WeiboSdkBrowser this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.sina.weibo.sdk.component.WeiboSdkBrowser$3 -> com.sina.weibo.sdk.component.WeiboSdkBrowser$3:
    com.sina.weibo.sdk.component.WeiboSdkBrowser this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.sina.weibo.sdk.component.WeiboSdkBrowser$WeiboChromeClient -> com.sina.weibo.sdk.component.WeiboSdkBrowser$WeiboChromeClient:
    com.sina.weibo.sdk.component.WeiboSdkBrowser this$0 -> this$0
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
com.sina.weibo.sdk.component.WeiboWebViewClient -> com.sina.weibo.sdk.component.WeiboWebViewClient:
    com.sina.weibo.sdk.component.BrowserRequestCallBack mCallBack -> mCallBack
    void setBrowserRequestCallBack(com.sina.weibo.sdk.component.BrowserRequestCallBack) -> setBrowserRequestCallBack
com.sina.weibo.sdk.component.WidgetRequestParam -> com.sina.weibo.sdk.component.WidgetRequestParam:
    java.lang.String EXTRA_KEY_WIDGET_CALLBACK -> EXTRA_KEY_WIDGET_CALLBACK
    java.lang.String REQ_PARAM_ATTENTION_FUID -> REQ_PARAM_ATTENTION_FUID
    java.lang.String REQ_PARAM_COMMENT_TOPIC -> REQ_PARAM_COMMENT_TOPIC
    java.lang.String REQ_PARAM_COMMENT_CONTENT -> REQ_PARAM_COMMENT_CONTENT
    java.lang.String REQ_PARAM_COMMENT_CATEGORY -> REQ_PARAM_COMMENT_CATEGORY
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthListener -> mAuthListener
    java.lang.String mAuthListenerKey -> mAuthListenerKey
    com.sina.weibo.sdk.component.WidgetRequestParam$WidgetRequestCallback mWidgetRequestCallback -> mWidgetRequestCallback
    java.lang.String mWidgetRequestCallbackKey -> mWidgetRequestCallbackKey
    java.lang.String mAppPackage -> mAppPackage
    java.lang.String mToken -> mToken
    java.lang.String mAppKey -> mAppKey
    java.lang.String mHashKey -> mHashKey
    java.lang.String mAttentionFuid -> mAttentionFuid
    java.lang.String mCommentContent -> mCommentContent
    java.lang.String mCommentTopic -> mCommentTopic
    java.lang.String mCommentCategory -> mCommentCategory
    void onSetupRequestParam(android.os.Bundle) -> onSetupRequestParam
    void onCreateRequestParamBundle(android.os.Bundle) -> onCreateRequestParamBundle
    java.lang.String buildUrl(java.lang.String) -> buildUrl
    java.lang.String getAttentionFuid() -> getAttentionFuid
    void setAttentionFuid(java.lang.String) -> setAttentionFuid
    java.lang.String getCommentContent() -> getCommentContent
    void setCommentContent(java.lang.String) -> setCommentContent
    java.lang.String getCommentTopic() -> getCommentTopic
    void setCommentTopic(java.lang.String) -> setCommentTopic
    java.lang.String getCommentCategory() -> getCommentCategory
    void setCommentCategory(java.lang.String) -> setCommentCategory
    java.lang.String getToken() -> getToken
    void setToken(java.lang.String) -> setToken
    java.lang.String getAppKey() -> getAppKey
    void setAppKey(java.lang.String) -> setAppKey
    com.sina.weibo.sdk.auth.WeiboAuthListener getAuthListener() -> getAuthListener
    java.lang.String getAuthListenerKey() -> getAuthListenerKey
    void setAuthListener(com.sina.weibo.sdk.auth.WeiboAuthListener) -> setAuthListener
    com.sina.weibo.sdk.component.WidgetRequestParam$WidgetRequestCallback getWidgetRequestCallback() -> getWidgetRequestCallback
    java.lang.String getWidgetRequestCallbackKey() -> getWidgetRequestCallbackKey
    void setWidgetRequestCallback(com.sina.weibo.sdk.component.WidgetRequestParam$WidgetRequestCallback) -> setWidgetRequestCallback
    void execRequest(android.app.Activity,int) -> execRequest
com.sina.weibo.sdk.component.WidgetRequestParam$WidgetRequestCallback -> com.sina.weibo.sdk.component.WidgetRequestParam$WidgetRequestCallback:
    void onWebViewResult(java.lang.String) -> onWebViewResult
com.sina.weibo.sdk.component.WidgetWeiboWebViewClient -> com.sina.weibo.sdk.component.WidgetWeiboWebViewClient:
    android.app.Activity mAct -> mAct
    com.sina.weibo.sdk.component.WidgetRequestParam mWidgetRequestParam -> mWidgetRequestParam
    com.sina.weibo.sdk.auth.WeiboAuthListener mListener -> mListener
    com.sina.weibo.sdk.component.WidgetRequestParam$WidgetRequestCallback mWidgetCallback -> mWidgetCallback
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
com.sina.weibo.sdk.component.view.AttentionComponentView -> com.sina.weibo.sdk.component.view.AttentionComponentView:
    java.lang.String TAG -> TAG
    java.lang.String ATTENTION_H5 -> ATTENTION_H5
    java.lang.String FRIENDSHIPS_SHOW_URL -> FRIENDSHIPS_SHOW_URL
    java.lang.String ALREADY_ATTEND_EN -> ALREADY_ATTEND_EN
    java.lang.String ALREADY_ATTEND_ZH_CN -> ALREADY_ATTEND_ZH_CN
    java.lang.String ALREADY_ATTEND_ZH_TW -> ALREADY_ATTEND_ZH_TW
    java.lang.String ATTEND_EN -> ATTEND_EN
    java.lang.String ATTEND_ZH_CN -> ATTEND_ZH_CN
    java.lang.String ATTEND_ZH_TW -> ATTEND_ZH_TW
    com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam mAttentionParam -> mAttentionParam
    boolean mIsLoadingState -> mIsLoadingState
    android.widget.FrameLayout flButton -> flButton
    android.widget.TextView mButton -> mButton
    android.widget.ProgressBar pbLoading -> pbLoading
    void init(android.content.Context) -> init
    void setAttentionParam(com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam) -> setAttentionParam
    void startLoading() -> startLoading
    void stopLoading() -> stopLoading
    void showFollowButton(boolean) -> showFollowButton
    void loadAttentionState(com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam) -> loadAttentionState
    void execAttented() -> execAttented
    void requestAsync(android.content.Context,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestAsync
    void access$0(com.sina.weibo.sdk.component.view.AttentionComponentView) -> access$0
    java.lang.String access$1() -> access$1
    void access$2(com.sina.weibo.sdk.component.view.AttentionComponentView,boolean) -> access$2
    void access$3(com.sina.weibo.sdk.component.view.AttentionComponentView,boolean) -> access$3
com.sina.weibo.sdk.component.view.AttentionComponentView$1 -> com.sina.weibo.sdk.component.view.AttentionComponentView$1:
    com.sina.weibo.sdk.component.view.AttentionComponentView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.sina.weibo.sdk.component.view.AttentionComponentView$2 -> com.sina.weibo.sdk.component.view.AttentionComponentView$2:
    com.sina.weibo.sdk.component.view.AttentionComponentView this$0 -> this$0
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
    void onComplete(java.lang.String) -> onComplete
    com.sina.weibo.sdk.component.view.AttentionComponentView access$0(com.sina.weibo.sdk.component.view.AttentionComponentView$2) -> access$0
com.sina.weibo.sdk.component.view.AttentionComponentView$2$1 -> com.sina.weibo.sdk.component.view.AttentionComponentView$2$1:
    com.sina.weibo.sdk.component.view.AttentionComponentView$2 this$1 -> this$1
    org.json.JSONObject val$target -> val$target
    void run() -> run
com.sina.weibo.sdk.component.view.AttentionComponentView$3 -> com.sina.weibo.sdk.component.view.AttentionComponentView$3:
    com.sina.weibo.sdk.component.view.AttentionComponentView this$0 -> this$0
    void onWebViewResult(java.lang.String) -> onWebViewResult
com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam -> com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam:
    java.lang.String mAppKey -> mAppKey
    java.lang.String mAccessToken -> mAccessToken
    java.lang.String mAttentionUid -> mAttentionUid
    java.lang.String mAttentionScreenName -> mAttentionScreenName
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthlistener -> mAuthlistener
    com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam createRequestParam(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> createRequestParam
    com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam createRequestParam(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.auth.WeiboAuthListener) -> createRequestParam
    boolean hasAuthoriz() -> hasAuthoriz
    boolean access$0(com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam) -> access$0
    java.lang.String access$1(com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam) -> access$1
    java.lang.String access$2(com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam) -> access$2
    java.lang.String access$3(com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam) -> access$3
    java.lang.String access$4(com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam) -> access$4
    com.sina.weibo.sdk.auth.WeiboAuthListener access$5(com.sina.weibo.sdk.component.view.AttentionComponentView$RequestParam) -> access$5
com.sina.weibo.sdk.component.view.CommentComponentView -> com.sina.weibo.sdk.component.view.CommentComponentView:
    java.lang.String COMMENT_H5 -> COMMENT_H5
    java.lang.String ALREADY_COMMENT_EN -> ALREADY_COMMENT_EN
    java.lang.String ALREADY_COMMENT_ZH_CN -> ALREADY_COMMENT_ZH_CN
    java.lang.String ALREADY_COMMENT_ZH_TW -> ALREADY_COMMENT_ZH_TW
    com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam mCommentParam -> mCommentParam
    android.widget.LinearLayout mContentLy -> mContentLy
    void init(android.content.Context) -> init
    void setCommentParam(com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam) -> setCommentParam
    void execAttented() -> execAttented
    void access$0(com.sina.weibo.sdk.component.view.CommentComponentView) -> access$0
com.sina.weibo.sdk.component.view.CommentComponentView$1 -> com.sina.weibo.sdk.component.view.CommentComponentView$1:
    com.sina.weibo.sdk.component.view.CommentComponentView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.sina.weibo.sdk.component.view.CommentComponentView$Category -> com.sina.weibo.sdk.component.view.CommentComponentView$Category:
    com.sina.weibo.sdk.component.view.CommentComponentView$Category MOVIE -> MOVIE
    com.sina.weibo.sdk.component.view.CommentComponentView$Category TRAVEL -> TRAVEL
    java.lang.String mVal -> mVal
    com.sina.weibo.sdk.component.view.CommentComponentView$Category[] ENUM$VALUES -> ENUM$VALUES
    java.lang.String getValue() -> getValue
    com.sina.weibo.sdk.component.view.CommentComponentView$Category[] values() -> values
    com.sina.weibo.sdk.component.view.CommentComponentView$Category valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam -> com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam:
    java.lang.String mAppKey -> mAppKey
    java.lang.String mAccessToken -> mAccessToken
    java.lang.String mTopic -> mTopic
    java.lang.String mContent -> mContent
    com.sina.weibo.sdk.component.view.CommentComponentView$Category mCategory -> mCategory
    com.sina.weibo.sdk.auth.WeiboAuthListener mAuthlistener -> mAuthlistener
    com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam createRequestParam(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.component.view.CommentComponentView$Category,com.sina.weibo.sdk.auth.WeiboAuthListener) -> createRequestParam
    com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam createRequestParam(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.component.view.CommentComponentView$Category,com.sina.weibo.sdk.auth.WeiboAuthListener) -> createRequestParam
    java.lang.String access$0(com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam) -> access$0
    java.lang.String access$1(com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam) -> access$1
    java.lang.String access$2(com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam) -> access$2
    com.sina.weibo.sdk.component.view.CommentComponentView$Category access$3(com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam) -> access$3
    com.sina.weibo.sdk.auth.WeiboAuthListener access$4(com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam) -> access$4
    java.lang.String access$5(com.sina.weibo.sdk.component.view.CommentComponentView$RequestParam) -> access$5
com.sina.weibo.sdk.component.view.LoadingBar -> com.sina.weibo.sdk.component.view.LoadingBar:
    int MAX_PROGRESS -> MAX_PROGRESS
    int mProgress -> mProgress
    int mProgressColor -> mProgressColor
    android.graphics.Paint mPaint -> mPaint
    android.os.Handler mHander -> mHander
    java.lang.Runnable mRunnable -> mRunnable
    void init(android.content.Context) -> init
    void initSkin() -> initSkin
    void onDraw(android.graphics.Canvas) -> onDraw
    android.graphics.Rect getRect() -> getRect
    void drawProgress(int) -> drawProgress
    int access$0(com.sina.weibo.sdk.component.view.LoadingBar) -> access$0
    void access$1(com.sina.weibo.sdk.component.view.LoadingBar,int) -> access$1
com.sina.weibo.sdk.component.view.LoadingBar$1 -> com.sina.weibo.sdk.component.view.LoadingBar$1:
    com.sina.weibo.sdk.component.view.LoadingBar this$0 -> this$0
    void run() -> run
com.sina.weibo.sdk.constant.WBAuthErrorCode -> com.sina.weibo.sdk.constant.WBAuthErrorCode:
    int redirect_uri_mismatch -> redirect_uri_mismatch
    int invalid_request -> invalid_request
    int invalid_client -> invalid_client
    int invalid_grant -> invalid_grant
    int unauthorized_client -> unauthorized_client
    int expired_token -> expired_token
    int unsupported_grant_type -> unsupported_grant_type
    int unsupported_response_type -> unsupported_response_type
    int access_denied -> access_denied
    int temporarily_unavailable -> temporarily_unavailable
    int appkey_permission_denied -> appkey_permission_denied
com.sina.weibo.sdk.constant.WBConstants -> com.sina.weibo.sdk.constant.WBConstants:
    java.lang.String WEIBO_SIGN -> WEIBO_SIGN
    java.lang.String AUTH_PARAMS_CLIENT_ID -> AUTH_PARAMS_CLIENT_ID
    java.lang.String AUTH_PARAMS_RESPONSE_TYPE -> AUTH_PARAMS_RESPONSE_TYPE
    java.lang.String AUTH_PARAMS_REDIRECT_URL -> AUTH_PARAMS_REDIRECT_URL
    java.lang.String AUTH_PARAMS_DISPLAY -> AUTH_PARAMS_DISPLAY
    java.lang.String AUTH_PARAMS_SCOPE -> AUTH_PARAMS_SCOPE
    java.lang.String AUTH_PARAMS_PACKAGE_NAME -> AUTH_PARAMS_PACKAGE_NAME
    java.lang.String AUTH_PARAMS_KEY_HASH -> AUTH_PARAMS_KEY_HASH
    java.lang.String AUTH_PARAMS_AID -> AUTH_PARAMS_AID
    java.lang.String AUTH_PARAMS_VERSION -> AUTH_PARAMS_VERSION
    java.lang.String AUTH_PARAMS_CLIENT_SECRET -> AUTH_PARAMS_CLIENT_SECRET
    java.lang.String AUTH_PARAMS_GRANT_TYPE -> AUTH_PARAMS_GRANT_TYPE
    java.lang.String AUTH_PARAMS_CODE -> AUTH_PARAMS_CODE
    java.lang.String AUTH_ACCESS_TOKEN -> AUTH_ACCESS_TOKEN
    java.lang.String SSO_APP_KEY -> SSO_APP_KEY
    java.lang.String SSO_REDIRECT_URL -> SSO_REDIRECT_URL
    java.lang.String SSO_USER_SCOPE -> SSO_USER_SCOPE
    java.lang.String SSO_PACKAGE_NAME -> SSO_PACKAGE_NAME
    java.lang.String SSO_KEY_HASH -> SSO_KEY_HASH
    java.lang.String WEIBO_SDK_VERSION_CODE -> WEIBO_SDK_VERSION_CODE
    java.lang.String ACTION_WEIBO_REGISTER -> ACTION_WEIBO_REGISTER
    java.lang.String ACTION_WEIBO_RESPONSE -> ACTION_WEIBO_RESPONSE
    java.lang.String ACTION_WEIBO_SDK_PERMISSION -> ACTION_WEIBO_SDK_PERMISSION
    java.lang.String ACTIVITY_WEIBO -> ACTIVITY_WEIBO
    java.lang.String ACTIVITY_REQ_SDK -> ACTIVITY_REQ_SDK
    java.lang.String ACTIVITY_RESP_SDK -> ACTIVITY_RESP_SDK
    java.lang.String ACTIVITY_WEIBO_PAY -> ACTIVITY_WEIBO_PAY
    java.lang.String ACTIVITY_WEIBO_PAY_REQ -> ACTIVITY_WEIBO_PAY_REQ
    int SDK_ACTIVITY_FOR_RESULT_CODE -> SDK_ACTIVITY_FOR_RESULT_CODE
    java.lang.String WEIBO_DOWNLOAD_URL -> WEIBO_DOWNLOAD_URL
    int COMMAND_TO_WEIBO -> COMMAND_TO_WEIBO
    int COMMAND_FROM_WEIBO -> COMMAND_FROM_WEIBO
    int COMMAND_SSO -> COMMAND_SSO
    int COMMAND_PAY -> COMMAND_PAY
    java.lang.String COMMAND_TYPE_KEY -> COMMAND_TYPE_KEY
    java.lang.String TRAN -> TRAN
    java.lang.String SIGN -> SIGN
    java.lang.String AID -> AID
    int WEIBO_FLAG_SDK -> WEIBO_FLAG_SDK
com.sina.weibo.sdk.constant.WBConstants$Base -> com.sina.weibo.sdk.constant.WBConstants$Base:
    java.lang.String SDK_VER -> SDK_VER
    java.lang.String APP_PKG -> APP_PKG
    java.lang.String APP_KEY -> APP_KEY
com.sina.weibo.sdk.constant.WBConstants$ErrorCode -> com.sina.weibo.sdk.constant.WBConstants$ErrorCode:
    int ERR_OK -> ERR_OK
    int ERR_CANCEL -> ERR_CANCEL
    int ERR_FAIL -> ERR_FAIL
com.sina.weibo.sdk.constant.WBConstants$Media -> com.sina.weibo.sdk.constant.WBConstants$Media:
    java.lang.String SDK_VER -> SDK_VER
    java.lang.String TITLE -> TITLE
    java.lang.String DESC -> DESC
    java.lang.String THUMB_DATA -> THUMB_DATA
    java.lang.String URL -> URL
com.sina.weibo.sdk.constant.WBConstants$Msg -> com.sina.weibo.sdk.constant.WBConstants$Msg:
    java.lang.String TEXT -> TEXT
    java.lang.String IMAGE -> IMAGE
    java.lang.String MEDIA -> MEDIA
    java.lang.String TEXT_EXTRA -> TEXT_EXTRA
    java.lang.String IMAGE_EXTRA -> IMAGE_EXTRA
    java.lang.String MEDIA_EXTRA -> MEDIA_EXTRA
    java.lang.String IDENTIFY -> IDENTIFY
com.sina.weibo.sdk.constant.WBConstants$Response -> com.sina.weibo.sdk.constant.WBConstants$Response:
    java.lang.String ERRCODE -> ERRCODE
    java.lang.String ERRMSG -> ERRMSG
com.sina.weibo.sdk.constant.WBConstants$SDK -> com.sina.weibo.sdk.constant.WBConstants$SDK:
    java.lang.String FLAG -> FLAG
com.sina.weibo.sdk.constant.WBPageConstants -> com.sina.weibo.sdk.constant.WBPageConstants:
com.sina.weibo.sdk.constant.WBPageConstants$ExceptionMsg -> com.sina.weibo.sdk.constant.WBPageConstants$ExceptionMsg:
    java.lang.String CONTEXT_ERROR -> CONTEXT_ERROR
    java.lang.String UID_NICK_ERROR -> UID_NICK_ERROR
    java.lang.String PAGEID_ERROR -> PAGEID_ERROR
    java.lang.String MBLOGID_ERROR -> MBLOGID_ERROR
    java.lang.String CARDID_ERROR -> CARDID_ERROR
    java.lang.String COUNT_ERROR -> COUNT_ERROR
    java.lang.String URL_ERROR -> URL_ERROR
    java.lang.String SINAINTERNALBROWSER -> SINAINTERNALBROWSER
    java.lang.String WEIBO_NOT_INSTALLED -> WEIBO_NOT_INSTALLED
com.sina.weibo.sdk.constant.WBPageConstants$ParamKey -> com.sina.weibo.sdk.constant.WBPageConstants$ParamKey:
    java.lang.String CONTENT -> CONTENT
    java.lang.String POIID -> POIID
    java.lang.String POINAME -> POINAME
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String OFFSET -> OFFSET
    java.lang.String EXTPARAM -> EXTPARAM
    java.lang.String UID -> UID
    java.lang.String NICK -> NICK
    java.lang.String PAGEID -> PAGEID
    java.lang.String CARDID -> CARDID
    java.lang.String TITLE -> TITLE
    java.lang.String PAGE -> PAGE
    java.lang.String COUNT -> COUNT
    java.lang.String MBLOGID -> MBLOGID
    java.lang.String URL -> URL
    java.lang.String SINAINTERNALBROWSER -> SINAINTERNALBROWSER
    java.lang.String PACKAGENAME -> PACKAGENAME
com.sina.weibo.sdk.constant.WBPageConstants$Scheme -> com.sina.weibo.sdk.constant.WBPageConstants$Scheme:
    java.lang.String SENDWEIBO -> SENDWEIBO
    java.lang.String NEARBYPEOPLE -> NEARBYPEOPLE
    java.lang.String NEARBYWEIBO -> NEARBYWEIBO
    java.lang.String USERINFO -> USERINFO
    java.lang.String BROWSER -> BROWSER
    java.lang.String PAGEINFO -> PAGEINFO
    java.lang.String PAGEPRODUCTLIST -> PAGEPRODUCTLIST
    java.lang.String PAGEUSERLIST -> PAGEUSERLIST
    java.lang.String PAGEWEIBOLIST -> PAGEWEIBOLIST
    java.lang.String PAGEPHOTOLIST -> PAGEPHOTOLIST
    java.lang.String PAGEDETAILINFO -> PAGEDETAILINFO
    java.lang.String MAP -> MAP
    java.lang.String QRCODE -> QRCODE
    java.lang.String USERTRENDS -> USERTRENDS
    java.lang.String MBLOGDETAIL -> MBLOGDETAIL
com.sina.weibo.sdk.exception.WeiboAuthException -> com.sina.weibo.sdk.exception.WeiboAuthException:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_AUTH_ERROR_CODE -> DEFAULT_AUTH_ERROR_CODE
    java.lang.String DEFAULT_AUTH_ERROR_DESC -> DEFAULT_AUTH_ERROR_DESC
    java.lang.String DEFAULT_AUTH_ERROR_TYPE -> DEFAULT_AUTH_ERROR_TYPE
    java.lang.String mErrorType -> mErrorType
    java.lang.String mErrorCode -> mErrorCode
    java.lang.String getErrorType() -> getErrorType
    java.lang.String getErrorCode() -> getErrorCode
com.sina.weibo.sdk.exception.WeiboDialogException -> com.sina.weibo.sdk.exception.WeiboDialogException:
    long serialVersionUID -> serialVersionUID
    int mErrorCode -> mErrorCode
    java.lang.String mFailingUrl -> mFailingUrl
    int getErrorCode() -> getErrorCode
    java.lang.String getFailingUrl() -> getFailingUrl
com.sina.weibo.sdk.exception.WeiboException -> com.sina.weibo.sdk.exception.WeiboException:
    long serialVersionUID -> serialVersionUID
com.sina.weibo.sdk.exception.WeiboHttpException -> com.sina.weibo.sdk.exception.WeiboHttpException:
    long serialVersionUID -> serialVersionUID
    int mStatusCode -> mStatusCode
    int getStatusCode() -> getStatusCode
com.sina.weibo.sdk.exception.WeiboShareException -> com.sina.weibo.sdk.exception.WeiboShareException:
    long serialVersionUID -> serialVersionUID
com.sina.weibo.sdk.net.AsyncWeiboRunner -> com.sina.weibo.sdk.net.AsyncWeiboRunner:
    android.content.Context mContext -> mContext
    void requestByThread(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestByThread
    java.lang.String request(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String) -> request
    void requestAsync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestAsync
    android.content.Context access$0(com.sina.weibo.sdk.net.AsyncWeiboRunner) -> access$0
com.sina.weibo.sdk.net.AsyncWeiboRunner$1 -> com.sina.weibo.sdk.net.AsyncWeiboRunner$1:
    com.sina.weibo.sdk.net.AsyncWeiboRunner this$0 -> this$0
    java.lang.String val$url -> val$url
    java.lang.String val$httpMethod -> val$httpMethod
    com.sina.weibo.sdk.net.WeiboParameters val$params -> val$params
    com.sina.weibo.sdk.net.RequestListener val$listener -> val$listener
    void run() -> run
com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult -> com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult:
    java.lang.Object result -> result
    com.sina.weibo.sdk.exception.WeiboException error -> error
    java.lang.Object getResult() -> getResult
    com.sina.weibo.sdk.exception.WeiboException getError() -> getError
com.sina.weibo.sdk.net.AsyncWeiboRunner$RequestRunner -> com.sina.weibo.sdk.net.AsyncWeiboRunner$RequestRunner:
    android.content.Context mContext -> mContext
    java.lang.String mUrl -> mUrl
    com.sina.weibo.sdk.net.WeiboParameters mParams -> mParams
    java.lang.String mHttpMethod -> mHttpMethod
    com.sina.weibo.sdk.net.RequestListener mListener -> mListener
    com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult doInBackground(java.lang.Void[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(com.sina.weibo.sdk.net.AsyncWeiboRunner$AsyncTaskResult) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.sina.weibo.sdk.net.CustomRedirectHandler -> com.sina.weibo.sdk.net.CustomRedirectHandler:
    java.lang.String TAG -> TAG
    int MAX_REDIRECT_COUNT -> MAX_REDIRECT_COUNT
    int redirectCount -> redirectCount
    java.lang.String redirectUrl -> redirectUrl
    java.lang.String tempRedirectUrl -> tempRedirectUrl
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    boolean shouldRedirectUrl(java.lang.String) -> shouldRedirectUrl
    void onReceivedException() -> onReceivedException
    java.lang.String getRedirectUrl() -> getRedirectUrl
    int getRedirectCount() -> getRedirectCount
com.sina.weibo.sdk.net.DownloadService -> com.sina.weibo.sdk.net.DownloadService:
    java.lang.String EXTRA_DOWNLOAD_URL -> EXTRA_DOWNLOAD_URL
    java.lang.String EXTRA_NOTIFICATION_CONTENT -> EXTRA_NOTIFICATION_CONTENT
    java.lang.String TAG -> TAG
    java.lang.String APK_SAVE_DIR -> APK_SAVE_DIR
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onStart(android.content.Intent,int) -> onStart
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    java.lang.String generateSaveFileName(java.lang.String) -> generateSaveFileName
com.sina.weibo.sdk.net.HttpManager -> com.sina.weibo.sdk.net.HttpManager:
    java.lang.String TAG -> TAG
    java.lang.String BOUNDARY -> BOUNDARY
    java.lang.String MP_BOUNDARY -> MP_BOUNDARY
    java.lang.String END_MP_BOUNDARY -> END_MP_BOUNDARY
    java.lang.String MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    java.lang.String HTTP_METHOD_POST -> HTTP_METHOD_POST
    java.lang.String HTTP_METHOD_GET -> HTTP_METHOD_GET
    int CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    int SOCKET_TIMEOUT -> SOCKET_TIMEOUT
    int BUFFER_SIZE -> BUFFER_SIZE
    org.apache.http.conn.ssl.SSLSocketFactory sSSLSocketFactory -> sSSLSocketFactory
    java.lang.String openUrl(android.content.Context,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> openUrl
    org.apache.http.HttpResponse requestHttpExecute(android.content.Context,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> requestHttpExecute
    void setHttpCommonParam(android.content.Context,com.sina.weibo.sdk.net.WeiboParameters) -> setHttpCommonParam
    void shutdownHttpClient(org.apache.http.client.HttpClient) -> shutdownHttpClient
    java.lang.String openUrl4RdirectURL(android.content.Context,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> openUrl4RdirectURL
    java.lang.String openRedirectUrl4LocationUri(android.content.Context,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.WeiboParameters) -> openRedirectUrl4LocationUri
    java.lang.String downloadFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> downloadFile
    org.apache.http.client.HttpClient getNewHttpClient() -> getNewHttpClient
    void buildParams(java.io.OutputStream,com.sina.weibo.sdk.net.WeiboParameters) -> buildParams
    java.lang.String readRsponse(org.apache.http.HttpResponse) -> readRsponse
    java.lang.String getBoundry() -> getBoundry
    org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory() -> getSSLSocketFactory
    java.security.cert.Certificate getCertificate(java.lang.String) -> getCertificate
    java.lang.String getTimestamp() -> getTimestamp
    java.lang.String getOauthSign(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getOauthSign
    java.lang.String calcOauthSignNative(android.content.Context,java.lang.String,java.lang.String) -> calcOauthSignNative
com.sina.weibo.sdk.net.HttpManager$1 -> com.sina.weibo.sdk.net.HttpManager$1:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.sina.weibo.sdk.net.HttpManager$2 -> com.sina.weibo.sdk.net.HttpManager$2:
    boolean shouldRedirectUrl(java.lang.String) -> shouldRedirectUrl
    void onReceivedException() -> onReceivedException
com.sina.weibo.sdk.net.NetStateManager -> com.sina.weibo.sdk.net.NetStateManager:
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.net.NetStateManager$NetState CUR_NETSTATE -> CUR_NETSTATE
    org.apache.http.HttpHost getAPN() -> getAPN
    void access$0(android.content.Context) -> access$0
com.sina.weibo.sdk.net.NetStateManager$NetState -> com.sina.weibo.sdk.net.NetStateManager$NetState:
    com.sina.weibo.sdk.net.NetStateManager$NetState Mobile -> Mobile
    com.sina.weibo.sdk.net.NetStateManager$NetState WIFI -> WIFI
    com.sina.weibo.sdk.net.NetStateManager$NetState NOWAY -> NOWAY
    com.sina.weibo.sdk.net.NetStateManager$NetState[] ENUM$VALUES -> ENUM$VALUES
    com.sina.weibo.sdk.net.NetStateManager$NetState[] values() -> values
    com.sina.weibo.sdk.net.NetStateManager$NetState valueOf(java.lang.String) -> valueOf
com.sina.weibo.sdk.net.NetStateManager$NetStateReceive -> com.sina.weibo.sdk.net.NetStateManager$NetStateReceive:
    com.sina.weibo.sdk.net.NetStateManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sina.weibo.sdk.net.RequestListener -> com.sina.weibo.sdk.net.RequestListener:
    void onComplete(java.lang.String) -> onComplete
    void onWeiboException(com.sina.weibo.sdk.exception.WeiboException) -> onWeiboException
com.sina.weibo.sdk.net.WeiboParameters -> com.sina.weibo.sdk.net.WeiboParameters:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.util.LinkedHashMap mParams -> mParams
    java.lang.String mAppKey -> mAppKey
    java.lang.String getAppKey() -> getAppKey
    java.util.LinkedHashMap getParams() -> getParams
    void setParams(java.util.LinkedHashMap) -> setParams
    void add(java.lang.String,java.lang.String) -> add
    void add(java.lang.String,int) -> add
    void add(java.lang.String,long) -> add
    void add(java.lang.String,java.lang.Object) -> add
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,android.graphics.Bitmap) -> put
    void put(java.lang.String,java.lang.Object) -> put
    java.lang.Object get(java.lang.String) -> get
    void remove(java.lang.String) -> remove
    java.util.Set keySet() -> keySet
    boolean containsKey(java.lang.String) -> containsKey
    boolean containsValue(java.lang.String) -> containsValue
    int size() -> size
    java.lang.String encodeUrl() -> encodeUrl
    boolean hasBinaryData() -> hasBinaryData
com.sina.weibo.sdk.net.openapi.RefreshTokenApi -> com.sina.weibo.sdk.net.openapi.RefreshTokenApi:
    java.lang.String REFRESH_TOKEN_URL -> REFRESH_TOKEN_URL
    android.content.Context mContext -> mContext
    com.sina.weibo.sdk.net.openapi.RefreshTokenApi create(android.content.Context) -> create
    void refreshToken(java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> refreshToken
com.sina.weibo.sdk.net.openapi.ShareWeiboApi -> com.sina.weibo.sdk.net.openapi.ShareWeiboApi:
    java.lang.String TAG -> TAG
    java.lang.String UPDATE_URL -> UPDATE_URL
    java.lang.String UPLOAD_URL -> UPLOAD_URL
    java.lang.String REPOST_URL -> REPOST_URL
    android.content.Context mContext -> mContext
    java.lang.String mAppKey -> mAppKey
    java.lang.String mAccessToken -> mAccessToken
    com.sina.weibo.sdk.net.openapi.ShareWeiboApi create(android.content.Context,java.lang.String,java.lang.String) -> create
    void update(java.lang.String,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> update
    void upload(java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> upload
    void repost(java.lang.String,java.lang.String,int,com.sina.weibo.sdk.net.RequestListener) -> repost
    void requestAsync(java.lang.String,com.sina.weibo.sdk.net.WeiboParameters,java.lang.String,com.sina.weibo.sdk.net.RequestListener) -> requestAsync
    com.sina.weibo.sdk.net.WeiboParameters buildUpdateParams(java.lang.String,java.lang.String,java.lang.String) -> buildUpdateParams
com.sina.weibo.sdk.utils.AidTask -> com.sina.weibo.sdk.utils.AidTask:
    java.lang.String TAG -> TAG
    java.lang.String AID_FILE_NAME -> AID_FILE_NAME
    int VERSION -> VERSION
    int WHAT_LOAD_AID_SUC -> WHAT_LOAD_AID_SUC
    int WHAT_LOAD_AID_API_ERR -> WHAT_LOAD_AID_API_ERR
    int WHAT_LOAD_AID_IO_ERR -> WHAT_LOAD_AID_IO_ERR
    com.sina.weibo.sdk.utils.AidTask sInstance -> sInstance
    android.content.Context mContext -> mContext
    java.lang.String mAppKey -> mAppKey
    java.util.concurrent.locks.ReentrantLock mTaskLock -> mTaskLock
    com.sina.weibo.sdk.utils.AidTask getInstance(android.content.Context) -> getInstance
    void setAppkey(java.lang.String) -> setAppkey
    void aidTaskInit() -> aidTaskInit
    void aidTaskInit(java.lang.String) -> aidTaskInit
    java.util.concurrent.locks.ReentrantLock getTaskLock() -> getTaskLock
    com.sina.weibo.sdk.utils.AidTask$AidInfo getAidSync() -> getAidSync
    void getAidAsync(android.os.Handler) -> getAidAsync
    java.lang.String loadAidFromCache() -> loadAidFromCache
    java.lang.String loadSubCookieFromCache() -> loadSubCookieFromCache
    com.sina.weibo.sdk.utils.AidTask$AidInfo loadAidInfoFromCache() -> loadAidInfoFromCache
    java.io.File getAidInfoFile(int) -> getAidInfoFile
    java.lang.String loadAidFromNet() -> loadAidFromNet
    void cacheAidInfo(java.lang.String) -> cacheAidInfo
    java.lang.String getMfp() -> getMfp
    java.lang.String genMfpString() -> genMfpString
    java.lang.String encryptRsa(java.lang.String,java.lang.String) -> encryptRsa
    int splite(byte[],int,int) -> splite
    java.security.PublicKey getPublicKey(java.lang.String) -> getPublicKey
    java.lang.String getOS() -> getOS
    java.lang.String getImei() -> getImei
    java.lang.String getMeid() -> getMeid
    java.lang.String getImsi() -> getImsi
    java.lang.String getMac() -> getMac
    java.lang.String getIccid() -> getIccid
    java.lang.String getSerialNo() -> getSerialNo
    java.lang.String getAndroidId() -> getAndroidId
    java.lang.String getCpu() -> getCpu
    java.lang.String getModel() -> getModel
    java.lang.String getSdSize() -> getSdSize
    java.lang.String getResolution() -> getResolution
    java.lang.String getSsid() -> getSsid
    java.lang.String getDeviceName() -> getDeviceName
    java.lang.String getConnectType() -> getConnectType
    java.io.File access$0(com.sina.weibo.sdk.utils.AidTask,int) -> access$0
    java.util.concurrent.locks.ReentrantLock access$1(com.sina.weibo.sdk.utils.AidTask) -> access$1
    java.lang.String access$2(com.sina.weibo.sdk.utils.AidTask) -> access$2
    void access$3(com.sina.weibo.sdk.utils.AidTask,java.lang.String) -> access$3
com.sina.weibo.sdk.utils.AidTask$1 -> com.sina.weibo.sdk.utils.AidTask$1:
    com.sina.weibo.sdk.utils.AidTask this$0 -> this$0
    void run() -> run
com.sina.weibo.sdk.utils.AidTask$2 -> com.sina.weibo.sdk.utils.AidTask$2:
    com.sina.weibo.sdk.utils.AidTask this$0 -> this$0
    void run() -> run
com.sina.weibo.sdk.utils.AidTask$3 -> com.sina.weibo.sdk.utils.AidTask$3:
    com.sina.weibo.sdk.utils.AidTask this$0 -> this$0
    android.os.Message val$msg -> val$msg
    android.os.Handler val$h -> val$h
    void run() -> run
com.sina.weibo.sdk.utils.AidTask$AidInfo -> com.sina.weibo.sdk.utils.AidTask$AidInfo:
    java.lang.String mAid -> mAid
    java.lang.String mSubCookie -> mSubCookie
    java.lang.String getAid() -> getAid
    java.lang.String getSubCookie() -> getSubCookie
    com.sina.weibo.sdk.utils.AidTask$AidInfo parseJson(java.lang.String) -> parseJson
com.sina.weibo.sdk.utils.Base64 -> com.sina.weibo.sdk.utils.Base64:
    char[] alphabet -> alphabet
    byte[] codes -> codes
    byte[] decode(byte[]) -> decode
    char[] encode(byte[]) -> encode
    byte[] encodebyte(byte[]) -> encodebyte
com.sina.weibo.sdk.utils.BitmapHelper -> com.sina.weibo.sdk.utils.BitmapHelper:
    boolean makesureSizeNotTooLarge(android.graphics.Rect) -> makesureSizeNotTooLarge
    int getSampleSizeOfNotTooLarge(android.graphics.Rect) -> getSampleSizeOfNotTooLarge
    int getSampleSizeAutoFitToScreen(int,int,int,int) -> getSampleSizeAutoFitToScreen
    boolean verifyBitmap(byte[]) -> verifyBitmap
    boolean verifyBitmap(java.io.InputStream) -> verifyBitmap
    boolean verifyBitmap(java.lang.String) -> verifyBitmap
com.sina.weibo.sdk.utils.ImageUtils -> com.sina.weibo.sdk.utils.ImageUtils:
    void revitionImageSizeHD(java.lang.String,int,int) -> revitionImageSizeHD
    void revitionImageSize(java.lang.String,int,int) -> revitionImageSize
    boolean revitionPostImageSize(android.content.Context,java.lang.String) -> revitionPostImageSize
    android.graphics.Bitmap safeDecodeBimtapFile(java.lang.String,android.graphics.BitmapFactory$Options) -> safeDecodeBimtapFile
    void delete(java.io.File) -> delete
    boolean deleteDependon(java.lang.String) -> deleteDependon
    boolean isFileExisted(java.lang.String) -> isFileExisted
    boolean isParentExist(java.io.File) -> isParentExist
    void makesureFileExist(java.lang.String) -> makesureFileExist
    boolean isWifi(android.content.Context) -> isWifi
com.sina.weibo.sdk.utils.LogUtil -> com.sina.weibo.sdk.utils.LogUtil:
    boolean sIsLogEnable -> sIsLogEnable
    void enableLog() -> enableLog
    void disableLog() -> disableLog
    void d(java.lang.String,java.lang.String) -> d
    void i(java.lang.String,java.lang.String) -> i
    void e(java.lang.String,java.lang.String) -> e
    void w(java.lang.String,java.lang.String) -> w
    void v(java.lang.String,java.lang.String) -> v
    java.lang.String getStackTraceMsg() -> getStackTraceMsg
com.sina.weibo.sdk.utils.MD5 -> com.sina.weibo.sdk.utils.MD5:
    char[] hexDigits -> hexDigits
    java.lang.String hexdigest(java.lang.String) -> hexdigest
    java.lang.String hexdigest(byte[]) -> hexdigest
    void main(java.lang.String[]) -> main
com.sina.weibo.sdk.utils.NetworkHelper -> com.sina.weibo.sdk.utils.NetworkHelper:
    boolean hasInternetPermission(android.content.Context) -> hasInternetPermission
    boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    boolean isWifiValid(android.content.Context) -> isWifiValid
    boolean isMobileNetwork(android.content.Context) -> isMobileNetwork
    android.net.NetworkInfo getActiveNetworkInfo(android.content.Context) -> getActiveNetworkInfo
    android.net.NetworkInfo getNetworkInfo(android.content.Context,int) -> getNetworkInfo
    int getNetworkType(android.content.Context) -> getNetworkType
    int getWifiState(android.content.Context) -> getWifiState
    android.net.NetworkInfo$DetailedState getWifiConnectivityState(android.content.Context) -> getWifiConnectivityState
    boolean wifiConnection(android.content.Context,java.lang.String,java.lang.String) -> wifiConnection
    void clearCookies(android.content.Context) -> clearCookies
    java.lang.String generateUA(android.content.Context) -> generateUA
com.sina.weibo.sdk.utils.NotificationHelper -> com.sina.weibo.sdk.utils.NotificationHelper:
    int NOTIFICATION_ID -> NOTIFICATION_ID
    java.lang.String WEIBO -> WEIBO
    java.lang.String WEIBO_ZH_CN -> WEIBO_ZH_CN
    java.lang.String WEIBO_ZH_TW -> WEIBO_ZH_TW
    void showNotification(android.content.Context,java.lang.String,java.lang.String) -> showNotification
    android.app.Notification buildNotification(android.content.Context,java.lang.String,java.lang.String) -> buildNotification
    android.app.PendingIntent buildInstallApkIntent(android.content.Context,java.lang.String) -> buildInstallApkIntent
    int getNotificationIcon(android.content.Context) -> getNotificationIcon
    int getResourceId(android.content.Context,java.lang.String,java.lang.String) -> getResourceId
com.sina.weibo.sdk.utils.Reflection -> com.sina.weibo.sdk.utils.Reflection:
    java.lang.Object getProperty(java.lang.Object,java.lang.String) -> getProperty
    java.lang.Object getStaticProperty(java.lang.String,java.lang.String) -> getStaticProperty
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Object[]) -> invokeStaticMethod
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    boolean isInstance(java.lang.Object,java.lang.Class) -> isInstance
    java.lang.Object getByArray(java.lang.Object,int) -> getByArray
    void invokeVoidMethod(java.lang.Object,java.lang.String,boolean) -> invokeVoidMethod
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeMethod
    java.lang.Object invokeParamsMethod(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeParamsMethod
    java.lang.Object invokeStaticMethod(java.lang.String,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeStaticMethod
    java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeStaticMethod
com.sina.weibo.sdk.utils.ResourceManager -> com.sina.weibo.sdk.utils.ResourceManager:
    java.lang.String TAG -> TAG
    java.lang.String DRAWABLE -> DRAWABLE
    java.lang.String DRAWABLE_LDPI -> DRAWABLE_LDPI
    java.lang.String DRAWABLE_MDPI -> DRAWABLE_MDPI
    java.lang.String DRAWABLE_HDPI -> DRAWABLE_HDPI
    java.lang.String DRAWABLE_XHDPI -> DRAWABLE_XHDPI
    java.lang.String DRAWABLE_XXHDPI -> DRAWABLE_XXHDPI
    java.lang.String[] PRE_INSTALL_DRAWBLE_PATHS -> PRE_INSTALL_DRAWBLE_PATHS
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> getString
    android.graphics.drawable.Drawable getDrawable(android.content.Context,java.lang.String) -> getDrawable
    android.graphics.drawable.Drawable getNinePatchDrawable(android.content.Context,java.lang.String) -> getNinePatchDrawable
    java.util.Locale getLanguage() -> getLanguage
    java.lang.String getAppropriatePathOfDrawable(android.content.Context,java.lang.String) -> getAppropriatePathOfDrawable
    android.graphics.drawable.Drawable getDrawableFromAssert(android.content.Context,java.lang.String,boolean) -> getDrawableFromAssert
    boolean isFileExisted(android.content.Context,java.lang.String) -> isFileExisted
    java.lang.String getCurrentDpiFolder(android.content.Context) -> getCurrentDpiFolder
    android.view.View extractView(android.content.Context,java.lang.String,android.view.ViewGroup) -> extractView
    android.graphics.drawable.Drawable extractDrawable(android.content.Context,java.lang.String) -> extractDrawable
    int dp2px(android.content.Context,int) -> dp2px
    android.content.res.ColorStateList createColorStateList(int,int) -> createColorStateList
    android.graphics.drawable.StateListDrawable createStateListDrawable(android.content.Context,java.lang.String,java.lang.String) -> createStateListDrawable
com.sina.weibo.sdk.utils.SecurityHelper -> com.sina.weibo.sdk.utils.SecurityHelper:
    boolean validateAppSignatureForIntent(android.content.Context,android.content.Intent) -> validateAppSignatureForIntent
    boolean checkResponseAppLegal(android.content.Context,com.sina.weibo.sdk.WeiboAppManager$WeiboInfo,android.content.Intent) -> checkResponseAppLegal
    boolean containSign(android.content.pm.Signature[],java.lang.String) -> containSign
com.sina.weibo.sdk.utils.UIUtils -> com.sina.weibo.sdk.utils.UIUtils:
    void showAlert(android.content.Context,java.lang.String,java.lang.String) -> showAlert
    void showAlert(android.content.Context,int,int) -> showAlert
    void showToast(android.content.Context,int,int) -> showToast
    void showToast(android.content.Context,java.lang.CharSequence,int) -> showToast
    void showToastInCenter(android.content.Context,int,int) -> showToastInCenter
com.sina.weibo.sdk.utils.Utility -> com.sina.weibo.sdk.utils.Utility:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    android.os.Bundle parseUrl(java.lang.String) -> parseUrl
    android.os.Bundle parseUri(java.lang.String) -> parseUri
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    boolean isChineseLocale(android.content.Context) -> isChineseLocale
    java.lang.String generateGUID() -> generateGUID
    java.lang.String getSign(android.content.Context,java.lang.String) -> getSign
    java.lang.String safeString(java.lang.String) -> safeString
    java.lang.String getAid(android.content.Context,java.lang.String) -> getAid
    java.lang.String generateUA(android.content.Context) -> generateUA
com.slidingmenu.lib.BuildConfig -> com.slidingmenu.lib.BuildConfig:
    boolean DEBUG -> DEBUG
com.slidingmenu.lib.CanvasTransformerBuilder -> com.slidingmenu.lib.CanvasTransformerBuilder:
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer mTrans -> mTrans
    android.view.animation.Interpolator lin -> lin
    void initTransformer() -> initTransformer
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int) -> zoom
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer zoom(int,int,int,int,int,int,android.view.animation.Interpolator) -> zoom
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer rotate(int,int,int,int) -> rotate
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer rotate(int,int,int,int,android.view.animation.Interpolator) -> rotate
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer translate(int,int,int,int) -> translate
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer translate(int,int,int,int,android.view.animation.Interpolator) -> translate
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer concatTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> concatTransformer
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer access$0(com.slidingmenu.lib.CanvasTransformerBuilder) -> access$0
com.slidingmenu.lib.CanvasTransformerBuilder$1 -> com.slidingmenu.lib.CanvasTransformerBuilder$1:
    float getInterpolation(float) -> getInterpolation
com.slidingmenu.lib.CanvasTransformerBuilder$2 -> com.slidingmenu.lib.CanvasTransformerBuilder$2:
    com.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.CanvasTransformerBuilder$3 -> com.slidingmenu.lib.CanvasTransformerBuilder$3:
    com.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.CanvasTransformerBuilder$4 -> com.slidingmenu.lib.CanvasTransformerBuilder$4:
    com.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedDeg -> val$openedDeg
    int val$closedDeg -> val$closedDeg
    int val$px -> val$px
    int val$py -> val$py
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.CanvasTransformerBuilder$5 -> com.slidingmenu.lib.CanvasTransformerBuilder$5:
    com.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    android.view.animation.Interpolator val$interp -> val$interp
    int val$openedX -> val$openedX
    int val$closedX -> val$closedX
    int val$openedY -> val$openedY
    int val$closedY -> val$closedY
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.CanvasTransformerBuilder$6 -> com.slidingmenu.lib.CanvasTransformerBuilder$6:
    com.slidingmenu.lib.CanvasTransformerBuilder this$0 -> this$0
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer val$t -> val$t
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.CustomViewAbove -> com.slidingmenu.lib.CustomViewAbove:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    android.view.View mContent -> mContent
    int mCurItem -> mCurItem
    android.widget.Scroller mScroller -> mScroller
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mScrolling -> mScrolling
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mTouchSlop -> mTouchSlop
    float mInitialMotionX -> mInitialMotionX
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> mViewBehind
    boolean mEnabled -> mEnabled
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    com.slidingmenu.lib.SlidingMenu$OnClosedListener mClosedListener -> mClosedListener
    com.slidingmenu.lib.SlidingMenu$OnOpenedListener mOpenedListener -> mOpenedListener
    java.util.List mIgnoredViews -> mIgnoredViews
    int mTouchMode -> mTouchMode
    boolean mQuickReturn -> mQuickReturn
    float mScrollX -> mScrollX
    void initCustomViewAbove() -> initCustomViewAbove
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void setOnPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setInternalPageChangeListener
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    int getDestScrollX(int) -> getDestScrollX
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> isMenuOpen
    boolean isInIgnoredView(android.view.MotionEvent) -> isInIgnoredView
    int getBehindWidth() -> getBehindWidth
    int getChildWidth(int) -> getChildWidth
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll() -> completeScroll
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> thisTouchAllowed
    boolean thisSlideAllowed(float) -> thisSlideAllowed
    int getPointerIndex(android.view.MotionEvent,int) -> getPointerIndex
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> determineDrag
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> determineTargetPage
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void startDrag() -> startDrag
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    com.slidingmenu.lib.CustomViewBehind access$0(com.slidingmenu.lib.CustomViewAbove) -> access$0
com.slidingmenu.lib.CustomViewAbove$1 -> com.slidingmenu.lib.CustomViewAbove$1:
    float getInterpolation(float) -> getInterpolation
com.slidingmenu.lib.CustomViewAbove$2 -> com.slidingmenu.lib.CustomViewAbove$2:
    com.slidingmenu.lib.CustomViewAbove this$0 -> this$0
    void onPageSelected(int) -> onPageSelected
com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> com.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.slidingmenu.lib.CustomViewBehind -> com.slidingmenu.lib.CustomViewBehind:
    java.lang.String TAG -> TAG
    int MARGIN_THRESHOLD -> MARGIN_THRESHOLD
    int mTouchMode -> mTouchMode
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> mViewAbove
    android.view.View mContent -> mContent
    android.view.View mSecondaryContent -> mSecondaryContent
    int mMarginThreshold -> mMarginThreshold
    int mWidthOffset -> mWidthOffset
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer mTransformer -> mTransformer
    boolean mChildrenEnabled -> mChildrenEnabled
    int mMode -> mMode
    boolean mFadeEnabled -> mFadeEnabled
    android.graphics.Paint mFadePaint -> mFadePaint
    float mScrollScale -> mScrollScale
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> mSecondaryShadowDrawable
    int mShadowWidth -> mShadowWidth
    float mFadeDegree -> mFadeDegree
    boolean mSelectorEnabled -> mSelectorEnabled
    android.graphics.Bitmap mSelectorDrawable -> mSelectorDrawable
    android.view.View mSelectedView -> mSelectedView
    void setCustomViewAbove(com.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> getMenuPage
    void scrollBehindTo(android.view.View,int,int) -> scrollBehindTo
    int getMenuLeft(android.view.View,int) -> getMenuLeft
    int getAbsLeftBound(android.view.View) -> getAbsLeftBound
    int getAbsRightBound(android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int) -> marginTouchAllowed
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(float) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(float) -> menuOpenSlideAllowed
    void drawShadow(android.view.View,android.graphics.Canvas) -> drawShadow
    void drawFade(android.view.View,android.graphics.Canvas,float) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.slidingmenu.lib.MenuInterface -> com.slidingmenu.lib.MenuInterface:
    void scrollBehindTo(int,int,com.slidingmenu.lib.CustomViewBehind,float) -> scrollBehindTo
    int getMenuLeft(com.slidingmenu.lib.CustomViewBehind,android.view.View) -> getMenuLeft
    int getAbsLeftBound(com.slidingmenu.lib.CustomViewBehind,android.view.View) -> getAbsLeftBound
    int getAbsRightBound(com.slidingmenu.lib.CustomViewBehind,android.view.View) -> getAbsRightBound
    boolean marginTouchAllowed(android.view.View,int,int) -> marginTouchAllowed
    boolean menuOpenTouchAllowed(android.view.View,int,int) -> menuOpenTouchAllowed
    boolean menuTouchInQuickReturn(android.view.View,int,int) -> menuTouchInQuickReturn
    boolean menuClosedSlideAllowed(int) -> menuClosedSlideAllowed
    boolean menuOpenSlideAllowed(int) -> menuOpenSlideAllowed
    void drawShadow(android.graphics.Canvas,android.graphics.drawable.Drawable,int) -> drawShadow
    void drawFade(android.graphics.Canvas,int,com.slidingmenu.lib.CustomViewBehind,android.view.View) -> drawFade
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> drawSelector
com.slidingmenu.lib.R -> com.slidingmenu.lib.R:
com.slidingmenu.lib.R$attr -> com.slidingmenu.lib.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int behindOffset -> behindOffset
    int behindScrollScale -> behindScrollScale
    int behindWidth -> behindWidth
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int fadeDegree -> fadeDegree
    int fadeEnabled -> fadeEnabled
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int mode -> mode
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int selectorDrawable -> selectorDrawable
    int selectorEnabled -> selectorEnabled
    int shadowDrawable -> shadowDrawable
    int shadowWidth -> shadowWidth
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int touchModeAbove -> touchModeAbove
    int touchModeBehind -> touchModeBehind
    int verticalDivider -> verticalDivider
    int viewAbove -> viewAbove
    int viewBehind -> viewBehind
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.slidingmenu.lib.R$bool -> com.slidingmenu.lib.R$bool:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
com.slidingmenu.lib.R$color -> com.slidingmenu.lib.R$color:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__bright_foreground_inverse_holo_dark -> abs__bright_foreground_inverse_holo_dark
    int abs__bright_foreground_inverse_holo_light -> abs__bright_foreground_inverse_holo_light
    int abs__holo_blue_light -> abs__holo_blue_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
com.slidingmenu.lib.R$dimen -> com.slidingmenu.lib.R$dimen:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__alert_dialog_title_height -> abs__alert_dialog_title_height
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int action_button_min_width -> action_button_min_width
com.slidingmenu.lib.R$drawable -> com.slidingmenu.lib.R$drawable:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__dialog_full_holo_dark -> abs__dialog_full_holo_dark
    int abs__dialog_full_holo_light -> abs__dialog_full_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
com.slidingmenu.lib.R$id -> com.slidingmenu.lib.R$id:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__titleDivider -> abs__titleDivider
    int abs__up -> abs__up
    int disableHome -> disableHome
    int edit_query -> edit_query
    int fullscreen -> fullscreen
    int homeAsUp -> homeAsUp
    int left -> left
    int listMode -> listMode
    int margin -> margin
    int normal -> normal
    int right -> right
    int selected_view -> selected_view
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int slidingmenumain -> slidingmenumain
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
com.slidingmenu.lib.R$integer -> com.slidingmenu.lib.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
com.slidingmenu.lib.R$layout -> com.slidingmenu.lib.R$layout:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__dialog_title_holo -> abs__dialog_title_holo
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_layout -> abs__list_menu_item_layout
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
    int slidingmenumain -> slidingmenumain
com.slidingmenu.lib.R$string -> com.slidingmenu.lib.R$string:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_dialog_title_default -> abs__activity_chooser_view_dialog_title_default
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__share_action_provider_share_with -> abs__share_action_provider_share_with
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
com.slidingmenu.lib.R$style -> com.slidingmenu.lib.R$style:
    int DialogWindowTitle_Sherlock -> DialogWindowTitle_Sherlock
    int DialogWindowTitle_Sherlock_Light -> DialogWindowTitle_Sherlock_Light
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Dialog -> Sherlock___Theme_Dialog
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock_DialogWindowTitle -> TextAppearance_Sherlock_DialogWindowTitle
    int TextAppearance_Sherlock_Light_DialogWindowTitle -> TextAppearance_Sherlock_Light_DialogWindowTitle
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Dialog -> Theme_Sherlock_Dialog
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_Dialog -> Theme_Sherlock_Light_Dialog
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
com.slidingmenu.lib.R$styleable -> com.slidingmenu.lib.R$styleable:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_android_windowIsFloating -> SherlockTheme_android_windowIsFloating
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.slidingmenu.lib.SlidingMenu -> com.slidingmenu.lib.SlidingMenu:
    java.lang.String TAG -> TAG
    int SLIDING_WINDOW -> SLIDING_WINDOW
    int SLIDING_CONTENT -> SLIDING_CONTENT
    boolean mActionbarOverlay -> mActionbarOverlay
    int TOUCHMODE_MARGIN -> TOUCHMODE_MARGIN
    int TOUCHMODE_FULLSCREEN -> TOUCHMODE_FULLSCREEN
    int TOUCHMODE_NONE -> TOUCHMODE_NONE
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int LEFT_RIGHT -> LEFT_RIGHT
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> mViewAbove
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> mViewBehind
    com.slidingmenu.lib.SlidingMenu$OnOpenListener mOpenListener -> mOpenListener
    com.slidingmenu.lib.SlidingMenu$OnCloseListener mCloseListener -> mCloseListener
    android.os.Handler mHandler -> mHandler
    void attachToActivity(android.app.Activity,int) -> attachToActivity
    void attachToActivity(android.app.Activity,int,boolean) -> attachToActivity
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    boolean isSlidingEnabled() -> isSlidingEnabled
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu() -> showMenu
    void showMenu(boolean) -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void showSecondaryMenu(boolean) -> showSecondaryMenu
    void showContent() -> showContent
    void showContent(boolean) -> showContent
    void toggle() -> toggle
    void toggle(boolean) -> toggle
    boolean isMenuShowing() -> isMenuShowing
    boolean isSecondaryMenuShowing() -> isSecondaryMenuShowing
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void addIgnoredView(android.view.View) -> addIgnoredView
    void removeIgnoredView(android.view.View) -> removeIgnoredView
    void clearIgnoredViews() -> clearIgnoredViews
    void setOnOpenListener(com.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setOnCloseListener(com.slidingmenu.lib.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> manageLayers
    com.slidingmenu.lib.SlidingMenu$OnOpenListener access$0(com.slidingmenu.lib.SlidingMenu) -> access$0
    com.slidingmenu.lib.SlidingMenu$OnCloseListener access$1(com.slidingmenu.lib.SlidingMenu) -> access$1
com.slidingmenu.lib.SlidingMenu$1 -> com.slidingmenu.lib.SlidingMenu$1:
    int POSITION_OPEN -> POSITION_OPEN
    int POSITION_CLOSE -> POSITION_CLOSE
    com.slidingmenu.lib.SlidingMenu this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
com.slidingmenu.lib.SlidingMenu$2 -> com.slidingmenu.lib.SlidingMenu$2:
    com.slidingmenu.lib.SlidingMenu this$0 -> this$0
    int val$layerType -> val$layerType
    void run() -> run
com.slidingmenu.lib.SlidingMenu$CanvasTransformer -> com.slidingmenu.lib.SlidingMenu$CanvasTransformer:
    void transformCanvas(android.graphics.Canvas,float) -> transformCanvas
com.slidingmenu.lib.SlidingMenu$OnCloseListener -> com.slidingmenu.lib.SlidingMenu$OnCloseListener:
    void onClose() -> onClose
com.slidingmenu.lib.SlidingMenu$OnClosedListener -> com.slidingmenu.lib.SlidingMenu$OnClosedListener:
    void onClosed() -> onClosed
com.slidingmenu.lib.SlidingMenu$OnOpenListener -> com.slidingmenu.lib.SlidingMenu$OnOpenListener:
    void onOpen() -> onOpen
com.slidingmenu.lib.SlidingMenu$OnOpenedListener -> com.slidingmenu.lib.SlidingMenu$OnOpenedListener:
    void onOpened() -> onOpened
com.slidingmenu.lib.SlidingMenu$SavedState -> com.slidingmenu.lib.SlidingMenu$SavedState:
    int mItem -> mItem
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> getItem
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.slidingmenu.lib.SlidingMenu$SavedState$1 -> com.slidingmenu.lib.SlidingMenu$SavedState$1:
    com.slidingmenu.lib.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.slidingmenu.lib.SlidingMenu$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.slidingmenu.lib.app.SlidingActivity -> com.slidingmenu.lib.app.SlidingActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingActivityBase -> com.slidingmenu.lib.app.SlidingActivityBase:
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(int) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
com.slidingmenu.lib.app.SlidingActivityHelper -> com.slidingmenu.lib.app.SlidingActivityHelper:
    android.app.Activity mActivity -> mActivity
    com.slidingmenu.lib.SlidingMenu mSlidingMenu -> mSlidingMenu
    android.view.View mViewAbove -> mViewAbove
    android.view.View mViewBehind -> mViewBehind
    boolean mBroadcasting -> mBroadcasting
    boolean mOnPostCreateCalled -> mOnPostCreateCalled
    boolean mEnableSlide -> mEnableSlide
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> registerAboveContentView
    void setContentView(android.view.View) -> setContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    com.slidingmenu.lib.SlidingMenu access$0(com.slidingmenu.lib.app.SlidingActivityHelper) -> access$0
com.slidingmenu.lib.app.SlidingActivityHelper$1 -> com.slidingmenu.lib.app.SlidingActivityHelper$1:
    com.slidingmenu.lib.app.SlidingActivityHelper this$0 -> this$0
    boolean val$open -> val$open
    boolean val$secondary -> val$secondary
    void run() -> run
com.slidingmenu.lib.app.SlidingFragmentActivity -> com.slidingmenu.lib.app.SlidingFragmentActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingListActivity -> com.slidingmenu.lib.app.SlidingListActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingMapActivity -> com.slidingmenu.lib.app.SlidingMapActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.slidingmenu.lib.app.SlidingPreferenceActivity -> com.slidingmenu.lib.app.SlidingPreferenceActivity:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> mHelper
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> setBehindContentView
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setBehindContentView
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> getSlidingMenu
    void toggle() -> toggle
    void showContent() -> showContent
    void showMenu() -> showMenu
    void showSecondaryMenu() -> showSecondaryMenu
    void setSlidingActionBarEnabled(boolean) -> setSlidingActionBarEnabled
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.squareup.picasso.Action -> com.squareup.picasso.Action:
    com.squareup.picasso.Picasso picasso -> picasso
    com.squareup.picasso.Request request -> request
    java.lang.ref.WeakReference target -> target
    boolean noFade -> noFade
    int memoryPolicy -> memoryPolicy
    int networkPolicy -> networkPolicy
    int errorResId -> errorResId
    android.graphics.drawable.Drawable errorDrawable -> errorDrawable
    java.lang.String key -> key
    java.lang.Object tag -> tag
    boolean willReplay -> willReplay
    boolean cancelled -> cancelled
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
    void cancel() -> cancel
    com.squareup.picasso.Request getRequest() -> getRequest
    java.lang.Object getTarget() -> getTarget
    java.lang.String getKey() -> getKey
    boolean isCancelled() -> isCancelled
    boolean willReplay() -> willReplay
    int getMemoryPolicy() -> getMemoryPolicy
    int getNetworkPolicy() -> getNetworkPolicy
    com.squareup.picasso.Picasso getPicasso() -> getPicasso
    com.squareup.picasso.Picasso$Priority getPriority() -> getPriority
    java.lang.Object getTag() -> getTag
com.squareup.picasso.Action$RequestWeakReference -> com.squareup.picasso.Action$RequestWeakReference:
    com.squareup.picasso.Action action -> action
com.squareup.picasso.AssetRequestHandler -> com.squareup.picasso.AssetRequestHandler:
    java.lang.String ANDROID_ASSET -> ANDROID_ASSET
    int ASSET_PREFIX_LENGTH -> ASSET_PREFIX_LENGTH
    android.content.res.AssetManager assetManager -> assetManager
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
    java.lang.String getFilePath(com.squareup.picasso.Request) -> getFilePath
com.squareup.picasso.BitmapHunter -> com.squareup.picasso.BitmapHunter:
    java.lang.Object DECODE_LOCK -> DECODE_LOCK
    java.lang.ThreadLocal NAME_BUILDER -> NAME_BUILDER
    java.util.concurrent.atomic.AtomicInteger SEQUENCE_GENERATOR -> SEQUENCE_GENERATOR
    com.squareup.picasso.RequestHandler ERRORING_HANDLER -> ERRORING_HANDLER
    int sequence -> sequence
    com.squareup.picasso.Picasso picasso -> picasso
    com.squareup.picasso.Dispatcher dispatcher -> dispatcher
    com.squareup.picasso.Cache cache -> cache
    com.squareup.picasso.Stats stats -> stats
    java.lang.String key -> key
    com.squareup.picasso.Request data -> data
    int memoryPolicy -> memoryPolicy
    int networkPolicy -> networkPolicy
    com.squareup.picasso.RequestHandler requestHandler -> requestHandler
    com.squareup.picasso.Action action -> action
    java.util.List actions -> actions
    android.graphics.Bitmap result -> result
    java.util.concurrent.Future future -> future
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> loadedFrom
    java.lang.Exception exception -> exception
    int exifRotation -> exifRotation
    int retryCount -> retryCount
    com.squareup.picasso.Picasso$Priority priority -> priority
    android.graphics.Bitmap decodeStream(java.io.InputStream,com.squareup.picasso.Request) -> decodeStream
    void run() -> run
    android.graphics.Bitmap hunt() -> hunt
    void attach(com.squareup.picasso.Action) -> attach
    void detach(com.squareup.picasso.Action) -> detach
    com.squareup.picasso.Picasso$Priority computeNewPriority() -> computeNewPriority
    boolean cancel() -> cancel
    boolean isCancelled() -> isCancelled
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> shouldRetry
    boolean supportsReplay() -> supportsReplay
    android.graphics.Bitmap getResult() -> getResult
    java.lang.String getKey() -> getKey
    int getMemoryPolicy() -> getMemoryPolicy
    com.squareup.picasso.Request getData() -> getData
    com.squareup.picasso.Action getAction() -> getAction
    com.squareup.picasso.Picasso getPicasso() -> getPicasso
    java.util.List getActions() -> getActions
    java.lang.Exception getException() -> getException
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    com.squareup.picasso.Picasso$Priority getPriority() -> getPriority
    void updateThreadName(com.squareup.picasso.Request) -> updateThreadName
    com.squareup.picasso.BitmapHunter forRequest(com.squareup.picasso.Picasso,com.squareup.picasso.Dispatcher,com.squareup.picasso.Cache,com.squareup.picasso.Stats,com.squareup.picasso.Action) -> forRequest
    android.graphics.Bitmap applyCustomTransformations(java.util.List,android.graphics.Bitmap) -> applyCustomTransformations
    android.graphics.Bitmap transformResult(com.squareup.picasso.Request,android.graphics.Bitmap,int) -> transformResult
    boolean shouldResize(boolean,int,int,int,int) -> shouldResize
com.squareup.picasso.BitmapHunter$1 -> com.squareup.picasso.BitmapHunter$1:
    java.lang.StringBuilder initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.squareup.picasso.BitmapHunter$2 -> com.squareup.picasso.BitmapHunter$2:
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
com.squareup.picasso.BitmapHunter$3 -> com.squareup.picasso.BitmapHunter$3:
    com.squareup.picasso.Transformation val$transformation -> val$transformation
    java.lang.RuntimeException val$e -> val$e
    void run() -> run
com.squareup.picasso.BitmapHunter$4 -> com.squareup.picasso.BitmapHunter$4:
    java.lang.StringBuilder val$builder -> val$builder
    void run() -> run
com.squareup.picasso.BitmapHunter$5 -> com.squareup.picasso.BitmapHunter$5:
    com.squareup.picasso.Transformation val$transformation -> val$transformation
    void run() -> run
com.squareup.picasso.BitmapHunter$6 -> com.squareup.picasso.BitmapHunter$6:
    com.squareup.picasso.Transformation val$transformation -> val$transformation
    void run() -> run
com.squareup.picasso.Cache -> com.squareup.picasso.Cache:
    com.squareup.picasso.Cache NONE -> NONE
    android.graphics.Bitmap get(java.lang.String) -> get
    void set(java.lang.String,android.graphics.Bitmap) -> set
    int size() -> size
    int maxSize() -> maxSize
    void clear() -> clear
    void clearKeyUri(java.lang.String) -> clearKeyUri
com.squareup.picasso.Cache$1 -> com.squareup.picasso.Cache$1:
    android.graphics.Bitmap get(java.lang.String) -> get
    void set(java.lang.String,android.graphics.Bitmap) -> set
    int size() -> size
    int maxSize() -> maxSize
    void clear() -> clear
    void clearKeyUri(java.lang.String) -> clearKeyUri
com.squareup.picasso.Callback -> com.squareup.picasso.Callback:
    void onSuccess() -> onSuccess
    void onError() -> onError
com.squareup.picasso.Callback$EmptyCallback -> com.squareup.picasso.Callback$EmptyCallback:
    void onSuccess() -> onSuccess
    void onError() -> onError
com.squareup.picasso.ContactsPhotoRequestHandler -> com.squareup.picasso.ContactsPhotoRequestHandler:
    int ID_LOOKUP -> ID_LOOKUP
    int ID_THUMBNAIL -> ID_THUMBNAIL
    int ID_CONTACT -> ID_CONTACT
    int ID_DISPLAY_PHOTO -> ID_DISPLAY_PHOTO
    android.content.UriMatcher matcher -> matcher
    android.content.Context context -> context
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
    java.io.InputStream getInputStream(com.squareup.picasso.Request) -> getInputStream
com.squareup.picasso.ContactsPhotoRequestHandler$ContactPhotoStreamIcs -> com.squareup.picasso.ContactsPhotoRequestHandler$ContactPhotoStreamIcs:
    java.io.InputStream get(android.content.ContentResolver,android.net.Uri) -> get
com.squareup.picasso.ContentStreamRequestHandler -> com.squareup.picasso.ContentStreamRequestHandler:
    android.content.Context context -> context
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
    java.io.InputStream getInputStream(com.squareup.picasso.Request) -> getInputStream
com.squareup.picasso.DeferredRequestCreator -> com.squareup.picasso.DeferredRequestCreator:
    com.squareup.picasso.RequestCreator creator -> creator
    java.lang.ref.WeakReference target -> target
    com.squareup.picasso.Callback callback -> callback
    boolean onPreDraw() -> onPreDraw
    void cancel() -> cancel
com.squareup.picasso.Dispatcher -> com.squareup.picasso.Dispatcher:
    int RETRY_DELAY -> RETRY_DELAY
    int AIRPLANE_MODE_ON -> AIRPLANE_MODE_ON
    int AIRPLANE_MODE_OFF -> AIRPLANE_MODE_OFF
    int REQUEST_SUBMIT -> REQUEST_SUBMIT
    int REQUEST_CANCEL -> REQUEST_CANCEL
    int REQUEST_GCED -> REQUEST_GCED
    int HUNTER_COMPLETE -> HUNTER_COMPLETE
    int HUNTER_RETRY -> HUNTER_RETRY
    int HUNTER_DECODE_FAILED -> HUNTER_DECODE_FAILED
    int HUNTER_DELAY_NEXT_BATCH -> HUNTER_DELAY_NEXT_BATCH
    int HUNTER_BATCH_COMPLETE -> HUNTER_BATCH_COMPLETE
    int NETWORK_STATE_CHANGE -> NETWORK_STATE_CHANGE
    int AIRPLANE_MODE_CHANGE -> AIRPLANE_MODE_CHANGE
    int TAG_PAUSE -> TAG_PAUSE
    int TAG_RESUME -> TAG_RESUME
    int REQUEST_BATCH_RESUME -> REQUEST_BATCH_RESUME
    java.lang.String DISPATCHER_THREAD_NAME -> DISPATCHER_THREAD_NAME
    int BATCH_DELAY -> BATCH_DELAY
    com.squareup.picasso.Dispatcher$DispatcherThread dispatcherThread -> dispatcherThread
    android.content.Context context -> context
    java.util.concurrent.ExecutorService service -> service
    com.squareup.picasso.Downloader downloader -> downloader
    java.util.Map hunterMap -> hunterMap
    java.util.Map failedActions -> failedActions
    java.util.Map pausedActions -> pausedActions
    java.util.Set pausedTags -> pausedTags
    android.os.Handler handler -> handler
    android.os.Handler mainThreadHandler -> mainThreadHandler
    com.squareup.picasso.Cache cache -> cache
    com.squareup.picasso.Stats stats -> stats
    java.util.List batch -> batch
    com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver receiver -> receiver
    boolean scansNetworkChanges -> scansNetworkChanges
    boolean airplaneMode -> airplaneMode
    void shutdown() -> shutdown
    void dispatchSubmit(com.squareup.picasso.Action) -> dispatchSubmit
    void dispatchCancel(com.squareup.picasso.Action) -> dispatchCancel
    void dispatchPauseTag(java.lang.Object) -> dispatchPauseTag
    void dispatchResumeTag(java.lang.Object) -> dispatchResumeTag
    void dispatchComplete(com.squareup.picasso.BitmapHunter) -> dispatchComplete
    void dispatchRetry(com.squareup.picasso.BitmapHunter) -> dispatchRetry
    void dispatchFailed(com.squareup.picasso.BitmapHunter) -> dispatchFailed
    void dispatchNetworkStateChange(android.net.NetworkInfo) -> dispatchNetworkStateChange
    void dispatchAirplaneModeChange(boolean) -> dispatchAirplaneModeChange
    void performSubmit(com.squareup.picasso.Action) -> performSubmit
    void performSubmit(com.squareup.picasso.Action,boolean) -> performSubmit
    void performCancel(com.squareup.picasso.Action) -> performCancel
    void performPauseTag(java.lang.Object) -> performPauseTag
    void performResumeTag(java.lang.Object) -> performResumeTag
    void performRetry(com.squareup.picasso.BitmapHunter) -> performRetry
    void performComplete(com.squareup.picasso.BitmapHunter) -> performComplete
    void performBatchComplete() -> performBatchComplete
    void performError(com.squareup.picasso.BitmapHunter,boolean) -> performError
    void performAirplaneModeChange(boolean) -> performAirplaneModeChange
    void performNetworkStateChange(android.net.NetworkInfo) -> performNetworkStateChange
    void flushFailedActions() -> flushFailedActions
    void markForReplay(com.squareup.picasso.BitmapHunter) -> markForReplay
    void markForReplay(com.squareup.picasso.Action) -> markForReplay
    void batch(com.squareup.picasso.BitmapHunter) -> batch
    void logBatch(java.util.List) -> logBatch
com.squareup.picasso.Dispatcher$1 -> com.squareup.picasso.Dispatcher$1:
    com.squareup.picasso.Dispatcher this$0 -> this$0
    void run() -> run
com.squareup.picasso.Dispatcher$DispatcherHandler -> com.squareup.picasso.Dispatcher$DispatcherHandler:
    com.squareup.picasso.Dispatcher dispatcher -> dispatcher
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Dispatcher$DispatcherHandler$1 -> com.squareup.picasso.Dispatcher$DispatcherHandler$1:
    android.os.Message val$msg -> val$msg
    com.squareup.picasso.Dispatcher$DispatcherHandler this$0 -> this$0
    void run() -> run
com.squareup.picasso.Dispatcher$DispatcherThread -> com.squareup.picasso.Dispatcher$DispatcherThread:
com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver -> com.squareup.picasso.Dispatcher$NetworkBroadcastReceiver:
    java.lang.String EXTRA_AIRPLANE_STATE -> EXTRA_AIRPLANE_STATE
    com.squareup.picasso.Dispatcher dispatcher -> dispatcher
    void register() -> register
    void unregister() -> unregister
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.squareup.picasso.Downloader -> com.squareup.picasso.Downloader:
    com.squareup.picasso.Downloader$Response load(android.net.Uri,int) -> load
    void shutdown() -> shutdown
com.squareup.picasso.Downloader$Response -> com.squareup.picasso.Downloader$Response:
    java.io.InputStream stream -> stream
    android.graphics.Bitmap bitmap -> bitmap
    boolean cached -> cached
    long contentLength -> contentLength
    java.io.InputStream getInputStream() -> getInputStream
    android.graphics.Bitmap getBitmap() -> getBitmap
    long getContentLength() -> getContentLength
com.squareup.picasso.Downloader$ResponseException -> com.squareup.picasso.Downloader$ResponseException:
    boolean localCacheOnly -> localCacheOnly
    int responseCode -> responseCode
com.squareup.picasso.FetchAction -> com.squareup.picasso.FetchAction:
    java.lang.Object target -> target
    com.squareup.picasso.Callback callback -> callback
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
    void cancel() -> cancel
    java.lang.Object getTarget() -> getTarget
com.squareup.picasso.FileRequestHandler -> com.squareup.picasso.FileRequestHandler:
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
    int getFileExifRotation(android.net.Uri) -> getFileExifRotation
com.squareup.picasso.GetAction -> com.squareup.picasso.GetAction:
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
com.squareup.picasso.ImageViewAction -> com.squareup.picasso.ImageViewAction:
    com.squareup.picasso.Callback callback -> callback
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
    void cancel() -> cancel
com.squareup.picasso.LruCache -> com.squareup.picasso.LruCache:
    java.util.LinkedHashMap map -> map
    int maxSize -> maxSize
    int size -> size
    int putCount -> putCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    android.graphics.Bitmap get(java.lang.String) -> get
    void set(java.lang.String,android.graphics.Bitmap) -> set
    void trimToSize(int) -> trimToSize
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    void clear() -> clear
    void clearKeyUri(java.lang.String) -> clearKeyUri
    int hitCount() -> hitCount
    int missCount() -> missCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
com.squareup.picasso.MarkableInputStream -> com.squareup.picasso.MarkableInputStream:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    java.io.InputStream in -> in
    long offset -> offset
    long reset -> reset
    long limit -> limit
    long defaultMark -> defaultMark
    void mark(int) -> mark
    long savePosition(int) -> savePosition
    void setLimit(long) -> setLimit
    void reset() -> reset
    void reset(long) -> reset
    void skip(long,long) -> skip
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    boolean markSupported() -> markSupported
com.squareup.picasso.MediaStoreRequestHandler -> com.squareup.picasso.MediaStoreRequestHandler:
    java.lang.String[] CONTENT_ORIENTATION -> CONTENT_ORIENTATION
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind getPicassoKind(int,int) -> getPicassoKind
    int getExifOrientation(android.content.ContentResolver,android.net.Uri) -> getExifOrientation
com.squareup.picasso.MediaStoreRequestHandler$PicassoKind -> com.squareup.picasso.MediaStoreRequestHandler$PicassoKind:
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind MICRO -> MICRO
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind MINI -> MINI
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind FULL -> FULL
    int androidKind -> androidKind
    int width -> width
    int height -> height
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] $VALUES -> $VALUES
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind[] values() -> values
    com.squareup.picasso.MediaStoreRequestHandler$PicassoKind valueOf(java.lang.String) -> valueOf
com.squareup.picasso.MemoryPolicy -> com.squareup.picasso.MemoryPolicy:
    com.squareup.picasso.MemoryPolicy NO_CACHE -> NO_CACHE
    com.squareup.picasso.MemoryPolicy NO_STORE -> NO_STORE
    int index -> index
    com.squareup.picasso.MemoryPolicy[] $VALUES -> $VALUES
    com.squareup.picasso.MemoryPolicy[] values() -> values
    com.squareup.picasso.MemoryPolicy valueOf(java.lang.String) -> valueOf
    boolean shouldReadFromMemoryCache(int) -> shouldReadFromMemoryCache
    boolean shouldWriteToMemoryCache(int) -> shouldWriteToMemoryCache
com.squareup.picasso.NetworkPolicy -> com.squareup.picasso.NetworkPolicy:
    com.squareup.picasso.NetworkPolicy NO_CACHE -> NO_CACHE
    com.squareup.picasso.NetworkPolicy NO_STORE -> NO_STORE
    com.squareup.picasso.NetworkPolicy OFFLINE -> OFFLINE
    int index -> index
    com.squareup.picasso.NetworkPolicy[] $VALUES -> $VALUES
    com.squareup.picasso.NetworkPolicy[] values() -> values
    com.squareup.picasso.NetworkPolicy valueOf(java.lang.String) -> valueOf
    boolean shouldReadFromDiskCache(int) -> shouldReadFromDiskCache
    boolean shouldWriteToDiskCache(int) -> shouldWriteToDiskCache
    boolean isOfflineOnly(int) -> isOfflineOnly
com.squareup.picasso.NetworkRequestHandler -> com.squareup.picasso.NetworkRequestHandler:
    int RETRY_COUNT -> RETRY_COUNT
    java.lang.String SCHEME_HTTP -> SCHEME_HTTP
    java.lang.String SCHEME_HTTPS -> SCHEME_HTTPS
    com.squareup.picasso.Downloader downloader -> downloader
    com.squareup.picasso.Stats stats -> stats
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
    int getRetryCount() -> getRetryCount
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> shouldRetry
    boolean supportsReplay() -> supportsReplay
com.squareup.picasso.NetworkRequestHandler$ContentLengthException -> com.squareup.picasso.NetworkRequestHandler$ContentLengthException:
com.squareup.picasso.OkHttpDownloader -> com.squareup.picasso.OkHttpDownloader:
    com.squareup.okhttp.OkHttpClient client -> client
    com.squareup.okhttp.OkHttpClient defaultOkHttpClient() -> defaultOkHttpClient
    com.squareup.okhttp.OkHttpClient getClient() -> getClient
    com.squareup.picasso.Downloader$Response load(android.net.Uri,int) -> load
    void shutdown() -> shutdown
com.squareup.picasso.Picasso -> com.squareup.picasso.Picasso:
    java.lang.String TAG -> TAG
    android.os.Handler HANDLER -> HANDLER
    com.squareup.picasso.Picasso singleton -> singleton
    com.squareup.picasso.Picasso$Listener listener -> listener
    com.squareup.picasso.Picasso$RequestTransformer requestTransformer -> requestTransformer
    com.squareup.picasso.Picasso$CleanupThread cleanupThread -> cleanupThread
    java.util.List requestHandlers -> requestHandlers
    android.content.Context context -> context
    com.squareup.picasso.Dispatcher dispatcher -> dispatcher
    com.squareup.picasso.Cache cache -> cache
    com.squareup.picasso.Stats stats -> stats
    java.util.Map targetToAction -> targetToAction
    java.util.Map targetToDeferredRequestCreator -> targetToDeferredRequestCreator
    java.lang.ref.ReferenceQueue referenceQueue -> referenceQueue
    android.graphics.Bitmap$Config defaultBitmapConfig -> defaultBitmapConfig
    boolean indicatorsEnabled -> indicatorsEnabled
    boolean loggingEnabled -> loggingEnabled
    boolean shutdown -> shutdown
    void cancelRequest(android.widget.ImageView) -> cancelRequest
    void cancelRequest(com.squareup.picasso.Target) -> cancelRequest
    void cancelRequest(android.widget.RemoteViews,int) -> cancelRequest
    void cancelTag(java.lang.Object) -> cancelTag
    void pauseTag(java.lang.Object) -> pauseTag
    void resumeTag(java.lang.Object) -> resumeTag
    com.squareup.picasso.RequestCreator load(android.net.Uri) -> load
    com.squareup.picasso.RequestCreator load(java.lang.String) -> load
    com.squareup.picasso.RequestCreator load(java.io.File) -> load
    com.squareup.picasso.RequestCreator load(int) -> load
    void invalidate(android.net.Uri) -> invalidate
    void invalidate(java.lang.String) -> invalidate
    void invalidate(java.io.File) -> invalidate
    boolean isDebugging() -> isDebugging
    void setDebugging(boolean) -> setDebugging
    void setIndicatorsEnabled(boolean) -> setIndicatorsEnabled
    boolean areIndicatorsEnabled() -> areIndicatorsEnabled
    void setLoggingEnabled(boolean) -> setLoggingEnabled
    boolean isLoggingEnabled() -> isLoggingEnabled
    com.squareup.picasso.StatsSnapshot getSnapshot() -> getSnapshot
    void shutdown() -> shutdown
    java.util.List getRequestHandlers() -> getRequestHandlers
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> transformRequest
    void defer(android.widget.ImageView,com.squareup.picasso.DeferredRequestCreator) -> defer
    void enqueueAndSubmit(com.squareup.picasso.Action) -> enqueueAndSubmit
    void submit(com.squareup.picasso.Action) -> submit
    android.graphics.Bitmap quickMemoryCacheCheck(java.lang.String) -> quickMemoryCacheCheck
    void complete(com.squareup.picasso.BitmapHunter) -> complete
    void resumeAction(com.squareup.picasso.Action) -> resumeAction
    void deliverAction(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,com.squareup.picasso.Action) -> deliverAction
    void cancelExistingRequest(java.lang.Object) -> cancelExistingRequest
    com.squareup.picasso.Picasso with(android.content.Context) -> with
    void setSingletonInstance(com.squareup.picasso.Picasso) -> setSingletonInstance
    void access$000(com.squareup.picasso.Picasso,java.lang.Object) -> access$000
com.squareup.picasso.Picasso$1 -> com.squareup.picasso.Picasso$1:
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Picasso$Builder -> com.squareup.picasso.Picasso$Builder:
    android.content.Context context -> context
    com.squareup.picasso.Downloader downloader -> downloader
    java.util.concurrent.ExecutorService service -> service
    com.squareup.picasso.Cache cache -> cache
    com.squareup.picasso.Picasso$Listener listener -> listener
    com.squareup.picasso.Picasso$RequestTransformer transformer -> transformer
    java.util.List requestHandlers -> requestHandlers
    android.graphics.Bitmap$Config defaultBitmapConfig -> defaultBitmapConfig
    boolean indicatorsEnabled -> indicatorsEnabled
    boolean loggingEnabled -> loggingEnabled
    com.squareup.picasso.Picasso$Builder defaultBitmapConfig(android.graphics.Bitmap$Config) -> defaultBitmapConfig
    com.squareup.picasso.Picasso$Builder downloader(com.squareup.picasso.Downloader) -> downloader
    com.squareup.picasso.Picasso$Builder executor(java.util.concurrent.ExecutorService) -> executor
    com.squareup.picasso.Picasso$Builder memoryCache(com.squareup.picasso.Cache) -> memoryCache
    com.squareup.picasso.Picasso$Builder listener(com.squareup.picasso.Picasso$Listener) -> listener
    com.squareup.picasso.Picasso$Builder requestTransformer(com.squareup.picasso.Picasso$RequestTransformer) -> requestTransformer
    com.squareup.picasso.Picasso$Builder addRequestHandler(com.squareup.picasso.RequestHandler) -> addRequestHandler
    com.squareup.picasso.Picasso$Builder debugging(boolean) -> debugging
    com.squareup.picasso.Picasso$Builder indicatorsEnabled(boolean) -> indicatorsEnabled
    com.squareup.picasso.Picasso$Builder loggingEnabled(boolean) -> loggingEnabled
    com.squareup.picasso.Picasso build() -> build
com.squareup.picasso.Picasso$CleanupThread -> com.squareup.picasso.Picasso$CleanupThread:
    java.lang.ref.ReferenceQueue referenceQueue -> referenceQueue
    android.os.Handler handler -> handler
    void run() -> run
    void shutdown() -> shutdown
com.squareup.picasso.Picasso$CleanupThread$1 -> com.squareup.picasso.Picasso$CleanupThread$1:
    java.lang.Exception val$e -> val$e
    com.squareup.picasso.Picasso$CleanupThread this$0 -> this$0
    void run() -> run
com.squareup.picasso.Picasso$Listener -> com.squareup.picasso.Picasso$Listener:
    void onImageLoadFailed(com.squareup.picasso.Picasso,android.net.Uri,java.lang.Exception) -> onImageLoadFailed
com.squareup.picasso.Picasso$LoadedFrom -> com.squareup.picasso.Picasso$LoadedFrom:
    com.squareup.picasso.Picasso$LoadedFrom MEMORY -> MEMORY
    com.squareup.picasso.Picasso$LoadedFrom DISK -> DISK
    com.squareup.picasso.Picasso$LoadedFrom NETWORK -> NETWORK
    int debugColor -> debugColor
    com.squareup.picasso.Picasso$LoadedFrom[] $VALUES -> $VALUES
    com.squareup.picasso.Picasso$LoadedFrom[] values() -> values
    com.squareup.picasso.Picasso$LoadedFrom valueOf(java.lang.String) -> valueOf
com.squareup.picasso.Picasso$Priority -> com.squareup.picasso.Picasso$Priority:
    com.squareup.picasso.Picasso$Priority LOW -> LOW
    com.squareup.picasso.Picasso$Priority NORMAL -> NORMAL
    com.squareup.picasso.Picasso$Priority HIGH -> HIGH
    com.squareup.picasso.Picasso$Priority[] $VALUES -> $VALUES
    com.squareup.picasso.Picasso$Priority[] values() -> values
    com.squareup.picasso.Picasso$Priority valueOf(java.lang.String) -> valueOf
com.squareup.picasso.Picasso$RequestTransformer -> com.squareup.picasso.Picasso$RequestTransformer:
    com.squareup.picasso.Picasso$RequestTransformer IDENTITY -> IDENTITY
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> transformRequest
com.squareup.picasso.Picasso$RequestTransformer$1 -> com.squareup.picasso.Picasso$RequestTransformer$1:
    com.squareup.picasso.Request transformRequest(com.squareup.picasso.Request) -> transformRequest
com.squareup.picasso.PicassoDrawable -> com.squareup.picasso.PicassoDrawable:
    android.graphics.Paint DEBUG_PAINT -> DEBUG_PAINT
    float FADE_DURATION -> FADE_DURATION
    boolean debugging -> debugging
    float density -> density
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> loadedFrom
    android.graphics.drawable.Drawable placeholder -> placeholder
    long startTimeMillis -> startTimeMillis
    boolean animating -> animating
    int alpha -> alpha
    void setBitmap(android.widget.ImageView,android.content.Context,android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom,boolean,boolean) -> setBitmap
    void setPlaceholder(android.widget.ImageView,android.graphics.drawable.Drawable) -> setPlaceholder
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void drawDebugIndicator(android.graphics.Canvas) -> drawDebugIndicator
    android.graphics.Path getTrianglePath(android.graphics.Point,int) -> getTrianglePath
com.squareup.picasso.PicassoExecutorService -> com.squareup.picasso.PicassoExecutorService:
    int DEFAULT_THREAD_COUNT -> DEFAULT_THREAD_COUNT
    void adjustThreadCount(android.net.NetworkInfo) -> adjustThreadCount
    void setThreadCount(int) -> setThreadCount
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
com.squareup.picasso.PicassoExecutorService$PicassoFutureTask -> com.squareup.picasso.PicassoExecutorService$PicassoFutureTask:
    com.squareup.picasso.BitmapHunter hunter -> hunter
    int compareTo(com.squareup.picasso.PicassoExecutorService$PicassoFutureTask) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.squareup.picasso.RemoteViewsAction -> com.squareup.picasso.RemoteViewsAction:
    android.widget.RemoteViews remoteViews -> remoteViews
    int viewId -> viewId
    com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget target -> target
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
    com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget getTarget() -> getTarget
    void setImageResource(int) -> setImageResource
    void update() -> update
    java.lang.Object getTarget() -> getTarget
com.squareup.picasso.RemoteViewsAction$AppWidgetAction -> com.squareup.picasso.RemoteViewsAction$AppWidgetAction:
    int[] appWidgetIds -> appWidgetIds
    void update() -> update
    java.lang.Object getTarget() -> getTarget
com.squareup.picasso.RemoteViewsAction$NotificationAction -> com.squareup.picasso.RemoteViewsAction$NotificationAction:
    int notificationId -> notificationId
    android.app.Notification notification -> notification
    void update() -> update
    java.lang.Object getTarget() -> getTarget
com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget -> com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget:
    android.widget.RemoteViews remoteViews -> remoteViews
    int viewId -> viewId
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.squareup.picasso.Request -> com.squareup.picasso.Request:
    long TOO_LONG_LOG -> TOO_LONG_LOG
    int id -> id
    long started -> started
    int networkPolicy -> networkPolicy
    android.net.Uri uri -> uri
    int resourceId -> resourceId
    java.lang.String stableKey -> stableKey
    java.util.List transformations -> transformations
    int targetWidth -> targetWidth
    int targetHeight -> targetHeight
    boolean centerCrop -> centerCrop
    boolean centerInside -> centerInside
    boolean onlyScaleDown -> onlyScaleDown
    float rotationDegrees -> rotationDegrees
    float rotationPivotX -> rotationPivotX
    float rotationPivotY -> rotationPivotY
    boolean hasRotationPivot -> hasRotationPivot
    android.graphics.Bitmap$Config config -> config
    com.squareup.picasso.Picasso$Priority priority -> priority
    java.lang.String toString() -> toString
    java.lang.String logId() -> logId
    java.lang.String plainId() -> plainId
    java.lang.String getName() -> getName
    boolean hasSize() -> hasSize
    boolean needsTransformation() -> needsTransformation
    boolean needsMatrixTransform() -> needsMatrixTransform
    boolean hasCustomTransformations() -> hasCustomTransformations
    com.squareup.picasso.Request$Builder buildUpon() -> buildUpon
com.squareup.picasso.Request$1 -> com.squareup.picasso.Request$1:
com.squareup.picasso.Request$Builder -> com.squareup.picasso.Request$Builder:
    android.net.Uri uri -> uri
    int resourceId -> resourceId
    java.lang.String stableKey -> stableKey
    int targetWidth -> targetWidth
    int targetHeight -> targetHeight
    boolean centerCrop -> centerCrop
    boolean centerInside -> centerInside
    boolean onlyScaleDown -> onlyScaleDown
    float rotationDegrees -> rotationDegrees
    float rotationPivotX -> rotationPivotX
    float rotationPivotY -> rotationPivotY
    boolean hasRotationPivot -> hasRotationPivot
    java.util.List transformations -> transformations
    android.graphics.Bitmap$Config config -> config
    com.squareup.picasso.Picasso$Priority priority -> priority
    boolean hasImage() -> hasImage
    boolean hasSize() -> hasSize
    boolean hasPriority() -> hasPriority
    com.squareup.picasso.Request$Builder setUri(android.net.Uri) -> setUri
    com.squareup.picasso.Request$Builder setResourceId(int) -> setResourceId
    com.squareup.picasso.Request$Builder stableKey(java.lang.String) -> stableKey
    com.squareup.picasso.Request$Builder resize(int,int) -> resize
    com.squareup.picasso.Request$Builder clearResize() -> clearResize
    com.squareup.picasso.Request$Builder centerCrop() -> centerCrop
    com.squareup.picasso.Request$Builder clearCenterCrop() -> clearCenterCrop
    com.squareup.picasso.Request$Builder centerInside() -> centerInside
    com.squareup.picasso.Request$Builder clearCenterInside() -> clearCenterInside
    com.squareup.picasso.Request$Builder onlyScaleDown() -> onlyScaleDown
    com.squareup.picasso.Request$Builder clearOnlyScaleDown() -> clearOnlyScaleDown
    com.squareup.picasso.Request$Builder rotate(float) -> rotate
    com.squareup.picasso.Request$Builder rotate(float,float,float) -> rotate
    com.squareup.picasso.Request$Builder clearRotation() -> clearRotation
    com.squareup.picasso.Request$Builder config(android.graphics.Bitmap$Config) -> config
    com.squareup.picasso.Request$Builder priority(com.squareup.picasso.Picasso$Priority) -> priority
    com.squareup.picasso.Request$Builder transform(com.squareup.picasso.Transformation) -> transform
    com.squareup.picasso.Request$Builder transform(java.util.List) -> transform
    com.squareup.picasso.Request build() -> build
com.squareup.picasso.RequestCreator -> com.squareup.picasso.RequestCreator:
    java.util.concurrent.atomic.AtomicInteger nextId -> nextId
    com.squareup.picasso.Picasso picasso -> picasso
    com.squareup.picasso.Request$Builder data -> data
    boolean noFade -> noFade
    boolean deferred -> deferred
    boolean setPlaceholder -> setPlaceholder
    int placeholderResId -> placeholderResId
    int errorResId -> errorResId
    int memoryPolicy -> memoryPolicy
    int networkPolicy -> networkPolicy
    android.graphics.drawable.Drawable placeholderDrawable -> placeholderDrawable
    android.graphics.drawable.Drawable errorDrawable -> errorDrawable
    java.lang.Object tag -> tag
    com.squareup.picasso.RequestCreator noPlaceholder() -> noPlaceholder
    com.squareup.picasso.RequestCreator placeholder(int) -> placeholder
    com.squareup.picasso.RequestCreator placeholder(android.graphics.drawable.Drawable) -> placeholder
    com.squareup.picasso.RequestCreator error(int) -> error
    com.squareup.picasso.RequestCreator error(android.graphics.drawable.Drawable) -> error
    com.squareup.picasso.RequestCreator tag(java.lang.Object) -> tag
    com.squareup.picasso.RequestCreator fit() -> fit
    com.squareup.picasso.RequestCreator unfit() -> unfit
    com.squareup.picasso.RequestCreator resizeDimen(int,int) -> resizeDimen
    com.squareup.picasso.RequestCreator resize(int,int) -> resize
    com.squareup.picasso.RequestCreator centerCrop() -> centerCrop
    com.squareup.picasso.RequestCreator centerInside() -> centerInside
    com.squareup.picasso.RequestCreator onlyScaleDown() -> onlyScaleDown
    com.squareup.picasso.RequestCreator rotate(float) -> rotate
    com.squareup.picasso.RequestCreator rotate(float,float,float) -> rotate
    com.squareup.picasso.RequestCreator config(android.graphics.Bitmap$Config) -> config
    com.squareup.picasso.RequestCreator stableKey(java.lang.String) -> stableKey
    com.squareup.picasso.RequestCreator priority(com.squareup.picasso.Picasso$Priority) -> priority
    com.squareup.picasso.RequestCreator transform(com.squareup.picasso.Transformation) -> transform
    com.squareup.picasso.RequestCreator transform(java.util.List) -> transform
    com.squareup.picasso.RequestCreator skipMemoryCache() -> skipMemoryCache
    com.squareup.picasso.RequestCreator memoryPolicy(com.squareup.picasso.MemoryPolicy,com.squareup.picasso.MemoryPolicy[]) -> memoryPolicy
    com.squareup.picasso.RequestCreator networkPolicy(com.squareup.picasso.NetworkPolicy,com.squareup.picasso.NetworkPolicy[]) -> networkPolicy
    com.squareup.picasso.RequestCreator noFade() -> noFade
    android.graphics.Bitmap get() -> get
    void fetch() -> fetch
    void fetch(com.squareup.picasso.Callback) -> fetch
    void into(com.squareup.picasso.Target) -> into
    void into(android.widget.RemoteViews,int,int,android.app.Notification) -> into
    void into(android.widget.RemoteViews,int,int[]) -> into
    void into(android.widget.ImageView) -> into
    void into(android.widget.ImageView,com.squareup.picasso.Callback) -> into
    android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    com.squareup.picasso.Request createRequest(long) -> createRequest
    void performRemoteViewInto(com.squareup.picasso.RemoteViewsAction) -> performRemoteViewInto
com.squareup.picasso.RequestHandler -> com.squareup.picasso.RequestHandler:
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
    int getRetryCount() -> getRetryCount
    boolean shouldRetry(boolean,android.net.NetworkInfo) -> shouldRetry
    boolean supportsReplay() -> supportsReplay
    android.graphics.BitmapFactory$Options createBitmapOptions(com.squareup.picasso.Request) -> createBitmapOptions
    boolean requiresInSampleSize(android.graphics.BitmapFactory$Options) -> requiresInSampleSize
    void calculateInSampleSize(int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request) -> calculateInSampleSize
    void calculateInSampleSize(int,int,int,int,android.graphics.BitmapFactory$Options,com.squareup.picasso.Request) -> calculateInSampleSize
com.squareup.picasso.RequestHandler$Result -> com.squareup.picasso.RequestHandler$Result:
    com.squareup.picasso.Picasso$LoadedFrom loadedFrom -> loadedFrom
    android.graphics.Bitmap bitmap -> bitmap
    java.io.InputStream stream -> stream
    int exifOrientation -> exifOrientation
    android.graphics.Bitmap getBitmap() -> getBitmap
    java.io.InputStream getStream() -> getStream
    com.squareup.picasso.Picasso$LoadedFrom getLoadedFrom() -> getLoadedFrom
    int getExifOrientation() -> getExifOrientation
com.squareup.picasso.ResourceRequestHandler -> com.squareup.picasso.ResourceRequestHandler:
    android.content.Context context -> context
    boolean canHandleRequest(com.squareup.picasso.Request) -> canHandleRequest
    com.squareup.picasso.RequestHandler$Result load(com.squareup.picasso.Request,int) -> load
    android.graphics.Bitmap decodeResource(android.content.res.Resources,int,com.squareup.picasso.Request) -> decodeResource
com.squareup.picasso.Stats -> com.squareup.picasso.Stats:
    int CACHE_HIT -> CACHE_HIT
    int CACHE_MISS -> CACHE_MISS
    int BITMAP_DECODE_FINISHED -> BITMAP_DECODE_FINISHED
    int BITMAP_TRANSFORMED_FINISHED -> BITMAP_TRANSFORMED_FINISHED
    int DOWNLOAD_FINISHED -> DOWNLOAD_FINISHED
    java.lang.String STATS_THREAD_NAME -> STATS_THREAD_NAME
    android.os.HandlerThread statsThread -> statsThread
    com.squareup.picasso.Cache cache -> cache
    android.os.Handler handler -> handler
    long cacheHits -> cacheHits
    long cacheMisses -> cacheMisses
    long totalDownloadSize -> totalDownloadSize
    long totalOriginalBitmapSize -> totalOriginalBitmapSize
    long totalTransformedBitmapSize -> totalTransformedBitmapSize
    long averageDownloadSize -> averageDownloadSize
    long averageOriginalBitmapSize -> averageOriginalBitmapSize
    long averageTransformedBitmapSize -> averageTransformedBitmapSize
    int downloadCount -> downloadCount
    int originalBitmapCount -> originalBitmapCount
    int transformedBitmapCount -> transformedBitmapCount
    void dispatchBitmapDecoded(android.graphics.Bitmap) -> dispatchBitmapDecoded
    void dispatchBitmapTransformed(android.graphics.Bitmap) -> dispatchBitmapTransformed
    void dispatchDownloadFinished(long) -> dispatchDownloadFinished
    void dispatchCacheHit() -> dispatchCacheHit
    void dispatchCacheMiss() -> dispatchCacheMiss
    void shutdown() -> shutdown
    void performCacheHit() -> performCacheHit
    void performCacheMiss() -> performCacheMiss
    void performDownloadFinished(java.lang.Long) -> performDownloadFinished
    void performBitmapDecoded(long) -> performBitmapDecoded
    void performBitmapTransformed(long) -> performBitmapTransformed
    com.squareup.picasso.StatsSnapshot createSnapshot() -> createSnapshot
    void processBitmap(android.graphics.Bitmap,int) -> processBitmap
    long getAverage(int,long) -> getAverage
com.squareup.picasso.Stats$StatsHandler -> com.squareup.picasso.Stats$StatsHandler:
    com.squareup.picasso.Stats stats -> stats
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Stats$StatsHandler$1 -> com.squareup.picasso.Stats$StatsHandler$1:
    android.os.Message val$msg -> val$msg
    com.squareup.picasso.Stats$StatsHandler this$0 -> this$0
    void run() -> run
com.squareup.picasso.StatsSnapshot -> com.squareup.picasso.StatsSnapshot:
    int maxSize -> maxSize
    int size -> size
    long cacheHits -> cacheHits
    long cacheMisses -> cacheMisses
    long totalDownloadSize -> totalDownloadSize
    long totalOriginalBitmapSize -> totalOriginalBitmapSize
    long totalTransformedBitmapSize -> totalTransformedBitmapSize
    long averageDownloadSize -> averageDownloadSize
    long averageOriginalBitmapSize -> averageOriginalBitmapSize
    long averageTransformedBitmapSize -> averageTransformedBitmapSize
    int downloadCount -> downloadCount
    int originalBitmapCount -> originalBitmapCount
    int transformedBitmapCount -> transformedBitmapCount
    long timeStamp -> timeStamp
    void dump() -> dump
    void dump(java.io.PrintWriter) -> dump
    java.lang.String toString() -> toString
com.squareup.picasso.Target -> com.squareup.picasso.Target:
    void onBitmapLoaded(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> onBitmapLoaded
    void onBitmapFailed(android.graphics.drawable.Drawable) -> onBitmapFailed
    void onPrepareLoad(android.graphics.drawable.Drawable) -> onPrepareLoad
com.squareup.picasso.TargetAction -> com.squareup.picasso.TargetAction:
    void complete(android.graphics.Bitmap,com.squareup.picasso.Picasso$LoadedFrom) -> complete
    void error() -> error
com.squareup.picasso.Transformation -> com.squareup.picasso.Transformation:
    android.graphics.Bitmap transform(android.graphics.Bitmap) -> transform
    java.lang.String key() -> key
com.squareup.picasso.UrlConnectionDownloader -> com.squareup.picasso.UrlConnectionDownloader:
    java.lang.String RESPONSE_SOURCE -> RESPONSE_SOURCE
    java.lang.Object cache -> cache
    java.lang.Object lock -> lock
    java.lang.String FORCE_CACHE -> FORCE_CACHE
    java.lang.ThreadLocal CACHE_HEADER_BUILDER -> CACHE_HEADER_BUILDER
    android.content.Context context -> context
    java.net.HttpURLConnection openConnection(android.net.Uri) -> openConnection
    com.squareup.picasso.Downloader$Response load(android.net.Uri,int) -> load
    void shutdown() -> shutdown
    void installCacheIfNeeded(android.content.Context) -> installCacheIfNeeded
com.squareup.picasso.UrlConnectionDownloader$1 -> com.squareup.picasso.UrlConnectionDownloader$1:
    java.lang.StringBuilder initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.squareup.picasso.UrlConnectionDownloader$ResponseCacheIcs -> com.squareup.picasso.UrlConnectionDownloader$ResponseCacheIcs:
    java.lang.Object install(android.content.Context) -> install
    void close(java.lang.Object) -> close
com.squareup.picasso.Utils -> com.squareup.picasso.Utils:
    java.lang.String THREAD_PREFIX -> THREAD_PREFIX
    java.lang.String THREAD_IDLE_NAME -> THREAD_IDLE_NAME
    int DEFAULT_READ_TIMEOUT_MILLIS -> DEFAULT_READ_TIMEOUT_MILLIS
    int DEFAULT_WRITE_TIMEOUT_MILLIS -> DEFAULT_WRITE_TIMEOUT_MILLIS
    int DEFAULT_CONNECT_TIMEOUT_MILLIS -> DEFAULT_CONNECT_TIMEOUT_MILLIS
    java.lang.String PICASSO_CACHE -> PICASSO_CACHE
    int KEY_PADDING -> KEY_PADDING
    int MIN_DISK_CACHE_SIZE -> MIN_DISK_CACHE_SIZE
    int MAX_DISK_CACHE_SIZE -> MAX_DISK_CACHE_SIZE
    int THREAD_LEAK_CLEANING_MS -> THREAD_LEAK_CLEANING_MS
    char KEY_SEPARATOR -> KEY_SEPARATOR
    java.lang.StringBuilder MAIN_THREAD_KEY_BUILDER -> MAIN_THREAD_KEY_BUILDER
    java.lang.String OWNER_MAIN -> OWNER_MAIN
    java.lang.String OWNER_DISPATCHER -> OWNER_DISPATCHER
    java.lang.String OWNER_HUNTER -> OWNER_HUNTER
    java.lang.String VERB_CREATED -> VERB_CREATED
    java.lang.String VERB_CHANGED -> VERB_CHANGED
    java.lang.String VERB_IGNORED -> VERB_IGNORED
    java.lang.String VERB_ENQUEUED -> VERB_ENQUEUED
    java.lang.String VERB_CANCELED -> VERB_CANCELED
    java.lang.String VERB_BATCHED -> VERB_BATCHED
    java.lang.String VERB_RETRYING -> VERB_RETRYING
    java.lang.String VERB_EXECUTING -> VERB_EXECUTING
    java.lang.String VERB_DECODED -> VERB_DECODED
    java.lang.String VERB_TRANSFORMED -> VERB_TRANSFORMED
    java.lang.String VERB_JOINED -> VERB_JOINED
    java.lang.String VERB_REMOVED -> VERB_REMOVED
    java.lang.String VERB_DELIVERED -> VERB_DELIVERED
    java.lang.String VERB_REPLAYING -> VERB_REPLAYING
    java.lang.String VERB_COMPLETED -> VERB_COMPLETED
    java.lang.String VERB_ERRORED -> VERB_ERRORED
    java.lang.String VERB_PAUSED -> VERB_PAUSED
    java.lang.String VERB_RESUMED -> VERB_RESUMED
    int WEBP_FILE_HEADER_SIZE -> WEBP_FILE_HEADER_SIZE
    java.lang.String WEBP_FILE_HEADER_RIFF -> WEBP_FILE_HEADER_RIFF
    java.lang.String WEBP_FILE_HEADER_WEBP -> WEBP_FILE_HEADER_WEBP
    int getBitmapBytes(android.graphics.Bitmap) -> getBitmapBytes
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    void checkNotMain() -> checkNotMain
    void checkMain() -> checkMain
    boolean isMain() -> isMain
    java.lang.String getLogIdsForHunter(com.squareup.picasso.BitmapHunter) -> getLogIdsForHunter
    java.lang.String getLogIdsForHunter(com.squareup.picasso.BitmapHunter,java.lang.String) -> getLogIdsForHunter
    void log(java.lang.String,java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> log
    java.lang.String createKey(com.squareup.picasso.Request) -> createKey
    java.lang.String createKey(com.squareup.picasso.Request,java.lang.StringBuilder) -> createKey
    void closeQuietly(java.io.InputStream) -> closeQuietly
    boolean parseResponseSourceHeader(java.lang.String) -> parseResponseSourceHeader
    com.squareup.picasso.Downloader createDefaultDownloader(android.content.Context) -> createDefaultDownloader
    java.io.File createDefaultCacheDir(android.content.Context) -> createDefaultCacheDir
    long calculateDiskCacheSize(java.io.File) -> calculateDiskCacheSize
    int calculateMemoryCacheSize(android.content.Context) -> calculateMemoryCacheSize
    boolean isAirplaneModeOn(android.content.Context) -> isAirplaneModeOn
    java.lang.Object getService(android.content.Context,java.lang.String) -> getService
    boolean hasPermission(android.content.Context,java.lang.String) -> hasPermission
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    boolean isWebPFile(java.io.InputStream) -> isWebPFile
    int getResourceId(android.content.res.Resources,com.squareup.picasso.Request) -> getResourceId
    android.content.res.Resources getResources(android.content.Context,com.squareup.picasso.Request) -> getResources
    void flushStackLocalLeaks(android.os.Looper) -> flushStackLocalLeaks
com.squareup.picasso.Utils$1 -> com.squareup.picasso.Utils$1:
    void handleMessage(android.os.Message) -> handleMessage
com.squareup.picasso.Utils$ActivityManagerHoneycomb -> com.squareup.picasso.Utils$ActivityManagerHoneycomb:
    int getLargeMemoryClass(android.app.ActivityManager) -> getLargeMemoryClass
com.squareup.picasso.Utils$BitmapHoneycombMR1 -> com.squareup.picasso.Utils$BitmapHoneycombMR1:
    int getByteCount(android.graphics.Bitmap) -> getByteCount
com.squareup.picasso.Utils$OkHttpLoaderCreator -> com.squareup.picasso.Utils$OkHttpLoaderCreator:
    com.squareup.picasso.Downloader create(android.content.Context) -> create
com.squareup.picasso.Utils$PicassoThread -> com.squareup.picasso.Utils$PicassoThread:
    void run() -> run
com.squareup.picasso.Utils$PicassoThreadFactory -> com.squareup.picasso.Utils$PicassoThreadFactory:
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.tencent.mm.a.a -> com.tencent.mm.a.a:
    java.lang.String a(byte[]) -> a
com.tencent.mm.sdk.a -> com.tencent.mm.sdk.a:
    android.content.ContentResolver a -> a
    java.lang.String[] b -> b
    java.util.HashMap c -> c
    com.tencent.mm.sdk.a$a d -> d
    java.lang.Object getValue(java.lang.String) -> getValue
    java.util.Map getAll() -> getAll
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    int getInt(java.lang.String,int) -> getInt
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    boolean contains(java.lang.String) -> contains
    android.content.SharedPreferences$Editor edit() -> edit
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
    java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
com.tencent.mm.sdk.a$a -> com.tencent.mm.sdk.a$a:
    java.util.Map e -> e
    java.util.Set f -> f
    boolean g -> g
    android.content.ContentResolver a -> a
    android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
    android.content.SharedPreferences$Editor clear() -> clear
    boolean commit() -> commit
    void apply() -> apply
    android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
com.tencent.mm.sdk.a.a -> com.tencent.mm.sdk.a.a:
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a$a) -> a
com.tencent.mm.sdk.a.a$a -> com.tencent.mm.sdk.a.a$a:
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    int flags -> flags
    android.os.Bundle k -> k
com.tencent.mm.sdk.a.a.a -> com.tencent.mm.sdk.a.a.a:
    boolean a(android.content.Context,com.tencent.mm.sdk.a.a.a$a) -> a
com.tencent.mm.sdk.a.a.a$a -> com.tencent.mm.sdk.a.a.a$a:
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String j -> j
    android.os.Bundle k -> k
com.tencent.mm.sdk.a.a.b -> com.tencent.mm.sdk.a.a.b:
    byte[] a(java.lang.String,int,java.lang.String) -> a
com.tencent.mm.sdk.b.a -> com.tencent.mm.sdk.b.a:
    int level -> level
    com.tencent.mm.sdk.b.a$a n -> n
    com.tencent.mm.sdk.b.a$a o -> o
    java.lang.String p -> p
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    int a() -> a
com.tencent.mm.sdk.b.a$a -> com.tencent.mm.sdk.b.a$a:
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void f(java.lang.String,java.lang.String) -> f
    int b() -> b
com.tencent.mm.sdk.b.b -> com.tencent.mm.sdk.b.b:
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void f(java.lang.String,java.lang.String) -> f
    int b() -> b
com.tencent.mm.sdk.b.c -> com.tencent.mm.sdk.b.c:
    long[] q -> q
    java.util.TimeZone GMT -> GMT
    char[] r -> r
    java.lang.String[] s -> s
    boolean a(java.lang.String) -> a
com.tencent.mm.sdk.c.a -> com.tencent.mm.sdk.c.a:
com.tencent.mm.sdk.c.a$a -> com.tencent.mm.sdk.c.a$a:
    java.lang.Object a(int,java.lang.String) -> a
com.tencent.mm.sdk.c.a$b -> com.tencent.mm.sdk.c.a$b:
    android.net.Uri CONTENT_URI -> CONTENT_URI
com.tencent.mm.sdk.constants.Build -> com.tencent.mm.sdk.constants.Build:
    int SDK_INT -> SDK_INT
    java.lang.String SDK_VERSION_NAME -> SDK_VERSION_NAME
    int MIN_SDK_INT -> MIN_SDK_INT
    int TIMELINE_SUPPORTED_SDK_INT -> TIMELINE_SUPPORTED_SDK_INT
    int EMOJI_SUPPORTED_SDK_INT -> EMOJI_SUPPORTED_SDK_INT
    int MUSIC_DATA_URL_SUPPORTED_SDK_INT -> MUSIC_DATA_URL_SUPPORTED_SDK_INT
    int PAY_SUPPORTED_SDK_INT -> PAY_SUPPORTED_SDK_INT
    int OPENID_SUPPORTED_SDK_INT -> OPENID_SUPPORTED_SDK_INT
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
com.tencent.mm.sdk.constants.ConstantsAPI -> com.tencent.mm.sdk.constants.ConstantsAPI:
    java.lang.String ACTION_HANDLE_APP_REGISTER -> ACTION_HANDLE_APP_REGISTER
    java.lang.String ACTION_HANDLE_APP_UNREGISTER -> ACTION_HANDLE_APP_UNREGISTER
    java.lang.String ACTION_REFRESH_WXAPP -> ACTION_REFRESH_WXAPP
    int COMMAND_UNKNOWN -> COMMAND_UNKNOWN
    int COMMAND_SENDAUTH -> COMMAND_SENDAUTH
    int COMMAND_SENDMESSAGE_TO_WX -> COMMAND_SENDMESSAGE_TO_WX
    int COMMAND_GETMESSAGE_FROM_WX -> COMMAND_GETMESSAGE_FROM_WX
    int COMMAND_SHOWMESSAGE_FROM_WX -> COMMAND_SHOWMESSAGE_FROM_WX
    int COMMAND_PAY_BY_WX -> COMMAND_PAY_BY_WX
    int COMMAND_LAUNCH_BY_WX -> COMMAND_LAUNCH_BY_WX
    java.lang.String APP_PACKAGE -> APP_PACKAGE
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String CONTENT -> CONTENT
    java.lang.String CHECK_SUM -> CHECK_SUM
com.tencent.mm.sdk.constants.ConstantsAPI$Token -> com.tencent.mm.sdk.constants.ConstantsAPI$Token:
    java.lang.String WX_TOKEN_KEY -> WX_TOKEN_KEY
    java.lang.String WX_TOKEN_VALUE_MSG -> WX_TOKEN_VALUE_MSG
    java.lang.String WX_TOKEN_PLATFORMID_KEY -> WX_TOKEN_PLATFORMID_KEY
    java.lang.String WX_TOKEN_PLATFORMID_VALUE -> WX_TOKEN_PLATFORMID_VALUE
com.tencent.mm.sdk.constants.ConstantsAPI$WXApp -> com.tencent.mm.sdk.constants.ConstantsAPI$WXApp:
    java.lang.String WXAPP_PACKAGE_NAME -> WXAPP_PACKAGE_NAME
    java.lang.String WXAPP_BROADCAST_PERMISSION -> WXAPP_BROADCAST_PERMISSION
    java.lang.String WXAPP_MSG_ENTRY_CLASSNAME -> WXAPP_MSG_ENTRY_CLASSNAME
com.tencent.mm.sdk.modelbase.BaseReq -> com.tencent.mm.sdk.modelbase.BaseReq:
    java.lang.String transaction -> transaction
    java.lang.String openId -> openId
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbase.BaseResp -> com.tencent.mm.sdk.modelbase.BaseResp:
    int errCode -> errCode
    java.lang.String errStr -> errStr
    java.lang.String transaction -> transaction
    java.lang.String openId -> openId
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelbase.BaseResp$ErrCode -> com.tencent.mm.sdk.modelbase.BaseResp$ErrCode:
    int ERR_OK -> ERR_OK
    int ERR_COMM -> ERR_COMM
    int ERR_USER_CANCEL -> ERR_USER_CANCEL
    int ERR_SENT_FAILED -> ERR_SENT_FAILED
    int ERR_AUTH_DENIED -> ERR_AUTH_DENIED
    int ERR_UNSUPPORT -> ERR_UNSUPPORT
com.tencent.mm.sdk.modelmsg.GetMessageFromWX -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX:
com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Req -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Req:
    java.lang.String username -> username
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Resp -> com.tencent.mm.sdk.modelmsg.GetMessageFromWX$Resp:
    java.lang.String TAG -> TAG
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.LaunchFromWX -> com.tencent.mm.sdk.modelmsg.LaunchFromWX:
com.tencent.mm.sdk.modelmsg.LaunchFromWX$Req -> com.tencent.mm.sdk.modelmsg.LaunchFromWX$Req:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.LaunchFromWX$Resp -> com.tencent.mm.sdk.modelmsg.LaunchFromWX$Resp:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendAuth -> com.tencent.mm.sdk.modelmsg.SendAuth:
com.tencent.mm.sdk.modelmsg.SendAuth$Req -> com.tencent.mm.sdk.modelmsg.SendAuth$Req:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String scope -> scope
    java.lang.String state -> state
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendAuth$Resp -> com.tencent.mm.sdk.modelmsg.SendAuth$Resp:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String code -> code
    java.lang.String state -> state
    java.lang.String url -> url
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendMessageToWX -> com.tencent.mm.sdk.modelmsg.SendMessageToWX:
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Req -> com.tencent.mm.sdk.modelmsg.SendMessageToWX$Req:
    int WXSceneSession -> WXSceneSession
    int WXSceneTimeline -> WXSceneTimeline
    int WXSceneFavorite -> WXSceneFavorite
    java.lang.String TAG -> TAG
    int FAV_CONTENT_LENGTH_LIMIT -> FAV_CONTENT_LENGTH_LIMIT
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int scene -> scene
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.SendMessageToWX$Resp -> com.tencent.mm.sdk.modelmsg.SendMessageToWX$Resp:
    int getType() -> getType
    void fromBundle(android.os.Bundle) -> fromBundle
    void toBundle(android.os.Bundle) -> toBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX:
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Req -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Req:
    com.tencent.mm.sdk.modelmsg.WXMediaMessage message -> message
    int getType() -> getType
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Resp -> com.tencent.mm.sdk.modelmsg.ShowMessageFromWX$Resp:
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXAppExtendObject -> com.tencent.mm.sdk.modelmsg.WXAppExtendObject:
    java.lang.String TAG -> TAG
    int EXTINFO_LENGTH_LIMIT -> EXTINFO_LENGTH_LIMIT
    int PATH_LENGTH_LIMIT -> PATH_LENGTH_LIMIT
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    java.lang.String extInfo -> extInfo
    java.lang.String filePath -> filePath
    byte[] fileData -> fileData
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXAppLaunchData -> com.tencent.mm.sdk.modelmsg.WXAppLaunchData:
    java.lang.String ACTION_HANDLE_WXAPPLAUNCH -> ACTION_HANDLE_WXAPPLAUNCH
    java.lang.String ACTION_HANDLE_WXAPP_RESULT -> ACTION_HANDLE_WXAPP_RESULT
    java.lang.String ACTION_HANDLE_WXAPP_SHOW -> ACTION_HANDLE_WXAPP_SHOW
    int launchType -> launchType
    java.lang.String message -> message
com.tencent.mm.sdk.modelmsg.WXAppLaunchData$Builder -> com.tencent.mm.sdk.modelmsg.WXAppLaunchData$Builder:
    com.tencent.mm.sdk.modelmsg.WXAppLaunchData fromBundle(android.os.Bundle) -> fromBundle
    android.os.Bundle toBundle(com.tencent.mm.sdk.modelmsg.WXAppLaunchData) -> toBundle
com.tencent.mm.sdk.modelmsg.WXEmojiObject -> com.tencent.mm.sdk.modelmsg.WXEmojiObject:
    java.lang.String TAG -> TAG
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    byte[] emojiData -> emojiData
    java.lang.String emojiPath -> emojiPath
    void setEmojiData(byte[]) -> setEmojiData
    void setEmojiPath(java.lang.String) -> setEmojiPath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXFileObject -> com.tencent.mm.sdk.modelmsg.WXFileObject:
    java.lang.String TAG -> TAG
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    int contentLengthLimit -> contentLengthLimit
    byte[] fileData -> fileData
    java.lang.String filePath -> filePath
    void setFileData(byte[]) -> setFileData
    void setFilePath(java.lang.String) -> setFilePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    void setContentLengthLimit(int) -> setContentLengthLimit
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXImageObject -> com.tencent.mm.sdk.modelmsg.WXImageObject:
    java.lang.String TAG -> TAG
    int CONTENT_LENGTH_LIMIT -> CONTENT_LENGTH_LIMIT
    int PATH_LENGTH_LIMIT -> PATH_LENGTH_LIMIT
    int URL_LENGTH_LIMIT -> URL_LENGTH_LIMIT
    byte[] imageData -> imageData
    java.lang.String imagePath -> imagePath
    java.lang.String imageUrl -> imageUrl
    void setImagePath(java.lang.String) -> setImagePath
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
    int getFileSize(java.lang.String) -> getFileSize
com.tencent.mm.sdk.modelmsg.WXMediaMessage -> com.tencent.mm.sdk.modelmsg.WXMediaMessage:
    java.lang.String TAG -> TAG
    int THUMB_LENGTH_LIMIT -> THUMB_LENGTH_LIMIT
    int TITLE_LENGTH_LIMIT -> TITLE_LENGTH_LIMIT
    int DESCRIPTION_LENGTH_LIMIT -> DESCRIPTION_LENGTH_LIMIT
    int MEDIA_TAG_NAME_LENGTH_LIMIT -> MEDIA_TAG_NAME_LENGTH_LIMIT
    java.lang.String ACTION_WXAPPMESSAGE -> ACTION_WXAPPMESSAGE
    int sdkVer -> sdkVer
    java.lang.String title -> title
    java.lang.String description -> description
    byte[] thumbData -> thumbData
    com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject mediaObject -> mediaObject
    java.lang.String mediaTagName -> mediaTagName
    int getType() -> getType
    void setThumbImage(android.graphics.Bitmap) -> setThumbImage
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXMediaMessage$Builder -> com.tencent.mm.sdk.modelmsg.WXMediaMessage$Builder:
    java.lang.String KEY_IDENTIFIER -> KEY_IDENTIFIER
    android.os.Bundle toBundle(com.tencent.mm.sdk.modelmsg.WXMediaMessage) -> toBundle
    com.tencent.mm.sdk.modelmsg.WXMediaMessage fromBundle(android.os.Bundle) -> fromBundle
    java.lang.String pathNewToOld(java.lang.String) -> pathNewToOld
    java.lang.String pathOldToNew(java.lang.String) -> pathOldToNew
com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject -> com.tencent.mm.sdk.modelmsg.WXMediaMessage$IMediaObject:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_TEXT -> TYPE_TEXT
    int TYPE_IMAGE -> TYPE_IMAGE
    int TYPE_MUSIC -> TYPE_MUSIC
    int TYPE_VIDEO -> TYPE_VIDEO
    int TYPE_URL -> TYPE_URL
    int TYPE_FILE -> TYPE_FILE
    int TYPE_APPDATA -> TYPE_APPDATA
    int TYPE_EMOJI -> TYPE_EMOJI
    int TYPE_PRODUCT -> TYPE_PRODUCT
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXMusicObject -> com.tencent.mm.sdk.modelmsg.WXMusicObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String musicUrl -> musicUrl
    java.lang.String musicLowBandUrl -> musicLowBandUrl
    java.lang.String musicDataUrl -> musicDataUrl
    java.lang.String musicLowBandDataUrl -> musicLowBandDataUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXTextObject -> com.tencent.mm.sdk.modelmsg.WXTextObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String text -> text
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXVideoObject -> com.tencent.mm.sdk.modelmsg.WXVideoObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String videoUrl -> videoUrl
    java.lang.String videoLowBandUrl -> videoLowBandUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.WXWebpageObject -> com.tencent.mm.sdk.modelmsg.WXWebpageObject:
    java.lang.String TAG -> TAG
    int LENGTH_LIMIT -> LENGTH_LIMIT
    java.lang.String webpageUrl -> webpageUrl
    void serialize(android.os.Bundle) -> serialize
    void unserialize(android.os.Bundle) -> unserialize
    int type() -> type
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.modelmsg.package-info -> com.tencent.mm.sdk.modelmsg.package-info:
com.tencent.mm.sdk.modelpay.PayReq -> com.tencent.mm.sdk.modelpay.PayReq:
    java.lang.String TAG -> TAG
    int EXTDATA_MAX_LENGTH -> EXTDATA_MAX_LENGTH
    java.lang.String appId -> appId
    java.lang.String partnerId -> partnerId
    java.lang.String prepayId -> prepayId
    java.lang.String nonceStr -> nonceStr
    java.lang.String timeStamp -> timeStamp
    java.lang.String packageValue -> packageValue
    java.lang.String sign -> sign
    java.lang.String extData -> extData
    com.tencent.mm.sdk.modelpay.PayReq$Options options -> options
    boolean checkArgs() -> checkArgs
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
com.tencent.mm.sdk.modelpay.PayReq$Options -> com.tencent.mm.sdk.modelpay.PayReq$Options:
    int INVALID_FLAGS -> INVALID_FLAGS
    java.lang.String callbackClassName -> callbackClassName
    int callbackFlags -> callbackFlags
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
com.tencent.mm.sdk.modelpay.PayResp -> com.tencent.mm.sdk.modelpay.PayResp:
    java.lang.String prepayId -> prepayId
    java.lang.String returnKey -> returnKey
    java.lang.String extData -> extData
    void toBundle(android.os.Bundle) -> toBundle
    void fromBundle(android.os.Bundle) -> fromBundle
    int getType() -> getType
    boolean checkArgs() -> checkArgs
com.tencent.mm.sdk.openapi.IWXAPI -> com.tencent.mm.sdk.openapi.IWXAPI:
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> sendReq
    boolean sendResp(com.tencent.mm.sdk.modelbase.BaseResp) -> sendResp
    void detach() -> detach
com.tencent.mm.sdk.openapi.IWXAPIEventHandler -> com.tencent.mm.sdk.openapi.IWXAPIEventHandler:
    void onReq(com.tencent.mm.sdk.modelbase.BaseReq) -> onReq
    void onResp(com.tencent.mm.sdk.modelbase.BaseResp) -> onResp
com.tencent.mm.sdk.openapi.WXAPIFactory -> com.tencent.mm.sdk.openapi.WXAPIFactory:
    java.lang.String TAG -> TAG
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String) -> createWXAPI
    com.tencent.mm.sdk.openapi.IWXAPI createWXAPI(android.content.Context,java.lang.String,boolean) -> createWXAPI
com.tencent.mm.sdk.openapi.WXApiImplComm -> com.tencent.mm.sdk.openapi.WXApiImplComm:
    java.lang.String TAG -> TAG
    java.lang.String WX_APP_SIGNATURE -> WX_APP_SIGNATURE
    boolean isIntentFromWx(android.content.Intent,java.lang.String) -> isIntentFromWx
    boolean validateAppSignatureForPackage(android.content.Context,java.lang.String,boolean) -> validateAppSignatureForPackage
    boolean validateAppSignature(android.content.Context,android.content.pm.Signature[],boolean) -> validateAppSignature
com.tencent.mm.sdk.openapi.WXApiImplV10 -> com.tencent.mm.sdk.openapi.WXApiImplV10:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    java.lang.String appId -> appId
    boolean checkSignature -> checkSignature
    boolean detached -> detached
    java.lang.String wxappPayEntryClassname -> wxappPayEntryClassname
    boolean registerApp(java.lang.String) -> registerApp
    void unregisterApp() -> unregisterApp
    boolean handleIntent(android.content.Intent,com.tencent.mm.sdk.openapi.IWXAPIEventHandler) -> handleIntent
    boolean isWXAppInstalled() -> isWXAppInstalled
    boolean isWXAppSupportAPI() -> isWXAppSupportAPI
    int getWXAppSupportAPI() -> getWXAppSupportAPI
    boolean openWXApp() -> openWXApp
    boolean sendReq(com.tencent.mm.sdk.modelbase.BaseReq) -> sendReq
    boolean sendPayReq(android.content.Context,android.os.Bundle) -> sendPayReq
    boolean sendResp(com.tencent.mm.sdk.modelbase.BaseResp) -> sendResp
    void detach() -> detach
    boolean checkSumConsistent(byte[],byte[]) -> checkSumConsistent
com.umeng.analytics.Gender -> com.umeng.analytics.Gender:
    com.umeng.analytics.Gender Male -> Male
    com.umeng.analytics.Gender Female -> Female
    com.umeng.analytics.Gender Unknown -> Unknown
    com.umeng.analytics.Gender[] a -> a
    com.umeng.analytics.Gender[] values() -> values
    com.umeng.analytics.Gender valueOf(java.lang.String) -> valueOf
com.umeng.analytics.MobclickAgent -> com.umeng.analytics.MobclickAgent:
    com.umeng.analytics.b a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void setAutoLocation(boolean) -> setAutoLocation
    void setWrapper(java.lang.String,java.lang.String) -> setWrapper
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setEnableEventBuffer(boolean) -> setEnableEventBuffer
    void setOnlineConfigureListener(com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener) -> setOnlineConfigureListener
    com.umeng.analytics.b a() -> a
    void setOpenGLContext(javax.microedition.khronos.opengles.GL10) -> setOpenGLContext
    void openActivityDurationTrack(boolean) -> openActivityDurationTrack
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void setDebugMode(boolean) -> setDebugMode
    void setDefaultReportPolicy(android.content.Context,int) -> setDefaultReportPolicy
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> onResume
    void onError(android.content.Context) -> onError
    void onError(android.content.Context,java.lang.String) -> onError
    void reportError(android.content.Context,java.lang.String) -> reportError
    void reportError(android.content.Context,java.lang.Throwable) -> reportError
    void flush(android.content.Context) -> flush
    void onEvent(android.content.Context,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.util.HashMap) -> onEvent
    void onEventDuration(android.content.Context,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.util.HashMap,long) -> onEventDuration
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onKVEventBegin(android.content.Context,java.lang.String,java.util.HashMap,java.lang.String) -> onKVEventBegin
    void onKVEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onKVEventEnd
    java.lang.String getConfigParams(android.content.Context,java.lang.String) -> getConfigParams
    void updateOnlineConfig(android.content.Context,java.lang.String,java.lang.String) -> updateOnlineConfig
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    void setGender(android.content.Context,com.umeng.analytics.Gender) -> setGender
    void setAge(android.content.Context,int) -> setAge
    void setUserID(android.content.Context,java.lang.String,java.lang.String) -> setUserID
    void onKillProcess(android.content.Context) -> onKillProcess
com.umeng.analytics.MobclickAgent$1 -> com.umeng.analytics.MobclickAgent$1:
    int[] a -> a
com.umeng.analytics.MobclickAgentJSInterface -> com.umeng.analytics.MobclickAgentJSInterface:
    android.content.Context a -> a
    android.content.Context a(com.umeng.analytics.MobclickAgentJSInterface) -> a
com.umeng.analytics.MobclickAgentJSInterface$a -> com.umeng.analytics.MobclickAgentJSInterface$a:
    android.webkit.WebChromeClient a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    com.umeng.analytics.MobclickAgentJSInterface b -> b
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap) -> onReceivedIcon
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onRequestFocus(android.webkit.WebView) -> onRequestFocus
com.umeng.analytics.ReportPolicy -> com.umeng.analytics.ReportPolicy:
    int a -> a
    int BATCH_AT_LAUNCH -> BATCH_AT_LAUNCH
    int b -> b
    int c -> c
    int DAILY -> DAILY
    int d -> d
    int BATCH_BY_INTERVAL -> BATCH_BY_INTERVAL
com.umeng.analytics.a -> com.umeng.analytics.a:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    com.umeng.analytics.i b -> b
    android.content.Context c -> c
    void a(android.content.Context) -> a
    void a(com.umeng.analytics.i) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.lang.Throwable) -> a
com.umeng.analytics.a.a -> com.umeng.analytics.a.a:
    java.util.HashMap a -> a
    java.lang.String b -> b
    long c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.util.HashMap a(java.util.HashMap) -> a
    long b() -> b
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
com.umeng.analytics.a.b -> com.umeng.analytics.a.b:
    java.lang.String a -> a
    java.util.ArrayList b -> b
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(com.umeng.analytics.a.b) -> a
com.umeng.analytics.a.c -> com.umeng.analytics.a.c:
    com.umeng.analytics.a.a a -> a
    com.umeng.analytics.a.b b -> b
com.umeng.analytics.a.d -> com.umeng.analytics.a.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(java.lang.Throwable) -> a
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.e -> com.umeng.analytics.a.e:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    long d -> d
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.f -> com.umeng.analytics.a.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    long p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    int y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    java.lang.String al -> al
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void e(org.json.JSONObject) -> e
    void f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void h(org.json.JSONObject) -> h
    void i(org.json.JSONObject) -> i
    void a(org.json.JSONObject) -> a
    void j(org.json.JSONObject) -> j
    void k(org.json.JSONObject) -> k
    void l(org.json.JSONObject) -> l
    void m(org.json.JSONObject) -> m
    void n(org.json.JSONObject) -> n
    void o(org.json.JSONObject) -> o
    void p(org.json.JSONObject) -> p
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(android.content.Context,java.lang.String[]) -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    void b(android.content.Context,java.lang.String[]) -> b
    boolean b() -> b
com.umeng.analytics.a.g -> com.umeng.analytics.a.g:
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
com.umeng.analytics.a.h -> com.umeng.analytics.a.h:
    com.umeng.analytics.a.o a -> a
    void a(com.umeng.analytics.a.o) -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    boolean a() -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    org.json.JSONObject b() -> b
com.umeng.analytics.a.i -> com.umeng.analytics.a.i:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(com.umeng.analytics.a.h) -> a
    void a(com.umeng.analytics.a.m) -> a
    void a(com.umeng.analytics.a.d) -> a
    void a(com.umeng.analytics.a.e) -> a
    void a(java.lang.String,com.umeng.analytics.a.a) -> a
    void a(com.umeng.analytics.a.b) -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void e(org.json.JSONObject) -> e
    void f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void a(org.json.JSONObject) -> a
    org.json.JSONArray a(java.util.ArrayList) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    void a(com.umeng.analytics.a.i) -> a
    void b(java.util.ArrayList) -> b
    int b() -> b
    void c() -> c
com.umeng.analytics.a.j -> com.umeng.analytics.a.j:
    com.umeng.analytics.a.g a -> a
    com.umeng.analytics.a.i b -> b
com.umeng.analytics.a.k -> com.umeng.analytics.a.k:
    java.lang.String a -> a
    int b -> b
com.umeng.analytics.a.l -> com.umeng.analytics.a.l:
    java.lang.String e -> e
    java.lang.String f -> f
    void a(java.lang.String) -> a
    boolean a() -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
com.umeng.analytics.a.m -> com.umeng.analytics.a.m:
    com.umeng.analytics.a.o a -> a
    com.umeng.analytics.a.p b -> b
    long c -> c
    java.util.ArrayList d -> d
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    com.umeng.analytics.a.m a(android.content.Context) -> a
    void a(android.content.SharedPreferences) -> a
    java.lang.String[] b(android.content.SharedPreferences) -> b
    java.util.ArrayList c(android.content.SharedPreferences) -> c
    long d(android.content.SharedPreferences) -> d
    android.content.SharedPreferences$Editor a(android.content.SharedPreferences,java.lang.String,long,long) -> a
    android.content.SharedPreferences$Editor a(android.content.SharedPreferences,java.util.ArrayList,long,long) -> a
    boolean a() -> a
    void c(org.json.JSONObject) -> c
    void d(org.json.JSONObject) -> d
    void e(org.json.JSONObject) -> e
    void f(org.json.JSONObject) -> f
    void g(org.json.JSONObject) -> g
    void h(org.json.JSONObject) -> h
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.analytics.a.n -> com.umeng.analytics.a.n:
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean a() -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
com.umeng.analytics.a.o -> com.umeng.analytics.a.o:
    double a -> a
    double b -> b
    long c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.umeng.analytics.a.o a(android.content.Context) -> a
    com.umeng.analytics.a.o b(android.content.Context) -> b
    android.content.SharedPreferences$Editor a(android.content.Context,android.content.SharedPreferences) -> a
    boolean a(android.location.Location,android.content.SharedPreferences) -> a
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
    boolean a() -> a
com.umeng.analytics.a.p -> com.umeng.analytics.a.p:
    long a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    boolean a() -> a
    com.umeng.analytics.a.p a(android.content.Context) -> a
    long[] b(android.content.Context) -> b
com.umeng.analytics.b -> com.umeng.analytics.b:
    java.util.concurrent.ExecutorService a -> a
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    long t -> t
    int u -> u
    int v -> v
    java.util.Stack w -> w
    java.util.ArrayList x -> x
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.Throwable) -> a
    void h(android.content.Context) -> h
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String,java.lang.String,long,int) -> a
    void a(android.content.Context,java.lang.String,java.util.HashMap,long) -> a
    void i(android.content.Context) -> i
    void j(android.content.Context) -> j
    void a(android.content.Context,android.content.SharedPreferences) -> a
    boolean a(android.content.SharedPreferences) -> a
    java.lang.String b(android.content.Context,android.content.SharedPreferences) -> b
    java.lang.String a(android.content.Context,long) -> a
    java.lang.String c(android.content.Context,android.content.SharedPreferences) -> c
    void d(android.content.Context,java.lang.String) -> d
    int e(android.content.Context,java.lang.String) -> e
    void b(android.content.Context,java.lang.String) -> b
    void c(android.content.Context,java.lang.String) -> c
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,java.util.HashMap,java.lang.String) -> a
    void c(android.content.Context,java.lang.String,java.lang.String) -> c
    boolean a(java.lang.String,int) -> a
    boolean a(java.util.Map) -> a
    void d(android.content.Context) -> d
    void b(android.content.Context,java.lang.Throwable) -> b
    void a(com.umeng.analytics.b,android.content.Context) -> a
    void b(com.umeng.analytics.b,android.content.Context) -> b
com.umeng.analytics.b$a -> com.umeng.analytics.b$a:
    java.lang.Object b -> b
    android.content.Context c -> c
    int d -> d
    com.umeng.analytics.b a -> a
    void run() -> run
com.umeng.analytics.c -> com.umeng.analytics.c:
    com.umeng.analytics.a.i a -> a
    java.util.HashMap b -> b
    java.util.HashMap c -> c
    int d -> d
    void a(int) -> a
    int a() -> a
    boolean b() -> b
    void a(java.lang.String) -> a
    long b(java.lang.String) -> b
    void a(java.lang.String,java.util.HashMap) -> a
    java.util.HashMap c(java.lang.String) -> c
    void a(java.lang.String,java.lang.String,java.lang.String,long,int) -> a
    void a(java.lang.String,java.lang.String,java.util.HashMap,long) -> a
    void a(com.umeng.analytics.a.d) -> a
    void a(com.umeng.analytics.a.h) -> a
    void a(com.umeng.analytics.a.m) -> a
    boolean c() -> c
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    org.json.JSONObject d() -> d
    void e() -> e
com.umeng.analytics.d -> com.umeng.analytics.d:
    com.umeng.analytics.a a -> a
    java.lang.Object b -> b
    android.os.Handler c -> c
    com.umeng.analytics.c d -> d
    com.umeng.analytics.a.f e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    long p -> p
    long q -> q
    long r -> r
    java.lang.String k -> k
    java.lang.String l -> l
    boolean s -> s
    void e(android.content.Context) -> e
    void a(android.content.Context,int) -> a
    void a(android.content.Context) -> a
    void f(android.content.Context) -> f
    void b(android.content.Context) -> b
    boolean b(android.content.Context,int) -> b
    java.lang.String c(android.content.Context) -> c
    void d(android.content.Context) -> d
    org.json.JSONObject g(android.content.Context) -> g
    java.lang.String a(java.io.InputStream) -> a
    java.lang.String a(android.content.Context,org.json.JSONObject,java.lang.String) -> a
    void a(int,long) -> a
    java.lang.Object a(com.umeng.analytics.d) -> a
    void a(com.umeng.analytics.d,android.content.Context) -> a
com.umeng.analytics.d$a -> com.umeng.analytics.d$a:
    android.content.Context b -> b
    com.umeng.analytics.d a -> a
    void run() -> run
com.umeng.analytics.d$b -> com.umeng.analytics.d$b:
    android.content.Context b -> b
    com.umeng.analytics.d a -> a
    void run() -> run
com.umeng.analytics.e -> com.umeng.analytics.e:
    com.umeng.analytics.d a -> a
com.umeng.analytics.f -> com.umeng.analytics.f:
    java.lang.String a -> a
    long b -> b
com.umeng.analytics.g -> com.umeng.analytics.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    int e -> e
    int f -> f
    long g -> g
    int h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.Object p -> p
    java.lang.String q -> q
    java.lang.String[] r -> r
    java.lang.String[] s -> s
    boolean t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
com.umeng.analytics.h -> com.umeng.analytics.h:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
com.umeng.analytics.i -> com.umeng.analytics.i:
    void b(android.content.Context,java.lang.Throwable) -> b
com.umeng.analytics.j -> com.umeng.analytics.j:
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    long a -> a
    long b -> b
    android.content.SharedPreferences a(android.content.Context) -> a
    android.content.SharedPreferences b(android.content.Context) -> b
    android.content.SharedPreferences c(android.content.Context) -> c
    android.content.SharedPreferences d(android.content.Context) -> d
    android.content.SharedPreferences e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    org.json.JSONObject h(android.content.Context) -> h
    int[] i(android.content.Context) -> i
    boolean a(java.io.File) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String) -> a
    java.lang.String a(java.io.InputStream) -> a
    void a(android.content.Context,org.json.JSONObject,java.lang.String) -> a
    void a(android.content.Context,com.umeng.analytics.a.g,java.lang.String) -> a
    void b(android.content.Context,org.json.JSONObject,java.lang.String) -> b
    void j(android.content.Context) -> j
com.umeng.analytics.k -> com.umeng.analytics.k:
    java.util.Vector a -> a
    int b -> b
    java.lang.String c -> c
    void a(java.lang.Long) -> a
    java.lang.Long a() -> a
    int b() -> b
    java.lang.String toString() -> toString
    com.umeng.analytics.k a(android.content.Context,java.lang.String) -> a
    com.umeng.analytics.k a(java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener -> com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener:
    void onDataReceived(org.json.JSONObject) -> onDataReceived
com.umeng.analytics.onlineconfig.a -> com.umeng.analytics.onlineconfig.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener f -> f
    com.umeng.analytics.onlineconfig.c g -> g
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(com.umeng.analytics.onlineconfig.UmengOnlineConfigureListener) -> a
    void a() -> a
    void a(com.umeng.analytics.onlineconfig.c) -> a
    void b() -> b
    void a(org.json.JSONObject) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    org.json.JSONObject d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    void a(android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
    void a(com.umeng.analytics.onlineconfig.a,org.json.JSONObject) -> a
    org.json.JSONObject a(com.umeng.analytics.onlineconfig.a,android.content.Context) -> a
    com.umeng.analytics.onlineconfig.c a(com.umeng.analytics.onlineconfig.a) -> a
    void a(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> a
    void b(com.umeng.analytics.onlineconfig.a,android.content.Context,com.umeng.analytics.onlineconfig.b) -> b
com.umeng.analytics.onlineconfig.a$a -> com.umeng.analytics.onlineconfig.a$a:
    org.json.JSONObject e -> e
    com.umeng.analytics.onlineconfig.a a -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.umeng.analytics.onlineconfig.a$b -> com.umeng.analytics.onlineconfig.a$b:
    android.content.Context a -> a
    com.umeng.analytics.onlineconfig.a b -> b
    void run() -> run
    boolean shouldCompressData() -> shouldCompressData
    void a() -> a
com.umeng.analytics.onlineconfig.b -> com.umeng.analytics.onlineconfig.b:
    org.json.JSONObject a -> a
    boolean b -> b
    int c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    void a(org.json.JSONObject) -> a
    void a() -> a
com.umeng.analytics.onlineconfig.c -> com.umeng.analytics.onlineconfig.c:
    void a(int,long) -> a
com.umeng.common.Log -> com.umeng.common.Log:
    boolean LOG -> LOG
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Exception) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Exception) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Exception) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Exception) -> d
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
com.umeng.common.Res -> com.umeng.common.Res:
    java.lang.String a -> a
    com.umeng.common.Res b -> b
    java.lang.String c -> c
    java.lang.Class d -> d
    java.lang.Class e -> e
    java.lang.Class f -> f
    java.lang.Class g -> g
    java.lang.Class h -> h
    java.lang.Class i -> i
    java.lang.Class j -> j
    com.umeng.common.Res getInstance(android.content.Context) -> getInstance
    void setPackageName(java.lang.String) -> setPackageName
    int a(java.lang.String) -> a
    int b(java.lang.String) -> b
    int c(java.lang.String) -> c
    int d(java.lang.String) -> d
    int e(java.lang.String) -> e
    int f(java.lang.String) -> f
    int g(java.lang.String) -> g
    int a(java.lang.Class,java.lang.String) -> a
com.umeng.common.a -> com.umeng.common.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
com.umeng.common.a.a -> com.umeng.common.a.a:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
com.umeng.common.a.b -> com.umeng.common.a.b:
    int a(android.content.Context) -> a
com.umeng.common.a.c -> com.umeng.common.a.c:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    int n(android.content.Context) -> n
com.umeng.common.b -> com.umeng.common.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String d -> d
    java.lang.String e -> e
    int c -> c
    boolean a(java.lang.String,android.content.Context) -> a
    boolean a(android.content.Context) -> a
    java.util.Set b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    java.lang.String[] a(javax.microedition.khronos.opengles.GL10) -> a
    java.lang.String a() -> a
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    java.lang.String j(android.content.Context) -> j
    java.lang.String[] k(android.content.Context) -> k
    boolean l(android.content.Context) -> l
    android.location.Location m(android.content.Context) -> m
    boolean n(android.content.Context) -> n
    boolean b() -> b
    int o(android.content.Context) -> o
    java.lang.String[] p(android.content.Context) -> p
    java.util.Locale y(android.content.Context) -> y
    java.lang.String q(android.content.Context) -> q
    java.lang.String r(android.content.Context) -> r
    java.lang.String s(android.content.Context) -> s
    int a(java.lang.Object,java.lang.String) -> a
    java.lang.String t(android.content.Context) -> t
    java.lang.String a(java.util.Date) -> a
    java.lang.String c() -> c
    java.util.Date a(java.lang.String) -> a
    int a(java.util.Date,java.util.Date) -> a
    java.lang.String u(android.content.Context) -> u
    java.lang.String v(android.content.Context) -> v
    java.lang.String w(android.content.Context) -> w
    boolean x(android.content.Context) -> x
com.umeng.common.net.DownloadingService -> com.umeng.common.net.DownloadingService:
    java.lang.String t -> t
    android.app.NotificationManager u -> u
    com.umeng.common.net.d v -> v
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    long w -> w
    long x -> x
    long y -> y
    int o -> o
    java.lang.String p -> p
    int z -> z
    android.content.Context A -> A
    android.os.Handler B -> B
    com.umeng.common.net.DownloadingService$a q -> q
    boolean r -> r
    long C -> C
    long D -> D
    java.util.Map E -> E
    android.util.SparseArray F -> F
    android.os.Messenger s -> s
    com.umeng.common.net.l G -> G
    boolean H -> H
    java.lang.Boolean I -> I
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onCreate() -> onCreate
    void d() -> d
    void a(com.umeng.common.net.a$a) -> a
    void a(java.lang.String) -> a
    void onDestroy() -> onDestroy
    void e() -> e
    java.lang.String a() -> a
    com.umeng.common.net.d a(com.umeng.common.net.DownloadingService) -> a
    android.util.SparseArray b() -> b
    android.content.Context b(com.umeng.common.net.DownloadingService) -> b
    java.util.Map c() -> c
    void a(com.umeng.common.net.DownloadingService,com.umeng.common.net.a$a) -> a
    android.app.NotificationManager a(com.umeng.common.net.DownloadingService,android.app.NotificationManager) -> a
    android.app.NotificationManager c(com.umeng.common.net.DownloadingService) -> c
    android.os.Handler d(com.umeng.common.net.DownloadingService) -> d
    void a(com.umeng.common.net.DownloadingService,java.lang.String) -> a
    java.lang.Boolean a(java.lang.Boolean) -> a
com.umeng.common.net.DownloadingService$a -> com.umeng.common.net.DownloadingService$a:
    void a(int) -> a
    void a(int,int) -> a
    void a(int,java.lang.String) -> a
    void a(int,java.lang.Exception) -> a
com.umeng.common.net.DownloadingService$b -> com.umeng.common.net.DownloadingService$b:
    android.content.Context b -> b
    boolean c -> c
    java.io.File d -> d
    int e -> e
    long f -> f
    long g -> g
    int h -> h
    int i -> i
    com.umeng.common.net.DownloadingService$a j -> j
    com.umeng.common.net.a$a k -> k
    com.umeng.common.net.DownloadingService a -> a
    void run() -> run
    void a(int) -> a
    void a(boolean) -> a
    void a() -> a
    void b(int) -> b
    java.net.HttpURLConnection a(java.net.URL,java.io.File) -> a
    java.lang.String a(com.umeng.common.net.a$a) -> a
    void b() -> b
    void a(java.io.File,java.lang.String) -> a
    void a(java.lang.Exception) -> a
    android.content.Context a(com.umeng.common.net.DownloadingService$b) -> a
com.umeng.common.net.DownloadingService$c -> com.umeng.common.net.DownloadingService$c:
    com.umeng.common.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.common.net.a -> com.umeng.common.net.a:
    java.lang.String b -> b
    android.content.Context c -> c
    com.umeng.common.net.k d -> d
    android.os.Messenger e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String[] k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.os.Messenger a -> a
    android.content.ServiceConnection o -> o
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String[]) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void a() -> a
    java.lang.String b() -> b
    com.umeng.common.net.k a(com.umeng.common.net.a) -> a
    android.content.ServiceConnection b(com.umeng.common.net.a) -> b
    android.content.Context c(com.umeng.common.net.a) -> c
    android.os.Messenger a(com.umeng.common.net.a,android.os.Messenger) -> a
    java.lang.String d(com.umeng.common.net.a) -> d
    java.lang.String e(com.umeng.common.net.a) -> e
    java.lang.String f(com.umeng.common.net.a) -> f
    java.lang.String g(com.umeng.common.net.a) -> g
    java.lang.String h(com.umeng.common.net.a) -> h
    java.lang.String[] i(com.umeng.common.net.a) -> i
    boolean j(com.umeng.common.net.a) -> j
    boolean k(com.umeng.common.net.a) -> k
    boolean l(com.umeng.common.net.a) -> l
    android.os.Messenger m(com.umeng.common.net.a) -> m
com.umeng.common.net.a$a -> com.umeng.common.net.a$a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String[] f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    android.os.Bundle a() -> a
    com.umeng.common.net.a$a a(android.os.Bundle) -> a
com.umeng.common.net.a$b -> com.umeng.common.net.a$b:
    com.umeng.common.net.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.common.net.b -> com.umeng.common.net.b:
    com.umeng.common.net.a a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.umeng.common.net.c -> com.umeng.common.net.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    android.content.Context i -> i
    java.lang.String j -> j
    com.umeng.common.net.c$a k -> k
    com.umeng.common.net.c a(android.content.Context) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    int b(java.lang.String,java.lang.String) -> b
    java.lang.String c(java.lang.String,java.lang.String) -> c
    java.util.Date d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    java.util.List a(java.lang.String) -> a
    void a(int) -> a
    void finalize() -> finalize
    java.lang.String a() -> a
com.umeng.common.net.c$1 -> com.umeng.common.net.c$1:
com.umeng.common.net.c$a -> com.umeng.common.net.c$a:
    int b -> b
    java.lang.String c -> c
    com.umeng.common.net.c a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.common.net.c$b -> com.umeng.common.net.c$b:
    com.umeng.common.net.c a -> a
com.umeng.common.net.d -> com.umeng.common.net.d:
    java.lang.String e -> e
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    android.util.SparseArray f -> f
    java.util.Map g -> g
    com.umeng.common.net.l h -> h
    int a(com.umeng.common.net.a$a) -> a
    com.umeng.common.net.d$a a(android.content.Context,com.umeng.common.net.a$a,int,int) -> a
    void a(android.content.Context,com.umeng.common.net.d$a,int,int) -> a
    boolean a(android.content.Context) -> a
    boolean a(com.umeng.common.net.a$a,boolean,android.os.Messenger) -> a
    int b(com.umeng.common.net.a$a) -> b
    void a(android.content.Context,int) -> a
    void b(android.content.Context,int) -> b
    void a(com.umeng.common.net.a$a,long,long,long) -> a
    void a(java.util.Map,boolean,java.lang.String[]) -> a
    boolean a(com.umeng.common.net.DownloadingService,android.content.Intent) -> a
    java.lang.String a() -> a
    java.util.Map a(com.umeng.common.net.d) -> a
com.umeng.common.net.d$a -> com.umeng.common.net.d$a:
    com.umeng.common.net.d$a a(android.widget.RemoteViews) -> a
    com.umeng.common.net.d$a a(java.lang.CharSequence) -> a
    com.umeng.common.net.d$a b(java.lang.CharSequence) -> b
    com.umeng.common.net.d$a a(int,int,boolean) -> a
    com.umeng.common.net.d$a a() -> a
    com.umeng.common.net.d$a a(android.app.PendingIntent,android.app.PendingIntent) -> a
    com.umeng.common.net.d$a b() -> b
    com.umeng.common.net.d$a c() -> c
    android.app.Notification d() -> d
    void a(int,java.lang.String,android.app.PendingIntent) -> a
com.umeng.common.net.d$b -> com.umeng.common.net.d$b:
    com.umeng.common.net.DownloadingService$b a -> a
    com.umeng.common.net.d$a b -> b
    int c -> c
    int d -> d
    com.umeng.common.net.a$a e -> e
    long[] f -> f
    void a(android.util.SparseArray) -> a
    void b(android.util.SparseArray) -> b
com.umeng.common.net.d$c -> com.umeng.common.net.d$c:
    int a -> a
    java.lang.String b -> b
    com.umeng.common.net.a$a d -> d
    android.content.Context e -> e
    android.app.NotificationManager f -> f
    com.umeng.common.net.d c -> c
    void onPreExecute() -> onPreExecute
    java.lang.Integer a(java.lang.String[]) -> a
    void a(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.common.net.e -> com.umeng.common.net.e:
    java.lang.String[] a -> a
    boolean b -> b
    java.util.Map c -> c
    com.umeng.common.net.d d -> d
    void run() -> run
com.umeng.common.net.f -> com.umeng.common.net.f:
    com.umeng.common.net.DownloadingService a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.common.net.g -> com.umeng.common.net.g:
    android.util.SparseArray a -> a
    com.umeng.common.net.DownloadingService b -> b
    void a(int) -> a
    void a(int,int) -> a
    void a(int,java.lang.String) -> a
    void a(int,java.lang.Exception) -> a
com.umeng.common.net.h -> com.umeng.common.net.h:
    java.lang.String a -> a
    com.umeng.common.net.DownloadingService b -> b
    void run() -> run
com.umeng.common.net.i -> com.umeng.common.net.i:
    com.umeng.common.net.DownloadingService a -> a
    void run() -> run
com.umeng.common.net.j -> com.umeng.common.net.j:
    com.umeng.common.net.DownloadingService$b a -> a
    void run() -> run
com.umeng.common.net.k -> com.umeng.common.net.k:
    void a() -> a
    void a(int) -> a
    void a(int,int,java.lang.String) -> a
    void b(int) -> b
com.umeng.common.net.l -> com.umeng.common.net.l:
    java.lang.String a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    void a(int) -> a
    java.util.List a() -> a
    boolean b() -> b
    void b(int) -> b
com.umeng.common.net.m -> com.umeng.common.net.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String a(int,java.lang.String) -> a
    int a(com.umeng.common.net.a$a) -> a
    android.app.PendingIntent a(android.content.Context,java.lang.String) -> a
    android.app.PendingIntent b(android.content.Context,java.lang.String) -> b
com.umeng.common.net.n -> com.umeng.common.net.n:
    java.lang.String a -> a
    com.umeng.common.net.p$a send(com.umeng.common.net.o) -> send
    void sendAsync(com.umeng.common.net.o,com.umeng.common.net.n$a) -> sendAsync
com.umeng.common.net.n$a -> com.umeng.common.net.n$a:
    void a() -> a
    void a(com.umeng.common.net.p$a) -> a
com.umeng.common.net.n$b -> com.umeng.common.net.n$b:
    com.umeng.common.net.o b -> b
    com.umeng.common.net.n$a c -> c
    com.umeng.common.net.n a -> a
    void onPreExecute() -> onPreExecute
    void a(com.umeng.common.net.p$a) -> a
    com.umeng.common.net.p$a a(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.common.net.o -> com.umeng.common.net.o:
com.umeng.common.net.p -> com.umeng.common.net.p:
    com.umeng.common.net.p$a a -> a
com.umeng.common.net.p$a -> com.umeng.common.net.p$a:
    com.umeng.common.net.p$a a -> a
    com.umeng.common.net.p$a b -> b
    com.umeng.common.net.p$a[] c -> c
    com.umeng.common.net.p$a[] values() -> values
    com.umeng.common.net.p$a valueOf(java.lang.String) -> valueOf
com.umeng.common.net.q -> com.umeng.common.net.q:
    java.lang.String b -> b
    boolean a -> a
    long c -> c
    long d -> d
    long e -> e
    java.util.Map f -> f
    java.lang.Thread g -> g
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.io.File a(java.lang.String,android.content.Context,boolean[]) -> a
    boolean a(java.lang.String,int,int,int) -> a
    boolean a(java.lang.String,int) -> a
    void a(java.io.File,long,long) -> a
    long a(java.io.File) -> a
    void b(java.io.File,long) -> b
    java.io.File b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean) -> a
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean,com.umeng.common.net.q$a) -> a
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean,com.umeng.common.net.q$a,android.view.animation.Animation) -> a
    void a(android.content.Context,android.widget.ImageView,java.lang.String,boolean,com.umeng.common.net.q$a,android.view.animation.Animation,boolean) -> a
    boolean a(android.widget.ImageView,java.lang.String) -> a
    void b(android.content.Context,android.widget.ImageView,android.graphics.drawable.Drawable,boolean,com.umeng.common.net.q$a,android.view.animation.Animation,boolean,java.lang.String) -> b
    android.graphics.drawable.Drawable c(java.lang.String) -> c
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    void a(java.io.File,long) -> a
    java.lang.Thread a(java.lang.Thread) -> a
    void a(android.content.Context,android.widget.ImageView,android.graphics.drawable.Drawable,boolean,com.umeng.common.net.q$a,android.view.animation.Animation,boolean,java.lang.String) -> a
    android.graphics.drawable.Drawable a(java.lang.String) -> a
    java.lang.String a() -> a
com.umeng.common.net.q$a -> com.umeng.common.net.q$a:
    void a(com.umeng.common.net.q$b) -> a
    void a(com.umeng.common.net.p$a) -> a
com.umeng.common.net.q$b -> com.umeng.common.net.q$b:
    com.umeng.common.net.q$b a -> a
    com.umeng.common.net.q$b b -> b
    com.umeng.common.net.q$b[] c -> c
    com.umeng.common.net.q$b[] values() -> values
    com.umeng.common.net.q$b valueOf(java.lang.String) -> valueOf
com.umeng.common.net.q$c -> com.umeng.common.net.q$c:
    android.content.Context a -> a
    java.lang.String b -> b
    android.widget.ImageView c -> c
    com.umeng.common.net.q$b d -> d
    boolean e -> e
    com.umeng.common.net.q$a f -> f
    android.view.animation.Animation g -> g
    boolean h -> h
    java.io.File i -> i
    void onPreExecute() -> onPreExecute
    void a(android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable a(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.umeng.common.net.r -> com.umeng.common.net.r:
    java.io.File a -> a
    long b -> b
    void run() -> run
com.umeng.common.net.s -> com.umeng.common.net.s:
    java.lang.String a -> a
    java.util.Map b -> b
    com.umeng.common.net.u execute(com.umeng.common.net.t,java.lang.Class) -> execute
    org.json.JSONObject a(java.lang.String,org.json.JSONObject) -> a
    boolean shouldCompressData() -> shouldCompressData
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject a(java.lang.String) -> a
    org.apache.http.params.HttpParams a() -> a
    com.umeng.common.net.s setHeader(java.util.Map) -> setHeader
    void b(java.lang.String) -> b
com.umeng.common.net.t -> com.umeng.common.net.t:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
com.umeng.common.net.u -> com.umeng.common.net.u:
com.umeng.common.util.DeltaUpdate -> com.umeng.common.util.DeltaUpdate:
    boolean a -> a
    java.lang.String b -> b
    boolean a() -> a
    int a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    int bspatch(java.lang.String,java.lang.String,java.lang.String) -> bspatch
com.umeng.common.util.a -> com.umeng.common.util.a:
    byte[] a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    byte[] c(java.lang.String) -> c
    byte[] d(java.lang.String) -> d
    byte[] e(java.lang.String) -> e
    byte[] f(java.lang.String) -> f
    byte[] a(java.lang.String,java.lang.String) -> a
    java.lang.IllegalStateException a(java.lang.String,java.io.UnsupportedEncodingException) -> a
    java.lang.String a(byte[],java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String b(byte[]) -> b
    java.lang.String c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    java.lang.String e(byte[]) -> e
    java.lang.String f(byte[]) -> f
com.umeng.common.util.b -> com.umeng.common.util.b:
    byte[] a -> a
    byte[] b -> b
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
com.umeng.common.util.c -> com.umeng.common.util.c:
    int m -> m
    int n -> n
    int o -> o
    byte[] a -> a
    byte[] p -> p
    byte[] q -> q
    byte[] r -> r
    int s -> s
    byte[] t -> t
    byte[] u -> u
    byte[] v -> v
    int w -> w
    int x -> x
    int y -> y
    boolean a() -> a
    void a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    boolean a(byte) -> a
    boolean a(java.lang.String) -> a
    boolean a(byte[]) -> a
    boolean b(byte[]) -> b
    byte[] c(byte[]) -> c
    java.lang.String d(byte[]) -> d
    byte[] e(byte[]) -> e
    java.lang.String f(byte[]) -> f
    byte[] g(byte[]) -> g
    byte[] a(byte[],boolean) -> a
    byte[] a(byte[],boolean,boolean) -> a
    byte[] a(byte[],boolean,boolean,int) -> a
    byte[] b(java.lang.String) -> b
    byte[] h(byte[]) -> h
    java.math.BigInteger i(byte[]) -> i
    byte[] a(java.math.BigInteger) -> a
    byte[] b(java.math.BigInteger) -> b
    boolean b(byte) -> b
com.umeng.common.util.d -> com.umeng.common.util.d:
    int b -> b
    int c -> c
    int a -> a
    int m -> m
    int d -> d
    byte e -> e
    byte f -> f
    int n -> n
    int o -> o
    int g -> g
    int p -> p
    byte[] h -> h
    int i -> i
    int q -> q
    boolean j -> j
    int k -> k
    int l -> l
    boolean b() -> b
    int c() -> c
    int d() -> d
    void a() -> a
    void a(int) -> a
    int c(byte[],int,int) -> c
    boolean c(byte) -> c
    void e() -> e
    java.lang.Object a(java.lang.Object) -> a
    java.lang.String j(byte[]) -> j
    java.lang.Object b(java.lang.Object) -> b
    byte[] c(java.lang.String) -> c
    byte[] k(byte[]) -> k
    byte[] l(byte[]) -> l
    java.lang.String m(byte[]) -> m
    void a(byte[],int,int) -> a
    void b(byte[],int,int) -> b
    boolean b(byte) -> b
    boolean b(byte[],boolean) -> b
    boolean d(java.lang.String) -> d
    boolean n(byte[]) -> n
    long o(byte[]) -> o
com.umeng.common.util.e -> com.umeng.common.util.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
com.umeng.common.util.f -> com.umeng.common.util.f:
    int a -> a
    byte[] a(java.lang.String,java.lang.String) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.umeng.common.util.g -> com.umeng.common.util.g:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
com.umeng.common.util.h -> com.umeng.common.util.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String a(java.io.File) -> a
    java.lang.String a(android.content.Context,long) -> a
    java.lang.String c(java.lang.String) -> c
    void a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    java.lang.String a() -> a
    java.lang.String a(java.util.Date) -> a
com.umeng.common.util.i -> com.umeng.common.util.i:
    java.lang.String a(java.util.Map,java.lang.String) -> a
com.umeng.common.util.j -> com.umeng.common.util.j:
    android.content.Context a -> a
    android.app.Notification b -> b
    android.app.Notification$Builder c -> c
    void e() -> e
    com.umeng.common.util.j b(android.widget.RemoteViews) -> b
    com.umeng.common.util.j a(android.app.PendingIntent) -> a
    com.umeng.common.util.j a(boolean) -> a
    com.umeng.common.util.j b(boolean) -> b
    com.umeng.common.util.j a(int) -> a
    com.umeng.common.util.j c(java.lang.CharSequence) -> c
    com.umeng.common.util.j a(long) -> a
com.umeng.common.util.k -> com.umeng.common.util.k:
    float a -> a
    void a(android.content.Context) -> a
    int a(float) -> a
    int b(float) -> b
    int c(float) -> c
    int d(float) -> d
com.umeng.fb.ContactActivity -> com.umeng.fb.ContactActivity:
    java.lang.String a -> a
    android.widget.ImageView b -> b
    android.widget.ImageView c -> c
    android.widget.EditText d -> d
    com.umeng.fb.FeedbackAgent e -> e
    android.widget.TextView f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    com.umeng.fb.FeedbackAgent a(com.umeng.fb.ContactActivity) -> a
    android.widget.EditText b(com.umeng.fb.ContactActivity) -> b
com.umeng.fb.ConversationActivity -> com.umeng.fb.ConversationActivity:
    java.lang.String e -> e
    com.umeng.fb.FeedbackAgent f -> f
    com.umeng.fb.model.Conversation g -> g
    com.umeng.fb.ConversationActivity$a h -> h
    android.widget.ListView i -> i
    android.widget.RelativeLayout a -> a
    int b -> b
    int c -> c
    android.widget.EditText d -> d
    int j -> j
    void onCreate(android.os.Bundle) -> onCreate
    void b() -> b
    void a(android.view.View) -> a
    void a() -> a
    com.umeng.fb.model.Conversation a(com.umeng.fb.ConversationActivity) -> a
    android.widget.ListView b(com.umeng.fb.ConversationActivity) -> b
    int a(com.umeng.fb.ConversationActivity,int) -> a
    int c(com.umeng.fb.ConversationActivity) -> c
    com.umeng.fb.ConversationActivity$a d(com.umeng.fb.ConversationActivity) -> d
com.umeng.fb.ConversationActivity$a -> com.umeng.fb.ConversationActivity$a:
    android.content.Context a -> a
    android.view.LayoutInflater b -> b
    com.umeng.fb.ConversationActivity c -> c
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.umeng.fb.ConversationActivity$a$a -> com.umeng.fb.ConversationActivity$a$a:
    android.widget.TextView a -> a
    android.widget.TextView b -> b
    com.umeng.fb.ConversationActivity$a c -> c
com.umeng.fb.FeedbackAgent -> com.umeng.fb.FeedbackAgent:
    java.lang.String a -> a
    android.content.Context b -> b
    com.umeng.fb.model.Store c -> c
    java.util.List getAllConversationIds() -> getAllConversationIds
    com.umeng.fb.model.Conversation getConversationById(java.lang.String) -> getConversationById
    com.umeng.fb.model.Conversation getDefaultConversation() -> getDefaultConversation
    void sync() -> sync
    void a(java.lang.String) -> a
    com.umeng.fb.model.UserInfo getUserInfo() -> getUserInfo
    void setUserInfo(com.umeng.fb.model.UserInfo) -> setUserInfo
    long getUserInfoLastUpdateAt() -> getUserInfoLastUpdateAt
    void startFeedbackActivity() -> startFeedbackActivity
    android.content.Context a(com.umeng.fb.FeedbackAgent) -> a
    void a(com.umeng.fb.FeedbackAgent,java.lang.String) -> a
com.umeng.fb.a -> com.umeng.fb.a:
    com.umeng.fb.ContactActivity a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.a.a -> com.umeng.fb.a.a:
    java.lang.String a -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    org.json.JSONObject a() -> a
com.umeng.fb.a.b -> com.umeng.fb.a.b:
    java.lang.String e -> e
    android.content.Context f -> f
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int g -> g
    com.umeng.fb.a.d a(com.umeng.fb.a.c) -> a
    java.util.List a(java.util.List,java.lang.String,java.lang.String) -> a
    boolean a(com.umeng.fb.model.Reply) -> a
    boolean a(com.umeng.fb.model.UserReply) -> a
    boolean a(com.umeng.fb.model.UserTitleReply) -> a
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
com.umeng.fb.a.c -> com.umeng.fb.a.c:
    java.lang.String a -> a
    org.json.JSONObject e -> e
    java.lang.String f -> f
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.umeng.fb.a.d -> com.umeng.fb.a.d:
    org.json.JSONObject a -> a
    org.json.JSONObject a() -> a
com.umeng.fb.b -> com.umeng.fb.b:
    com.umeng.fb.ContactActivity a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.b.a -> com.umeng.fb.b.a:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
com.umeng.fb.b.b -> com.umeng.fb.b.b:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
com.umeng.fb.b.c -> com.umeng.fb.b.c:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int l(android.content.Context) -> l
com.umeng.fb.b.d -> com.umeng.fb.b.d:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
com.umeng.fb.b.e -> com.umeng.fb.b.e:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
com.umeng.fb.c -> com.umeng.fb.c:
    com.umeng.fb.ContactActivity a -> a
    void a(android.app.Activity) -> a
com.umeng.fb.c.a -> com.umeng.fb.c.a:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a() -> a
    org.json.JSONObject b(android.content.Context) -> b
com.umeng.fb.d -> com.umeng.fb.d:
    com.umeng.fb.ConversationActivity a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.e -> com.umeng.fb.e:
    com.umeng.fb.d a -> a
    void a(android.app.Activity) -> a
com.umeng.fb.f -> com.umeng.fb.f:
    com.umeng.fb.ConversationActivity a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.g -> com.umeng.fb.g:
    com.umeng.fb.ConversationActivity a -> a
    void onClick(android.view.View) -> onClick
com.umeng.fb.h -> com.umeng.fb.h:
    com.umeng.fb.ConversationActivity a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void a(android.view.MotionEvent) -> a
com.umeng.fb.i -> com.umeng.fb.i:
    int b -> b
    com.umeng.fb.ConversationActivity a -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.umeng.fb.j -> com.umeng.fb.j:
    com.umeng.fb.ConversationActivity a -> a
    void onSendUserReply(java.util.List) -> onSendUserReply
    void onReceiveDevReply(java.util.List) -> onReceiveDevReply
com.umeng.fb.k -> com.umeng.fb.k:
    com.umeng.fb.FeedbackAgent a -> a
    void onSendUserReply(java.util.List) -> onSendUserReply
    void onReceiveDevReply(java.util.List) -> onReceiveDevReply
com.umeng.fb.l -> com.umeng.fb.l:
    java.util.List a() -> a
    com.umeng.fb.model.Conversation a(java.lang.String) -> a
    com.umeng.fb.model.Conversation b() -> b
    com.umeng.fb.model.UserInfo c() -> c
    void d() -> d
com.umeng.fb.model.Constants -> com.umeng.fb.model.Constants:
    java.lang.String SDK_TYPE -> SDK_TYPE
    java.lang.String SDK_VERSION -> SDK_VERSION
    java.lang.String OS -> OS
com.umeng.fb.model.Conversation -> com.umeng.fb.model.Conversation:
    java.lang.String b -> b
    android.content.Context c -> c
    java.util.concurrent.ExecutorService d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.util.List a -> a
    java.lang.String g -> g
    java.util.Map h -> h
    java.util.List getReplyList() -> getReplyList
    void addUserReply(java.lang.String) -> addUserReply
    void b() -> b
    org.json.JSONArray a() -> a
    java.lang.String getId() -> getId
    void sync(com.umeng.fb.model.Conversation$SyncListener) -> sync
    java.util.Map a(com.umeng.fb.model.Conversation) -> a
    java.lang.String b(com.umeng.fb.model.Conversation) -> b
    android.content.Context c(com.umeng.fb.model.Conversation) -> c
    java.lang.String d(com.umeng.fb.model.Conversation) -> d
    void e(com.umeng.fb.model.Conversation) -> e
com.umeng.fb.model.Conversation$1 -> com.umeng.fb.model.Conversation$1:
    android.os.Handler a -> a
    com.umeng.fb.model.Conversation b -> b
    void run() -> run
com.umeng.fb.model.Conversation$MessageWrapper -> com.umeng.fb.model.Conversation$MessageWrapper:
    java.util.List a -> a
    java.util.List b -> b
com.umeng.fb.model.Conversation$SyncHandler -> com.umeng.fb.model.Conversation$SyncHandler:
    com.umeng.fb.model.Conversation$SyncListener a -> a
    int b -> b
    int c -> c
    com.umeng.fb.model.Conversation d -> d
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.fb.model.Conversation$SyncListener -> com.umeng.fb.model.Conversation$SyncListener:
    void onReceiveDevReply(java.util.List) -> onReceiveDevReply
    void onSendUserReply(java.util.List) -> onSendUserReply
com.umeng.fb.model.DevReply -> com.umeng.fb.model.DevReply:
    java.lang.String a -> a
    org.json.JSONObject toJson() -> toJson
com.umeng.fb.model.Reply -> com.umeng.fb.model.Reply:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.umeng.fb.model.Reply$TYPE g -> g
    java.util.Date h -> h
    com.umeng.fb.model.Reply$STATUS i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    org.json.JSONObject toJson() -> toJson
    int compareTo(com.umeng.fb.model.Reply) -> compareTo
    java.lang.String getContent() -> getContent
    java.util.Date getDatetime() -> getDatetime
    com.umeng.fb.model.Reply$STATUS getStatus() -> getStatus
    int compareTo(java.lang.Object) -> compareTo
com.umeng.fb.model.Reply$STATUS -> com.umeng.fb.model.Reply$STATUS:
    com.umeng.fb.model.Reply$STATUS SENDING -> SENDING
    com.umeng.fb.model.Reply$STATUS NOT_SENT -> NOT_SENT
    com.umeng.fb.model.Reply$STATUS SENT -> SENT
    java.lang.String a -> a
    com.umeng.fb.model.Reply$STATUS[] b -> b
    com.umeng.fb.model.Reply$STATUS[] values() -> values
    com.umeng.fb.model.Reply$STATUS valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.umeng.fb.model.Reply$STATUS get(java.lang.String) -> get
com.umeng.fb.model.Reply$TYPE -> com.umeng.fb.model.Reply$TYPE:
    com.umeng.fb.model.Reply$TYPE NEW_FEEDBACK -> NEW_FEEDBACK
    com.umeng.fb.model.Reply$TYPE DEV_REPLY -> DEV_REPLY
    com.umeng.fb.model.Reply$TYPE USER_REPLY -> USER_REPLY
    java.lang.String a -> a
    com.umeng.fb.model.Reply$TYPE[] b -> b
    com.umeng.fb.model.Reply$TYPE[] values() -> values
    com.umeng.fb.model.Reply$TYPE valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    com.umeng.fb.model.Reply$TYPE get(java.lang.String) -> get
com.umeng.fb.model.Store -> com.umeng.fb.model.Store:
    java.lang.String a -> a
    com.umeng.fb.model.Store b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    com.umeng.fb.model.Store getInstance(android.content.Context) -> getInstance
    void saveCoversation(com.umeng.fb.model.Conversation) -> saveCoversation
    void saveUserInfo(com.umeng.fb.model.UserInfo) -> saveUserInfo
    com.umeng.fb.model.UserInfo getUserInfo() -> getUserInfo
    long getUserInfoLastUpdateAt() -> getUserInfoLastUpdateAt
    long getUserInfoLastSyncAt() -> getUserInfoLastSyncAt
    void setUserInfoLastSyncAt(long) -> setUserInfoLastSyncAt
    com.umeng.fb.model.Conversation getConversationById(java.lang.String) -> getConversationById
    java.util.List getAllConversationIds() -> getAllConversationIds
    void a() -> a
com.umeng.fb.model.UserInfo -> com.umeng.fb.model.UserInfo:
    java.lang.String e -> e
    int a -> a
    java.lang.String b -> b
    java.util.Map c -> c
    java.util.Map d -> d
    org.json.JSONObject toJson() -> toJson
    int getAgeGroup() -> getAgeGroup
    void setAgeGroup(int) -> setAgeGroup
    java.lang.String getGender() -> getGender
    void setGender(java.lang.String) -> setGender
    java.util.Map getContact() -> getContact
    void setContact(java.util.Map) -> setContact
    java.util.Map getRemark() -> getRemark
    void setRemark(java.util.Map) -> setRemark
com.umeng.fb.model.UserReply -> com.umeng.fb.model.UserReply:
    org.json.JSONObject toJson() -> toJson
com.umeng.fb.model.UserTitleReply -> com.umeng.fb.model.UserTitleReply:
    java.lang.String a -> a
    java.lang.String j -> j
    org.json.JSONObject toJson() -> toJson
com.umeng.newxp.Promoter -> com.umeng.newxp.Promoter:
    java.lang.String promoter -> promoter
    int category -> category
    int content_type -> content_type
    int display_type -> display_type
    java.lang.String img -> img
    int anim_in -> anim_in
    int landing_type -> landing_type
    java.lang.String text_font -> text_font
    java.lang.String text_size -> text_size
    java.lang.String text_color -> text_color
    java.lang.String title -> title
    java.lang.String provider -> provider
    java.lang.String ad_words -> ad_words
    java.lang.String description -> description
    java.lang.String icon -> icon
    java.lang.String url -> url
    int app_version_code -> app_version_code
    java.lang.String url_in_app -> url_in_app
    long size -> size
    java.lang.String app_package_name -> app_package_name
    java.lang.String app_version_name -> app_version_name
    int new_tip -> new_tip
    double bid -> bid
    java.lang.String price -> price
    int LANDING_TYPE_BROWSER -> LANDING_TYPE_BROWSER
    int LANDING_TYPE_DIRECT_DOWNLOAD -> LANDING_TYPE_DIRECT_DOWNLOAD
    int LANDING_TYPE_POPUP -> LANDING_TYPE_POPUP
    int LANDING_TYPE_WAP_WEBVIEW -> LANDING_TYPE_WAP_WEBVIEW
    int LANDING_TYPE_WEBVIEW -> LANDING_TYPE_WEBVIEW
    int REPORT_CLICK_TO_LAUNCH_DETAIL_PAGE -> REPORT_CLICK_TO_LAUNCH_DETAIL_PAGE
    int REPORT_CLICK_TO_LAUNCH -> REPORT_CLICK_TO_LAUNCH
    int REPORT_CLICK_TO_PROMOTE -> REPORT_CLICK_TO_PROMOTE
    int REPORT_DOWNLOAD -> REPORT_DOWNLOAD
    int REPORT_DOWNLOAD_CLICK -> REPORT_DOWNLOAD_CLICK
    int REPORT_DOWNLOAD_CLICK_DIRECT -> REPORT_DOWNLOAD_CLICK_DIRECT
    int REPORT_IMPRESSION -> REPORT_IMPRESSION
    int REPORT_FILTERED -> REPORT_FILTERED
    com.umeng.newxp.Promoter getPromoterFromJson(org.json.JSONObject) -> getPromoterFromJson
    org.json.JSONObject toJson() -> toJson
    com.umeng.newxp.Promoter buildMockPromoter() -> buildMockPromoter
com.umeng.newxp.Promoter$1 -> com.umeng.newxp.Promoter$1:
com.umeng.newxp.Promoter$a -> com.umeng.newxp.Promoter$a:
    com.umeng.newxp.Promoter$a a -> a
    com.umeng.newxp.Promoter$a b -> b
    com.umeng.newxp.Promoter$a c -> c
    com.umeng.newxp.Promoter$a[] d -> d
    com.umeng.newxp.Promoter$a[] values() -> values
    com.umeng.newxp.Promoter$a valueOf(java.lang.String) -> valueOf
    java.lang.String[] a() -> a
com.umeng.newxp.UBroadcastReceiver -> com.umeng.newxp.UBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onShow() -> onShow
    void onDismiss() -> onDismiss
com.umeng.newxp.a -> com.umeng.newxp.a:
    java.lang.String c -> c
    java.util.List d -> d
    android.content.Context e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.umeng.newxp.a$a a -> a
    com.umeng.newxp.controller.ExchangeDataService b -> b
    int h -> h
    com.umeng.newxp.controller.XpListenersCenter$NTipsChangedListener i -> i
    boolean j -> j
    void a() -> a
    void a(java.util.List) -> a
    void a(int) -> a
    void a(java.util.List,boolean) -> a
    java.util.List b() -> b
    void a(com.umeng.newxp.controller.XpListenersCenter$NTipsChangedListener) -> a
    void a(com.umeng.newxp.a,java.util.List,boolean) -> a
    java.lang.String c() -> c
    boolean a(com.umeng.newxp.a) -> a
com.umeng.newxp.a$a -> com.umeng.newxp.a$a:
    com.umeng.newxp.a$a a -> a
    com.umeng.newxp.a$a b -> b
    com.umeng.newxp.a$a[] c -> c
    com.umeng.newxp.a$a[] values() -> values
    com.umeng.newxp.a$a valueOf(java.lang.String) -> valueOf
com.umeng.newxp.a.a -> com.umeng.newxp.a.a:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    int n(android.content.Context) -> n
    int o(android.content.Context) -> o
    int p(android.content.Context) -> p
com.umeng.newxp.a.b -> com.umeng.newxp.a.b:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    int n(android.content.Context) -> n
    int o(android.content.Context) -> o
    int p(android.content.Context) -> p
    int q(android.content.Context) -> q
    int r(android.content.Context) -> r
    int s(android.content.Context) -> s
    int t(android.content.Context) -> t
    int u(android.content.Context) -> u
    int v(android.content.Context) -> v
    int w(android.content.Context) -> w
    int x(android.content.Context) -> x
com.umeng.newxp.a.c -> com.umeng.newxp.a.c:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    int n(android.content.Context) -> n
    int o(android.content.Context) -> o
    int p(android.content.Context) -> p
    int q(android.content.Context) -> q
    int r(android.content.Context) -> r
    int s(android.content.Context) -> s
    int t(android.content.Context) -> t
    int u(android.content.Context) -> u
    int v(android.content.Context) -> v
    int w(android.content.Context) -> w
    int x(android.content.Context) -> x
    int y(android.content.Context) -> y
    int z(android.content.Context) -> z
    int A(android.content.Context) -> A
    int B(android.content.Context) -> B
    int C(android.content.Context) -> C
    int D(android.content.Context) -> D
    int E(android.content.Context) -> E
    int F(android.content.Context) -> F
    int G(android.content.Context) -> G
    int H(android.content.Context) -> H
    int I(android.content.Context) -> I
    int J(android.content.Context) -> J
    int K(android.content.Context) -> K
    int L(android.content.Context) -> L
com.umeng.newxp.a.d -> com.umeng.newxp.a.d:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
    int l(android.content.Context) -> l
    int m(android.content.Context) -> m
    int n(android.content.Context) -> n
    int o(android.content.Context) -> o
    int p(android.content.Context) -> p
    int q(android.content.Context) -> q
    int r(android.content.Context) -> r
    int s(android.content.Context) -> s
    int t(android.content.Context) -> t
    int u(android.content.Context) -> u
    int v(android.content.Context) -> v
    int w(android.content.Context) -> w
    int x(android.content.Context) -> x
    int y(android.content.Context) -> y
    int z(android.content.Context) -> z
    int A(android.content.Context) -> A
com.umeng.newxp.a.e -> com.umeng.newxp.a.e:
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    int g(android.content.Context) -> g
    int h(android.content.Context) -> h
    int i(android.content.Context) -> i
com.umeng.newxp.b -> com.umeng.newxp.b:
    com.umeng.newxp.a a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.c -> com.umeng.newxp.c:
    java.lang.String toString() -> toString
com.umeng.newxp.common.ExchangeConstants -> com.umeng.newxp.common.ExchangeConstants:
    java.lang.String sdk_version -> sdk_version
    boolean DEBUG_MODE -> DEBUG_MODE
    java.lang.String APPKEY -> APPKEY
    java.lang.String CHANNEL -> CHANNEL
    java.lang.String banben -> banben
    java.lang.String text_color -> text_color
    int banner_alpha -> banner_alpha
    boolean TIPS_DOWNLOAD -> TIPS_DOWNLOAD
    java.lang.String[] BASE_URL_LIST -> BASE_URL_LIST
    boolean CONTAINER_AUTOEXPANDED -> CONTAINER_AUTOEXPANDED
    int CONTAINER_HEIGHT -> CONTAINER_HEIGHT
    int CONTAINER_LIST_COUNT -> CONTAINER_LIST_COUNT
    int CURTAIN_LIST_COUNT_HORIZEN -> CURTAIN_LIST_COUNT_HORIZEN
    int CURTAIN_PEARL_COUNT_HORIZEN -> CURTAIN_PEARL_COUNT_HORIZEN
    int CURTAIN_PEARL_COUNT_VERTICAL -> CURTAIN_PEARL_COUNT_VERTICAL
    int DATA_CACHE_TIME -> DATA_CACHE_TIME
    boolean DATA_COMPRESS -> DATA_COMPRESS
    int DRAWER_LIST_COUNT_VERTICAL -> DRAWER_LIST_COUNT_VERTICAL
    boolean full_screen -> full_screen
    boolean handler_auto_expand -> handler_auto_expand
    boolean handler_left -> handler_left
    boolean has_banner -> has_banner
    java.lang.String WEB_CACHE_NAME -> WEB_CACHE_NAME
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String no -> no
    boolean ONLY_CHINESE -> ONLY_CHINESE
    java.lang.String protocol_version -> protocol_version
    boolean ROUND_ICON -> ROUND_ICON
    int REFRESH_INTERVAL -> REFRESH_INTERVAL
    boolean IGNORE_SERVER_INTERVAL -> IGNORE_SERVER_INTERVAL
    boolean RICH_NOTIFICATION -> RICH_NOTIFICATION
    boolean show_price -> show_price
    boolean show_size -> show_size
    int type_big_handler_bottom -> type_big_handler_bottom
    int type_big_handler_top -> type_big_handler_top
    int type_grid_view_bottom -> type_grid_view_bottom
    int type_grid_view_top -> type_grid_view_top
    int type_pearl_curtain -> type_pearl_curtain
    int type_scroll_view_bottom -> type_scroll_view_bottom
    int type_small_handler_list_top -> type_small_handler_list_top
    int type_image_entry -> type_image_entry
    int type_small_handler_list_bottom -> type_small_handler_list_bottom
    int type_standalone_handler -> type_standalone_handler
    int type_list_curtain -> type_list_curtain
    int type_container -> type_container
    int type_large_image -> type_large_image
    int type_hypertextlink_banner -> type_hypertextlink_banner
    int type_partners_banner -> type_partners_banner
    int type_wap_style -> type_wap_style
    int type_float_dialog -> type_float_dialog
    int type_cloud_full -> type_cloud_full
    boolean USE_SCROLL_VIEW_LANDSCAPE -> USE_SCROLL_VIEW_LANDSCAPE
    boolean USE_SIMPLE_DIALOG -> USE_SIMPLE_DIALOG
    int ANIM_SLIDE_LEFT -> ANIM_SLIDE_LEFT
    int ANIM_SLIDE_RIGHT -> ANIM_SLIDE_RIGHT
    int ANIM_SLIDE_UP -> ANIM_SLIDE_UP
    int ANIM_SLIDE_DOWN -> ANIM_SLIDE_DOWN
    int a -> a
    int ANIM_SCALE -> ANIM_SCALE
    int ANIM_3D_X -> ANIM_3D_X
    int ANIM_3D_Y -> ANIM_3D_Y
    int b -> b
    java.lang.String WAP_URL -> WAP_URL
com.umeng.newxp.common.a -> com.umeng.newxp.common.a:
    void a(android.view.View) -> a
    void b(android.view.View) -> b
com.umeng.newxp.common.b -> com.umeng.newxp.common.b:
    android.view.View a -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.umeng.newxp.common.c -> com.umeng.newxp.common.c:
    android.view.View a -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.umeng.newxp.common.d -> com.umeng.newxp.common.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    java.lang.String al -> al
    java.lang.String am -> am
    java.lang.String an -> an
    java.lang.String ao -> ao
    java.lang.String ap -> ap
    java.lang.String aq -> aq
    java.lang.String ar -> ar
    java.lang.String as -> as
    java.lang.String at -> at
    java.lang.String au -> au
    java.lang.String av -> av
    java.lang.String aw -> aw
    java.lang.String ax -> ax
    java.lang.String ay -> ay
    java.lang.String az -> az
    java.lang.String aA -> aA
    java.lang.String aB -> aB
    java.lang.String aC -> aC
    java.lang.String aD -> aD
    java.lang.String aE -> aE
    java.lang.String aF -> aF
    java.lang.String aG -> aG
    java.lang.String aH -> aH
    java.lang.String aI -> aI
    java.lang.String aJ -> aJ
    java.lang.String aK -> aK
    java.lang.String aL -> aL
    java.lang.String aM -> aM
    java.lang.String aN -> aN
    java.lang.String aO -> aO
    java.lang.String aP -> aP
    java.lang.String aQ -> aQ
    java.lang.String aR -> aR
    java.lang.String aS -> aS
    java.lang.String aT -> aT
    java.lang.String aU -> aU
    java.lang.String aV -> aV
    java.lang.String aW -> aW
    java.lang.String aX -> aX
    java.lang.String aY -> aY
    int aZ -> aZ
    int ba -> ba
com.umeng.newxp.common.e -> com.umeng.newxp.common.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    android.content.Context i -> i
    com.umeng.newxp.common.e$a j -> j
    android.database.sqlite.SQLiteDatabase k -> k
    com.umeng.newxp.common.e l -> l
    com.umeng.newxp.common.e a() -> a
    void b() -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    boolean a(java.lang.String,boolean) -> a
    boolean b(java.lang.String) -> b
    boolean b(java.lang.String,boolean) -> b
    com.umeng.newxp.common.e a(android.content.Context) -> a
com.umeng.newxp.common.e$a -> com.umeng.newxp.common.e$a:
    com.umeng.newxp.common.e a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.umeng.newxp.common.f -> com.umeng.newxp.common.f:
    float a -> a
    float b -> b
    float c -> c
    float d -> d
    android.graphics.Camera e -> e
    boolean f -> f
    boolean g -> g
    float h -> h
    void initialize(int,int,int,int) -> initialize
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.umeng.newxp.common.g -> com.umeng.newxp.common.g:
    java.util.Map d -> d
    java.lang.String a(android.content.Context,com.umeng.newxp.controller.ExchangeDataService) -> a
    java.util.Map d() -> d
    java.lang.String y(android.content.Context) -> y
    boolean a(java.lang.String,boolean,java.lang.String[]) -> a
    void a(android.widget.ImageView,android.content.Context,com.umeng.newxp.controller.ExchangeDataService,com.umeng.newxp.common.g$a) -> a
    int a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,com.umeng.newxp.controller.ExchangeDataService) -> b
    java.util.List a(java.util.List,java.util.List) -> a
    boolean a(java.lang.String,java.util.List) -> a
    int e() -> e
    boolean a(android.app.Activity) -> a
com.umeng.newxp.common.g$a -> com.umeng.newxp.common.g$a:
    void a(android.widget.ImageView) -> a
    void a(java.util.List) -> a
    void a(int) -> a
com.umeng.newxp.common.h -> com.umeng.newxp.common.h:
    com.umeng.newxp.common.g$a a -> a
    com.umeng.newxp.controller.ExchangeDataService b -> b
    android.widget.ImageView c -> c
    android.content.Context d -> d
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.common.i -> com.umeng.newxp.common.i:
    java.util.List a -> a
    com.umeng.newxp.common.h b -> b
    void a(com.umeng.common.net.q$b) -> a
    void a(com.umeng.common.net.p$a) -> a
com.umeng.newxp.controller.ExchangeDataService -> com.umeng.newxp.controller.ExchangeDataService:
    java.lang.String a -> a
    long oid -> oid
    long[] timeLine -> timeLine
    int autofill -> autofill
    java.lang.String sessionId -> sessionId
    java.lang.String landing_image -> landing_image
    int layoutType -> layoutType
    int displayStyle -> displayStyle
    int require_desc -> require_desc
    java.lang.String b -> b
    boolean c -> c
    boolean d -> d
    int e -> e
    boolean f -> f
    java.lang.String slot_id -> slot_id
    java.lang.String appkey -> appkey
    boolean pagination -> pagination
    boolean show_progress_wheel -> show_progress_wheel
    java.lang.String opensize -> opensize
    android.content.Context mContext -> mContext
    int page_index -> page_index
    com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener mDataReceiverListener -> mDataReceiverListener
    int g -> g
    int h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    com.umeng.newxp.controller.XpListenersCenter$InitializeListener initializeListener -> initializeListener
    com.umeng.newxp.a preloadData -> preloadData
    int newTips -> newTips
    int DEBUG_NEW_TIPS -> DEBUG_NEW_TIPS
    java.lang.String p -> p
    java.lang.String q -> q
    boolean broadcast -> broadcast
    java.lang.String getTimeConsuming() -> getTimeConsuming
    void preloadData(android.content.Context,com.umeng.newxp.controller.XpListenersCenter$NTipsChangedListener,int) -> preloadData
    void preloadData(android.content.Context,java.util.List,com.umeng.newxp.controller.XpListenersCenter$NTipsChangedListener,int) -> preloadData
    int a(java.util.List) -> a
    java.util.Map a() -> a
    void requestDataAsyn(android.content.Context,com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener,boolean) -> requestDataAsyn
    void requestDataAsyn(android.content.Context,com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener) -> requestDataAsyn
    void a(com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener,int) -> a
    void b(com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener,int) -> b
    void setKeywords(java.lang.String) -> setKeywords
    boolean isFilterInstalledApp() -> isFilterInstalledApp
    void setFilterInstalledApp(boolean) -> setFilterInstalledApp
    void setTemplate(int) -> setTemplate
    int getTemplate() -> getTemplate
    java.lang.String getBroadCastAction(android.content.Context) -> getBroadCastAction
    void registerBroadcast(android.content.Context,com.umeng.newxp.UBroadcastReceiver) -> registerBroadcast
    void unregisterBroadcast(android.content.Context,com.umeng.newxp.UBroadcastReceiver) -> unregisterBroadcast
    void reportImpression(com.umeng.newxp.Promoter[]) -> reportImpression
    void clickOnPromoter(com.umeng.newxp.Promoter) -> clickOnPromoter
    java.lang.String a(com.umeng.newxp.controller.ExchangeDataService) -> a
    java.lang.String b(com.umeng.newxp.controller.ExchangeDataService) -> b
    java.lang.String c(com.umeng.newxp.controller.ExchangeDataService) -> c
    java.util.Map d(com.umeng.newxp.controller.ExchangeDataService) -> d
    boolean e(com.umeng.newxp.controller.ExchangeDataService) -> e
    int a(com.umeng.newxp.controller.ExchangeDataService,java.util.List) -> a
    java.lang.String f(com.umeng.newxp.controller.ExchangeDataService) -> f
    java.lang.String g(com.umeng.newxp.controller.ExchangeDataService) -> g
    boolean h(com.umeng.newxp.controller.ExchangeDataService) -> h
    boolean a(com.umeng.newxp.controller.ExchangeDataService,boolean) -> a
    boolean i(com.umeng.newxp.controller.ExchangeDataService) -> i
    int a(com.umeng.newxp.controller.ExchangeDataService,int) -> a
    java.lang.String j(com.umeng.newxp.controller.ExchangeDataService) -> j
com.umeng.newxp.controller.ExchangeDataService$a -> com.umeng.newxp.controller.ExchangeDataService$a:
    com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener b -> b
    int c -> c
    java.util.Map d -> d
    android.os.Handler e -> e
    com.umeng.newxp.controller.ExchangeDataService a -> a
    java.util.List a() -> a
    java.util.List a(com.umeng.newxp.net.g) -> a
    java.util.List b() -> b
    void run() -> run
    com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener a(com.umeng.newxp.controller.ExchangeDataService$a) -> a
com.umeng.newxp.controller.XpListenersCenter -> com.umeng.newxp.controller.XpListenersCenter:
com.umeng.newxp.controller.XpListenersCenter$AdapterListener -> com.umeng.newxp.controller.XpListenersCenter$AdapterListener:
    void onFitType(android.view.View,com.umeng.newxp.controller.XpListenersCenter$FitType) -> onFitType
com.umeng.newxp.controller.XpListenersCenter$BindMode -> com.umeng.newxp.controller.XpListenersCenter$BindMode:
    com.umeng.newxp.controller.XpListenersCenter$BindMode BIND_FORM_CACHE -> BIND_FORM_CACHE
    com.umeng.newxp.controller.XpListenersCenter$BindMode BIND_FROM_NET -> BIND_FROM_NET
    com.umeng.newxp.controller.XpListenersCenter$BindMode[] $VALUES -> $VALUES
    com.umeng.newxp.controller.XpListenersCenter$BindMode[] values() -> values
    com.umeng.newxp.controller.XpListenersCenter$BindMode valueOf(java.lang.String) -> valueOf
com.umeng.newxp.controller.XpListenersCenter$EntryOnClickListener -> com.umeng.newxp.controller.XpListenersCenter$EntryOnClickListener:
    void onClick(android.view.View) -> onClick
com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener -> com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener:
    int STATUS_FAIL -> STATUS_FAIL
    int STATUS_SUCCESS -> STATUS_SUCCESS
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.controller.XpListenersCenter$FitType -> com.umeng.newxp.controller.XpListenersCenter$FitType:
    com.umeng.newxp.controller.XpListenersCenter$FitType OPEN -> OPEN
    com.umeng.newxp.controller.XpListenersCenter$FitType DOWNLOAD -> DOWNLOAD
    com.umeng.newxp.controller.XpListenersCenter$FitType BROWSE -> BROWSE
    com.umeng.newxp.controller.XpListenersCenter$FitType PHONE -> PHONE
    com.umeng.newxp.controller.XpListenersCenter$FitType NEW -> NEW
    com.umeng.newxp.controller.XpListenersCenter$FitType[] $VALUES -> $VALUES
    com.umeng.newxp.controller.XpListenersCenter$FitType[] values() -> values
    com.umeng.newxp.controller.XpListenersCenter$FitType valueOf(java.lang.String) -> valueOf
com.umeng.newxp.controller.XpListenersCenter$FloatDialogListener -> com.umeng.newxp.controller.XpListenersCenter$FloatDialogListener:
    void onStart() -> onStart
    void onPrepared(int) -> onPrepared
    void onShow(boolean) -> onShow
    void onClose() -> onClose
    boolean onConfirmClickWithCallBackUrl(java.lang.String) -> onConfirmClickWithCallBackUrl
com.umeng.newxp.controller.XpListenersCenter$InitializeListener -> com.umeng.newxp.controller.XpListenersCenter$InitializeListener:
    void onStartRequestData(int) -> onStartRequestData
    void onReceived(int) -> onReceived
com.umeng.newxp.controller.XpListenersCenter$LargeGalleryBindListener -> com.umeng.newxp.controller.XpListenersCenter$LargeGalleryBindListener:
    void onStart(com.umeng.newxp.controller.XpListenersCenter$BindMode,android.view.ViewGroup) -> onStart
    void onEnd(com.umeng.newxp.controller.XpListenersCenter$STATUS,android.view.ViewGroup) -> onEnd
com.umeng.newxp.controller.XpListenersCenter$ListClickListener -> com.umeng.newxp.controller.XpListenersCenter$ListClickListener:
    void click(com.umeng.newxp.Promoter) -> click
com.umeng.newxp.controller.XpListenersCenter$MoreClickListener -> com.umeng.newxp.controller.XpListenersCenter$MoreClickListener:
    void click() -> click
com.umeng.newxp.controller.XpListenersCenter$MoreFinishListener -> com.umeng.newxp.controller.XpListenersCenter$MoreFinishListener:
    void finish() -> finish
com.umeng.newxp.controller.XpListenersCenter$NTipsChangedListener -> com.umeng.newxp.controller.XpListenersCenter$NTipsChangedListener:
    void onChanged(int) -> onChanged
com.umeng.newxp.controller.XpListenersCenter$ReportListener -> com.umeng.newxp.controller.XpListenersCenter$ReportListener:
    void onReportStart(java.util.Map) -> onReportStart
    void onReportEnd(com.umeng.common.net.p$a) -> onReportEnd
com.umeng.newxp.controller.XpListenersCenter$STATUS -> com.umeng.newxp.controller.XpListenersCenter$STATUS:
    com.umeng.newxp.controller.XpListenersCenter$STATUS SUCCESS -> SUCCESS
    com.umeng.newxp.controller.XpListenersCenter$STATUS FAIL -> FAIL
    com.umeng.newxp.controller.XpListenersCenter$STATUS[] $VALUES -> $VALUES
    com.umeng.newxp.controller.XpListenersCenter$STATUS[] values() -> values
    com.umeng.newxp.controller.XpListenersCenter$STATUS valueOf(java.lang.String) -> valueOf
com.umeng.newxp.controller.a -> com.umeng.newxp.controller.a:
    java.util.ArrayList a -> a
    int b -> b
    void a(java.util.List) -> a
    int a() -> a
    int b() -> b
    boolean hasNext() -> hasNext
    com.umeng.newxp.Promoter c() -> c
    void remove() -> remove
    com.umeng.newxp.Promoter d() -> d
    com.umeng.newxp.controller.a$a e() -> e
    java.util.List a(int) -> a
    com.umeng.newxp.Promoter f() -> f
    com.umeng.newxp.Promoter b(int) -> b
    java.lang.Object next() -> next
com.umeng.newxp.controller.a$a -> com.umeng.newxp.controller.a$a:
    com.umeng.newxp.Promoter a -> a
    int b -> b
com.umeng.newxp.controller.b -> com.umeng.newxp.controller.b:
    void a(com.umeng.newxp.Promoter,android.content.Context,com.umeng.newxp.controller.ExchangeDataService,int,boolean) -> a
    void a(com.umeng.newxp.controller.a$a,android.content.Context,com.umeng.newxp.controller.ExchangeDataService,int,boolean,int) -> a
    void a(com.umeng.newxp.controller.a$a,android.content.Context,com.umeng.newxp.controller.ExchangeDataService,int,com.umeng.newxp.Promoter,int) -> a
    void b(com.umeng.newxp.controller.a$a,android.content.Context,com.umeng.newxp.controller.ExchangeDataService,int,com.umeng.newxp.Promoter,int) -> b
    void a(android.content.Context,com.umeng.newxp.controller.ExchangeDataService,int,com.umeng.newxp.Promoter,int) -> a
    void b(android.content.Context,com.umeng.newxp.controller.ExchangeDataService,int,com.umeng.newxp.Promoter,int) -> b
    void c(android.content.Context,com.umeng.newxp.controller.ExchangeDataService,int,com.umeng.newxp.Promoter,int) -> c
    void d(android.content.Context,com.umeng.newxp.controller.ExchangeDataService,int,com.umeng.newxp.Promoter,int) -> d
com.umeng.newxp.controller.c -> com.umeng.newxp.controller.c:
    com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener a -> a
    boolean b -> b
    com.umeng.newxp.controller.ExchangeDataService c -> c
    void dataReceived(int,java.util.List) -> dataReceived
    void a(boolean) -> a
    void a(com.umeng.newxp.controller.c,boolean) -> a
com.umeng.newxp.controller.d -> com.umeng.newxp.controller.d:
    com.umeng.newxp.controller.c a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.controller.e -> com.umeng.newxp.controller.e:
    com.umeng.newxp.controller.ExchangeDataService$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.newxp.controller.f -> com.umeng.newxp.controller.f:
com.umeng.newxp.controller.f$a -> com.umeng.newxp.controller.f$a:
    void a() -> a
com.umeng.newxp.controller.g -> com.umeng.newxp.controller.g:
    com.umeng.newxp.controller.f$a a -> a
    android.os.Handler b -> b
    void run() -> run
com.umeng.newxp.controller.h -> com.umeng.newxp.controller.h:
    com.umeng.newxp.controller.g a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.newxp.d -> com.umeng.newxp.d:
    java.lang.String toString() -> toString
com.umeng.newxp.e -> com.umeng.newxp.e:
    java.lang.String toString() -> toString
com.umeng.newxp.net.XpReportClient -> com.umeng.newxp.net.XpReportClient:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.newxp.controller.XpListenersCenter$ReportListener c -> c
    java.util.List d -> d
    android.content.Context e -> e
    com.umeng.common.net.p$a send(com.umeng.common.net.o) -> send
    void a(android.content.SharedPreferences$Editor,com.umeng.common.net.o) -> a
    void a(android.content.SharedPreferences,android.content.SharedPreferences$Editor,int) -> a
    void registerReportListener(com.umeng.newxp.controller.XpListenersCenter$ReportListener) -> registerReportListener
    void unregisterReportListener(com.umeng.newxp.controller.XpListenersCenter$ReportListener) -> unregisterReportListener
    java.util.List a() -> a
com.umeng.newxp.net.a -> com.umeng.newxp.net.a:
    java.lang.String[] a -> a
    com.umeng.common.net.p$a send(com.umeng.common.net.o) -> send
    java.lang.String[] getReprotList() -> getReprotList
com.umeng.newxp.net.b -> com.umeng.newxp.net.b:
    java.lang.String[] a -> a
    com.umeng.newxp.net.g a(com.umeng.newxp.net.f) -> a
com.umeng.newxp.net.c -> com.umeng.newxp.net.c:
    java.lang.String b -> b
    java.lang.String a -> a
    android.content.Context c -> c
    com.umeng.common.net.a d -> d
    com.umeng.newxp.net.e e -> e
    com.umeng.newxp.Promoter f -> f
    void a() -> a
    com.umeng.newxp.Promoter a(com.umeng.newxp.net.c) -> a
    android.content.Context b(com.umeng.newxp.net.c) -> b
    java.lang.String b() -> b
    com.umeng.newxp.net.e c(com.umeng.newxp.net.c) -> c
com.umeng.newxp.net.c$a -> com.umeng.newxp.net.c$a:
    java.lang.String b -> b
    com.umeng.common.net.c c -> c
    com.umeng.newxp.net.c a -> a
    void a() -> a
    void a(int) -> a
    void a(int,int,java.lang.String) -> a
    void b(int) -> b
com.umeng.newxp.net.d -> com.umeng.newxp.net.d:
    void onReportStart(java.util.Map) -> onReportStart
    void onReportEnd(com.umeng.common.net.p$a) -> onReportEnd
com.umeng.newxp.net.e -> com.umeng.newxp.net.e:
    java.util.Map a -> a
    java.lang.String[] e -> e
    java.lang.String c() -> c
    org.json.JSONObject a() -> a
    com.umeng.newxp.net.e a(org.json.JSONObject) -> a
    java.lang.String b() -> b
    java.lang.String e() -> e
com.umeng.newxp.net.e$a -> com.umeng.newxp.net.e$a:
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    int k -> k
    long l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    java.lang.String v -> v
    java.util.Random w -> w
    int x -> x
    int y -> y
    java.lang.String z -> z
    int A -> A
    int B -> B
    android.content.Context a -> a
    java.util.List b -> b
    com.umeng.newxp.net.e$a a(java.lang.String) -> a
    com.umeng.newxp.net.e$a b(java.lang.String) -> b
    com.umeng.newxp.net.e$a c(java.lang.String) -> c
    com.umeng.newxp.net.e$a a(int) -> a
    com.umeng.newxp.net.e$a b(int) -> b
    com.umeng.newxp.net.e$a c(int) -> c
    com.umeng.newxp.net.e$a d(int) -> d
    com.umeng.newxp.net.e$a e(int) -> e
    com.umeng.newxp.net.e$a f(int) -> f
    com.umeng.newxp.net.e$a d(java.lang.String) -> d
    com.umeng.newxp.net.e$a a(com.umeng.newxp.Promoter[]) -> a
    com.umeng.newxp.net.e a() -> a
    java.util.Map b() -> b
    boolean a(java.util.Map) -> a
    java.util.Map c() -> c
com.umeng.newxp.net.f -> com.umeng.newxp.net.f:
    java.util.Map a -> a
    org.json.JSONObject a() -> a
    java.lang.String c() -> c
    java.lang.String b() -> b
    void a(java.lang.String) -> a
com.umeng.newxp.net.g -> com.umeng.newxp.net.g:
    java.lang.String n -> n
    int a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    int k -> k
    java.util.List l -> l
    org.json.JSONObject m -> m
    void a(org.json.JSONObject) -> a
com.umeng.newxp.view.A -> com.umeng.newxp.view.A:
    com.umeng.newxp.view.w a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.B -> com.umeng.newxp.view.B:
    int a -> a
    com.umeng.newxp.view.A b -> b
    void run() -> run
com.umeng.newxp.view.C -> com.umeng.newxp.view.C:
    com.umeng.newxp.view.A a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.D -> com.umeng.newxp.view.D:
    android.view.ViewGroup a -> a
    com.umeng.newxp.view.ExchangeViewManager b -> b
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.E -> com.umeng.newxp.view.E:
    com.umeng.newxp.view.D a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.EmbededContainer -> com.umeng.newxp.view.EmbededContainer:
    android.view.ViewGroup a -> a
    android.widget.ListView b -> b
    android.content.Context c -> c
    int mType -> mType
    com.umeng.newxp.controller.ExchangeDataService d -> d
    java.util.List e -> e
    com.umeng.newxp.controller.XpListenersCenter$AdapterListener f -> f
    int g -> g
    com.umeng.newxp.view.GridTemplateConfig h -> h
    android.view.animation.Animation i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    void a(com.umeng.newxp.view.aI,int,java.util.List) -> a
    void setInteraction() -> setInteraction
    void a() -> a
    void a(com.umeng.newxp.view.EmbededContainer,com.umeng.newxp.view.aI,int,java.util.List) -> a
    com.umeng.newxp.controller.ExchangeDataService a(com.umeng.newxp.view.EmbededContainer) -> a
    android.widget.ListView b(com.umeng.newxp.view.EmbededContainer) -> b
    android.content.Context c(com.umeng.newxp.view.EmbededContainer) -> c
    java.util.List d(com.umeng.newxp.view.EmbededContainer) -> d
    boolean e(com.umeng.newxp.view.EmbededContainer) -> e
    android.view.animation.Animation f(com.umeng.newxp.view.EmbededContainer) -> f
    boolean a(com.umeng.newxp.view.EmbededContainer,boolean) -> a
    void g(com.umeng.newxp.view.EmbededContainer) -> g
    int h(com.umeng.newxp.view.EmbededContainer) -> h
    android.view.animation.Animation a(com.umeng.newxp.view.EmbededContainer,android.view.animation.Animation) -> a
com.umeng.newxp.view.EmbededContainer$a -> com.umeng.newxp.view.EmbededContainer$a:
    com.umeng.newxp.view.d b -> b
    android.view.View c -> c
    android.widget.TextView d -> d
    android.widget.ImageView e -> e
    com.umeng.newxp.view.EmbededContainer a -> a
    void a() -> a
    void b() -> b
    android.text.SpannableString c() -> c
    android.widget.ImageView a(com.umeng.newxp.view.EmbededContainer$a) -> a
    android.widget.TextView b(com.umeng.newxp.view.EmbededContainer$a) -> b
    void c(com.umeng.newxp.view.EmbededContainer$a) -> c
    com.umeng.newxp.view.d d(com.umeng.newxp.view.EmbededContainer$a) -> d
    android.text.SpannableString e(com.umeng.newxp.view.EmbededContainer$a) -> e
    android.view.View f(com.umeng.newxp.view.EmbededContainer$a) -> f
com.umeng.newxp.view.EmbededContainer$a$a -> com.umeng.newxp.view.EmbededContainer$a$a:
    boolean b -> b
    com.umeng.newxp.view.EmbededContainer$a a -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.umeng.newxp.view.ExchangeViewManager -> com.umeng.newxp.view.ExchangeViewManager:
    java.lang.String f -> f
    com.umeng.newxp.view.f a -> a
    com.umeng.newxp.view.aF b -> b
    com.umeng.newxp.view.LargeGalleryConfig g -> g
    com.umeng.newxp.view.FloatDialogConfig h -> h
    com.umeng.newxp.view.GridTemplateConfig i -> i
    android.content.Context c -> c
    int d -> d
    com.umeng.newxp.controller.ExchangeDataService j -> j
    com.umeng.newxp.controller.XpListenersCenter$EntryOnClickListener e -> e
    android.widget.ImageView k -> k
    android.view.View l -> l
    android.widget.TextView m -> m
    android.widget.ImageView n -> n
    java.util.List predata -> predata
    void addView(android.view.ViewGroup,int,java.lang.String[]) -> addView
    boolean a(int) -> a
    void addView(int,android.view.View,android.graphics.drawable.Drawable[]) -> addView
    void hideBanner() -> hideBanner
    void hideBanner(int) -> hideBanner
    void setLoopInterval(int) -> setLoopInterval
    void addView(android.view.ViewGroup,android.widget.ListView,com.umeng.newxp.controller.XpListenersCenter$AdapterListener) -> addView
    void addView(android.view.ViewGroup,android.widget.ListView) -> addView
    void setBannerOnClickListener(android.view.View$OnClickListener) -> setBannerOnClickListener
    void setReportListener(com.umeng.newxp.controller.XpListenersCenter$ReportListener) -> setReportListener
    void setFloatDialogConfig(com.umeng.newxp.view.FloatDialogConfig) -> setFloatDialogConfig
    void setLargeGalleryConfig(com.umeng.newxp.view.LargeGalleryConfig) -> setLargeGalleryConfig
    void setGridTemplateConfig(com.umeng.newxp.view.GridTemplateConfig) -> setGridTemplateConfig
    com.umeng.newxp.view.ExchangeViewManager setEntryOnClickListener(com.umeng.newxp.controller.XpListenersCenter$EntryOnClickListener) -> setEntryOnClickListener
    void onOrientationChanaged(int) -> onOrientationChanaged
    void a(com.umeng.newxp.Promoter,com.umeng.newxp.controller.XpListenersCenter$FloatDialogListener) -> a
    com.umeng.newxp.controller.ExchangeDataService a(com.umeng.newxp.view.ExchangeViewManager) -> a
    com.umeng.newxp.view.GridTemplateConfig b(com.umeng.newxp.view.ExchangeViewManager) -> b
    void a(com.umeng.newxp.view.ExchangeViewManager,com.umeng.newxp.Promoter,com.umeng.newxp.controller.XpListenersCenter$FloatDialogListener) -> a
    java.lang.String c(com.umeng.newxp.view.ExchangeViewManager) -> c
    android.widget.ImageView d(com.umeng.newxp.view.ExchangeViewManager) -> d
    android.view.View e(com.umeng.newxp.view.ExchangeViewManager) -> e
    android.widget.ImageView f(com.umeng.newxp.view.ExchangeViewManager) -> f
    android.widget.TextView g(com.umeng.newxp.view.ExchangeViewManager) -> g
com.umeng.newxp.view.F -> com.umeng.newxp.view.F:
    com.umeng.newxp.view.ExchangeViewManager a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.newxp.view.FloatDialogConfig -> com.umeng.newxp.view.FloatDialogConfig:
    boolean a -> a
    long b -> b
    long c -> c
    int d -> d
    int e -> e
    com.umeng.newxp.controller.XpListenersCenter$FloatDialogListener f -> f
    com.umeng.newxp.view.FloatDialogConfig setDelay(boolean) -> setDelay
    com.umeng.newxp.view.FloatDialogConfig setDelayProgress(int) -> setDelayProgress
    com.umeng.newxp.view.FloatDialogConfig setTimeout(long) -> setTimeout
    com.umeng.newxp.view.FloatDialogConfig setStartTime(long) -> setStartTime
    int getNativeFlag() -> getNativeFlag
    com.umeng.newxp.view.FloatDialogConfig setNativeFlag(int) -> setNativeFlag
    int getDelayProgress() -> getDelayProgress
    boolean isDelay() -> isDelay
    long getTimeout() -> getTimeout
    long getStartTime() -> getStartTime
    com.umeng.newxp.controller.XpListenersCenter$FloatDialogListener getListener() -> getListener
    com.umeng.newxp.view.FloatDialogConfig setListener(com.umeng.newxp.controller.XpListenersCenter$FloatDialogListener) -> setListener
    boolean isTimeout() -> isTimeout
    java.lang.String toString() -> toString
com.umeng.newxp.view.G -> com.umeng.newxp.view.G:
    com.umeng.newxp.view.FloatDialogConfig a -> a
    com.umeng.newxp.view.ExchangeViewManager b -> b
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.GridTemplate -> com.umeng.newxp.view.GridTemplate:
    java.lang.String a -> a
    android.view.View contentView -> contentView
    com.umeng.newxp.view.widget.SwipeViewPointer b -> b
    java.util.List c -> c
    android.content.Context d -> d
    java.util.List e -> e
    com.umeng.newxp.view.widget.SwipeView f -> f
    com.umeng.newxp.controller.ExchangeDataService g -> g
    int h -> h
    com.umeng.newxp.view.GridTemplateConfig i -> i
    java.util.Map j -> j
    void changed() -> changed
    void b() -> b
    void notifyTotalDataChanged() -> notifyTotalDataChanged
    void c() -> c
    int d() -> d
    java.util.List a(java.util.List,int,int,int) -> a
    android.view.View e() -> e
    void a(int,int,int) -> a
    android.view.View a(android.content.Context,com.umeng.newxp.view.widget.a$b) -> a
    void requestNextPage() -> requestNextPage
    void debugNextPage(java.util.List) -> debugNextPage
    java.util.List a(com.umeng.newxp.view.GridTemplate,java.util.List) -> a
    void a(com.umeng.newxp.view.GridTemplate) -> a
    java.util.List b(com.umeng.newxp.view.GridTemplate) -> b
    void a(com.umeng.newxp.view.GridTemplate,int,int,int) -> a
    java.lang.String a() -> a
    android.content.Context c(com.umeng.newxp.view.GridTemplate) -> c
    com.umeng.newxp.controller.ExchangeDataService d(com.umeng.newxp.view.GridTemplate) -> d
    int e(com.umeng.newxp.view.GridTemplate) -> e
    java.util.List f(com.umeng.newxp.view.GridTemplate) -> f
com.umeng.newxp.view.GridTemplateConfig -> com.umeng.newxp.view.GridTemplateConfig:
    int maxPsize -> maxPsize
    int numColumns -> numColumns
    int verticalSpacing -> verticalSpacing
    android.graphics.drawable.Drawable a -> a
    android.graphics.drawable.Drawable b -> b
    boolean c -> c
    boolean d -> d
    com.umeng.newxp.view.GridTemplateConfig setMaxPsize(int) -> setMaxPsize
    com.umeng.newxp.view.GridTemplateConfig setNumColumns(int) -> setNumColumns
    com.umeng.newxp.view.GridTemplateConfig setActivePointer(android.graphics.drawable.Drawable) -> setActivePointer
    com.umeng.newxp.view.GridTemplateConfig setInactivePointer(android.graphics.drawable.Drawable) -> setInactivePointer
    com.umeng.newxp.view.GridTemplateConfig setVerticalSpacing(int) -> setVerticalSpacing
    com.umeng.newxp.view.GridTemplateConfig setPaging(boolean) -> setPaging
    com.umeng.newxp.view.GridTemplateConfig setPointer(boolean) -> setPointer
com.umeng.newxp.view.H -> com.umeng.newxp.view.H:
    com.umeng.newxp.view.ExchangeViewManager a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.I -> com.umeng.newxp.view.I:
    com.umeng.newxp.view.ExchangeViewManager a -> a
    void onChanged(int) -> onChanged
com.umeng.newxp.view.J -> com.umeng.newxp.view.J:
    com.umeng.newxp.controller.XpListenersCenter$NTipsChangedListener a -> a
    com.umeng.newxp.view.ExchangeViewManager b -> b
    void a(int) -> a
    void a(java.util.List) -> a
    void a(android.widget.ImageView) -> a
com.umeng.newxp.view.K -> com.umeng.newxp.view.K:
    java.util.List a -> a
    com.umeng.newxp.view.J b -> b
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.L -> com.umeng.newxp.view.L:
    com.umeng.newxp.view.ExchangeViewManager a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.LandingWebViewDialog -> com.umeng.newxp.view.LandingWebViewDialog:
    android.content.Context b -> b
    android.view.animation.Animation a -> a
    void a() -> a
    void b() -> b
    void a(com.umeng.newxp.view.LandingWebViewDialog) -> a
    android.content.Context b(com.umeng.newxp.view.LandingWebViewDialog) -> b
com.umeng.newxp.view.LargeGalleryConfig -> com.umeng.newxp.view.LargeGalleryConfig:
    com.umeng.newxp.controller.XpListenersCenter$LargeGalleryBindListener a -> a
    com.umeng.newxp.view.LargeGalleryConfig setBindListener(com.umeng.newxp.controller.XpListenersCenter$LargeGalleryBindListener) -> setBindListener
    com.umeng.newxp.controller.XpListenersCenter$LargeGalleryBindListener getBindListener() -> getBindListener
com.umeng.newxp.view.M -> com.umeng.newxp.view.M:
    android.view.View$OnClickListener a -> a
    com.umeng.newxp.view.ExchangeViewManager b -> b
    void a(int) -> a
    void a(java.util.List) -> a
    void a(android.widget.ImageView) -> a
com.umeng.newxp.view.N -> com.umeng.newxp.view.N:
    com.umeng.newxp.view.ExchangeViewManager a -> a
    void run() -> run
com.umeng.newxp.view.O -> com.umeng.newxp.view.O:
    com.umeng.newxp.Promoter a -> a
    com.umeng.newxp.controller.XpListenersCenter$FloatDialogListener b -> b
    com.umeng.newxp.view.ExchangeViewManager c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.newxp.view.P -> com.umeng.newxp.view.P:
    com.umeng.newxp.Promoter a -> a
    boolean b -> b
    com.umeng.common.net.q$a c -> c
    android.view.LayoutInflater d -> d
    com.umeng.newxp.controller.ExchangeDataService e -> e
    android.graphics.drawable.Drawable f -> f
    boolean a(com.umeng.newxp.controller.ExchangeDataService,com.umeng.newxp.Promoter,com.umeng.common.net.q$a) -> a
    boolean a() -> a
    void a(int) -> a
    void b() -> b
    com.umeng.newxp.controller.ExchangeDataService a(com.umeng.newxp.view.P) -> a
    com.umeng.common.net.q$a b(com.umeng.newxp.view.P) -> b
    boolean a(com.umeng.newxp.view.P,boolean) -> a
    android.graphics.drawable.Drawable a(com.umeng.newxp.view.P,android.graphics.drawable.Drawable) -> a
    boolean c(com.umeng.newxp.view.P) -> c
com.umeng.newxp.view.Q -> com.umeng.newxp.view.Q:
    com.umeng.newxp.view.P a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.R -> com.umeng.newxp.view.R:
    android.widget.ImageView a -> a
    com.umeng.newxp.view.P b -> b
    void a(com.umeng.common.net.q$b) -> a
    void a(com.umeng.common.net.p$a) -> a
com.umeng.newxp.view.S -> com.umeng.newxp.view.S:
    java.lang.String a -> a
    java.lang.Boolean b -> b
    boolean c -> c
    com.umeng.newxp.view.FloatDialogConfig d -> d
    android.content.Context e -> e
    android.app.Dialog f -> f
    android.view.View a(java.util.List,com.umeng.newxp.controller.ExchangeDataService) -> a
    android.view.View b(java.util.List,com.umeng.newxp.controller.ExchangeDataService) -> b
    com.umeng.newxp.view.P c(java.util.List,com.umeng.newxp.controller.ExchangeDataService) -> c
    android.webkit.WebView a() -> a
    void b(android.webkit.WebView) -> b
    void a(android.webkit.WebView) -> a
    org.json.JSONObject c() -> c
    java.lang.Boolean a(com.umeng.newxp.view.S) -> a
    com.umeng.newxp.view.FloatDialogConfig b(com.umeng.newxp.view.S) -> b
    android.app.Dialog c(com.umeng.newxp.view.S) -> c
    java.lang.Boolean a(com.umeng.newxp.view.S,java.lang.Boolean) -> a
    java.lang.String b() -> b
    android.content.Context d(com.umeng.newxp.view.S) -> d
    boolean e(com.umeng.newxp.view.S) -> e
    boolean a(com.umeng.newxp.view.S,boolean) -> a
com.umeng.newxp.view.T -> com.umeng.newxp.view.T:
    com.umeng.newxp.view.S a -> a
    void a(com.umeng.common.net.q$b) -> a
    void a(com.umeng.common.net.p$a) -> a
com.umeng.newxp.view.U -> com.umeng.newxp.view.U:
    com.umeng.newxp.view.S a -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.umeng.newxp.view.UGallery -> com.umeng.newxp.view.UGallery:
    boolean a -> a
    java.lang.String b -> b
    void a() -> a
    void postDelayedScrollNext() -> postDelayedScrollNext
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isTouch() -> isTouch
    boolean a(android.view.MotionEvent,android.view.MotionEvent) -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.umeng.newxp.view.V -> com.umeng.newxp.view.V:
    android.webkit.WebView a -> a
    com.umeng.newxp.view.S b -> b
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.umeng.newxp.view.W -> com.umeng.newxp.view.W:
    java.lang.String b -> b
    com.umeng.newxp.view.W c -> c
    android.content.Context d -> d
    com.umeng.newxp.view.FloatDialogConfig e -> e
    float a -> a
    android.view.ViewGroup f -> f
    com.umeng.common.Res g -> g
    com.umeng.newxp.view.S h -> h
    android.view.View i -> i
    boolean j -> j
    void a() -> a
    void a(android.content.Context,com.umeng.newxp.controller.ExchangeDataService,com.umeng.newxp.view.FloatDialogConfig,java.util.List) -> a
    void a(int) -> a
    int[] a(android.content.Context,float) -> a
    void a(android.content.Context) -> a
    void show() -> show
    void dismiss() -> dismiss
    void a(int,int,int) -> a
    void b(int) -> b
com.umeng.newxp.view.X -> com.umeng.newxp.view.X:
    com.umeng.newxp.view.W a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.Y -> com.umeng.newxp.view.Y:
    com.umeng.newxp.view.GridTemplate a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.Z -> com.umeng.newxp.view.Z:
    com.umeng.newxp.view.GridTemplate a -> a
    void a(int,int) -> a
com.umeng.newxp.view.a -> com.umeng.newxp.view.a:
    android.content.Context c -> c
    int d -> d
    boolean e -> e
    int f -> f
    com.umeng.newxp.controller.XpListenersCenter$ListClickListener a -> a
    com.umeng.newxp.controller.XpListenersCenter$AdapterListener g -> g
    android.view.View h -> h
    com.umeng.newxp.controller.ExchangeDataService i -> i
    boolean b -> b
    void a(com.umeng.newxp.controller.XpListenersCenter$AdapterListener) -> a
    long getItemId(int) -> getItemId
    android.view.View a() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void a(int) -> a
    int b(int) -> b
    android.content.Context a(com.umeng.newxp.view.a) -> a
    com.umeng.newxp.controller.ExchangeDataService b(com.umeng.newxp.view.a) -> b
    int c(com.umeng.newxp.view.a) -> c
com.umeng.newxp.view.a$a -> com.umeng.newxp.view.a$a:
    android.widget.ImageView a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    android.widget.TextView e -> e
    android.widget.Button f -> f
    android.widget.ImageView g -> g
com.umeng.newxp.view.aA -> com.umeng.newxp.view.aA:
    com.umeng.newxp.view.aw a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.umeng.newxp.view.aB -> com.umeng.newxp.view.aB:
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean isFocused() -> isFocused
com.umeng.newxp.view.aC -> com.umeng.newxp.view.aC:
    android.content.Context a -> a
    int b -> b
    android.view.View c -> c
    void a(android.view.View$OnClickListener) -> a
    android.view.View a() -> a
    void b() -> b
    void c() -> c
com.umeng.newxp.view.aD -> com.umeng.newxp.view.aD:
    com.umeng.newxp.view.aC a -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.umeng.newxp.view.aE -> com.umeng.newxp.view.aE:
    void a(int) -> a
com.umeng.newxp.view.aF -> com.umeng.newxp.view.aF:
    int c -> c
    boolean d -> d
    android.content.Context e -> e
    android.view.ViewGroup f -> f
    int a -> a
    com.umeng.newxp.controller.ExchangeDataService g -> g
    com.umeng.newxp.controller.a h -> h
    java.util.List i -> i
    android.view.View b -> b
    android.widget.ViewSwitcher j -> j
    int k -> k
    int l -> l
    android.widget.GridView m -> m
    android.widget.GridView n -> n
    java.util.Map o -> o
    android.view.animation.Animation p -> p
    android.view.View$OnClickListener q -> q
    com.umeng.newxp.view.aF$b r -> r
    android.widget.GridView s -> s
    void b() -> b
    void a(int) -> a
    void a(com.umeng.newxp.controller.a$a,android.view.View) -> a
    void d() -> d
    com.umeng.newxp.view.aF$a e() -> e
    void a() -> a
    void a(android.view.View$OnClickListener) -> a
    com.umeng.newxp.controller.a a(com.umeng.newxp.view.aF,com.umeng.newxp.controller.a) -> a
    java.util.List a(com.umeng.newxp.view.aF,java.util.List) -> a
    java.util.List a(com.umeng.newxp.view.aF) -> a
    void a(com.umeng.newxp.view.aF,com.umeng.newxp.controller.a$a,android.view.View) -> a
    int c() -> c
    android.widget.ViewSwitcher b(com.umeng.newxp.view.aF) -> b
    android.content.Context c(com.umeng.newxp.view.aF) -> c
    void a(com.umeng.newxp.view.aF,int) -> a
    android.view.animation.Animation d(com.umeng.newxp.view.aF) -> d
com.umeng.newxp.view.aF$a -> com.umeng.newxp.view.aF$a:
    android.view.animation.Animation a -> a
    android.view.animation.Animation b -> b
    com.umeng.newxp.view.aF c -> c
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.umeng.newxp.view.aF$b -> com.umeng.newxp.view.aF$b:
    android.content.Context d -> d
    java.util.List a -> a
    int b -> b
    com.umeng.newxp.view.aF c -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.umeng.newxp.view.aG -> com.umeng.newxp.view.aG:
    com.umeng.newxp.view.aF a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.aH -> com.umeng.newxp.view.aH:
    com.umeng.newxp.view.aF a -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.umeng.newxp.view.aI -> com.umeng.newxp.view.aI:
    android.view.ViewGroup a -> a
    android.content.Context b -> b
    android.widget.ImageView c -> c
    android.widget.RelativeLayout d -> d
    boolean e -> e
    void a() -> a
    void b() -> b
com.umeng.newxp.view.aJ -> com.umeng.newxp.view.aJ:
    com.umeng.newxp.view.aI a -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.umeng.newxp.view.aK -> com.umeng.newxp.view.aK:
    android.content.Context a -> a
    com.umeng.newxp.Promoter b -> b
    int c -> c
    int d -> d
    int a(android.content.Context) -> a
    android.content.Context a(com.umeng.newxp.view.aK) -> a
    com.umeng.newxp.Promoter b(com.umeng.newxp.view.aK) -> b
    int c(com.umeng.newxp.view.aK) -> c
    int d(com.umeng.newxp.view.aK) -> d
com.umeng.newxp.view.aL -> com.umeng.newxp.view.aL:
    com.umeng.newxp.controller.ExchangeDataService a -> a
    com.umeng.newxp.view.aK b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.newxp.view.aM -> com.umeng.newxp.view.aM:
    com.umeng.newxp.view.aK a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.umeng.newxp.view.aN -> com.umeng.newxp.view.aN:
    java.lang.String c -> c
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.newxp.controller.ExchangeDataService d -> d
    android.webkit.WebView e -> e
    android.widget.ImageView f -> f
    android.widget.ImageView g -> g
    android.widget.ImageView h -> h
    android.widget.ImageView i -> i
    android.view.ViewGroup j -> j
    android.view.ViewGroup k -> k
    android.widget.ProgressBar l -> l
    android.content.Context m -> m
    android.view.View n -> n
    java.lang.String o -> o
    com.umeng.newxp.view.aW p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    void a(android.content.Context,com.umeng.newxp.controller.ExchangeDataService,com.umeng.newxp.view.aW) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void a(android.webkit.WebSettings) -> a
    void a() -> a
    int a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a(com.umeng.newxp.view.aN,java.lang.String) -> a
    java.lang.String a(com.umeng.newxp.view.aN) -> a
    android.webkit.WebView b(com.umeng.newxp.view.aN) -> b
    android.widget.ProgressBar c(com.umeng.newxp.view.aN) -> c
    android.view.ViewGroup d(com.umeng.newxp.view.aN) -> d
    com.umeng.newxp.view.aW e(com.umeng.newxp.view.aN) -> e
    android.content.Context f(com.umeng.newxp.view.aN) -> f
com.umeng.newxp.view.aN$a -> com.umeng.newxp.view.aN$a:
com.umeng.newxp.view.aO -> com.umeng.newxp.view.aO:
    com.umeng.newxp.view.aN a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.aP -> com.umeng.newxp.view.aP:
    com.umeng.newxp.view.aN a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.aQ -> com.umeng.newxp.view.aQ:
    com.umeng.newxp.view.aN a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.aR -> com.umeng.newxp.view.aR:
    com.umeng.newxp.view.aN a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.aS -> com.umeng.newxp.view.aS:
    com.umeng.newxp.view.aN a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.aT -> com.umeng.newxp.view.aT:
    com.umeng.newxp.view.aN a -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.umeng.newxp.view.aU -> com.umeng.newxp.view.aU:
    com.umeng.newxp.view.aN a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.umeng.newxp.view.aV -> com.umeng.newxp.view.aV:
    com.umeng.newxp.view.aN a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.umeng.newxp.view.aW -> com.umeng.newxp.view.aW:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    int e -> e
    android.os.Parcelable$Creator f -> f
    com.umeng.newxp.view.aW a(boolean) -> a
    com.umeng.newxp.view.aW b(boolean) -> b
    com.umeng.newxp.view.aW c(boolean) -> c
    com.umeng.newxp.view.aW d(boolean) -> d
    com.umeng.newxp.view.aW a(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.umeng.newxp.view.aX -> com.umeng.newxp.view.aX:
    com.umeng.newxp.view.aW a(android.os.Parcel) -> a
    com.umeng.newxp.view.aW[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.umeng.newxp.view.aa -> com.umeng.newxp.view.aa:
    android.content.Context a -> a
    com.umeng.newxp.view.GridTemplate b -> b
    android.view.View a(int,int,com.umeng.newxp.Promoter) -> a
com.umeng.newxp.view.ab -> com.umeng.newxp.view.ab:
    com.umeng.newxp.Promoter a -> a
    com.umeng.newxp.view.aa b -> b
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.ac -> com.umeng.newxp.view.ac:
    com.umeng.newxp.view.GridTemplate a -> a
    void run() -> run
com.umeng.newxp.view.ad -> com.umeng.newxp.view.ad:
    com.umeng.newxp.view.ac a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.ae -> com.umeng.newxp.view.ae:
    int e -> e
    int f -> f
    android.content.Context a -> a
    android.view.ViewGroup b -> b
    com.umeng.newxp.controller.ExchangeDataService c -> c
    int g -> g
    android.widget.ViewFlipper h -> h
    android.widget.TextView i -> i
    android.widget.TextView j -> j
    com.umeng.newxp.controller.a$a k -> k
    com.umeng.newxp.controller.a$a l -> l
    java.util.List m -> m
    java.util.Map d -> d
    int n -> n
    com.umeng.newxp.controller.a o -> o
    void b() -> b
    java.util.List a(java.util.List) -> a
    void a(android.view.ViewGroup) -> a
    void c() -> c
    void a(android.widget.TextView,com.umeng.newxp.Promoter) -> a
    void a(android.widget.ViewFlipper) -> a
    void a() -> a
    void a(com.umeng.newxp.controller.a$a) -> a
    android.text.SpannableString a(com.umeng.newxp.Promoter) -> a
    void b(java.util.List) -> b
    void a(com.umeng.newxp.view.ae,java.util.List) -> a
    android.widget.TextView a(com.umeng.newxp.view.ae) -> a
    com.umeng.newxp.controller.a$a b(com.umeng.newxp.view.ae) -> b
    com.umeng.newxp.controller.a$a c(com.umeng.newxp.view.ae) -> c
    int d(com.umeng.newxp.view.ae) -> d
com.umeng.newxp.view.af -> com.umeng.newxp.view.af:
    com.umeng.newxp.view.ae a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.ag -> com.umeng.newxp.view.ag:
    com.umeng.newxp.view.ae a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.umeng.newxp.view.ah -> com.umeng.newxp.view.ah:
    com.umeng.newxp.Promoter a -> a
    com.umeng.newxp.view.ae b -> b
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.umeng.newxp.view.ai -> com.umeng.newxp.view.ai:
    com.umeng.newxp.view.LandingWebViewDialog a -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.umeng.newxp.view.aj -> com.umeng.newxp.view.aj:
    com.umeng.newxp.view.LandingWebViewDialog a -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.umeng.newxp.view.ak -> com.umeng.newxp.view.ak:
    com.umeng.newxp.view.LandingWebViewDialog a -> a
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.umeng.newxp.view.al -> com.umeng.newxp.view.al:
    com.umeng.newxp.view.LandingWebViewDialog a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.umeng.newxp.view.am -> com.umeng.newxp.view.am:
    com.umeng.newxp.view.LandingWebViewDialog a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.an -> com.umeng.newxp.view.an:
    java.lang.String a -> a
    android.content.Context b -> b
    android.view.ViewGroup c -> c
    android.view.ViewGroup d -> d
    android.view.ViewGroup e -> e
    android.view.ViewGroup f -> f
    android.view.ViewGroup g -> g
    java.util.List h -> h
    com.umeng.newxp.view.LargeGalleryConfig i -> i
    com.umeng.newxp.view.UGallery j -> j
    com.umeng.newxp.controller.ExchangeDataService k -> k
    boolean l -> l
    java.util.List m -> m
    java.util.List n -> n
    int o -> o
    int p -> p
    int q -> q
    android.view.animation.Animation r -> r
    boolean s -> s
    com.umeng.newxp.controller.g t -> t
    com.umeng.common.Res u -> u
    void d() -> d
    void a(android.view.ViewGroup) -> a
    void a(java.util.List) -> a
    void b() -> b
    void a(android.view.View) -> a
    void a() -> a
    int a(int) -> a
    void b(java.util.List) -> b
    boolean a(com.umeng.newxp.view.an,boolean) -> a
    android.view.ViewGroup a(com.umeng.newxp.view.an) -> a
    void a(com.umeng.newxp.view.an,android.view.ViewGroup) -> a
    void a(com.umeng.newxp.view.an,java.util.List) -> a
    com.umeng.newxp.controller.g b(com.umeng.newxp.view.an) -> b
    java.util.List c(com.umeng.newxp.view.an) -> c
    boolean d(com.umeng.newxp.view.an) -> d
    com.umeng.newxp.controller.g a(com.umeng.newxp.view.an,com.umeng.newxp.controller.g) -> a
    int a(com.umeng.newxp.view.an,int) -> a
    android.content.Context e(com.umeng.newxp.view.an) -> e
    com.umeng.newxp.controller.ExchangeDataService f(com.umeng.newxp.view.an) -> f
    java.util.List g(com.umeng.newxp.view.an) -> g
    com.umeng.newxp.view.LargeGalleryConfig h(com.umeng.newxp.view.an) -> h
    boolean i(com.umeng.newxp.view.an) -> i
    android.view.animation.Animation j(com.umeng.newxp.view.an) -> j
    int b(com.umeng.newxp.view.an,int) -> b
    java.lang.String c() -> c
    int k(com.umeng.newxp.view.an) -> k
    java.util.List l(com.umeng.newxp.view.an) -> l
    com.umeng.common.Res m(com.umeng.newxp.view.an) -> m
com.umeng.newxp.view.ao -> com.umeng.newxp.view.ao:
    com.umeng.newxp.view.an a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.umeng.newxp.view.ap -> com.umeng.newxp.view.ap:
    com.umeng.newxp.view.an a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.aq -> com.umeng.newxp.view.aq:
    com.umeng.newxp.view.an a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.umeng.newxp.view.ar -> com.umeng.newxp.view.ar:
    com.umeng.newxp.view.an a -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.umeng.newxp.view.as -> com.umeng.newxp.view.as:
    com.umeng.newxp.view.an a -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
com.umeng.newxp.view.at -> com.umeng.newxp.view.at:
    android.view.ViewGroup a -> a
    com.umeng.newxp.view.as b -> b
    void a(com.umeng.common.net.q$b) -> a
    void a(com.umeng.common.net.p$a) -> a
com.umeng.newxp.view.au -> com.umeng.newxp.view.au:
    com.umeng.newxp.view.an a -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.umeng.newxp.view.av -> com.umeng.newxp.view.av:
    void b() -> b
com.umeng.newxp.view.aw -> com.umeng.newxp.view.aw:
    android.content.Context b -> b
    com.umeng.newxp.controller.ExchangeDataService c -> c
    java.util.List d -> d
    android.view.ViewGroup e -> e
    boolean f -> f
    android.widget.RelativeLayout g -> g
    android.widget.RelativeLayout h -> h
    com.umeng.newxp.view.aI a -> a
    android.view.animation.Animation i -> i
    com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener j -> j
    com.umeng.newxp.view.GridTemplate k -> k
    com.umeng.newxp.view.GridTemplateConfig l -> l
    int m -> m
    com.umeng.newxp.view.aw n -> n
    void a(com.umeng.newxp.controller.ExchangeDataService,java.util.List) -> a
    void a(android.content.Context) -> a
    void b() -> b
    void c() -> c
    void a(android.content.Context,com.umeng.newxp.controller.ExchangeDataService,java.util.List,com.umeng.newxp.view.GridTemplateConfig) -> a
    void show() -> show
    void dismiss() -> dismiss
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean a() -> a
    void a(com.umeng.newxp.view.GridTemplateConfig) -> a
    java.util.List a(com.umeng.newxp.view.aw,java.util.List) -> a
    void a(com.umeng.newxp.view.aw) -> a
    int b(com.umeng.newxp.view.aw) -> b
    com.umeng.newxp.controller.ExchangeDataService c(com.umeng.newxp.view.aw) -> c
    java.util.List d(com.umeng.newxp.view.aw) -> d
    android.content.Context e(com.umeng.newxp.view.aw) -> e
    com.umeng.newxp.controller.XpListenersCenter$ExchangeDataRequestListener f(com.umeng.newxp.view.aw) -> f
    void g(com.umeng.newxp.view.aw) -> g
    boolean a(com.umeng.newxp.view.aw,boolean) -> a
com.umeng.newxp.view.ax -> com.umeng.newxp.view.ax:
    com.umeng.newxp.view.aw a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.ay -> com.umeng.newxp.view.ay:
    com.umeng.newxp.view.aw a -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.umeng.newxp.view.az -> com.umeng.newxp.view.az:
    com.umeng.newxp.view.aw a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.b -> com.umeng.newxp.view.b:
    com.umeng.newxp.Promoter a -> a
    int b -> b
    com.umeng.newxp.view.a c -> c
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.c -> com.umeng.newxp.view.c:
    com.umeng.newxp.Promoter a -> a
    int b -> b
    com.umeng.newxp.view.a c -> c
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.d -> com.umeng.newxp.view.d:
    int a -> a
    com.umeng.newxp.view.a b -> b
    java.util.List c -> c
    com.umeng.newxp.controller.ExchangeDataService d -> d
    void a(int) -> a
    void a(com.umeng.newxp.controller.XpListenersCenter$AdapterListener) -> a
    void a(java.util.List) -> a
    void a(com.umeng.newxp.controller.XpListenersCenter$ListClickListener) -> a
    com.umeng.newxp.view.a a() -> a
com.umeng.newxp.view.e -> com.umeng.newxp.view.e:
    com.umeng.newxp.view.d c -> c
    void a(int) -> a
com.umeng.newxp.view.f -> com.umeng.newxp.view.f:
    boolean c -> c
    android.content.Context d -> d
    android.view.ViewGroup e -> e
    int a -> a
    com.umeng.newxp.controller.ExchangeDataService f -> f
    com.umeng.newxp.controller.a g -> g
    java.util.List h -> h
    android.view.View b -> b
    android.widget.ViewSwitcher i -> i
    int j -> j
    int k -> k
    com.umeng.newxp.controller.a$a l -> l
    com.umeng.newxp.controller.a$a m -> m
    java.util.Map n -> n
    android.view.View$OnClickListener o -> o
    void b() -> b
    void a(int) -> a
    void a(com.umeng.newxp.controller.a$a) -> a
    void d() -> d
    com.umeng.newxp.view.f$a e() -> e
    void a() -> a
    void a(android.view.View$OnClickListener) -> a
    void a(java.util.List) -> a
    com.umeng.newxp.controller.ExchangeDataService a(com.umeng.newxp.view.f) -> a
    void a(com.umeng.newxp.view.f,java.util.List) -> a
    android.view.View$OnClickListener b(com.umeng.newxp.view.f) -> b
    android.widget.ViewSwitcher c(com.umeng.newxp.view.f) -> c
    com.umeng.newxp.controller.a$a d(com.umeng.newxp.view.f) -> d
    void a(com.umeng.newxp.view.f,com.umeng.newxp.controller.a$a) -> a
    com.umeng.newxp.controller.a$a e(com.umeng.newxp.view.f) -> e
    int c() -> c
    android.content.Context f(com.umeng.newxp.view.f) -> f
    void a(com.umeng.newxp.view.f,int) -> a
com.umeng.newxp.view.f$a -> com.umeng.newxp.view.f$a:
    android.view.animation.Animation a -> a
    android.view.animation.Animation b -> b
    com.umeng.newxp.view.f c -> c
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.umeng.newxp.view.g -> com.umeng.newxp.view.g:
    com.umeng.newxp.view.f a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.h -> com.umeng.newxp.view.h:
    com.umeng.newxp.view.f a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.i -> com.umeng.newxp.view.i:
    boolean a -> a
    java.lang.String b -> b
    android.webkit.WebView c -> c
    android.view.ViewGroup d -> d
    android.view.ViewGroup e -> e
    android.widget.ProgressBar f -> f
    android.view.animation.Animation g -> g
    android.view.animation.Animation h -> h
    android.content.Context i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void a(android.webkit.WebSettings) -> a
    void a() -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void a(android.webkit.WebView) -> a
    org.json.JSONObject f() -> f
    int a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean a(com.umeng.newxp.view.i,boolean) -> a
    android.widget.ProgressBar a(com.umeng.newxp.view.i) -> a
    boolean b(com.umeng.newxp.view.i) -> b
    android.view.ViewGroup c(com.umeng.newxp.view.i) -> c
    boolean d(com.umeng.newxp.view.i) -> d
    android.webkit.WebView e(com.umeng.newxp.view.i) -> e
    boolean b(com.umeng.newxp.view.i,boolean) -> b
    android.content.Context f(com.umeng.newxp.view.i) -> f
com.umeng.newxp.view.j -> com.umeng.newxp.view.j:
    com.umeng.newxp.view.i a -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.umeng.newxp.view.k -> com.umeng.newxp.view.k:
    com.umeng.newxp.view.i a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.l -> com.umeng.newxp.view.l:
    com.umeng.newxp.view.i a -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
com.umeng.newxp.view.m -> com.umeng.newxp.view.m:
    com.umeng.newxp.view.i a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.umeng.newxp.view.n -> com.umeng.newxp.view.n:
    com.umeng.newxp.view.i a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.umeng.newxp.view.o -> com.umeng.newxp.view.o:
    int a -> a
    android.content.Context b -> b
    int c -> c
    com.umeng.newxp.view.o$a d -> d
    int a(android.content.Context) -> a
    com.umeng.newxp.view.o$a a(com.umeng.newxp.view.o) -> a
    android.content.Context b(com.umeng.newxp.view.o) -> b
    int c(com.umeng.newxp.view.o) -> c
com.umeng.newxp.view.o$1 -> com.umeng.newxp.view.o$1:
    int[] a -> a
com.umeng.newxp.view.o$a -> com.umeng.newxp.view.o$a:
    com.umeng.newxp.view.o$a a -> a
    com.umeng.newxp.view.o$a b -> b
    com.umeng.newxp.view.o$a[] c -> c
    com.umeng.newxp.view.o$a[] values() -> values
    com.umeng.newxp.view.o$a valueOf(java.lang.String) -> valueOf
com.umeng.newxp.view.p -> com.umeng.newxp.view.p:
    com.umeng.newxp.Promoter a -> a
    int b -> b
    com.umeng.newxp.controller.ExchangeDataService c -> c
    com.umeng.newxp.view.o d -> d
    void onClick(android.view.View) -> onClick
    void a(com.umeng.newxp.Promoter,int,com.umeng.newxp.controller.ExchangeDataService) -> a
    void b(com.umeng.newxp.Promoter,int,com.umeng.newxp.controller.ExchangeDataService) -> b
com.umeng.newxp.view.q -> com.umeng.newxp.view.q:
    com.umeng.newxp.view.o a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.r -> com.umeng.newxp.view.r:
    com.umeng.newxp.view.aI a -> a
    com.umeng.newxp.view.EmbededContainer b -> b
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.s -> com.umeng.newxp.view.s:
    com.umeng.newxp.view.EmbededContainer a -> a
    com.umeng.newxp.view.EmbededContainer$a b -> b
    void a(int) -> a
com.umeng.newxp.view.t -> com.umeng.newxp.view.t:
    com.umeng.newxp.view.EmbededContainer$a a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.u -> com.umeng.newxp.view.u:
    int a -> a
    com.umeng.newxp.view.t b -> b
    void run() -> run
com.umeng.newxp.view.v -> com.umeng.newxp.view.v:
    com.umeng.newxp.view.t a -> a
    void onClick(android.view.View) -> onClick
com.umeng.newxp.view.w -> com.umeng.newxp.view.w:
    android.widget.ListView b -> b
    android.view.View c -> c
    android.widget.TextView d -> d
    android.widget.ImageView e -> e
    com.umeng.newxp.view.d f -> f
    android.view.animation.Animation g -> g
    int h -> h
    android.content.Context i -> i
    com.umeng.newxp.controller.ExchangeDataService j -> j
    android.view.View a -> a
    com.umeng.newxp.controller.XpListenersCenter$AdapterListener k -> k
    java.util.List l -> l
    boolean m -> m
    android.view.View b() -> b
    void c() -> c
    void a() -> a
    android.content.Context a(com.umeng.newxp.view.w) -> a
    java.util.List a(com.umeng.newxp.view.w,java.util.List) -> a
    void b(com.umeng.newxp.view.w) -> b
    android.widget.ListView c(com.umeng.newxp.view.w) -> c
    boolean d(com.umeng.newxp.view.w) -> d
    android.view.View e(com.umeng.newxp.view.w) -> e
    android.widget.ImageView f(com.umeng.newxp.view.w) -> f
    android.view.animation.Animation g(com.umeng.newxp.view.w) -> g
    android.widget.TextView h(com.umeng.newxp.view.w) -> h
    boolean a(com.umeng.newxp.view.w,boolean) -> a
    java.util.List i(com.umeng.newxp.view.w) -> i
    com.umeng.newxp.view.d j(com.umeng.newxp.view.w) -> j
    com.umeng.newxp.controller.ExchangeDataService k(com.umeng.newxp.view.w) -> k
    int l(com.umeng.newxp.view.w) -> l
com.umeng.newxp.view.w$1 -> com.umeng.newxp.view.w$1:
    int[] a -> a
com.umeng.newxp.view.w$a -> com.umeng.newxp.view.w$a:
    boolean b -> b
    com.umeng.newxp.view.w a -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.umeng.newxp.view.widget.SwipeView -> com.umeng.newxp.view.widget.SwipeView:
    int b -> b
    android.widget.LinearLayout c -> c
    android.content.Context d -> d
    int e -> e
    int f -> f
    int g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean a -> a
    int k -> k
    int l -> l
    com.umeng.newxp.view.widget.SwipeView$a m -> m
    com.umeng.newxp.view.widget.SwipeView$b n -> n
    android.view.View$OnTouchListener o -> o
    com.umeng.newxp.view.widget.SwipeViewPointer p -> p
    void b() -> b
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    android.widget.LinearLayout getChildContainer() -> getChildContainer
    int getSwipeThreshold() -> getSwipeThreshold
    void setSwipeThreshold(int) -> setSwipeThreshold
    int getCurrentPage() -> getCurrentPage
    int getPageCount() -> getPageCount
    void scrollToPage(int) -> scrollToPage
    void smoothScrollToPage(int) -> smoothScrollToPage
    void a(int,boolean) -> a
    int setPageWidth(int) -> setPageWidth
    int calculatePageSize(android.view.ViewGroup$MarginLayoutParams) -> calculatePageSize
    int getPageWidth() -> getPageWidth
    void setPageControl(com.umeng.newxp.view.widget.SwipeViewPointer) -> setPageControl
    void addPageControlPointer(int) -> addPageControlPointer
    com.umeng.newxp.view.widget.SwipeViewPointer getPageControl() -> getPageControl
    void setOnPageChangedListener(com.umeng.newxp.view.widget.SwipeView$a) -> setOnPageChangedListener
    com.umeng.newxp.view.widget.SwipeView$a getOnPageChangedListener() -> getOnPageChangedListener
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void a(android.view.MotionEvent) -> a
    int a(com.umeng.newxp.view.widget.SwipeView) -> a
    android.view.View$OnTouchListener b(com.umeng.newxp.view.widget.SwipeView) -> b
    boolean c(com.umeng.newxp.view.widget.SwipeView) -> c
    int a(com.umeng.newxp.view.widget.SwipeView,int) -> a
    int b(com.umeng.newxp.view.widget.SwipeView,int) -> b
    int d(com.umeng.newxp.view.widget.SwipeView) -> d
    int e(com.umeng.newxp.view.widget.SwipeView) -> e
    boolean a(com.umeng.newxp.view.widget.SwipeView,boolean) -> a
    android.widget.LinearLayout f(com.umeng.newxp.view.widget.SwipeView) -> f
    int g(com.umeng.newxp.view.widget.SwipeView) -> g
    int a() -> a
    boolean b(com.umeng.newxp.view.widget.SwipeView,boolean) -> b
    boolean c(com.umeng.newxp.view.widget.SwipeView,boolean) -> c
com.umeng.newxp.view.widget.SwipeView$a -> com.umeng.newxp.view.widget.SwipeView$a:
    void a(int,int) -> a
com.umeng.newxp.view.widget.SwipeView$b -> com.umeng.newxp.view.widget.SwipeView$b:
    boolean b -> b
    int c -> c
    int d -> d
    boolean e -> e
    com.umeng.newxp.view.widget.SwipeView a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean a(android.view.MotionEvent) -> a
    boolean b(android.view.MotionEvent) -> b
    boolean c(android.view.MotionEvent) -> c
com.umeng.newxp.view.widget.SwipeViewPointer -> com.umeng.newxp.view.widget.SwipeViewPointer:
    int a -> a
    android.graphics.drawable.Drawable b -> b
    android.graphics.drawable.Drawable c -> c
    java.util.ArrayList d -> d
    int e -> e
    int f -> f
    android.content.Context g -> g
    com.umeng.newxp.view.widget.SwipeViewPointer$a h -> h
    void onFinishInflate() -> onFinishInflate
    void a() -> a
    void setActiveDrawable(android.graphics.drawable.Drawable) -> setActiveDrawable
    android.graphics.drawable.Drawable getActiveDrawable() -> getActiveDrawable
    void setInactiveDrawable(android.graphics.drawable.Drawable) -> setInactiveDrawable
    android.graphics.drawable.Drawable getInactiveDrawable() -> getInactiveDrawable
    void setPageCount(int) -> setPageCount
    void b() -> b
    void addPageCount(int) -> addPageCount
    int getPageCount() -> getPageCount
    void setCurrentPage(int) -> setCurrentPage
    int getCurrentPage() -> getCurrentPage
    void setIndicatorSize(int) -> setIndicatorSize
    int getIndicatorSize() -> getIndicatorSize
    void setOnPageControlClickListener(com.umeng.newxp.view.widget.SwipeViewPointer$a) -> setOnPageControlClickListener
    com.umeng.newxp.view.widget.SwipeViewPointer$a getOnPageControlClickListener() -> getOnPageControlClickListener
    com.umeng.newxp.view.widget.SwipeViewPointer$a a(com.umeng.newxp.view.widget.SwipeViewPointer) -> a
    int b(com.umeng.newxp.view.widget.SwipeViewPointer) -> b
    int c(com.umeng.newxp.view.widget.SwipeViewPointer) -> c
com.umeng.newxp.view.widget.SwipeViewPointer$a -> com.umeng.newxp.view.widget.SwipeViewPointer$a:
    void a() -> a
    void b() -> b
com.umeng.newxp.view.widget.a -> com.umeng.newxp.view.widget.a:
    java.lang.String a -> a
    com.umeng.newxp.view.widget.a$a b -> b
    com.umeng.newxp.view.GridTemplateConfig c -> c
    android.content.Context d -> d
    int e -> e
    java.util.List f -> f
    void a() -> a
    void a(boolean) -> a
com.umeng.newxp.view.widget.a$a -> com.umeng.newxp.view.widget.a$a:
    java.util.List c -> c
    com.umeng.newxp.view.widget.a$b d -> d
    int a() -> a
    android.view.View a(int) -> a
    android.view.View a(int,int,com.umeng.newxp.Promoter) -> a
com.umeng.newxp.view.widget.a$b -> com.umeng.newxp.view.widget.a$b:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    boolean e -> e
    boolean f -> f
com.umeng.newxp.view.widget.b -> com.umeng.newxp.view.widget.b:
    com.umeng.newxp.view.widget.SwipeView a -> a
    void a() -> a
    void b() -> b
com.umeng.newxp.view.widget.c -> com.umeng.newxp.view.widget.c:
    com.umeng.newxp.view.widget.SwipeViewPointer a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.umeng.newxp.view.x -> com.umeng.newxp.view.x:
    com.umeng.newxp.view.w a -> a
    void onFitType(android.view.View,com.umeng.newxp.controller.XpListenersCenter$FitType) -> onFitType
com.umeng.newxp.view.y -> com.umeng.newxp.view.y:
    com.umeng.newxp.view.w a -> a
    void dataReceived(int,java.util.List) -> dataReceived
com.umeng.newxp.view.z -> com.umeng.newxp.view.z:
    com.umeng.newxp.view.w a -> a
    void a(int) -> a
com.umeng.update.UmengDialogButtonListener -> com.umeng.update.UmengDialogButtonListener:
    void onClick(int) -> onClick
com.umeng.update.UmengDownloadListener -> com.umeng.update.UmengDownloadListener:
    void OnDownloadStart() -> OnDownloadStart
    void OnDownloadUpdate(int) -> OnDownloadUpdate
    void OnDownloadEnd(int,java.lang.String) -> OnDownloadEnd
com.umeng.update.UmengUpdateAgent -> com.umeng.update.UmengUpdateAgent:
    com.umeng.update.UmengUpdateListener a -> a
    com.umeng.update.UmengDialogButtonListener b -> b
    com.umeng.update.UmengDownloadListener c -> c
    android.content.Context d -> d
    com.umeng.update.l e -> e
    android.os.Handler f -> f
    void setDefault() -> setDefault
    void setUpdateCheckConfig(boolean) -> setUpdateCheckConfig
    void setUpdateOnlyWifi(boolean) -> setUpdateOnlyWifi
    void setUpdateAutoPopup(boolean) -> setUpdateAutoPopup
    void setUpdateUIStyle(int) -> setUpdateUIStyle
    void setDeltaUpdate(boolean) -> setDeltaUpdate
    void setAppkey(java.lang.String) -> setAppkey
    void setChannel(java.lang.String) -> setChannel
    void setRichNotification(boolean) -> setRichNotification
    void setUpdateListener(com.umeng.update.UmengUpdateListener) -> setUpdateListener
    void setDialogListener(com.umeng.update.UmengDialogButtonListener) -> setDialogListener
    void setDownloadListener(com.umeng.update.UmengDownloadListener) -> setDownloadListener
    void b(int,com.umeng.update.UpdateResponse) -> b
    void silentUpdate(android.content.Context) -> silentUpdate
    void forceUpdate(android.content.Context) -> forceUpdate
    void update(android.content.Context) -> update
    void update(android.content.Context,java.lang.String,java.lang.String) -> update
    void b(android.content.Context) -> b
    void b(android.content.Context,com.umeng.update.UpdateResponse,int) -> b
    void showUpdateDialog(android.content.Context,com.umeng.update.UpdateResponse) -> showUpdateDialog
    void showUpdateNotification(android.content.Context,com.umeng.update.UpdateResponse) -> showUpdateNotification
    java.io.File downloadedFile(android.content.Context,com.umeng.update.UpdateResponse) -> downloadedFile
    boolean isIgnore(android.content.Context,com.umeng.update.UpdateResponse) -> isIgnore
    void ignoreUpdate(android.content.Context,com.umeng.update.UpdateResponse) -> ignoreUpdate
    void a(int,android.content.Context,com.umeng.update.UpdateResponse,java.io.File) -> a
    void a(android.content.Context,com.umeng.update.UpdateResponse,java.io.File) -> a
    void startInstall(android.content.Context,java.io.File) -> startInstall
    void startDownload(android.content.Context,com.umeng.update.UpdateResponse) -> startDownload
    boolean c(android.content.Context) -> c
    android.content.Context a() -> a
    void a(android.content.Context,com.umeng.update.UpdateResponse,int) -> a
    android.content.Context a(android.content.Context) -> a
    com.umeng.update.UmengUpdateListener b() -> b
    void a(int,com.umeng.update.UpdateResponse) -> a
com.umeng.update.UmengUpdateAgent$a -> com.umeng.update.UmengUpdateAgent$a:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.UmengUpdateListener -> com.umeng.update.UmengUpdateListener:
    void onUpdateReturned(int,com.umeng.update.UpdateResponse) -> onUpdateReturned
com.umeng.update.UpdateDialogActivity -> com.umeng.update.UpdateDialogActivity:
    int a -> a
    com.umeng.update.UpdateResponse b -> b
    boolean c -> c
    java.io.File d -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.umeng.update.UpdateResponse -> com.umeng.update.UpdateResponse:
    long a -> a
    boolean hasUpdate -> hasUpdate
    java.lang.String updateLog -> updateLog
    java.lang.String version -> version
    java.lang.String path -> path
    java.lang.String origin -> origin
    java.lang.String proto_ver -> proto_ver
    java.lang.String new_md5 -> new_md5
    java.lang.String size -> size
    java.lang.String target_size -> target_size
    boolean delta -> delta
    java.lang.String patch_md5 -> patch_md5
    void a(org.json.JSONObject) -> a
    java.lang.String a(android.content.Context,boolean) -> a
com.umeng.update.UpdateStatus -> com.umeng.update.UpdateStatus:
    int Yes -> Yes
    int No -> No
    int NoneWifi -> NoneWifi
    int Timeout -> Timeout
    int IsUpdate -> IsUpdate
    int Update -> Update
    int NotNow -> NotNow
    int Ignore -> Ignore
    int STYLE_DIALOG -> STYLE_DIALOG
    int STYLE_NOTIFICATION -> STYLE_NOTIFICATION
    int DOWNLOAD_COMPLETE_FAIL -> DOWNLOAD_COMPLETE_FAIL
    int DOWNLOAD_COMPLETE_SUCCESS -> DOWNLOAD_COMPLETE_SUCCESS
    int DOWNLOAD_NEED_RESTART -> DOWNLOAD_NEED_RESTART
com.umeng.update.a -> com.umeng.update.a:
    void handleMessage(android.os.Message) -> handleMessage
com.umeng.update.b -> com.umeng.update.b:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.c -> com.umeng.update.c:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.d -> com.umeng.update.d:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.e -> com.umeng.update.e:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.f -> com.umeng.update.f:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.g -> com.umeng.update.g:
    android.content.Context a -> a
    void run() -> run
com.umeng.update.h -> com.umeng.update.h:
    android.content.Context a -> a
    java.lang.String[] b -> b
    java.lang.String c -> c
    boolean shouldCompressData() -> shouldCompressData
    com.umeng.update.UpdateResponse a() -> a
com.umeng.update.i -> com.umeng.update.i:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    boolean n -> n
    boolean o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    boolean t -> t
    int u -> u
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String c(android.content.Context) -> c
    boolean a() -> a
    void a(boolean) -> a
    boolean b() -> b
    void b(boolean) -> b
    boolean c() -> c
    void c(boolean) -> c
    boolean d() -> d
    void d(boolean) -> d
    boolean e() -> e
    void e(boolean) -> e
    int f() -> f
    void a(int) -> a
    boolean g() -> g
    void f(boolean) -> f
    boolean h() -> h
    void g(boolean) -> g
com.umeng.update.j -> com.umeng.update.j:
    int a -> a
    int b -> b
    com.umeng.update.UpdateDialogActivity c -> c
    void onClick(android.view.View) -> onClick
com.umeng.update.k -> com.umeng.update.k:
    com.umeng.update.UpdateDialogActivity a -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.umeng.update.l -> com.umeng.update.l:
    java.lang.String a -> a
    java.lang.String b -> b
    com.umeng.update.UmengDownloadListener c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.content.Context h -> h
    java.lang.String i -> i
    com.umeng.common.net.a j -> j
    boolean k -> k
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.umeng.update.UmengDownloadListener) -> a
    boolean b() -> b
    void c() -> c
    void d() -> d
    void a(com.umeng.common.net.a) -> a
    void a() -> a
    void a(int) -> a
    void a(int,int,java.lang.String) -> a
    void b(int) -> b
    void a(android.content.Context,com.umeng.update.UpdateResponse,boolean,java.io.File) -> a
    com.umeng.update.l$a b(android.content.Context,com.umeng.update.UpdateResponse,boolean,java.io.File) -> b
com.umeng.update.l$a -> com.umeng.update.l$a:
    java.lang.String e -> e
    java.lang.String f -> f
    com.umeng.update.l d -> d
    com.umeng.update.l$a a(java.lang.CharSequence) -> a
    com.umeng.update.l$a b(java.lang.CharSequence) -> b
    com.umeng.update.l$a d(java.lang.CharSequence) -> d
    android.app.Notification a() -> a
com.umeng.update.m -> com.umeng.update.m:
    java.lang.String a -> a
    java.lang.String e -> e
    org.json.JSONObject f -> f
    org.json.JSONObject a(android.content.Context) -> a
    org.json.JSONObject a() -> a
    java.lang.String b() -> b
com.yintong.android.app.IPayService -> com.yintong.android.app.IPayService:
    java.lang.String test() -> test
    java.lang.String prePay(java.lang.String) -> prePay
    java.lang.String pay(java.lang.String) -> pay
    void registerCallback(com.yintong.android.app.IRemoteServiceCallback) -> registerCallback
    void unregisterCallback(com.yintong.android.app.IRemoteServiceCallback) -> unregisterCallback
com.yintong.android.app.IPayService$Stub -> com.yintong.android.app.IPayService$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_test -> TRANSACTION_test
    int TRANSACTION_prePay -> TRANSACTION_prePay
    int TRANSACTION_pay -> TRANSACTION_pay
    int TRANSACTION_registerCallback -> TRANSACTION_registerCallback
    int TRANSACTION_unregisterCallback -> TRANSACTION_unregisterCallback
    com.yintong.android.app.IPayService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.yintong.android.app.IPayService$Stub$Proxy -> com.yintong.android.app.IPayService$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    java.lang.String test() -> test
    java.lang.String prePay(java.lang.String) -> prePay
    java.lang.String pay(java.lang.String) -> pay
    void registerCallback(com.yintong.android.app.IRemoteServiceCallback) -> registerCallback
    void unregisterCallback(com.yintong.android.app.IRemoteServiceCallback) -> unregisterCallback
com.yintong.android.app.IRemoteServiceCallback -> com.yintong.android.app.IRemoteServiceCallback:
    void startActivity(java.lang.String,java.lang.String,int,android.os.Bundle) -> startActivity
    void payEnd(boolean,java.lang.String) -> payEnd
    boolean isHideLoadingScreen() -> isHideLoadingScreen
com.yintong.android.app.IRemoteServiceCallback$Stub -> com.yintong.android.app.IRemoteServiceCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startActivity -> TRANSACTION_startActivity
    int TRANSACTION_payEnd -> TRANSACTION_payEnd
    int TRANSACTION_isHideLoadingScreen -> TRANSACTION_isHideLoadingScreen
    com.yintong.android.app.IRemoteServiceCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.yintong.android.app.IRemoteServiceCallback$Stub$Proxy -> com.yintong.android.app.IRemoteServiceCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void startActivity(java.lang.String,java.lang.String,int,android.os.Bundle) -> startActivity
    void payEnd(boolean,java.lang.String) -> payEnd
    boolean isHideLoadingScreen() -> isHideLoadingScreen
com.yintong.secure.a.a -> com.yintong.secure.a.a:
    java.util.List a -> a
    android.content.Context b -> b
    com.yintong.secure.e.d c -> c
    int getCount() -> getCount
    com.yintong.secure.a.b a(int) -> a
    long getItemId(int) -> getItemId
    int getItemViewType(int) -> getItemViewType
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    void a(java.util.List) -> a
    void a(com.yintong.secure.a.c,com.yintong.secure.a.b) -> a
    java.lang.String a(com.yintong.secure.e.a) -> a
    void a(com.yintong.secure.a.d,com.yintong.secure.a.b) -> a
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
com.yintong.secure.a.b -> com.yintong.secure.a.b:
    com.yintong.secure.e.a a -> a
    java.lang.String b -> b
    com.yintong.secure.a.a c -> c
com.yintong.secure.a.c -> com.yintong.secure.a.c:
    android.widget.TextView a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    com.yintong.secure.a.a d -> d
com.yintong.secure.a.d -> com.yintong.secure.a.d:
    android.widget.TextView a -> a
    com.yintong.secure.a.a b -> b
com.yintong.secure.a.e -> com.yintong.secure.a.e:
    java.util.List a -> a
    com.yintong.secure.e.b b -> b
    android.content.Context c -> c
    void a(java.util.List) -> a
    void a(com.yintong.secure.e.b) -> a
    int getCount() -> getCount
    com.yintong.secure.e.b a(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void a(com.yintong.secure.a.f,int) -> a
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
com.yintong.secure.a.f -> com.yintong.secure.a.f:
    android.view.View a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    android.widget.ImageView d -> d
    com.yintong.secure.a.e e -> e
com.yintong.secure.activity.BaseActivity -> com.yintong.secure.activity.BaseActivity:
    com.yintong.secure.activityproxy.f c -> c
    android.util.SparseArray d -> d
    int a -> a
    android.app.Dialog b -> b
    void a() -> a
    void finish() -> finish
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void b() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onResume() -> onResume
    void onPause() -> onPause
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void c() -> c
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void a(int,com.yintong.secure.activity.e) -> a
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void a(int) -> a
    void a(android.graphics.drawable.Drawable) -> a
    void a(boolean) -> a
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    com.yintong.secure.activityproxy.f a(java.lang.String) -> a
com.yintong.secure.activity.a -> com.yintong.secure.activity.a:
    com.yintong.secure.activity.BaseActivity a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.activity.b -> com.yintong.secure.activity.b:
    com.yintong.secure.activity.BaseActivity a -> a
    com.yintong.secure.e.d b -> b
    void onClick(android.view.View) -> onClick
com.yintong.secure.activity.c -> com.yintong.secure.activity.c:
    com.yintong.secure.activity.BaseActivity a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.activity.d -> com.yintong.secure.activity.d:
    com.yintong.secure.activity.BaseActivity a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.activity.e -> com.yintong.secure.activity.e:
    void a(int,int,android.content.Intent) -> a
com.yintong.secure.activityproxy.PayIntro -> com.yintong.secure.activityproxy.PayIntro:
    android.webkit.WebView a -> a
    com.yintong.secure.e.b c -> c
    void a(android.os.Bundle) -> a
    java.lang.String f() -> f
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(int,int,android.content.Intent) -> a
    boolean a(int,android.view.KeyEvent) -> a
    android.webkit.WebView a(com.yintong.secure.activityproxy.PayIntro) -> a
com.yintong.secure.activityproxy.PayIntro$LLJavascriptInterface -> com.yintong.secure.activityproxy.PayIntro$LLJavascriptInterface:
    com.yintong.secure.activityproxy.PayIntro this$0 -> this$0
    void forward(java.lang.String) -> forward
com.yintong.secure.activityproxy.a -> com.yintong.secure.activityproxy.a:
    android.webkit.WebView a -> a
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(int,int,android.content.Intent) -> a
    boolean a(int,android.view.KeyEvent) -> a
com.yintong.secure.activityproxy.aa -> com.yintong.secure.activityproxy.aa:
    com.yintong.secure.activityproxy.w a -> a
    com.yintong.secure.e.a f -> f
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(java.lang.String) -> a
com.yintong.secure.activityproxy.ab -> com.yintong.secure.activityproxy.ab:
    com.yintong.secure.activityproxy.w a -> a
    void a(com.yintong.secure.e.b) -> a
com.yintong.secure.activityproxy.ac -> com.yintong.secure.activityproxy.ac:
    com.yintong.secure.activityproxy.w a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.activityproxy.ad -> com.yintong.secure.activityproxy.ad:
    com.yintong.secure.activityproxy.w a -> a
    void a(com.yintong.secure.e.b,java.lang.String,java.lang.String) -> a
    void a() -> a
    void b(org.json.JSONObject) -> b
com.yintong.secure.activityproxy.ae -> com.yintong.secure.activityproxy.ae:
    com.yintong.secure.activityproxy.w a -> a
    void a(int,int) -> a
com.yintong.secure.activityproxy.af -> com.yintong.secure.activityproxy.af:
    com.yintong.secure.activityproxy.w a -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.yintong.secure.activityproxy.ag -> com.yintong.secure.activityproxy.ag:
    com.yintong.secure.activityproxy.w a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.ah -> com.yintong.secure.activityproxy.ah:
    com.yintong.secure.activityproxy.w a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.ai -> com.yintong.secure.activityproxy.ai:
    com.yintong.secure.activityproxy.w a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.aj -> com.yintong.secure.activityproxy.aj:
    com.yintong.secure.activityproxy.w a -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.yintong.secure.activityproxy.ak -> com.yintong.secure.activityproxy.ak:
    com.yintong.secure.activityproxy.w a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.al -> com.yintong.secure.activityproxy.al:
    com.yintong.secure.activityproxy.w a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.am -> com.yintong.secure.activityproxy.am:
    com.yintong.secure.activityproxy.w a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.an -> com.yintong.secure.activityproxy.an:
    com.yintong.secure.e.d a -> a
    com.yintong.secure.e.c c -> c
    com.yintong.secure.e.e d -> d
    com.yintong.secure.c.as e -> e
    void a(android.os.Bundle) -> a
    void f() -> f
    void a(com.yintong.secure.e.a) -> a
    void g() -> g
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(int,int,android.content.Intent) -> a
    boolean a(int,android.view.KeyEvent) -> a
    com.yintong.secure.e.d a(com.yintong.secure.activityproxy.an) -> a
    void a(com.yintong.secure.activityproxy.an,com.yintong.secure.e.c) -> a
    com.yintong.secure.e.c b(com.yintong.secure.activityproxy.an) -> b
    void c(com.yintong.secure.activityproxy.an) -> c
    void d(com.yintong.secure.activityproxy.an) -> d
    com.yintong.secure.c.as e(com.yintong.secure.activityproxy.an) -> e
    void a(com.yintong.secure.activityproxy.an,com.yintong.secure.c.as) -> a
com.yintong.secure.activityproxy.ao -> com.yintong.secure.activityproxy.ao:
    com.yintong.secure.activityproxy.an a -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    void a(com.yintong.secure.e.g) -> a
com.yintong.secure.activityproxy.ap -> com.yintong.secure.activityproxy.ap:
    com.yintong.secure.activityproxy.an a -> a
    void a(com.yintong.secure.e.c) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
com.yintong.secure.activityproxy.aq -> com.yintong.secure.activityproxy.aq:
    com.yintong.secure.activityproxy.an a -> a
    void a(com.yintong.secure.e.b,java.lang.String,java.lang.String) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    void a() -> a
com.yintong.secure.activityproxy.ar -> com.yintong.secure.activityproxy.ar:
    com.yintong.secure.activityproxy.an a -> a
    com.yintong.secure.e.a f -> f
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(java.lang.String) -> a
com.yintong.secure.activityproxy.as -> com.yintong.secure.activityproxy.as:
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    android.widget.TextView e -> e
    android.widget.TextView f -> f
    android.widget.TextView g -> g
    android.widget.TextView h -> h
    android.widget.TextView i -> i
    android.widget.TextView j -> j
    android.widget.EditText k -> k
    android.widget.EditText l -> l
    com.yintong.secure.widget.InputSmsEditText m -> m
    android.widget.LinearLayout n -> n
    android.widget.LinearLayout o -> o
    android.widget.Button p -> p
    android.widget.Button q -> q
    android.app.Dialog r -> r
    java.util.Calendar s -> s
    com.yintong.secure.widget.SendSmsTimeCount t -> t
    android.widget.ImageView u -> u
    com.yintong.secure.e.d v -> v
    com.yintong.secure.e.g w -> w
    com.yintong.secure.e.e x -> x
    com.yintong.secure.e.b y -> y
    android.os.Handler z -> z
    com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick a -> a
    void a(android.os.Bundle) -> a
    void g() -> g
    boolean a(java.lang.String) -> a
    void h() -> h
    void i() -> i
    void j() -> j
    boolean k() -> k
    void f() -> f
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(int,int,android.content.Intent) -> a
    boolean a(int,android.view.KeyEvent) -> a
    void onClick(android.view.View) -> onClick
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(com.yintong.secure.activityproxy.as) -> a
    void b(com.yintong.secure.activityproxy.as) -> b
    android.widget.Button c(com.yintong.secure.activityproxy.as) -> c
    android.widget.LinearLayout d(com.yintong.secure.activityproxy.as) -> d
    android.widget.EditText e(com.yintong.secure.activityproxy.as) -> e
    android.widget.EditText f(com.yintong.secure.activityproxy.as) -> f
    android.os.Handler g(com.yintong.secure.activityproxy.as) -> g
    com.yintong.secure.widget.InputSmsEditText h(com.yintong.secure.activityproxy.as) -> h
    java.util.Calendar i(com.yintong.secure.activityproxy.as) -> i
    android.widget.TextView j(com.yintong.secure.activityproxy.as) -> j
    com.yintong.secure.widget.SendSmsTimeCount k(com.yintong.secure.activityproxy.as) -> k
    void a(com.yintong.secure.activityproxy.as,java.lang.String) -> a
com.yintong.secure.activityproxy.at -> com.yintong.secure.activityproxy.at:
    com.yintong.secure.activityproxy.as a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.yintong.secure.activityproxy.au -> com.yintong.secure.activityproxy.au:
    com.yintong.secure.activityproxy.as a -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.yintong.secure.activityproxy.av -> com.yintong.secure.activityproxy.av:
    com.yintong.secure.activityproxy.as a -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.yintong.secure.activityproxy.aw -> com.yintong.secure.activityproxy.aw:
    com.yintong.secure.activityproxy.as a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.ax -> com.yintong.secure.activityproxy.ax:
    com.yintong.secure.activityproxy.as a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.ay -> com.yintong.secure.activityproxy.ay:
    com.yintong.secure.activityproxy.as a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.az -> com.yintong.secure.activityproxy.az:
    com.yintong.secure.activityproxy.as a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.b -> com.yintong.secure.activityproxy.b:
    android.widget.ListView c -> c
    com.yintong.secure.e.d d -> d
    com.yintong.secure.e.c e -> e
    com.yintong.secure.a.a f -> f
    com.yintong.secure.c.k a -> a
    void a(android.os.Bundle) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void a(com.yintong.secure.e.a) -> a
    void b(com.yintong.secure.e.a) -> b
    void f() -> f
    void d() -> d
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void a(int,int,android.content.Intent) -> a
    boolean a(int,android.view.KeyEvent) -> a
    void a(com.yintong.secure.activityproxy.b,com.yintong.secure.e.a) -> a
    com.yintong.secure.e.c a(com.yintong.secure.activityproxy.b) -> a
    void b(com.yintong.secure.activityproxy.b) -> b
com.yintong.secure.activityproxy.ba -> com.yintong.secure.activityproxy.ba:
    com.yintong.secure.activityproxy.as a -> a
    void a(int,int) -> a
com.yintong.secure.activityproxy.bb -> com.yintong.secure.activityproxy.bb:
    com.yintong.secure.activityproxy.as a -> a
    java.lang.String c -> c
    void a(org.json.JSONObject) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    void a() -> a
    void c(org.json.JSONObject) -> c
com.yintong.secure.activityproxy.c -> com.yintong.secure.activityproxy.c:
    com.yintong.secure.activityproxy.b a -> a
    com.yintong.secure.e.a b -> b
    void onClick(android.view.View) -> onClick
com.yintong.secure.activityproxy.d -> com.yintong.secure.activityproxy.d:
    com.yintong.secure.activityproxy.b a -> a
    com.yintong.secure.e.a b -> b
    void a(org.json.JSONObject) -> a
com.yintong.secure.activityproxy.e -> com.yintong.secure.activityproxy.e:
    android.webkit.WebView a -> a
    void a(android.os.Bundle) -> a
    java.lang.String f() -> f
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(int,int,android.content.Intent) -> a
    boolean a(int,android.view.KeyEvent) -> a
com.yintong.secure.activityproxy.f -> com.yintong.secure.activityproxy.f:
    com.yintong.secure.activity.BaseActivity b -> b
    void a(com.yintong.secure.activity.BaseActivity) -> a
    void a(android.view.View) -> a
    android.view.View a(int) -> a
    void a(android.content.Intent) -> a
    void a(android.content.Intent,int) -> a
    void a(java.lang.CharSequence) -> a
    void a(android.graphics.drawable.Drawable) -> a
    void b(int) -> b
    void a(boolean) -> a
    void e() -> e
    void c(android.os.Bundle) -> c
    void a(android.os.Bundle) -> a
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(int,int,android.content.Intent) -> a
    boolean a(int,android.view.KeyEvent) -> a
com.yintong.secure.activityproxy.g -> com.yintong.secure.activityproxy.g:
    com.yintong.secure.e.d a -> a
    com.yintong.secure.widget.LockPatternView c -> c
    com.yintong.secure.widget.LockIndicator d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    android.widget.TextView j -> j
    android.widget.TextView k -> k
    void a(android.os.Bundle) -> a
    void f() -> f
    void a(java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void a(int,int,android.content.Intent) -> a
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
    void a(java.util.List) -> a
    void b(java.util.List) -> b
    void c(java.util.List) -> c
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    boolean a(int,android.view.KeyEvent) -> a
    java.lang.String a(com.yintong.secure.activityproxy.g) -> a
    com.yintong.secure.widget.LockPatternView b(com.yintong.secure.activityproxy.g) -> b
com.yintong.secure.activityproxy.h -> com.yintong.secure.activityproxy.h:
    com.yintong.secure.activityproxy.g a -> a
    void a(org.json.JSONObject) -> a
com.yintong.secure.activityproxy.i -> com.yintong.secure.activityproxy.i:
    com.yintong.secure.activityproxy.g a -> a
    java.lang.String b -> b
    void a(org.json.JSONObject) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
com.yintong.secure.activityproxy.j -> com.yintong.secure.activityproxy.j:
    android.widget.Button a -> a
    android.widget.EditText c -> c
    android.widget.TextView d -> d
    com.yintong.secure.e.d e -> e
    void a(android.os.Bundle) -> a
    void f() -> f
    void g() -> g
    void onClick(android.view.View) -> onClick
    java.lang.String h() -> h
    java.lang.String i() -> i
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(int,int,android.content.Intent) -> a
    boolean a(int,android.view.KeyEvent) -> a
    android.widget.EditText a(com.yintong.secure.activityproxy.j) -> a
    android.widget.Button b(com.yintong.secure.activityproxy.j) -> b
    com.yintong.secure.e.d c(com.yintong.secure.activityproxy.j) -> c
com.yintong.secure.activityproxy.k -> com.yintong.secure.activityproxy.k:
    com.yintong.secure.activityproxy.j a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.l -> com.yintong.secure.activityproxy.l:
    com.yintong.secure.activityproxy.j a -> a
    java.lang.String b -> b
    void a(org.json.JSONObject) -> a
com.yintong.secure.activityproxy.m -> com.yintong.secure.activityproxy.m:
    android.widget.Button a -> a
    android.widget.Button c -> c
    com.yintong.secure.widget.InputSmsEditText d -> d
    com.yintong.secure.e.d e -> e
    android.widget.TextView f -> f
    com.yintong.secure.widget.SendSmsTimeCount g -> g
    com.yintong.secure.e.a h -> h
    java.util.List i -> i
    com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick j -> j
    void a(android.os.Bundle) -> a
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void onClick(android.view.View) -> onClick
    java.lang.String j() -> j
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(int,int,android.content.Intent) -> a
    boolean a(int,android.view.KeyEvent) -> a
    android.widget.Button a(com.yintong.secure.activityproxy.m) -> a
    android.widget.Button b(com.yintong.secure.activityproxy.m) -> b
com.yintong.secure.activityproxy.n -> com.yintong.secure.activityproxy.n:
    com.yintong.secure.activityproxy.m a -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.yintong.secure.activityproxy.o -> com.yintong.secure.activityproxy.o:
    com.yintong.secure.activityproxy.m a -> a
    void a(org.json.JSONObject) -> a
com.yintong.secure.activityproxy.p -> com.yintong.secure.activityproxy.p:
    com.yintong.secure.activityproxy.m a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.q -> com.yintong.secure.activityproxy.q:
    com.yintong.secure.e.d a -> a
    com.yintong.secure.e.c c -> c
    com.yintong.secure.c.ab d -> d
    com.yintong.secure.c.t e -> e
    com.yintong.secure.c.ba f -> f
    void a(android.os.Bundle) -> a
    void b() -> b
    void f() -> f
    void g() -> g
    void a(int,int,android.content.Intent) -> a
    void d() -> d
    void b(android.os.Bundle) -> b
    void a() -> a
    void c() -> c
    boolean a(int,android.view.KeyEvent) -> a
com.yintong.secure.activityproxy.r -> com.yintong.secure.activityproxy.r:
    android.widget.TextView a -> a
    android.widget.Button c -> c
    android.widget.Button d -> d
    android.view.View e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.yintong.secure.e.d h -> h
    com.yintong.secure.e.f i -> i
    void a(android.os.Bundle) -> a
    void f() -> f
    void g() -> g
    void onClick(android.view.View) -> onClick
    void a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    boolean a(int,android.view.KeyEvent) -> a
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(int,int,android.content.Intent) -> a
    com.yintong.secure.e.d a(com.yintong.secure.activityproxy.r) -> a
    com.yintong.secure.e.f b(com.yintong.secure.activityproxy.r) -> b
com.yintong.secure.activityproxy.s -> com.yintong.secure.activityproxy.s:
    com.yintong.secure.activityproxy.r a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.activityproxy.t -> com.yintong.secure.activityproxy.t:
    com.yintong.secure.activityproxy.PayIntro a -> a
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
com.yintong.secure.activityproxy.u -> com.yintong.secure.activityproxy.u:
    com.yintong.secure.activityproxy.PayIntro a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    com.yintong.secure.activityproxy.PayIntro a(com.yintong.secure.activityproxy.u) -> a
com.yintong.secure.activityproxy.v -> com.yintong.secure.activityproxy.v:
    com.yintong.secure.activityproxy.u a -> a
    android.webkit.WebView b -> b
    void run() -> run
com.yintong.secure.activityproxy.w -> com.yintong.secure.activityproxy.w:
    com.yintong.secure.widget.SendSmsTimeCount d -> d
    java.util.Calendar e -> e
    android.view.View f -> f
    android.view.View g -> g
    android.view.View h -> h
    android.view.View i -> i
    android.view.View j -> j
    android.view.View k -> k
    android.widget.TextView l -> l
    android.widget.TextView m -> m
    android.widget.TextView n -> n
    android.widget.TextView o -> o
    android.widget.TextView p -> p
    android.widget.TextView q -> q
    android.widget.TextView r -> r
    android.widget.TextView s -> s
    android.widget.EditText t -> t
    android.widget.EditText u -> u
    android.widget.EditText v -> v
    android.widget.EditText w -> w
    android.widget.EditText x -> x
    com.yintong.secure.widget.InputSmsEditText y -> y
    android.widget.ImageView z -> z
    android.widget.ImageView A -> A
    android.widget.ImageView B -> B
    android.widget.ImageView C -> C
    android.widget.Button D -> D
    android.widget.Button E -> E
    com.yintong.secure.e.b F -> F
    java.lang.String G -> G
    com.yintong.secure.c.al H -> H
    boolean a -> a
    com.yintong.secure.e.d I -> I
    com.yintong.secure.e.c J -> J
    com.yintong.secure.e.e K -> K
    com.yintong.secure.c.k L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    android.app.Dialog O -> O
    com.yintong.secure.e.b P -> P
    java.lang.String Q -> Q
    com.yintong.secure.g.c R -> R
    java.lang.String S -> S
    android.os.Handler T -> T
    com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick c -> c
    void a(android.os.Bundle) -> a
    void c(android.os.Bundle) -> c
    void i() -> i
    void f() -> f
    void j() -> j
    void a(com.yintong.secure.e.b,int) -> a
    void k() -> k
    void l() -> l
    boolean m() -> m
    void n() -> n
    void o() -> o
    com.yintong.secure.e.a g() -> g
    void onClick(android.view.View) -> onClick
    void d() -> d
    void a(java.lang.String) -> a
    java.lang.String p() -> p
    void h() -> h
    void b(android.os.Bundle) -> b
    void a() -> a
    void b() -> b
    void c() -> c
    void a(int,int,android.content.Intent) -> a
    boolean a(int,android.view.KeyEvent) -> a
    void a(com.yintong.secure.activityproxy.w) -> a
    void b(com.yintong.secure.activityproxy.w) -> b
    android.widget.Button c(com.yintong.secure.activityproxy.w) -> c
    android.widget.EditText d(com.yintong.secure.activityproxy.w) -> d
    android.os.Handler e(com.yintong.secure.activityproxy.w) -> e
    android.widget.EditText f(com.yintong.secure.activityproxy.w) -> f
    android.view.View g(com.yintong.secure.activityproxy.w) -> g
    android.widget.TextView h(com.yintong.secure.activityproxy.w) -> h
    android.view.View i(com.yintong.secure.activityproxy.w) -> i
    android.widget.EditText j(com.yintong.secure.activityproxy.w) -> j
    android.widget.EditText k(com.yintong.secure.activityproxy.w) -> k
    com.yintong.secure.widget.InputSmsEditText l(com.yintong.secure.activityproxy.w) -> l
    com.yintong.secure.widget.SendSmsTimeCount m(com.yintong.secure.activityproxy.w) -> m
    void a(com.yintong.secure.activityproxy.w,com.yintong.secure.c.al) -> a
    com.yintong.secure.c.al n(com.yintong.secure.activityproxy.w) -> n
    void a(com.yintong.secure.activityproxy.w,com.yintong.secure.e.b,int) -> a
    com.yintong.secure.c.k o(com.yintong.secure.activityproxy.w) -> o
    void a(com.yintong.secure.activityproxy.w,java.lang.String) -> a
    java.lang.String p(com.yintong.secure.activityproxy.w) -> p
    android.view.View q(com.yintong.secure.activityproxy.w) -> q
    void b(com.yintong.secure.activityproxy.w,java.lang.String) -> b
    android.view.View r(com.yintong.secure.activityproxy.w) -> r
    void a(com.yintong.secure.activityproxy.w,com.yintong.secure.g.c) -> a
    java.util.Calendar s(com.yintong.secure.activityproxy.w) -> s
com.yintong.secure.activityproxy.x -> com.yintong.secure.activityproxy.x:
    com.yintong.secure.activityproxy.w a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.yintong.secure.activityproxy.y -> com.yintong.secure.activityproxy.y:
    com.yintong.secure.activityproxy.w a -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.activityproxy.z -> com.yintong.secure.activityproxy.z:
    com.yintong.secure.activityproxy.w a -> a
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(java.lang.String) -> a
com.yintong.secure.b.a -> com.yintong.secure.b.a:
    org.apache.http.client.HttpClient a -> a
    org.apache.http.client.HttpClient a() -> a
    java.lang.Object clone() -> clone
com.yintong.secure.b.b -> com.yintong.secure.b.b:
    org.json.JSONObject a(org.json.JSONObject,com.yintong.secure.e.e,com.yintong.secure.g.f) -> a
    org.json.JSONObject a(android.content.Context,com.yintong.secure.e.e) -> a
com.yintong.secure.b.c -> com.yintong.secure.b.c:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.yintong.secure.b.d -> com.yintong.secure.b.d:
    int[] a -> a
    javax.net.ssl.X509TrustManager b -> b
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.yintong.secure.c.a -> com.yintong.secure.c.a:
    com.yintong.secure.a.e a -> a
    void a(android.content.Context,java.util.List,java.util.List,com.yintong.secure.e.b,com.yintong.secure.c.d) -> a
    com.yintong.secure.a.e a() -> a
com.yintong.secure.c.aa -> com.yintong.secure.c.aa:
    com.yintong.secure.c.t a -> a
    java.lang.String f -> f
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(java.lang.String) -> a
com.yintong.secure.c.ab -> com.yintong.secure.c.ab:
    android.content.Context b -> b
    com.yintong.secure.c.k c -> c
    android.widget.TextView d -> d
    android.widget.TextView e -> e
    android.widget.TextView f -> f
    android.view.View g -> g
    com.yintong.secure.widget.InputSmsEditText h -> h
    android.widget.Button i -> i
    com.yintong.secure.e.d j -> j
    com.yintong.secure.e.a k -> k
    com.yintong.secure.widget.SendSmsTimeCount l -> l
    com.yintong.secure.c.e m -> m
    com.yintong.secure.c.j n -> n
    com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick a -> a
    void a() -> a
    void b() -> b
    void e() -> e
    void f() -> f
    void a(com.yintong.secure.e.a) -> a
    void g() -> g
    void h() -> h
    boolean c() -> c
    void d() -> d
    android.content.Context a(com.yintong.secure.c.ab) -> a
    com.yintong.secure.e.a b(com.yintong.secure.c.ab) -> b
    void a(com.yintong.secure.c.ab,com.yintong.secure.e.a) -> a
    com.yintong.secure.widget.SendSmsTimeCount c(com.yintong.secure.c.ab) -> c
    android.widget.TextView d(com.yintong.secure.c.ab) -> d
    android.widget.Button e(com.yintong.secure.c.ab) -> e
    void f(com.yintong.secure.c.ab) -> f
    com.yintong.secure.c.e g(com.yintong.secure.c.ab) -> g
    com.yintong.secure.e.d h(com.yintong.secure.c.ab) -> h
    com.yintong.secure.c.j i(com.yintong.secure.c.ab) -> i
    void a(com.yintong.secure.c.ab,com.yintong.secure.c.e) -> a
    com.yintong.secure.widget.InputSmsEditText j(com.yintong.secure.c.ab) -> j
    void k(com.yintong.secure.c.ab) -> k
com.yintong.secure.c.ac -> com.yintong.secure.c.ac:
    com.yintong.secure.c.ab a -> a
    void a() -> a
    void a(com.yintong.secure.e.a) -> a
com.yintong.secure.c.ad -> com.yintong.secure.c.ad:
    com.yintong.secure.c.ab a -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.yintong.secure.c.ae -> com.yintong.secure.c.ae:
    com.yintong.secure.c.ab a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.af -> com.yintong.secure.c.af:
    com.yintong.secure.c.ab a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.ag -> com.yintong.secure.c.ag:
    com.yintong.secure.c.ab a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.ah -> com.yintong.secure.c.ah:
    com.yintong.secure.c.ab a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.ai -> com.yintong.secure.c.ai:
    com.yintong.secure.c.ab a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.yintong.secure.c.aj -> com.yintong.secure.c.aj:
    com.yintong.secure.c.ab a -> a
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(java.lang.String) -> a
com.yintong.secure.c.ak -> com.yintong.secure.c.ak:
    com.yintong.secure.c.ab a -> a
    java.lang.String f -> f
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(java.lang.String) -> a
com.yintong.secure.c.al -> com.yintong.secure.c.al:
    android.content.Context b -> b
    com.yintong.secure.c.k c -> c
    android.widget.TextView d -> d
    com.yintong.secure.widget.InputSmsEditText e -> e
    android.widget.Button f -> f
    com.yintong.secure.e.d g -> g
    com.yintong.secure.widget.SendSmsTimeCount h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    com.yintong.secure.e.a k -> k
    com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick a -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    android.widget.Button a(com.yintong.secure.c.al) -> a
    void b(com.yintong.secure.c.al) -> b
    void c(com.yintong.secure.c.al) -> c
    android.content.Context d(com.yintong.secure.c.al) -> d
com.yintong.secure.c.am -> com.yintong.secure.c.am:
    com.yintong.secure.c.al a -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.yintong.secure.c.an -> com.yintong.secure.c.an:
    com.yintong.secure.c.al a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.ao -> com.yintong.secure.c.ao:
    com.yintong.secure.c.al a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.ap -> com.yintong.secure.c.ap:
    com.yintong.secure.c.al a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.aq -> com.yintong.secure.c.aq:
    com.yintong.secure.c.al a -> a
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(java.lang.String) -> a
com.yintong.secure.c.ar -> com.yintong.secure.c.ar:
    com.yintong.secure.c.al a -> a
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(java.lang.String) -> a
com.yintong.secure.c.as -> com.yintong.secure.c.as:
    android.content.Context b -> b
    com.yintong.secure.c.k c -> c
    android.widget.TextView d -> d
    com.yintong.secure.widget.InputSmsEditText e -> e
    android.widget.Button f -> f
    com.yintong.secure.e.d g -> g
    com.yintong.secure.widget.SendSmsTimeCount h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    com.yintong.secure.e.a k -> k
    com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick a -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    android.widget.Button a(com.yintong.secure.c.as) -> a
    com.yintong.secure.e.d b(com.yintong.secure.c.as) -> b
    void c(com.yintong.secure.c.as) -> c
    void d(com.yintong.secure.c.as) -> d
com.yintong.secure.c.at -> com.yintong.secure.c.at:
    com.yintong.secure.c.as a -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.yintong.secure.c.au -> com.yintong.secure.c.au:
    com.yintong.secure.c.as a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.av -> com.yintong.secure.c.av:
    com.yintong.secure.c.as a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.aw -> com.yintong.secure.c.aw:
    com.yintong.secure.c.as a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.ax -> com.yintong.secure.c.ax:
    com.yintong.secure.c.as a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.yintong.secure.c.ay -> com.yintong.secure.c.ay:
    com.yintong.secure.c.as a -> a
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(java.lang.String) -> a
com.yintong.secure.c.az -> com.yintong.secure.c.az:
    com.yintong.secure.c.as a -> a
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(java.lang.String) -> a
com.yintong.secure.c.b -> com.yintong.secure.c.b:
    com.yintong.secure.c.d a -> a
    com.yintong.secure.c.k b -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.yintong.secure.c.ba -> com.yintong.secure.c.ba:
    com.yintong.secure.activity.BaseActivity a -> a
    com.yintong.secure.c.k b -> b
    com.yintong.secure.e.d c -> c
    void a() -> a
    void c() -> c
    void b() -> b
    void a(int,int,android.content.Intent) -> a
    void d() -> d
    com.yintong.secure.activity.BaseActivity a(com.yintong.secure.c.ba) -> a
    com.yintong.secure.e.d b(com.yintong.secure.c.ba) -> b
com.yintong.secure.c.bb -> com.yintong.secure.c.bb:
    com.yintong.secure.c.ba a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.bc -> com.yintong.secure.c.bc:
    com.yintong.secure.c.ba a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.yintong.secure.c.c -> com.yintong.secure.c.c:
    java.util.List a -> a
    java.util.List b -> b
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.yintong.secure.c.d -> com.yintong.secure.c.d:
    void a(com.yintong.secure.e.b) -> a
com.yintong.secure.c.e -> com.yintong.secure.c.e:
    android.content.Context a -> a
    android.view.View b -> b
    android.widget.ListView c -> c
    java.util.List d -> d
    com.yintong.secure.e.d e -> e
    com.yintong.secure.c.j f -> f
    com.yintong.secure.c.h g -> g
    android.view.View h -> h
    void a() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onAttachedToWindow() -> onAttachedToWindow
    void b() -> b
    com.yintong.secure.e.d a(com.yintong.secure.c.e) -> a
    java.util.List b(com.yintong.secure.c.e) -> b
    android.content.Context c(com.yintong.secure.c.e) -> c
    com.yintong.secure.c.h d(com.yintong.secure.c.e) -> d
    com.yintong.secure.c.j e(com.yintong.secure.c.e) -> e
com.yintong.secure.c.f -> com.yintong.secure.c.f:
    com.yintong.secure.c.e a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.g -> com.yintong.secure.c.g:
    com.yintong.secure.c.e a -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.yintong.secure.c.h -> com.yintong.secure.c.h:
    com.yintong.secure.c.e a -> a
    boolean isEnabled(int) -> isEnabled
    int getCount() -> getCount
    com.yintong.secure.e.a a(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void a(com.yintong.secure.c.i,int,com.yintong.secure.e.a) -> a
    java.lang.String a(com.yintong.secure.e.a) -> a
    java.lang.Object getItem(int) -> getItem
com.yintong.secure.c.i -> com.yintong.secure.c.i:
    android.widget.TextView a -> a
    android.widget.TextView b -> b
    com.yintong.secure.c.h c -> c
com.yintong.secure.c.j -> com.yintong.secure.c.j:
    void a(com.yintong.secure.e.a) -> a
    void a() -> a
com.yintong.secure.c.k -> com.yintong.secure.c.k:
    android.content.Context a -> a
    android.widget.TextView b -> b
    android.view.View c -> c
    android.view.View d -> d
    android.widget.LinearLayout e -> e
    android.widget.FrameLayout f -> f
    java.util.List g -> g
    void b() -> b
    void onCreate(android.os.Bundle) -> onCreate
    com.yintong.secure.c.k a(int) -> a
    com.yintong.secure.c.k a(java.lang.String) -> a
    com.yintong.secure.c.k b(int) -> b
    com.yintong.secure.c.k a(android.graphics.drawable.Drawable) -> a
    com.yintong.secure.c.k a(int,android.view.View$OnClickListener) -> a
    com.yintong.secure.c.k a(android.graphics.drawable.Drawable,android.view.View$OnClickListener) -> a
    android.widget.Button a(android.view.View$OnClickListener,java.lang.String,android.view.View) -> a
    com.yintong.secure.c.k a() -> a
    void a(android.widget.LinearLayout,android.widget.Button) -> a
    void a(android.widget.LinearLayout) -> a
    void a(java.lang.CharSequence) -> a
    void a(android.view.View) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.yintong.secure.c.l -> com.yintong.secure.c.l:
    android.app.Dialog a(android.content.Context,int,int,com.yintong.secure.c.p) -> a
    void e(android.content.Context,android.widget.TextView) -> e
    void f(android.content.Context,android.widget.TextView) -> f
    void g(android.content.Context,android.widget.TextView) -> g
    void h(android.content.Context,android.widget.TextView) -> h
    void a(android.content.Context,android.widget.TextView,int) -> a
    void b(android.content.Context,android.widget.TextView,int) -> b
    void a(android.content.Context,android.widget.TextView) -> a
    void b(android.content.Context,android.widget.TextView) -> b
    void c(android.content.Context,android.widget.TextView) -> c
    void d(android.content.Context,android.widget.TextView) -> d
com.yintong.secure.c.m -> com.yintong.secure.c.m:
    android.content.Context a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.n -> com.yintong.secure.c.n:
    com.yintong.secure.c.k a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.o -> com.yintong.secure.c.o:
    com.yintong.secure.c.p a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    com.yintong.secure.c.k d -> d
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.p -> com.yintong.secure.c.p:
    void a(int,int) -> a
com.yintong.secure.c.q -> com.yintong.secure.c.q:
    com.yintong.secure.c.k a(android.content.Context,java.lang.String,android.view.View$OnClickListener,android.view.View$OnClickListener) -> a
    com.yintong.secure.c.k a(android.content.Context,java.lang.String,android.view.View$OnClickListener,java.lang.String,android.view.View$OnClickListener,java.lang.String) -> a
com.yintong.secure.c.r -> com.yintong.secure.c.r:
    android.view.View$OnClickListener a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.s -> com.yintong.secure.c.s:
    android.view.View$OnClickListener a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.t -> com.yintong.secure.c.t:
    com.yintong.secure.activity.BaseActivity a -> a
    com.yintong.secure.c.k b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    android.view.View e -> e
    com.yintong.secure.e.d f -> f
    com.yintong.secure.e.a g -> g
    com.yintong.secure.c.e h -> h
    com.yintong.secure.c.al i -> i
    com.yintong.secure.c.j j -> j
    com.yintong.secure.e.c k -> k
    void a() -> a
    void b() -> b
    void e() -> e
    void f() -> f
    void a(com.yintong.secure.e.a) -> a
    void g() -> g
    void b(com.yintong.secure.e.a) -> b
    void a(int,int,android.content.Intent) -> a
    boolean c() -> c
    void a(com.yintong.secure.e.a,java.lang.String,java.lang.String) -> a
    void d() -> d
    com.yintong.secure.activity.BaseActivity a(com.yintong.secure.c.t) -> a
    void a(com.yintong.secure.c.t,com.yintong.secure.e.a) -> a
    void b(com.yintong.secure.c.t) -> b
    com.yintong.secure.c.e c(com.yintong.secure.c.t) -> c
    com.yintong.secure.e.d d(com.yintong.secure.c.t) -> d
    com.yintong.secure.c.j e(com.yintong.secure.c.t) -> e
    void a(com.yintong.secure.c.t,com.yintong.secure.c.e) -> a
    void a(com.yintong.secure.c.t,com.yintong.secure.c.al) -> a
    com.yintong.secure.c.al f(com.yintong.secure.c.t) -> f
    com.yintong.secure.e.a g(com.yintong.secure.c.t) -> g
    void a(com.yintong.secure.c.t,com.yintong.secure.e.a,java.lang.String,java.lang.String) -> a
com.yintong.secure.c.u -> com.yintong.secure.c.u:
    com.yintong.secure.c.t a -> a
    void a() -> a
    void a(com.yintong.secure.e.a) -> a
com.yintong.secure.c.v -> com.yintong.secure.c.v:
    com.yintong.secure.c.t a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.w -> com.yintong.secure.c.w:
    com.yintong.secure.c.t a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.x -> com.yintong.secure.c.x:
    com.yintong.secure.c.t a -> a
    void onClick(android.view.View) -> onClick
com.yintong.secure.c.y -> com.yintong.secure.c.y:
    com.yintong.secure.c.t a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.yintong.secure.c.z -> com.yintong.secure.c.z:
    com.yintong.secure.c.t a -> a
    com.yintong.secure.e.a f -> f
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(java.lang.String) -> a
com.yintong.secure.d.a -> com.yintong.secure.d.a:
com.yintong.secure.d.aa -> com.yintong.secure.d.aa:
    java.util.HashMap a -> a
    com.yintong.secure.d.aa b -> b
    com.yintong.secure.d.aa a() -> a
com.yintong.secure.d.ab -> com.yintong.secure.d.ab:
    android.util.SparseIntArray a -> a
    com.yintong.secure.d.ab b -> b
    com.yintong.secure.d.ab a() -> a
com.yintong.secure.d.ac -> com.yintong.secure.d.ac:
    android.util.SparseIntArray a -> a
    com.yintong.secure.d.ac b -> b
    com.yintong.secure.d.ac a() -> a
com.yintong.secure.d.ad -> com.yintong.secure.d.ad:
    android.util.SparseIntArray a -> a
    com.yintong.secure.d.ad b -> b
    com.yintong.secure.d.ad a() -> a
com.yintong.secure.d.ae -> com.yintong.secure.d.ae:
    java.util.HashMap a -> a
    com.yintong.secure.d.ae b -> b
    com.yintong.secure.d.ae a() -> a
com.yintong.secure.d.af -> com.yintong.secure.d.af:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
com.yintong.secure.d.ag -> com.yintong.secure.d.ag:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
com.yintong.secure.d.ah -> com.yintong.secure.d.ah:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int M -> M
    int N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int aa -> aa
    int ab -> ab
    int ac -> ac
    int ad -> ad
    int ae -> ae
    int af -> af
    int ag -> ag
    int ah -> ah
    int ai -> ai
    int aj -> aj
    int ak -> ak
    int al -> al
    int am -> am
    int an -> an
    int ao -> ao
    int ap -> ap
    int aq -> aq
    int ar -> ar
    int as -> as
    int at -> at
    int au -> au
    int av -> av
    int aw -> aw
    int ax -> ax
    int ay -> ay
com.yintong.secure.d.ai -> com.yintong.secure.d.ai:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    java.lang.String y -> y
    java.lang.String z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    java.lang.String C -> C
    java.lang.String D -> D
    java.lang.String E -> E
    java.lang.String F -> F
    java.lang.String G -> G
    java.lang.String H -> H
    java.lang.String I -> I
    java.lang.String J -> J
    java.lang.String K -> K
    java.lang.String L -> L
    java.lang.String M -> M
    java.lang.String N -> N
    java.lang.String O -> O
    java.lang.String P -> P
    java.lang.String Q -> Q
    java.lang.String R -> R
    java.lang.String S -> S
    java.lang.String T -> T
    java.lang.String U -> U
    java.lang.String V -> V
    java.lang.String W -> W
    java.lang.String X -> X
    java.lang.String Y -> Y
    java.lang.String Z -> Z
    java.lang.String aa -> aa
    java.lang.String ab -> ab
    java.lang.String ac -> ac
    java.lang.String ad -> ad
    java.lang.String ae -> ae
    java.lang.String af -> af
    java.lang.String ag -> ag
    java.lang.String ah -> ah
    java.lang.String ai -> ai
    java.lang.String aj -> aj
    java.lang.String ak -> ak
    java.lang.String al -> al
    java.lang.String am -> am
    java.lang.String an -> an
    java.lang.String ao -> ao
    java.lang.String ap -> ap
    java.lang.String aq -> aq
    java.lang.String ar -> ar
    java.lang.String as -> as
    java.lang.String at -> at
    java.lang.String au -> au
    java.lang.String av -> av
    java.lang.String aw -> aw
    java.lang.String ax -> ax
    java.lang.String ay -> ay
    java.lang.String az -> az
    java.lang.String aA -> aA
    java.lang.String aB -> aB
    java.lang.String aC -> aC
    java.lang.String aD -> aD
    java.lang.String aE -> aE
    java.lang.String aF -> aF
    java.lang.String aG -> aG
    java.lang.String aH -> aH
    java.lang.String aI -> aI
    java.lang.String aJ -> aJ
    java.lang.String aK -> aK
    java.lang.String aL -> aL
    java.lang.String aM -> aM
    java.lang.String aN -> aN
    java.lang.String aO -> aO
com.yintong.secure.d.aj -> com.yintong.secure.d.aj:
    android.view.View a(android.content.Context) -> a
    android.view.View b(android.content.Context) -> b
    android.view.View c(android.content.Context) -> c
    android.view.View d(android.content.Context) -> d
    android.view.View e(android.content.Context) -> e
    android.view.View f(android.content.Context) -> f
    android.view.View g(android.content.Context) -> g
    android.view.View h(android.content.Context) -> h
    android.view.View i(android.content.Context) -> i
    android.view.View j(android.content.Context) -> j
com.yintong.secure.d.ak -> com.yintong.secure.d.ak:
    void constructView(android.content.Context) -> constructView
com.yintong.secure.d.al -> com.yintong.secure.d.al:
com.yintong.secure.d.b -> com.yintong.secure.d.b:
com.yintong.secure.d.c -> com.yintong.secure.d.c:
com.yintong.secure.d.d -> com.yintong.secure.d.d:
com.yintong.secure.d.e -> com.yintong.secure.d.e:
    android.view.View a(android.content.Context) -> a
    android.view.View b(android.content.Context) -> b
com.yintong.secure.d.f -> com.yintong.secure.d.f:
com.yintong.secure.d.g -> com.yintong.secure.d.g:
    android.view.View a(android.content.Context) -> a
com.yintong.secure.d.h -> com.yintong.secure.d.h:
    android.view.View a(android.content.Context) -> a
    android.view.View b(android.content.Context) -> b
    android.view.View c(android.content.Context) -> c
com.yintong.secure.d.i -> com.yintong.secure.d.i:
com.yintong.secure.d.j -> com.yintong.secure.d.j:
com.yintong.secure.d.k -> com.yintong.secure.d.k:
com.yintong.secure.d.l -> com.yintong.secure.d.l:
    android.view.View a(android.content.Context) -> a
    android.view.View b(android.content.Context) -> b
    android.view.View c(android.content.Context) -> c
com.yintong.secure.d.m -> com.yintong.secure.d.m:
com.yintong.secure.d.n -> com.yintong.secure.d.n:
    android.view.View a(android.content.Context) -> a
com.yintong.secure.d.o -> com.yintong.secure.d.o:
    com.yintong.secure.d.n a -> a
    char[] getAcceptedChars() -> getAcceptedChars
    int getInputType() -> getInputType
com.yintong.secure.d.p -> com.yintong.secure.d.p:
    android.view.View a(android.content.Context) -> a
com.yintong.secure.d.q -> com.yintong.secure.d.q:
    android.view.View a(android.content.Context) -> a
    android.view.View b(android.content.Context) -> b
    android.view.View c(android.content.Context) -> c
    android.view.View d(android.content.Context) -> d
com.yintong.secure.d.r -> com.yintong.secure.d.r:
com.yintong.secure.d.s -> com.yintong.secure.d.s:
    android.view.View a(android.content.Context) -> a
    android.view.View b(android.content.Context) -> b
    android.view.View c(android.content.Context) -> c
    android.view.View d(android.content.Context) -> d
    android.view.View e(android.content.Context) -> e
    android.view.View f(android.content.Context) -> f
    android.view.View g(android.content.Context) -> g
    android.view.View h(android.content.Context) -> h
    android.view.View i(android.content.Context) -> i
    android.view.View j(android.content.Context) -> j
    android.view.View k(android.content.Context) -> k
    android.view.View l(android.content.Context) -> l
    android.view.View m(android.content.Context) -> m
com.yintong.secure.d.t -> com.yintong.secure.d.t:
    com.yintong.secure.d.s a -> a
    char[] getAcceptedChars() -> getAcceptedChars
    int getInputType() -> getInputType
com.yintong.secure.d.u -> com.yintong.secure.d.u:
    android.view.View a(android.content.Context) -> a
    android.view.View b(android.content.Context) -> b
com.yintong.secure.d.v -> com.yintong.secure.d.v:
    android.view.View a(android.content.Context) -> a
    android.view.View b(android.content.Context) -> b
    android.view.View c(android.content.Context) -> c
com.yintong.secure.d.w -> com.yintong.secure.d.w:
    android.view.View a(android.content.Context) -> a
    android.view.View b(android.content.Context) -> b
com.yintong.secure.d.x -> com.yintong.secure.d.x:
com.yintong.secure.d.y -> com.yintong.secure.d.y:
com.yintong.secure.d.z -> com.yintong.secure.d.z:
    java.util.Map a -> a
    com.yintong.secure.d.z b -> b
    com.yintong.secure.d.z a() -> a
com.yintong.secure.e.a -> com.yintong.secure.e.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
com.yintong.secure.e.b -> com.yintong.secure.e.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
com.yintong.secure.e.c -> com.yintong.secure.e.c:
    java.lang.String a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    com.yintong.secure.e.a e -> e
    java.util.Set f -> f
    java.util.Set g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
com.yintong.secure.e.d -> com.yintong.secure.e.d:
    com.yintong.secure.e.c a -> a
    com.yintong.secure.e.e b -> b
    com.yintong.secure.e.f c -> c
    com.yintong.secure.e.g d -> d
    com.yintong.secure.e.g a() -> a
    void a(com.yintong.secure.e.g) -> a
    com.yintong.secure.e.c b() -> b
    void a(com.yintong.secure.e.c) -> a
    com.yintong.secure.e.f c() -> c
    void a(com.yintong.secure.e.f) -> a
    com.yintong.secure.e.e d() -> d
    void a(com.yintong.secure.e.e) -> a
    void e() -> e
com.yintong.secure.e.e -> com.yintong.secure.e.e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    long m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    boolean x -> x
    boolean y -> y
    void a(org.json.JSONObject) -> a
com.yintong.secure.e.f -> com.yintong.secure.e.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String b(java.lang.String) -> b
    com.yintong.secure.e.f a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.yintong.secure.e.g -> com.yintong.secure.e.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
com.yintong.secure.f.a -> com.yintong.secure.f.a:
    android.util.SparseArray a -> a
    void a(int,android.app.Activity) -> a
    void b(int,android.app.Activity) -> b
    void a(int) -> a
    void a() -> a
    boolean b(int) -> b
com.yintong.secure.f.b -> com.yintong.secure.f.b:
    byte[] a -> a
    char[] b -> b
    boolean a(char) -> a
    boolean b(char) -> b
    boolean c(char) -> c
    byte[] a(java.lang.String) -> a
    int a(char[]) -> a
com.yintong.secure.f.c -> com.yintong.secure.f.c:
    java.lang.String a -> a
    java.lang.String b -> b
com.yintong.secure.f.d -> com.yintong.secure.f.d:
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.yintong.secure.f.e -> com.yintong.secure.f.e:
    int[] a -> a
    int[] b -> b
    int[] c -> c
    void a(com.yintong.secure.f.f) -> a
    void b(com.yintong.secure.f.f) -> b
    void a(com.yintong.secure.f.f,int[]) -> a
com.yintong.secure.f.f -> com.yintong.secure.f.f:
    java.lang.String a -> a
    int b -> b
    java.lang.String toString() -> toString
com.yintong.secure.f.g -> com.yintong.secure.f.g:
    java.util.Properties a -> a
    boolean a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    java.lang.String e(java.lang.String) -> e
    java.lang.String f(java.lang.String) -> f
    void a(android.app.Dialog) -> a
    int a(android.content.Context,float) -> a
    int a(android.content.Context,int) -> a
    int a(android.content.Context,java.lang.String) -> a
    int b(android.content.Context,java.lang.String) -> b
    int b(android.content.Context,int) -> b
    android.graphics.drawable.Drawable c(android.content.Context,int) -> c
    android.graphics.drawable.Drawable c(android.content.Context,java.lang.String) -> c
    int d(android.content.Context,java.lang.String) -> d
    java.lang.String e(android.content.Context,java.lang.String) -> e
    java.util.Properties a(android.content.Context) -> a
    android.graphics.Bitmap f(android.content.Context,java.lang.String) -> f
    android.content.res.ColorStateList b(android.content.Context) -> b
    android.content.res.ColorStateList a(int,int,int,int,int,int) -> a
    android.content.res.ColorStateList a(int,int) -> a
    void b(android.app.Dialog) -> b
    boolean a() -> a
com.yintong.secure.f.h -> com.yintong.secure.f.h:
    boolean a(java.lang.String) -> a
    java.util.Hashtable a() -> a
    boolean c(java.lang.String) -> c
    boolean b(java.lang.String) -> b
com.yintong.secure.f.i -> com.yintong.secure.f.i:
    byte[] a -> a
    long[] c -> c
    long[] d -> d
    byte[] e -> e
    java.lang.String b -> b
    byte[] f -> f
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String b(byte[]) -> b
    void a() -> a
    long a(long,long,long) -> a
    long b(long,long,long) -> b
    long c(long,long,long) -> c
    long d(long,long,long) -> d
    long a(long,long,long,long,long,long,long) -> a
    long b(long,long,long,long,long,long,long) -> b
    long c(long,long,long,long,long,long,long) -> c
    long d(long,long,long,long,long,long,long) -> d
    void a(byte[],int) -> a
    void b() -> b
    void a(byte[],byte[],int,int,int) -> a
    void c(byte[]) -> c
    void a(byte[],long[],int) -> a
    void a(long[],byte[],int) -> a
    long a(byte) -> a
    java.lang.String b(byte) -> b
com.yintong.secure.f.j -> com.yintong.secure.f.j:
    android.util.SparseArray a -> a
    com.yintong.secure.e.d a(int) -> a
    void a(int,com.yintong.secure.e.d) -> a
    void b(int) -> b
    void a() -> a
com.yintong.secure.f.k -> com.yintong.secure.f.k:
    android.telephony.TelephonyManager a -> a
    com.yintong.secure.f.k b -> b
    android.net.wifi.WifiManager c -> c
    com.yintong.secure.f.k a(android.content.Context) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String b(android.content.Context) -> b
com.yintong.secure.f.l -> com.yintong.secure.f.l:
    org.json.JSONObject a(org.json.JSONObject,java.lang.String) -> a
com.yintong.secure.f.m -> com.yintong.secure.f.m:
    int a(org.apache.http.NameValuePair,org.apache.http.NameValuePair) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.yintong.secure.f.n -> com.yintong.secure.f.n:
    java.lang.String a -> a
    int b -> b
    android.content.Context c -> c
    android.os.Handler d -> d
    void onChange(boolean) -> onChange
com.yintong.secure.f.o -> com.yintong.secure.f.o:
    java.lang.String a -> a
    void a(android.content.Context,java.lang.String,com.yintong.secure.e.c,org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,org.json.JSONObject) -> a
    void b(android.content.Context,java.lang.String,org.json.JSONObject) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
    java.lang.String a(com.yintong.secure.e.c,com.yintong.secure.e.b) -> a
    boolean a(com.yintong.secure.e.c,java.util.List) -> a
    boolean a(com.yintong.secure.e.c,com.yintong.secure.e.a) -> a
    boolean a(com.yintong.secure.e.a) -> a
com.yintong.secure.f.p -> com.yintong.secure.f.p:
    boolean a(java.lang.String) -> a
    boolean b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
com.yintong.secure.g.a -> com.yintong.secure.g.a:
    com.yintong.secure.e.a b -> b
    boolean a -> a
    void a(com.yintong.secure.e.f,java.lang.String) -> a
    void a(com.yintong.secure.e.f) -> a
    void a() -> a
    void a(java.lang.String) -> a
    void a(org.json.JSONObject) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.g.b -> com.yintong.secure.g.b:
    void a(org.json.JSONObject) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.g.c -> com.yintong.secure.g.c:
    java.lang.String b -> b
    java.util.Map a -> a
    void a(org.json.JSONObject) -> a
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    void a(com.yintong.secure.e.b,java.lang.String,java.lang.String) -> a
    void a() -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.g.d -> com.yintong.secure.g.d:
    com.yintong.secure.e.d c -> c
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
com.yintong.secure.g.e -> com.yintong.secure.g.e:
    android.content.Context d -> d
    java.lang.String e -> e
    android.app.Dialog a -> a
    void onPreExecute() -> onPreExecute
    void b(org.json.JSONObject) -> b
    void a(org.json.JSONObject) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
com.yintong.secure.g.f -> com.yintong.secure.g.f:
    com.yintong.secure.g.f a -> a
    com.yintong.secure.g.f b -> b
    com.yintong.secure.g.f c -> c
    com.yintong.secure.g.f d -> d
    com.yintong.secure.g.f e -> e
    com.yintong.secure.g.f f -> f
    com.yintong.secure.g.f g -> g
    com.yintong.secure.g.f h -> h
    com.yintong.secure.g.f i -> i
    com.yintong.secure.g.f j -> j
    com.yintong.secure.g.f k -> k
    com.yintong.secure.g.f l -> l
    com.yintong.secure.g.f m -> m
    com.yintong.secure.g.f n -> n
    java.lang.String o -> o
    java.lang.String p -> p
    com.yintong.secure.g.f[] q -> q
    com.yintong.secure.g.f[] values() -> values
    com.yintong.secure.g.f valueOf(java.lang.String) -> valueOf
com.yintong.secure.g.g -> com.yintong.secure.g.g:
    com.yintong.secure.e.e a -> a
    android.content.Context b -> b
    void a(org.json.JSONObject) -> a
    void a(com.yintong.secure.e.g) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    void b(org.json.JSONObject,java.lang.String,java.lang.String) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.g.h -> com.yintong.secure.g.h:
    com.yintong.secure.e.e b -> b
    void a(org.json.JSONObject) -> a
    void a(com.yintong.secure.e.c) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    void b(org.json.JSONObject,java.lang.String,java.lang.String) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.g.i -> com.yintong.secure.g.i:
    void a(org.json.JSONObject) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.g.j -> com.yintong.secure.g.j:
    com.yintong.secure.e.e a -> a
    com.yintong.secure.e.d b -> b
    android.content.Context c -> c
    void a(org.json.JSONObject) -> a
    void c(org.json.JSONObject) -> c
    void a() -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.g.k -> com.yintong.secure.g.k:
    void a(org.json.JSONObject) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.g.l -> com.yintong.secure.g.l:
    void a(org.json.JSONObject) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.g.m -> com.yintong.secure.g.m:
    void a(org.json.JSONObject) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.g.n -> com.yintong.secure.g.n:
    void a(org.json.JSONObject) -> a
    org.json.JSONObject a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.yintong.secure.service.PayService -> com.yintong.secure.service.PayService:
    com.yintong.android.app.IPayService$Stub b -> b
    android.util.SparseArray a -> a
    com.yintong.android.app.IPayService$Stub a() -> a
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    com.yintong.secure.e.e a(java.lang.String) -> a
    com.yintong.secure.e.f a(com.yintong.secure.e.e) -> a
    com.yintong.secure.e.e a(com.yintong.secure.service.PayService,java.lang.String) -> a
    com.yintong.secure.e.f a(com.yintong.secure.service.PayService,com.yintong.secure.e.e) -> a
com.yintong.secure.service.a -> com.yintong.secure.service.a:
    com.yintong.secure.service.PayService a -> a
    java.lang.String pay(java.lang.String) -> pay
    java.lang.String prePay(java.lang.String) -> prePay
    void registerCallback(com.yintong.android.app.IRemoteServiceCallback) -> registerCallback
    java.lang.String test() -> test
    void unregisterCallback(com.yintong.android.app.IRemoteServiceCallback) -> unregisterCallback
com.yintong.secure.widget.Cell -> com.yintong.secure.widget.Cell:
    int row -> row
    int column -> column
    com.yintong.secure.widget.Cell[][] sCells -> sCells
    int getRow() -> getRow
    int getColumn() -> getColumn
    com.yintong.secure.widget.Cell of(int,int) -> of
    void checkRange(int,int) -> checkRange
    java.lang.String toString() -> toString
com.yintong.secure.widget.InputEditText -> com.yintong.secure.widget.InputEditText:
    android.graphics.drawable.Drawable dRight -> dRight
    android.graphics.drawable.Drawable dLeft -> dLeft
    android.graphics.Rect rBounds -> rBounds
    void onCreateContextMenu(android.view.ContextMenu) -> onCreateContextMenu
    void initEditText(android.content.Context) -> initEditText
    void setEditTextDrawable(android.content.Context) -> setEditTextDrawable
    void finalize() -> finalize
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void setRightDrawable(android.graphics.drawable.Drawable) -> setRightDrawable
    void access$0(com.yintong.secure.widget.InputEditText,android.content.Context) -> access$0
com.yintong.secure.widget.InputSmsEditText -> com.yintong.secure.widget.InputSmsEditText:
    com.yintong.secure.widget.VerifyCodeReceiver mReceiver -> mReceiver
    com.yintong.secure.f.n smsContentObserver -> smsContentObserver
    int MSG_OUTBOXCONTENT -> MSG_OUTBOXCONTENT
    android.content.Context mContext -> mContext
    java.lang.String mMoneyOrder -> mMoneyOrder
    java.lang.String mShortCardno -> mShortCardno
    android.os.Handler mHandler -> mHandler
    void constructInputSmsView(android.content.Context) -> constructInputSmsView
    void updateSmsInfo(java.lang.String,java.lang.String) -> updateSmsInfo
    void initSMSReceiver(android.os.Handler) -> initSMSReceiver
    void onAttachedToWindow() -> onAttachedToWindow
    java.lang.String getVerifyCode(java.lang.String) -> getVerifyCode
    void onDetachedFromWindow() -> onDetachedFromWindow
    java.lang.String access$0(com.yintong.secure.widget.InputSmsEditText,java.lang.String) -> access$0
com.yintong.secure.widget.LockIndicator -> com.yintong.secure.widget.LockIndicator:
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPathPaint -> mPathPaint
    java.util.ArrayList mPattern -> mPattern
    boolean[][] mPatternDrawLookup -> mPatternDrawLookup
    float mDiameterFactor -> mDiameterFactor
    long mAnimatingPeriodStart -> mAnimatingPeriodStart
    com.yintong.secure.widget.LockPatternView$DisplayMode mPatternDisplayMode -> mPatternDisplayMode
    boolean mInputEnabled -> mInputEnabled
    boolean mInStealthMode -> mInStealthMode
    boolean mTactileFeedbackEnabled -> mTactileFeedbackEnabled
    boolean mPatternInProgress -> mPatternInProgress
    android.graphics.Path mCurrentPath -> mCurrentPath
    float mInProgressX -> mInProgressX
    float mInProgressY -> mInProgressY
    int MILLIS_PER_CIRCLE_ANIMATING -> MILLIS_PER_CIRCLE_ANIMATING
    float mSquareWidth -> mSquareWidth
    float mSquareHeight -> mSquareHeight
    float screenWidth -> screenWidth
    android.graphics.Bitmap mBitmapBtnDefault -> mBitmapBtnDefault
    android.graphics.Bitmap mBitmapBtnFocused -> mBitmapBtnFocused
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    int circleOffsetX -> circleOffsetX
    int circleOffsetY -> circleOffsetY
    int viewHeight -> viewHeight
    float screenHeight -> screenHeight
    float pathStrokeWidth -> pathStrokeWidth
    android.graphics.Bitmap getBitmapFor(int) -> getBitmapFor
    void setPattern(java.util.List) -> setPattern
    void clearPattern() -> clearPattern
    void resetPattern() -> resetPattern
    void clearPatternDrawLookup() -> clearPatternDrawLookup
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setDisplayMode(com.yintong.secure.widget.LockPatternView$DisplayMode) -> setDisplayMode
    float getCenterXForColumn(int) -> getCenterXForColumn
    float getCenterYForRow(int) -> getCenterYForRow
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCircle(android.graphics.Canvas,int,int,boolean) -> drawCircle
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    java.lang.String patternToString(java.util.List) -> patternToString
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    java.util.List stringToPattern(java.lang.String) -> stringToPattern
com.yintong.secure.widget.LockIndicator$SavedState -> com.yintong.secure.widget.LockIndicator$SavedState:
    java.lang.String a -> a
    java.lang.String a() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.yintong.secure.widget.LockPatternUtils -> com.yintong.secure.widget.LockPatternUtils:
    java.lang.String TAG -> TAG
    java.lang.String LOCK_PATTERN_FILE -> LOCK_PATTERN_FILE
    int FAILED_ATTEMPTS_BEFORE_TIMEOUT -> FAILED_ATTEMPTS_BEFORE_TIMEOUT
    int FAILED_ATTEMPTS_BEFORE_RESET -> FAILED_ATTEMPTS_BEFORE_RESET
    long FAILED_ATTEMPT_TIMEOUT_MS -> FAILED_ATTEMPT_TIMEOUT_MS
    long FAILED_ATTEMPT_COUNTDOWN_INTERVAL_MS -> FAILED_ATTEMPT_COUNTDOWN_INTERVAL_MS
    int MIN_LOCK_PATTERN_SIZE -> MIN_LOCK_PATTERN_SIZE
    int MIN_PATTERN_REGISTER_FAIL -> MIN_PATTERN_REGISTER_FAIL
    java.lang.String LOCKOUT_PERMANENT_KEY -> LOCKOUT_PERMANENT_KEY
    java.lang.String LOCKOUT_ATTEMPT_DEADLINE -> LOCKOUT_ATTEMPT_DEADLINE
    java.lang.String PATTERN_EVER_CHOSEN -> PATTERN_EVER_CHOSEN
    android.content.ContentResolver mContentResolver -> mContentResolver
    java.lang.String sLockPatternFilename -> sLockPatternFilename
    boolean checkPattern(java.util.List) -> checkPattern
    boolean savedPatternExists() -> savedPatternExists
    boolean isPatternEverChosen() -> isPatternEverChosen
    void saveLockPattern(java.util.List) -> saveLockPattern
    java.util.List stringToPattern(java.lang.String) -> stringToPattern
    java.lang.String patternToString(java.util.List) -> patternToString
    java.lang.String lockPwd(java.util.List) -> lockPwd
    byte[] patternToHash(java.util.List) -> patternToHash
    boolean isLockPatternEnabled() -> isLockPatternEnabled
    void setLockPatternEnabled(boolean) -> setLockPatternEnabled
    boolean isVisiblePatternEnabled() -> isVisiblePatternEnabled
    void setVisiblePatternEnabled(boolean) -> setVisiblePatternEnabled
    boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    void setTactileFeedbackEnabled(boolean) -> setTactileFeedbackEnabled
    long setLockoutAttemptDeadline() -> setLockoutAttemptDeadline
    long getLockoutAttemptDeadline() -> getLockoutAttemptDeadline
    boolean isPermanentlyLocked() -> isPermanentlyLocked
    void setPermanentlyLocked(boolean) -> setPermanentlyLocked
    java.lang.String getNextAlarm() -> getNextAlarm
    boolean getBoolean(java.lang.String) -> getBoolean
    void setBoolean(java.lang.String,boolean) -> setBoolean
    long getLong(java.lang.String,long) -> getLong
    void setLong(java.lang.String,long) -> setLong
com.yintong.secure.widget.LockPatternView -> com.yintong.secure.widget.LockPatternView:
    boolean PROFILE_DRAWING -> PROFILE_DRAWING
    boolean mDrawingProfilingStarted -> mDrawingProfilingStarted
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPathPaint -> mPathPaint
    int STATUS_BAR_HEIGHT -> STATUS_BAR_HEIGHT
    int MILLIS_PER_CIRCLE_ANIMATING -> MILLIS_PER_CIRCLE_ANIMATING
    com.yintong.secure.widget.LockPatternView$OnPatternListener mOnPatternListener -> mOnPatternListener
    java.util.ArrayList mPattern -> mPattern
    boolean[][] mPatternDrawLookup -> mPatternDrawLookup
    float mInProgressX -> mInProgressX
    float mInProgressY -> mInProgressY
    long mAnimatingPeriodStart -> mAnimatingPeriodStart
    com.yintong.secure.widget.LockPatternView$DisplayMode mPatternDisplayMode -> mPatternDisplayMode
    boolean mInputEnabled -> mInputEnabled
    boolean mInStealthMode -> mInStealthMode
    boolean mTactileFeedbackEnabled -> mTactileFeedbackEnabled
    boolean mPatternInProgress -> mPatternInProgress
    float mDiameterFactor -> mDiameterFactor
    float mHitFactor -> mHitFactor
    float mSquareWidth -> mSquareWidth
    float mSquareHeight -> mSquareHeight
    android.graphics.Bitmap mBitmapBtnDefault -> mBitmapBtnDefault
    android.graphics.Bitmap mBitmapBtnTouched -> mBitmapBtnTouched
    android.graphics.Path mCurrentPath -> mCurrentPath
    android.graphics.Rect mInvalidate -> mInvalidate
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    float pathStrokeWidth -> pathStrokeWidth
    android.graphics.Bitmap getBitmapFor(int) -> getBitmapFor
    boolean isInStealthMode() -> isInStealthMode
    boolean isTactileFeedbackEnabled() -> isTactileFeedbackEnabled
    void setInStealthMode(boolean) -> setInStealthMode
    void setTactileFeedbackEnabled(boolean) -> setTactileFeedbackEnabled
    void setOnPatternListener(com.yintong.secure.widget.LockPatternView$OnPatternListener) -> setOnPatternListener
    void setPattern(com.yintong.secure.widget.LockPatternView$DisplayMode,java.util.List) -> setPattern
    void setDisplayMode(com.yintong.secure.widget.LockPatternView$DisplayMode) -> setDisplayMode
    void clearPattern() -> clearPattern
    void resetPattern() -> resetPattern
    void clearPatternDrawLookup() -> clearPatternDrawLookup
    void disableInput() -> disableInput
    void enableInput() -> enableInput
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onMeasure(int,int) -> onMeasure
    com.yintong.secure.widget.Cell detectAndAddHit(float,float) -> detectAndAddHit
    void addCellToPattern(com.yintong.secure.widget.Cell) -> addCellToPattern
    com.yintong.secure.widget.Cell checkForNewHit(float,float) -> checkForNewHit
    int getRowHit(float) -> getRowHit
    int getColumnHit(float) -> getColumnHit
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    float getCenterXForColumn(int) -> getCenterXForColumn
    float getCenterYForRow(int) -> getCenterYForRow
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawCircle(android.graphics.Canvas,int,int,boolean) -> drawCircle
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.yintong.secure.widget.LockPatternView$DisplayMode -> com.yintong.secure.widget.LockPatternView$DisplayMode:
    com.yintong.secure.widget.LockPatternView$DisplayMode Correct -> Correct
    com.yintong.secure.widget.LockPatternView$DisplayMode Animate -> Animate
    com.yintong.secure.widget.LockPatternView$DisplayMode Wrong -> Wrong
    com.yintong.secure.widget.LockPatternView$DisplayMode[] ENUM$VALUES -> ENUM$VALUES
    com.yintong.secure.widget.LockPatternView$DisplayMode[] values() -> values
    com.yintong.secure.widget.LockPatternView$DisplayMode valueOf(java.lang.String) -> valueOf
com.yintong.secure.widget.LockPatternView$OnPatternListener -> com.yintong.secure.widget.LockPatternView$OnPatternListener:
    void onPatternStart() -> onPatternStart
    void onPatternCleared() -> onPatternCleared
    void onPatternCellAdded(java.util.List) -> onPatternCellAdded
    void onPatternDetected(java.util.List) -> onPatternDetected
com.yintong.secure.widget.LockPatternView$SavedState -> com.yintong.secure.widget.LockPatternView$SavedState:
    java.lang.String a -> a
    int b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String a() -> a
    int b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.yintong.secure.widget.Progress -> com.yintong.secure.widget.Progress:
    android.app.Dialog show(android.content.Context,java.lang.CharSequence) -> show
com.yintong.secure.widget.ProgressImageView -> com.yintong.secure.widget.ProgressImageView:
    android.view.animation.Animation mAnimation -> mAnimation
    float h -> h
    float w -> w
    android.graphics.RectF mRectF -> mRectF
    android.graphics.Rect mRect -> mRect
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
com.yintong.secure.widget.ProgressImageView$LoadingInterpolator -> com.yintong.secure.widget.ProgressImageView$LoadingInterpolator:
    float interpolation -> interpolation
    float getInterpolation() -> getInterpolation
    float getInterpolation(float) -> getInterpolation
com.yintong.secure.widget.SendSmsTimeCount -> com.yintong.secure.widget.SendSmsTimeCount:
    com.yintong.secure.widget.e mSmsCountDownTimer -> mSmsCountDownTimer
    android.util.SparseArray counts -> counts
    com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick mOnTimeTick -> mOnTimeTick
    com.yintong.secure.widget.SendSmsTimeCount getTimeCount(int) -> getTimeCount
    void clear() -> clear
    boolean isFinish() -> isFinish
    void start() -> start
    void finish() -> finish
    void setTimeTickListener(com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick) -> setTimeTickListener
com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick -> com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick:
    void onTick(long) -> onTick
    void onFinish() -> onFinish
com.yintong.secure.widget.VerifyCodeReceiver -> com.yintong.secure.widget.VerifyCodeReceiver:
    java.lang.String TAG -> TAG
    java.lang.String SMS_RECEIVED -> SMS_RECEIVED
    android.content.Context mContext -> mContext
    com.yintong.secure.widget.VerifyCodeReceiver$VerifyCodeInterceptListener mInterceptListener -> mInterceptListener
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void register(com.yintong.secure.widget.VerifyCodeReceiver$VerifyCodeInterceptListener) -> register
    void unRegister() -> unRegister
    android.telephony.SmsMessage[] getSmsMessage(android.content.Intent) -> getSmsMessage
    android.telephony.SmsMessage[] getSmsMessageByReflect(android.content.Intent) -> getSmsMessageByReflect
    android.telephony.SmsMessage createFromPduGsm(byte[]) -> createFromPduGsm
    android.telephony.SmsMessage createFromPduCdma(byte[]) -> createFromPduCdma
    android.telephony.SmsMessage createFromPdu(byte[],java.lang.String) -> createFromPdu
com.yintong.secure.widget.VerifyCodeReceiver$VerifyCodeInterceptListener -> com.yintong.secure.widget.VerifyCodeReceiver$VerifyCodeInterceptListener:
    void onVerifyCodeIntercept(java.lang.String) -> onVerifyCodeIntercept
    java.lang.String doIntercept(java.lang.String) -> doIntercept
com.yintong.secure.widget.a -> com.yintong.secure.widget.a:
    com.yintong.secure.widget.InputEditText a -> a
    android.content.Context b -> b
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.yintong.secure.widget.b -> com.yintong.secure.widget.b:
    com.yintong.secure.widget.InputSmsEditText a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.yintong.secure.widget.c -> com.yintong.secure.widget.c:
    com.yintong.secure.widget.InputSmsEditText a -> a
    void onVerifyCodeIntercept(java.lang.String) -> onVerifyCodeIntercept
    java.lang.String doIntercept(java.lang.String) -> doIntercept
com.yintong.secure.widget.d -> com.yintong.secure.widget.d:
    com.yintong.secure.widget.ProgressImageView a -> a
com.yintong.secure.widget.e -> com.yintong.secure.widget.e:
    com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick a -> a
    boolean b -> b
    void a(com.yintong.secure.widget.SendSmsTimeCount$OnTimeTick) -> a
    void a() -> a
    void onTick(long) -> onTick
    void onFinish() -> onFinish
    boolean a(com.yintong.secure.widget.e) -> a
de.measite.smack.Sasl -> a.a.a.a:
    java.util.Enumeration getSaslClientFactories() -> a
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> a
de.measite.smack.SaslClientFactory -> a.a.a.b:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
m.framework.network.ByteArrayPart -> m.framework.network.ByteArrayPart:
    byte[] buffer -> buffer
    m.framework.network.ByteArrayPart append(byte[]) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.FilePart -> m.framework.network.FilePart:
    java.io.File file -> file
    void setFile(java.io.File) -> setFile
    void setFile(java.lang.String) -> setFile
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.HTTPPart -> m.framework.network.HTTPPart:
    java.io.InputStream getInputStream() -> getInputStream
    long length() -> length
    org.apache.http.entity.InputStreamEntity getInputStreamEntity() -> getInputStreamEntity
m.framework.network.KVPair -> m.framework.network.KVPair:
    java.lang.String name -> name
    java.lang.Object value -> value
    java.lang.String toString() -> toString
m.framework.network.MultiPart -> m.framework.network.MultiPart:
    java.util.ArrayList parts -> parts
    m.framework.network.MultiPart append(m.framework.network.HTTPPart) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.network.MultiPartInputStream -> m.framework.network.MultiPartInputStream:
    java.util.ArrayList isList -> isList
    int curIs -> curIs
    void addInputStream(java.io.InputStream) -> addInputStream
    boolean isEmpty() -> isEmpty
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
m.framework.network.NetworkHelper -> m.framework.network.NetworkHelper:
    int connectionTimeout -> connectionTimeout
    int readTimout -> readTimout
    java.lang.String httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList) -> httpGet
    void httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList,m.framework.network.ResponseCallback) -> httpGet
    void download(java.lang.String,java.io.File) -> download
    void download(java.lang.String,m.framework.network.ResponseCallback) -> download
    java.lang.String httpPost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList) -> httpPost
    void httpPost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList,m.framework.network.ResponseCallback) -> httpPost
    org.apache.http.client.methods.HttpPost filePost(java.lang.String,java.util.ArrayList,m.framework.network.KVPair) -> filePost
    org.apache.http.client.methods.HttpPost textPost(java.lang.String,java.util.ArrayList) -> textPost
    void rawPost(java.lang.String,java.util.ArrayList,m.framework.network.HTTPPart,m.framework.network.ResponseCallback) -> rawPost
    java.lang.String httpPut(java.lang.String,java.util.ArrayList,m.framework.network.KVPair,java.util.ArrayList) -> httpPut
    java.lang.String kvPairsToUrl(java.util.ArrayList) -> kvPairsToUrl
    org.apache.http.client.HttpClient getSSLHttpClient() -> getSSLHttpClient
m.framework.network.ResponseCallback -> m.framework.network.ResponseCallback:
    void onResponse(java.io.InputStream) -> onResponse
m.framework.network.SSLSocketFactoryEx -> m.framework.network.SSLSocketFactoryEx:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
m.framework.network.SSLSocketFactoryEx$1 -> m.framework.network.SSLSocketFactoryEx$1:
    m.framework.network.SSLSocketFactoryEx this$0 -> this$0
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
m.framework.network.StringPart -> m.framework.network.StringPart:
    java.lang.StringBuilder sb -> sb
    m.framework.network.StringPart append(java.lang.String) -> append
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String toString() -> toString
    long length() -> length
m.framework.ui.widget.asyncview.AsyncImageView -> m.framework.ui.widget.asyncview.AsyncImageView:
    int DEFAULT_TRANSPARENT -> DEFAULT_TRANSPARENT
    android.graphics.Bitmap DEFAULT_TRANSPARENT_BITMAP -> DEFAULT_TRANSPARENT_BITMAP
    int MSG_IMG_GOT -> MSG_IMG_GOT
    java.util.Random rnd -> rnd
    java.lang.String cacheDir -> cacheDir
    java.lang.String url -> url
    int defaultRes -> defaultRes
    m.framework.ui.widget.asyncview.OnImageGotListener onImageGotListener -> onImageGotListener
    void init(android.content.Context) -> init
    void setOnImageGotListener(m.framework.ui.widget.asyncview.OnImageGotListener) -> setOnImageGotListener
    java.lang.String getUrl() -> getUrl
    void execute(java.lang.String) -> execute
    void execute(java.lang.String,int) -> execute
    android.graphics.Bitmap getDefaultBitmap(int) -> getDefaultBitmap
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.ui.widget.asyncview.AsyncView -> m.framework.ui.widget.asyncview.AsyncView:
    void execute(java.lang.String,int) -> execute
    java.lang.String getUrl() -> getUrl
m.framework.ui.widget.asyncview.BitmapCallback -> m.framework.ui.widget.asyncview.BitmapCallback:
    void onImageGot(java.lang.String,android.graphics.Bitmap) -> onImageGot
m.framework.ui.widget.asyncview.BitmapProcessor -> m.framework.ui.widget.asyncview.BitmapProcessor:
    int CAPACITY -> CAPACITY
    int MAX_REQ_TIME -> MAX_REQ_TIME
    int MAX_SIZE -> MAX_SIZE
    int OVERFLOW_SIZE -> OVERFLOW_SIZE
    m.framework.ui.widget.asyncview.BitmapProcessor instance -> instance
    java.util.WeakHashMap cacheMap -> cacheMap
    boolean work -> work
    java.util.Vector reqList -> reqList
    java.io.File cacheDir -> cacheDir
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] workerList -> workerList
    java.util.Vector netReqTPS -> netReqTPS
    void prepare(java.lang.String) -> prepare
    void start() -> start
    void stop() -> stop
    void process(java.lang.String,m.framework.ui.widget.asyncview.BitmapCallback) -> process
    android.graphics.Bitmap getBitmapFromCache(java.lang.String) -> getBitmapFromCache
    boolean access$0(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$0
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread[] access$1(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$1
    java.util.Vector access$2(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$2
    java.util.WeakHashMap access$3(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$3
    java.io.File access$4(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$4
    java.util.Vector access$5(m.framework.ui.widget.asyncview.BitmapProcessor) -> access$5
m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq -> m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq:
    java.lang.String url -> url
    m.framework.ui.widget.asyncview.BitmapCallback callback -> callback
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread worker -> worker
    long reqTime -> reqTime
    android.graphics.Bitmap image -> image
    void throwComplete(android.graphics.Bitmap) -> throwComplete
    java.lang.String toString() -> toString
    java.lang.String access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> access$0
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$1
    void access$2(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,android.graphics.Bitmap) -> access$2
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,java.lang.String) -> access$3
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq,m.framework.ui.widget.asyncview.BitmapCallback) -> access$4
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread -> m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> processor
    void scan() -> scan
    m.framework.ui.widget.asyncview.BitmapProcessor access$0(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> access$0
    void access$1(m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread) -> access$1
m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread$1 -> m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread$1:
    int counter -> counter
    m.framework.ui.widget.asyncview.BitmapProcessor$ManagerThread this$1 -> this$1
    void run() -> run
m.framework.ui.widget.asyncview.BitmapProcessor$PatchInputStream -> m.framework.ui.widget.asyncview.BitmapProcessor$PatchInputStream:
    java.io.InputStream in -> in
    long skip(long) -> skip
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread -> m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread:
    m.framework.ui.widget.asyncview.BitmapProcessor processor -> processor
    long lastReport -> lastReport
    boolean localType -> localType
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq curReq -> curReq
    void run() -> run
    void doLocalTask() -> doLocalTask
    void doNetworkTask() -> doNetworkTask
    void doTask(m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> doTask
    void saveFile(android.graphics.Bitmap,java.io.File) -> saveFile
    void interrupt() -> interrupt
    void access$0(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,boolean) -> access$0
    long access$1(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$1
    boolean access$2(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$2
    void access$3(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq) -> access$3
    void access$4(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread,android.graphics.Bitmap,java.io.File) -> access$4
    m.framework.ui.widget.asyncview.BitmapProcessor access$5(m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread) -> access$5
m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread$1 -> m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread$1:
    m.framework.ui.widget.asyncview.BitmapProcessor$WorkerThread this$1 -> this$1
    java.io.File val$file -> val$file
    m.framework.ui.widget.asyncview.BitmapProcessor$ImageReq val$req -> val$req
    void onResponse(java.io.InputStream) -> onResponse
m.framework.ui.widget.asyncview.OnImageGotListener -> m.framework.ui.widget.asyncview.OnImageGotListener:
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> onImageGot
m.framework.ui.widget.asyncview.SimpleOnImageGotListener -> m.framework.ui.widget.asyncview.SimpleOnImageGotListener:
    m.framework.ui.widget.asyncview.SimpleOnImageGotListener INSTANCE -> INSTANCE
    android.graphics.Bitmap onImageGot(m.framework.ui.widget.asyncview.AsyncView,android.graphics.Bitmap,java.lang.String) -> onImageGot
m.framework.ui.widget.pulltorefresh.GroupListView -> m.framework.ui.widget.pulltorefresh.GroupListView:
    void setAdapter(m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter) -> setAdapter
m.framework.ui.widget.pulltorefresh.GroupListView$1 -> m.framework.ui.widget.pulltorefresh.GroupListView$1:
    m.framework.ui.widget.pulltorefresh.GroupListView this$0 -> this$0
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter val$adapter -> val$adapter
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int[] getItemIndex(int) -> getItemIndex
    int getCount() -> getCount
m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter -> m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter:
    android.widget.BaseAdapter adapter -> adapter
    void setInnerAdapter(android.widget.BaseAdapter) -> setInnerAdapter
    int getGroupCount() -> getGroupCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter,android.widget.BaseAdapter) -> access$0
m.framework.ui.widget.pulltorefresh.GroupListView$ItemHolder -> m.framework.ui.widget.pulltorefresh.GroupListView$ItemHolder:
    android.widget.LinearLayout llItem -> llItem
    android.view.View title -> title
    android.view.View child -> child
m.framework.ui.widget.pulltorefresh.ListInnerAdapter -> m.framework.ui.widget.pulltorefresh.ListInnerAdapter:
    m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter adapter -> adapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
m.framework.ui.widget.pulltorefresh.OnListStopScrollListener -> m.framework.ui.widget.pulltorefresh.OnListStopScrollListener:
    void onListStopScrolling(int,int) -> onListStopScrolling
m.framework.ui.widget.pulltorefresh.OnScrollListener -> m.framework.ui.widget.pulltorefresh.OnScrollListener:
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper -> m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper:
    android.content.Context context -> context
    m.framework.ui.widget.pulltorefresh.PullToRefreshView parent -> parent
    android.content.Context getContext() -> getContext
    m.framework.ui.widget.pulltorefresh.PullToRefreshView getParent() -> getParent
    void notifyDataSetChanged() -> notifyDataSetChanged
    android.view.View getHeaderView() -> getHeaderView
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    void onPullDown(int) -> onPullDown
    void onRequest() -> onRequest
    void onReversed() -> onReversed
m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshBaseListAdapter:
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableGridView gridView -> gridView
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.GridView getGridView() -> getGridView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableGridView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshGridAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView listView -> listView
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    int getGroupCount() -> getGroupCount
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getChild(int,int) -> getChild
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    m.framework.ui.widget.pulltorefresh.GroupListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.GroupListView$GroupListAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$2 -> m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter$2:
    m.framework.ui.widget.pulltorefresh.PullToRefreshGroupListAdapter this$0 -> this$0
    android.view.View getGroupTitleView(int,android.view.View,android.view.ViewGroup) -> getGroupTitleView
    java.lang.String getGroupTitle(int) -> getGroupTitle
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    android.view.View getChildView(int,int,android.view.View,android.view.ViewGroup) -> getChildView
    java.lang.Object getChild(int,int) -> getChild
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter -> m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter:
    m.framework.ui.widget.pulltorefresh.ScrollableListView listView -> listView
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter adapter -> adapter
    boolean fling -> fling
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener osListener -> osListener
    m.framework.ui.widget.pulltorefresh.Scrollable getBodyView() -> getBodyView
    boolean isPullReady() -> isPullReady
    android.widget.ListView getListView() -> getListView
    boolean isFling() -> isFling
    void onScroll(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int) -> onScroll
    void notifyDataSetChanged() -> notifyDataSetChanged
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter,boolean) -> access$0
    m.framework.ui.widget.pulltorefresh.OnListStopScrollListener access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$1
    m.framework.ui.widget.pulltorefresh.ListInnerAdapter access$2(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$2
    m.framework.ui.widget.pulltorefresh.ScrollableListView access$3(m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter) -> access$3
m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter$1:
    int firstVisibleItem -> firstVisibleItem
    int visibleItemCount -> visibleItemCount
    m.framework.ui.widget.pulltorefresh.PullToRefreshListAdapter this$0 -> this$0
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
m.framework.ui.widget.pulltorefresh.PullToRefreshView -> m.framework.ui.widget.pulltorefresh.PullToRefreshView:
    long MIN_REF_TIME -> MIN_REF_TIME
    m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper adapter -> adapter
    android.view.View headerView -> headerView
    android.view.View bodyView -> bodyView
    int headerHeight -> headerHeight
    int top -> top
    float downY -> downY
    boolean requesting -> requesting
    boolean pullingLock -> pullingLock
    java.lang.Runnable stopAct -> stopAct
    long refreshTime -> refreshTime
    void init() -> init
    void setAdapter(m.framework.ui.widget.pulltorefresh.PullToRefreshAdatper) -> setAdapter
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    android.view.MotionEvent getCancelEvent(android.view.MotionEvent) -> getCancelEvent
    void performRequest() -> performRequest
    void stopRequest() -> stopRequest
    void performPulling(boolean) -> performPulling
    void reversePulling() -> reversePulling
    void stopPulling() -> stopPulling
    void lockPulling() -> lockPulling
    void releaseLock() -> releaseLock
    boolean canPull() -> canPull
    void access$0(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> access$0
    void access$1(m.framework.ui.widget.pulltorefresh.PullToRefreshView) -> access$1
m.framework.ui.widget.pulltorefresh.PullToRefreshView$1 -> m.framework.ui.widget.pulltorefresh.PullToRefreshView$1:
    m.framework.ui.widget.pulltorefresh.PullToRefreshView this$0 -> this$0
    void run() -> run
m.framework.ui.widget.pulltorefresh.Scrollable -> m.framework.ui.widget.pulltorefresh.Scrollable:
m.framework.ui.widget.pulltorefresh.ScrollableGridView -> m.framework.ui.widget.pulltorefresh.ScrollableGridView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    boolean isReadyToPull() -> isReadyToPull
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableGridView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableGridView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableGridView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableGridView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.ScrollableGroupListView -> m.framework.ui.widget.pulltorefresh.ScrollableGroupListView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableGroupListView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableGroupListView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableGroupListView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableGroupListView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.pulltorefresh.ScrollableListView -> m.framework.ui.widget.pulltorefresh.ScrollableListView:
    m.framework.ui.widget.pulltorefresh.OnScrollListener osListener -> osListener
    boolean pullEnable -> pullEnable
    void init(android.content.Context) -> init
    boolean isReadyToPull() -> isReadyToPull
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void access$0(m.framework.ui.widget.pulltorefresh.ScrollableListView,boolean) -> access$0
m.framework.ui.widget.pulltorefresh.ScrollableListView$1 -> m.framework.ui.widget.pulltorefresh.ScrollableListView$1:
    m.framework.ui.widget.pulltorefresh.ScrollableListView this$0 -> this$0
    void onScrollChanged(m.framework.ui.widget.pulltorefresh.Scrollable,int,int,int,int) -> onScrollChanged
m.framework.ui.widget.slidingmenu.BodyContainer -> m.framework.ui.widget.slidingmenu.BodyContainer:
    int MIN_FLING_VEL -> MIN_FLING_VEL
    int MENU_COVER_ALPHA -> MENU_COVER_ALPHA
    float downX -> downX
    m.framework.ui.widget.slidingmenu.SlidingMenu menu -> menu
    int maxVelocity -> maxVelocity
    android.view.VelocityTracker tracker -> tracker
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onScrollChanged(int,int,int,int) -> onScrollChanged
m.framework.ui.widget.slidingmenu.MenuAdapter -> m.framework.ui.widget.slidingmenu.MenuAdapter:
    java.util.ArrayList menus -> menus
    m.framework.ui.widget.slidingmenu.SlidingMenuGroup findGroupById(int) -> findGroupById
    void setGroup(int,java.lang.String) -> setGroup
    void setGroup(m.framework.ui.widget.slidingmenu.SlidingMenuGroup) -> setGroup
    void setItem(int,m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> setItem
    android.view.View getMenuTitle() -> getMenuTitle
    int getGroupCount() -> getGroupCount
    m.framework.ui.widget.slidingmenu.SlidingMenuGroup getGroup(int) -> getGroup
    java.lang.String getTitle(int) -> getTitle
    android.view.View getGroupView(int,android.view.ViewGroup) -> getGroupView
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getItem(int,int) -> getItem
    android.view.View getItemView(m.framework.ui.widget.slidingmenu.SlidingMenuItem,android.view.ViewGroup) -> getItemView
    void notifyDataSetChanged(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> notifyDataSetChanged
    boolean onItemTrigger(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> onItemTrigger
    void onMenuSwitch(boolean) -> onMenuSwitch
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getMenuItem(int,int) -> getMenuItem
m.framework.ui.widget.slidingmenu.MenuConfig -> m.framework.ui.widget.slidingmenu.MenuConfig:
    int itemDownBack -> itemDownBack
    int itemDownRelease -> itemDownRelease
    float menuWeight -> menuWeight
    int menuBackground -> menuBackground
    int paddingLeft -> paddingLeft
    int paddingTop -> paddingTop
    int paddingRight -> paddingRight
    int paddingBottom -> paddingBottom
    int titleHeight -> titleHeight
    int bodyBackground -> bodyBackground
    int rightShadow -> rightShadow
    int menuSep -> menuSep
m.framework.ui.widget.slidingmenu.SlidingMenu -> m.framework.ui.widget.slidingmenu.SlidingMenu:
    m.framework.ui.widget.slidingmenu.MenuConfig config -> config
    java.util.HashMap itemToView -> itemToView
    android.view.View$OnClickListener ocListener -> ocListener
    android.view.View$OnTouchListener otListener -> otListener
    m.framework.ui.widget.slidingmenu.MenuAdapter adapter -> adapter
    int screenWidth -> screenWidth
    int menuWidth -> menuWidth
    int showMenuWidth -> showMenuWidth
    boolean menuShown -> menuShown
    android.widget.FrameLayout flMenu -> flMenu
    android.widget.LinearLayout llMenu -> llMenu
    android.view.View vCover -> vCover
    m.framework.ui.widget.slidingmenu.BodyContainer svBody -> svBody
    android.widget.LinearLayout llBody -> llBody
    android.view.View curBody -> curBody
    void init(android.content.Context) -> init
    void initMenu(android.content.Context) -> initMenu
    void initBody(android.content.Context) -> initBody
    void setAdapter(m.framework.ui.widget.slidingmenu.MenuAdapter) -> setAdapter
    void refresh() -> refresh
    void reInit(android.content.Context) -> reInit
    void reInitMenu(android.content.Context) -> reInitMenu
    void reInitBody(android.content.Context) -> reInitBody
    void setBodyView(android.view.View) -> setBodyView
    android.view.View getBodyView() -> getBodyView
    void invalidateMenu() -> invalidateMenu
    android.view.View getSepView(android.content.Context) -> getSepView
    void switchMenu() -> switchMenu
    void showMenu() -> showMenu
    void hideMenu() -> hideMenu
    boolean isMenuShown() -> isMenuShown
    int getMenuWidth() -> getMenuWidth
    int getShowMenuWidth() -> getShowMenuWidth
    m.framework.ui.widget.slidingmenu.MenuConfig getMenuConfig() -> getMenuConfig
    android.view.View getMenuCover() -> getMenuCover
    void setMenuItemBackground(int,int) -> setMenuItemBackground
    void setMenuWeight(float) -> setMenuWeight
    void setMenuBackground(int) -> setMenuBackground
    void setMenuPadding(int,int,int,int) -> setMenuPadding
    void setTtleHeight(int) -> setTtleHeight
    void setShadowRes(int) -> setShadowRes
    void setBodyBackground(int) -> setBodyBackground
    void setMenuDivider(int) -> setMenuDivider
    void disableOverScrollMode(android.view.View) -> disableOverScrollMode
    android.view.View itemToView(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> itemToView
    void triggerItem(int,int) -> triggerItem
    void triggerItem(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> triggerItem
    m.framework.ui.widget.slidingmenu.MenuAdapter access$0(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$0
    m.framework.ui.widget.slidingmenu.MenuConfig access$1(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$1
    boolean access$2(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$2
    m.framework.ui.widget.slidingmenu.BodyContainer access$3(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$3
    int access$4(m.framework.ui.widget.slidingmenu.SlidingMenu) -> access$4
m.framework.ui.widget.slidingmenu.SlidingMenu$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onClick(android.view.View) -> onClick
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$1) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$1$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$1$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$1 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenu$2 -> m.framework.ui.widget.slidingmenu.SlidingMenu$2:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
m.framework.ui.widget.slidingmenu.SlidingMenu$3 -> m.framework.ui.widget.slidingmenu.SlidingMenu$3:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$3) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$3$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$3$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$3 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenu$4 -> m.framework.ui.widget.slidingmenu.SlidingMenu$4:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
m.framework.ui.widget.slidingmenu.SlidingMenu$5 -> m.framework.ui.widget.slidingmenu.SlidingMenu$5:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
m.framework.ui.widget.slidingmenu.SlidingMenu$6 -> m.framework.ui.widget.slidingmenu.SlidingMenu$6:
    m.framework.ui.widget.slidingmenu.SlidingMenu this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
    m.framework.ui.widget.slidingmenu.SlidingMenu access$0(m.framework.ui.widget.slidingmenu.SlidingMenu$6) -> access$0
m.framework.ui.widget.slidingmenu.SlidingMenu$6$1 -> m.framework.ui.widget.slidingmenu.SlidingMenu$6$1:
    m.framework.ui.widget.slidingmenu.SlidingMenu$6 this$1 -> this$1
    void run() -> run
m.framework.ui.widget.slidingmenu.SlidingMenuGroup -> m.framework.ui.widget.slidingmenu.SlidingMenuGroup:
    int id -> id
    java.lang.String text -> text
    java.util.ArrayList items -> items
    void setItem(m.framework.ui.widget.slidingmenu.SlidingMenuItem) -> setItem
    m.framework.ui.widget.slidingmenu.SlidingMenuItem findItemById(int) -> findItemById
    int getCount() -> getCount
    m.framework.ui.widget.slidingmenu.SlidingMenuItem getItem(int) -> getItem
m.framework.ui.widget.slidingmenu.SlidingMenuItem -> m.framework.ui.widget.slidingmenu.SlidingMenuItem:
    int group -> group
    int id -> id
    java.lang.Object body -> body
m.framework.ui.widget.viewpager.ViewPagerAdapter -> m.framework.ui.widget.viewpager.ViewPagerAdapter:
    int getCount() -> getCount
    void onScreenChange(int,int) -> onScreenChange
    android.view.View getView(int,android.view.ViewGroup) -> getView
m.framework.ui.widget.viewpager.ViewPagerClassic -> m.framework.ui.widget.viewpager.ViewPagerClassic:
    int SNAP_VELOCITY -> SNAP_VELOCITY
    int currentScreen -> currentScreen
    android.widget.Scroller scroller -> scroller
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float lastMotionX -> lastMotionX
    float lastMotionY -> lastMotionY
    int TOUCH_STATE_REST -> TOUCH_STATE_REST
    int TOUCH_STATE_SCROLLING -> TOUCH_STATE_SCROLLING
    int touchState -> touchState
    int touchSlop -> touchSlop
    int mMaximumVelocity -> mMaximumVelocity
    m.framework.ui.widget.viewpager.ViewPagerAdapter adapter -> adapter
    void init(android.content.Context) -> init
    int getCurrentScreen() -> getCurrentScreen
    void setCurrentScreen(int) -> setCurrentScreen
    void computeScroll() -> computeScroll
    void setAdapter(m.framework.ui.widget.viewpager.ViewPagerAdapter) -> setAdapter
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void handleInterceptMove(android.view.MotionEvent) -> handleInterceptMove
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleScrollMove(android.view.MotionEvent) -> handleScrollMove
    void scrollToScreen(int) -> scrollToScreen
    void scrollToScreen(int,boolean) -> scrollToScreen
    void scrollLeft() -> scrollLeft
    void scrollRight() -> scrollRight
m.framework.ui.widget.viewpager.ViewPagerClassic$1 -> m.framework.ui.widget.viewpager.ViewPagerClassic$1:
    float[] values -> values
    m.framework.ui.widget.viewpager.ViewPagerClassic this$0 -> this$0
    float getInterpolation(float) -> getInterpolation
m.framework.utils.Data -> m.framework.utils.Data:
    java.lang.String CHAT_SET -> CHAT_SET
    m.framework.utils.Hashon hashon -> hashon
    byte[] SHA1(java.lang.String) -> SHA1
    byte[] AES128Encode(java.lang.String,java.lang.String) -> AES128Encode
    byte[] AES128Encode(byte[],java.lang.String) -> AES128Encode
    java.lang.String AES128Decode(java.lang.String,byte[]) -> AES128Decode
    byte[] AES128Decode(byte[],byte[]) -> AES128Decode
    java.lang.String byteToHex(byte[]) -> byteToHex
    java.util.HashMap parseJson(java.lang.String) -> parseJson
    java.lang.String parseJson(java.util.HashMap) -> parseJson
    java.lang.String base62(long) -> base62
    java.lang.String MD5(java.lang.String) -> MD5
    byte[] rawMD5(java.lang.String) -> rawMD5
    java.lang.String urlEncode(java.lang.String,java.lang.String) -> urlEncode
m.framework.utils.DeviceHelper -> m.framework.utils.DeviceHelper:
    android.content.Context context -> context
    m.framework.utils.DeviceHelper deviceHelper -> deviceHelper
    m.framework.utils.DeviceHelper getInstance(android.content.Context) -> getInstance
    boolean isRooted() -> isRooted
    java.lang.String getMacAddress() -> getMacAddress
    java.lang.String getModel() -> getModel
    java.lang.String getFactory() -> getFactory
    java.lang.String getDeviceId() -> getDeviceId
    java.lang.String getDeviceData() -> getDeviceData
    java.lang.String Base64AES(java.lang.String,java.lang.String) -> Base64AES
    java.lang.String getOSVersion() -> getOSVersion
    java.lang.String getScreenSize() -> getScreenSize
    java.lang.String getCarrier() -> getCarrier
    java.lang.String getNetworkType() -> getNetworkType
    int getPlatformCode() -> getPlatformCode
    boolean isFastMobileNetwork() -> isFastMobileNetwork
    org.json.JSONArray getRunningApp() -> getRunningApp
    java.lang.String getRunningAppStr() -> getRunningAppStr
    java.lang.String getDeviceKey() -> getDeviceKey
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getAppName() -> getAppName
    int getAppVersion() -> getAppVersion
    java.lang.String getAppVersionName() -> getAppVersionName
    java.util.ArrayList getInstalledApp(boolean) -> getInstalledApp
    boolean isSystemApp(android.content.pm.PackageInfo) -> isSystemApp
    java.lang.String getNetworkOperator() -> getNetworkOperator
    java.lang.String getTopTaskPackageName() -> getTopTaskPackageName
    boolean getSdcardState() -> getSdcardState
    java.lang.String getSdcardPath() -> getSdcardPath
m.framework.utils.HEX -> m.framework.utils.HEX:
    char[] DIGITS -> DIGITS
    java.lang.String toHex(byte[]) -> toHex
    byte[] toByte(java.lang.String) -> toByte
    java.lang.String encodeHexString(byte[]) -> encodeHexString
    byte[] decodeHexString(java.lang.String) -> decodeHexString
    byte[] decodeHex(char[]) -> decodeHex
    int toDigit(char,int) -> toDigit
    char[] encodeHex(byte[]) -> encodeHex
    byte[] decode(byte[]) -> decode
    byte[] decode(java.lang.Object) -> decode
    byte[] encode(byte[]) -> encode
    char[] encode(java.lang.Object) -> encode
m.framework.utils.Hashon -> m.framework.utils.Hashon:
    java.util.HashMap fromJson(java.lang.String) -> fromJson
    java.util.HashMap fromJson(org.json.JSONObject) -> fromJson
    java.util.ArrayList fromJson(org.json.JSONArray) -> fromJson
    java.lang.String fromHashMap(java.util.HashMap) -> fromHashMap
    org.json.JSONObject getJSONObject(java.util.HashMap) -> getJSONObject
    boolean isBasicArray(java.lang.Object) -> isBasicArray
    java.util.ArrayList arrayToList(java.lang.Object) -> arrayToList
    org.json.JSONArray getJSONArray(java.util.ArrayList) -> getJSONArray
    java.lang.String format(java.lang.String) -> format
    java.lang.String format(java.lang.String,java.util.HashMap) -> format
    java.lang.String format(java.lang.String,java.util.ArrayList) -> format
m.framework.utils.UIHandler -> m.framework.utils.UIHandler:
    android.os.Handler handler -> handler
    void prepare() -> prepare
    void handleMessage(android.os.Message) -> handleMessage
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> getShellMessage
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> getShellMessage
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> sendMessage
    boolean sendMessageDelayed(android.os.Message,long,android.os.Handler$Callback) -> sendMessageDelayed
    boolean sendMessageAtTime(android.os.Message,long,android.os.Handler$Callback) -> sendMessageAtTime
    boolean sendMessageAtFrontOfQueue(android.os.Message,android.os.Handler$Callback) -> sendMessageAtFrontOfQueue
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> sendEmptyMessage
    boolean sendEmptyMessageAtTime(int,long,android.os.Handler$Callback) -> sendEmptyMessageAtTime
    boolean sendEmptyMessageDelayed(int,long,android.os.Handler$Callback) -> sendEmptyMessageDelayed
    void access$0(android.os.Message) -> access$0
m.framework.utils.UIHandler$1 -> m.framework.utils.UIHandler$1:
    boolean handleMessage(android.os.Message) -> handleMessage
m.framework.utils.Utils -> m.framework.utils.Utils:
    float density -> density
    int dipToPx(android.content.Context,int) -> dipToPx
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream) -> getBitmap
    android.graphics.Bitmap getBitmap(java.lang.String,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.File,int) -> getBitmap
    android.graphics.Bitmap getBitmap(java.io.InputStream,int) -> getBitmap
    java.lang.String getFileMime(java.lang.String) -> getFileMime
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> getCachePath
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
org.apache.commons.httpclient.AutoCloseInputStream -> org.apache.commons.httpclient.AutoCloseInputStream:
    boolean streamOpen -> streamOpen
    boolean selfClosed -> selfClosed
    org.apache.commons.httpclient.ResponseConsumedWatcher watcher -> watcher
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void close() -> close
    void checkClose(int) -> checkClose
    boolean isReadAllowed() -> isReadAllowed
    void notifyWatcher() -> notifyWatcher
org.apache.commons.httpclient.ChunkedInputStream -> org.apache.commons.httpclient.ChunkedInputStream:
    java.io.InputStream in -> in
    int chunkSize -> chunkSize
    int pos -> pos
    boolean bof -> bof
    boolean eof -> eof
    boolean closed -> closed
    org.apache.commons.httpclient.HttpMethod method -> method
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$ChunkedInputStream -> class$org$apache$commons$httpclient$ChunkedInputStream
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void readCRLF() -> readCRLF
    void nextChunk() -> nextChunk
    int getChunkSizeFromInputStream(java.io.InputStream) -> getChunkSizeFromInputStream
    void parseTrailerHeaders() -> parseTrailerHeaders
    void close() -> close
    void exhaustInputStream(java.io.InputStream) -> exhaustInputStream
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.ChunkedOutputStream -> org.apache.commons.httpclient.ChunkedOutputStream:
    byte[] CRLF -> CRLF
    byte[] ENDCHUNK -> ENDCHUNK
    byte[] ZERO -> ZERO
    java.io.OutputStream stream -> stream
    byte[] cache -> cache
    int cachePosition -> cachePosition
    boolean wroteLastChunk -> wroteLastChunk
    void flushCache() -> flushCache
    void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    void writeClosingChunk() -> writeClosingChunk
    void finish() -> finish
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.commons.httpclient.CircularRedirectException -> org.apache.commons.httpclient.CircularRedirectException:
org.apache.commons.httpclient.ConnectMethod -> org.apache.commons.httpclient.ConnectMethod:
    java.lang.String NAME -> NAME
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$ConnectMethod -> class$org$apache$commons$httpclient$ConnectMethod
    java.lang.String getName() -> getName
    void addCookieRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addCookieRequestHeader
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addRequestHeaders
    int execute(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> execute
    void writeRequestLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestLine
    boolean shouldCloseConnection(org.apache.commons.httpclient.HttpConnection) -> shouldCloseConnection
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.ConnectTimeoutException -> org.apache.commons.httpclient.ConnectTimeoutException:
org.apache.commons.httpclient.ConnectionPoolTimeoutException -> org.apache.commons.httpclient.ConnectionPoolTimeoutException:
org.apache.commons.httpclient.ContentLengthInputStream -> org.apache.commons.httpclient.ContentLengthInputStream:
    long contentLength -> contentLength
    long pos -> pos
    boolean closed -> closed
    java.io.InputStream wrappedStream -> wrappedStream
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    long skip(long) -> skip
org.apache.commons.httpclient.Cookie -> org.apache.commons.httpclient.Cookie:
    java.lang.String cookieComment -> cookieComment
    java.lang.String cookieDomain -> cookieDomain
    java.util.Date cookieExpiryDate -> cookieExpiryDate
    java.lang.String cookiePath -> cookiePath
    boolean isSecure -> isSecure
    boolean hasPathAttribute -> hasPathAttribute
    boolean hasDomainAttribute -> hasDomainAttribute
    int cookieVersion -> cookieVersion
    java.text.RuleBasedCollator STRING_COLLATOR -> STRING_COLLATOR
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$Cookie -> class$org$apache$commons$httpclient$Cookie
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.util.Date getExpiryDate() -> getExpiryDate
    void setExpiryDate(java.util.Date) -> setExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    boolean getSecure() -> getSecure
    void setSecure(boolean) -> setSecure
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    boolean isExpired() -> isExpired
    boolean isExpired(java.util.Date) -> isExpired
    void setPathAttributeSpecified(boolean) -> setPathAttributeSpecified
    boolean isPathAttributeSpecified() -> isPathAttributeSpecified
    void setDomainAttributeSpecified(boolean) -> setDomainAttributeSpecified
    boolean isDomainAttributeSpecified() -> isDomainAttributeSpecified
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toExternalForm() -> toExternalForm
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.String toString() -> toString
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.Credentials -> org.apache.commons.httpclient.Credentials:
org.apache.commons.httpclient.DefaultHttpMethodRetryHandler -> org.apache.commons.httpclient.DefaultHttpMethodRetryHandler:
    java.lang.Class SSL_HANDSHAKE_EXCEPTION -> SSL_HANDSHAKE_EXCEPTION
    int retryCount -> retryCount
    boolean requestSentRetryEnabled -> requestSentRetryEnabled
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,java.io.IOException,int) -> retryMethod
    boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    int getRetryCount() -> getRetryCount
org.apache.commons.httpclient.DefaultMethodRetryHandler -> org.apache.commons.httpclient.DefaultMethodRetryHandler:
    int retryCount -> retryCount
    boolean requestSentRetryEnabled -> requestSentRetryEnabled
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpRecoverableException,int,boolean) -> retryMethod
    boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    int getRetryCount() -> getRetryCount
    void setRequestSentRetryEnabled(boolean) -> setRequestSentRetryEnabled
    void setRetryCount(int) -> setRetryCount
org.apache.commons.httpclient.Header -> org.apache.commons.httpclient.Header:
    boolean isAutogenerated -> isAutogenerated
    java.lang.String toExternalForm() -> toExternalForm
    java.lang.String toString() -> toString
    org.apache.commons.httpclient.HeaderElement[] getValues() -> getValues
    org.apache.commons.httpclient.HeaderElement[] getElements() -> getElements
    boolean isAutogenerated() -> isAutogenerated
org.apache.commons.httpclient.HeaderElement -> org.apache.commons.httpclient.HeaderElement:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.NameValuePair[] parameters -> parameters
    java.lang.Class class$org$apache$commons$httpclient$HeaderElement -> class$org$apache$commons$httpclient$HeaderElement
    org.apache.commons.httpclient.NameValuePair[] getParameters() -> getParameters
    org.apache.commons.httpclient.HeaderElement[] parseElements(char[]) -> parseElements
    org.apache.commons.httpclient.HeaderElement[] parseElements(java.lang.String) -> parseElements
    org.apache.commons.httpclient.HeaderElement[] parse(java.lang.String) -> parse
    org.apache.commons.httpclient.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HeaderGroup -> org.apache.commons.httpclient.HeaderGroup:
    java.util.List headers -> headers
    void clear() -> clear
    void addHeader(org.apache.commons.httpclient.Header) -> addHeader
    void removeHeader(org.apache.commons.httpclient.Header) -> removeHeader
    void setHeaders(org.apache.commons.httpclient.Header[]) -> setHeaders
    org.apache.commons.httpclient.Header getCondensedHeader(java.lang.String) -> getCondensedHeader
    org.apache.commons.httpclient.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.commons.httpclient.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.commons.httpclient.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.commons.httpclient.Header[] getAllHeaders() -> getAllHeaders
    boolean containsHeader(java.lang.String) -> containsHeader
    java.util.Iterator getIterator() -> getIterator
org.apache.commons.httpclient.HostConfiguration -> org.apache.commons.httpclient.HostConfiguration:
    org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION -> ANY_HOST_CONFIGURATION
    org.apache.commons.httpclient.HttpHost host -> host
    org.apache.commons.httpclient.ProxyHost proxyHost -> proxyHost
    java.net.InetAddress localAddress -> localAddress
    org.apache.commons.httpclient.params.HostParams params -> params
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    boolean hostEquals(org.apache.commons.httpclient.HttpConnection) -> hostEquals
    boolean proxyEquals(org.apache.commons.httpclient.HttpConnection) -> proxyEquals
    boolean isHostSet() -> isHostSet
    void setHost(org.apache.commons.httpclient.HttpHost) -> setHost
    void setHost(java.lang.String,int,java.lang.String) -> setHost
    void setHost(java.lang.String,java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol) -> setHost
    void setHost(java.lang.String,int,org.apache.commons.httpclient.protocol.Protocol) -> setHost
    void setHost(java.lang.String,int) -> setHost
    void setHost(java.lang.String) -> setHost
    void setHost(org.apache.commons.httpclient.URI) -> setHost
    java.lang.String getHostURL() -> getHostURL
    java.lang.String getHost() -> getHost
    java.lang.String getVirtualHost() -> getVirtualHost
    int getPort() -> getPort
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> getProtocol
    boolean isProxySet() -> isProxySet
    void setProxyHost(org.apache.commons.httpclient.ProxyHost) -> setProxyHost
    void setProxy(java.lang.String,int) -> setProxy
    java.lang.String getProxyHost() -> getProxyHost
    int getProxyPort() -> getProxyPort
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    org.apache.commons.httpclient.params.HostParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HostParams) -> setParams
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.HttpClient -> org.apache.commons.httpclient.HttpClient:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager -> httpConnectionManager
    org.apache.commons.httpclient.HttpState state -> state
    org.apache.commons.httpclient.params.HttpClientParams params -> params
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> hostConfiguration
    java.lang.Class class$org$apache$commons$httpclient$HttpClient -> class$org$apache$commons$httpclient$HttpClient
    org.apache.commons.httpclient.HttpState getState() -> getState
    void setState(org.apache.commons.httpclient.HttpState) -> setState
    void setStrictMode(boolean) -> setStrictMode
    boolean isStrictMode() -> isStrictMode
    void setTimeout(int) -> setTimeout
    void setHttpConnectionFactoryTimeout(long) -> setHttpConnectionFactoryTimeout
    void setConnectionTimeout(int) -> setConnectionTimeout
    int executeMethod(org.apache.commons.httpclient.HttpMethod) -> executeMethod
    int executeMethod(org.apache.commons.httpclient.HostConfiguration,org.apache.commons.httpclient.HttpMethod) -> executeMethod
    int executeMethod(org.apache.commons.httpclient.HostConfiguration,org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpState) -> executeMethod
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> getHostConfiguration
    void setHostConfiguration(org.apache.commons.httpclient.HostConfiguration) -> setHostConfiguration
    org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager() -> getHttpConnectionManager
    void setHttpConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> setHttpConnectionManager
    org.apache.commons.httpclient.params.HttpClientParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpClientParams) -> setParams
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpClientError -> org.apache.commons.httpclient.HttpClientError:
org.apache.commons.httpclient.HttpConnection -> org.apache.commons.httpclient.HttpConnection:
    byte[] CRLF -> CRLF
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String hostName -> hostName
    int portNumber -> portNumber
    java.lang.String proxyHostName -> proxyHostName
    int proxyPortNumber -> proxyPortNumber
    java.net.Socket socket -> socket
    java.io.InputStream inputStream -> inputStream
    java.io.OutputStream outputStream -> outputStream
    java.io.InputStream lastResponseInputStream -> lastResponseInputStream
    boolean isOpen -> isOpen
    org.apache.commons.httpclient.protocol.Protocol protocolInUse -> protocolInUse
    org.apache.commons.httpclient.params.HttpConnectionParams params -> params
    boolean locked -> locked
    boolean usingSecureSocket -> usingSecureSocket
    boolean tunnelEstablished -> tunnelEstablished
    org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager -> httpConnectionManager
    java.net.InetAddress localAddress -> localAddress
    java.lang.Class class$org$apache$commons$httpclient$HttpConnection -> class$org$apache$commons$httpclient$HttpConnection
    java.net.Socket getSocket() -> getSocket
    java.lang.String getHost() -> getHost
    void setHost(java.lang.String) -> setHost
    java.lang.String getVirtualHost() -> getVirtualHost
    void setVirtualHost(java.lang.String) -> setVirtualHost
    int getPort() -> getPort
    void setPort(int) -> setPort
    java.lang.String getProxyHost() -> getProxyHost
    void setProxyHost(java.lang.String) -> setProxyHost
    int getProxyPort() -> getProxyPort
    void setProxyPort(int) -> setProxyPort
    boolean isSecure() -> isSecure
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> getProtocol
    void setProtocol(org.apache.commons.httpclient.protocol.Protocol) -> setProtocol
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    boolean isOpen() -> isOpen
    boolean closeIfStale() -> closeIfStale
    boolean isStaleCheckingEnabled() -> isStaleCheckingEnabled
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
    boolean isStale() -> isStale
    boolean isProxied() -> isProxied
    void setLastResponseInputStream(java.io.InputStream) -> setLastResponseInputStream
    java.io.InputStream getLastResponseInputStream() -> getLastResponseInputStream
    org.apache.commons.httpclient.params.HttpConnectionParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionParams) -> setParams
    void setSoTimeout(int) -> setSoTimeout
    void setSocketTimeout(int) -> setSocketTimeout
    int getSoTimeout() -> getSoTimeout
    void setConnectionTimeout(int) -> setConnectionTimeout
    void open() -> open
    void tunnelCreated() -> tunnelCreated
    boolean isTransparent() -> isTransparent
    void flushRequestOutputStream() -> flushRequestOutputStream
    java.io.OutputStream getRequestOutputStream() -> getRequestOutputStream
    java.io.InputStream getResponseInputStream() -> getResponseInputStream
    boolean isResponseAvailable() -> isResponseAvailable
    boolean isResponseAvailable(int) -> isResponseAvailable
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeLine(byte[]) -> writeLine
    void writeLine() -> writeLine
    void print(java.lang.String) -> print
    void print(java.lang.String,java.lang.String) -> print
    void printLine(java.lang.String) -> printLine
    void printLine(java.lang.String,java.lang.String) -> printLine
    void printLine() -> printLine
    java.lang.String readLine() -> readLine
    java.lang.String readLine(java.lang.String) -> readLine
    void shutdownOutput() -> shutdownOutput
    void close() -> close
    org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager() -> getHttpConnectionManager
    void setHttpConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> setHttpConnectionManager
    void releaseConnection() -> releaseConnection
    boolean isLocked() -> isLocked
    void setLocked(boolean) -> setLocked
    void closeSocketAndStreams() -> closeSocketAndStreams
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    int getSendBufferSize() -> getSendBufferSize
    void setSendBufferSize(int) -> setSendBufferSize
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpConnectionManager -> org.apache.commons.httpclient.HttpConnectionManager:
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration) -> getConnection
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration,long) -> getConnection
    org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration,long) -> getConnectionWithTimeout
    void releaseConnection(org.apache.commons.httpclient.HttpConnection) -> releaseConnection
    void closeIdleConnections(long) -> closeIdleConnections
    org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams) -> setParams
org.apache.commons.httpclient.HttpConstants -> org.apache.commons.httpclient.HttpConstants:
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String DEFAULT_CONTENT_CHARSET -> DEFAULT_CONTENT_CHARSET
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$HttpConstants -> class$org$apache$commons$httpclient$HttpConstants
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.String getString(byte[],int,int) -> getString
    java.lang.String getString(byte[]) -> getString
    byte[] getContentBytes(java.lang.String,java.lang.String) -> getContentBytes
    java.lang.String getContentString(byte[],int,int,java.lang.String) -> getContentString
    java.lang.String getContentString(byte[],java.lang.String) -> getContentString
    byte[] getContentBytes(java.lang.String) -> getContentBytes
    java.lang.String getContentString(byte[],int,int) -> getContentString
    java.lang.String getContentString(byte[]) -> getContentString
    byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    java.lang.String getAsciiString(byte[]) -> getAsciiString
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpException -> org.apache.commons.httpclient.HttpException:
    java.lang.String reason -> reason
    int reasonCode -> reasonCode
    java.lang.Throwable cause -> cause
    java.lang.Class class$java$lang$Throwable -> class$java$lang$Throwable
    java.lang.Throwable getCause() -> getCause
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void setReason(java.lang.String) -> setReason
    java.lang.String getReason() -> getReason
    void setReasonCode(int) -> setReasonCode
    int getReasonCode() -> getReasonCode
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpHost -> org.apache.commons.httpclient.HttpHost:
    java.lang.String hostname -> hostname
    int port -> port
    org.apache.commons.httpclient.protocol.Protocol protocol -> protocol
    java.lang.Object clone() -> clone
    java.lang.String getHostName() -> getHostName
    int getPort() -> getPort
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> getProtocol
    java.lang.String toURI() -> toURI
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.HttpMethod -> org.apache.commons.httpclient.HttpMethod:
    java.lang.String getName() -> getName
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> getHostConfiguration
    void setPath(java.lang.String) -> setPath
    java.lang.String getPath() -> getPath
    org.apache.commons.httpclient.URI getURI() -> getURI
    void setURI(org.apache.commons.httpclient.URI) -> setURI
    void setStrictMode(boolean) -> setStrictMode
    boolean isStrictMode() -> isStrictMode
    void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    void setRequestHeader(org.apache.commons.httpclient.Header) -> setRequestHeader
    void addRequestHeader(java.lang.String,java.lang.String) -> addRequestHeader
    void addRequestHeader(org.apache.commons.httpclient.Header) -> addRequestHeader
    org.apache.commons.httpclient.Header getRequestHeader(java.lang.String) -> getRequestHeader
    void removeRequestHeader(java.lang.String) -> removeRequestHeader
    void removeRequestHeader(org.apache.commons.httpclient.Header) -> removeRequestHeader
    boolean getFollowRedirects() -> getFollowRedirects
    void setFollowRedirects(boolean) -> setFollowRedirects
    void setQueryString(java.lang.String) -> setQueryString
    void setQueryString(org.apache.commons.httpclient.NameValuePair[]) -> setQueryString
    java.lang.String getQueryString() -> getQueryString
    org.apache.commons.httpclient.Header[] getRequestHeaders() -> getRequestHeaders
    org.apache.commons.httpclient.Header[] getRequestHeaders(java.lang.String) -> getRequestHeaders
    boolean validate() -> validate
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusText() -> getStatusText
    org.apache.commons.httpclient.Header[] getResponseHeaders() -> getResponseHeaders
    org.apache.commons.httpclient.Header getResponseHeader(java.lang.String) -> getResponseHeader
    org.apache.commons.httpclient.Header[] getResponseHeaders(java.lang.String) -> getResponseHeaders
    org.apache.commons.httpclient.Header[] getResponseFooters() -> getResponseFooters
    org.apache.commons.httpclient.Header getResponseFooter(java.lang.String) -> getResponseFooter
    byte[] getResponseBody() -> getResponseBody
    java.lang.String getResponseBodyAsString() -> getResponseBodyAsString
    java.io.InputStream getResponseBodyAsStream() -> getResponseBodyAsStream
    boolean hasBeenUsed() -> hasBeenUsed
    int execute(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> execute
    void abort() -> abort
    void recycle() -> recycle
    void releaseConnection() -> releaseConnection
    void addResponseFooter(org.apache.commons.httpclient.Header) -> addResponseFooter
    org.apache.commons.httpclient.StatusLine getStatusLine() -> getStatusLine
    boolean getDoAuthentication() -> getDoAuthentication
    void setDoAuthentication(boolean) -> setDoAuthentication
    org.apache.commons.httpclient.params.HttpMethodParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpMethodParams) -> setParams
    org.apache.commons.httpclient.auth.AuthState getHostAuthState() -> getHostAuthState
    org.apache.commons.httpclient.auth.AuthState getProxyAuthState() -> getProxyAuthState
    boolean isRequestSent() -> isRequestSent
org.apache.commons.httpclient.HttpMethodBase -> org.apache.commons.httpclient.HttpMethodBase:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.HeaderGroup requestHeaders -> requestHeaders
    org.apache.commons.httpclient.StatusLine statusLine -> statusLine
    org.apache.commons.httpclient.HeaderGroup responseHeaders -> responseHeaders
    org.apache.commons.httpclient.HeaderGroup responseTrailerHeaders -> responseTrailerHeaders
    java.lang.String path -> path
    java.lang.String queryString -> queryString
    java.io.InputStream responseStream -> responseStream
    org.apache.commons.httpclient.HttpConnection responseConnection -> responseConnection
    byte[] responseBody -> responseBody
    boolean followRedirects -> followRedirects
    boolean doAuthentication -> doAuthentication
    org.apache.commons.httpclient.params.HttpMethodParams params -> params
    org.apache.commons.httpclient.auth.AuthState hostAuthState -> hostAuthState
    org.apache.commons.httpclient.auth.AuthState proxyAuthState -> proxyAuthState
    boolean used -> used
    int recoverableExceptionCount -> recoverableExceptionCount
    org.apache.commons.httpclient.HttpHost httphost -> httphost
    org.apache.commons.httpclient.MethodRetryHandler methodRetryHandler -> methodRetryHandler
    boolean connectionCloseForced -> connectionCloseForced
    int RESPONSE_WAIT_TIME_MS -> RESPONSE_WAIT_TIME_MS
    org.apache.commons.httpclient.HttpVersion effectiveVersion -> effectiveVersion
    boolean aborted -> aborted
    boolean requestSent -> requestSent
    org.apache.commons.httpclient.cookie.CookieSpec cookiespec -> cookiespec
    int DEFAULT_INITIAL_BUFFER_SIZE -> DEFAULT_INITIAL_BUFFER_SIZE
    java.lang.Class class$org$apache$commons$httpclient$HttpMethodBase -> class$org$apache$commons$httpclient$HttpMethodBase
    java.lang.String getName() -> getName
    org.apache.commons.httpclient.URI getURI() -> getURI
    void setURI(org.apache.commons.httpclient.URI) -> setURI
    void setFollowRedirects(boolean) -> setFollowRedirects
    boolean getFollowRedirects() -> getFollowRedirects
    void setHttp11(boolean) -> setHttp11
    boolean getDoAuthentication() -> getDoAuthentication
    void setDoAuthentication(boolean) -> setDoAuthentication
    boolean isHttp11() -> isHttp11
    void setPath(java.lang.String) -> setPath
    void addRequestHeader(org.apache.commons.httpclient.Header) -> addRequestHeader
    void addResponseFooter(org.apache.commons.httpclient.Header) -> addResponseFooter
    java.lang.String getPath() -> getPath
    void setQueryString(java.lang.String) -> setQueryString
    void setQueryString(org.apache.commons.httpclient.NameValuePair[]) -> setQueryString
    java.lang.String getQueryString() -> getQueryString
    void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    void setRequestHeader(org.apache.commons.httpclient.Header) -> setRequestHeader
    org.apache.commons.httpclient.Header getRequestHeader(java.lang.String) -> getRequestHeader
    org.apache.commons.httpclient.Header[] getRequestHeaders() -> getRequestHeaders
    org.apache.commons.httpclient.Header[] getRequestHeaders(java.lang.String) -> getRequestHeaders
    org.apache.commons.httpclient.HeaderGroup getRequestHeaderGroup() -> getRequestHeaderGroup
    org.apache.commons.httpclient.HeaderGroup getResponseTrailerHeaderGroup() -> getResponseTrailerHeaderGroup
    org.apache.commons.httpclient.HeaderGroup getResponseHeaderGroup() -> getResponseHeaderGroup
    org.apache.commons.httpclient.Header[] getResponseHeaders(java.lang.String) -> getResponseHeaders
    int getStatusCode() -> getStatusCode
    org.apache.commons.httpclient.StatusLine getStatusLine() -> getStatusLine
    boolean responseAvailable() -> responseAvailable
    org.apache.commons.httpclient.Header[] getResponseHeaders() -> getResponseHeaders
    org.apache.commons.httpclient.Header getResponseHeader(java.lang.String) -> getResponseHeader
    long getResponseContentLength() -> getResponseContentLength
    byte[] getResponseBody() -> getResponseBody
    java.io.InputStream getResponseBodyAsStream() -> getResponseBodyAsStream
    java.lang.String getResponseBodyAsString() -> getResponseBodyAsString
    org.apache.commons.httpclient.Header[] getResponseFooters() -> getResponseFooters
    org.apache.commons.httpclient.Header getResponseFooter(java.lang.String) -> getResponseFooter
    void setResponseStream(java.io.InputStream) -> setResponseStream
    java.io.InputStream getResponseStream() -> getResponseStream
    java.lang.String getStatusText() -> getStatusText
    void setStrictMode(boolean) -> setStrictMode
    boolean isStrictMode() -> isStrictMode
    void addRequestHeader(java.lang.String,java.lang.String) -> addRequestHeader
    boolean isConnectionCloseForced() -> isConnectionCloseForced
    void setConnectionCloseForced(boolean) -> setConnectionCloseForced
    boolean shouldCloseConnection(org.apache.commons.httpclient.HttpConnection) -> shouldCloseConnection
    void checkExecuteConditions(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> checkExecuteConditions
    int execute(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> execute
    void abort() -> abort
    boolean hasBeenUsed() -> hasBeenUsed
    void recycle() -> recycle
    void releaseConnection() -> releaseConnection
    void removeRequestHeader(java.lang.String) -> removeRequestHeader
    void removeRequestHeader(org.apache.commons.httpclient.Header) -> removeRequestHeader
    boolean validate() -> validate
    org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(org.apache.commons.httpclient.HttpState) -> getCookieSpec
    void addCookieRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addCookieRequestHeader
    void addHostRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addHostRequestHeader
    void addProxyConnectionHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addProxyConnectionHeader
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addRequestHeaders
    void addUserAgentRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addUserAgentRequestHeader
    void checkNotUsed() -> checkNotUsed
    void checkUsed() -> checkUsed
    java.lang.String generateRequestLine(org.apache.commons.httpclient.HttpConnection,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateRequestLine
    void processResponseBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> processResponseBody
    void processResponseHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> processResponseHeaders
    void processStatusLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> processStatusLine
    void readResponse(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> readResponse
    void readResponseBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> readResponseBody
    java.io.InputStream readResponseBody(org.apache.commons.httpclient.HttpConnection) -> readResponseBody
    void readResponseHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> readResponseHeaders
    void readStatusLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> readStatusLine
    void writeRequest(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequest
    boolean writeRequestBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestBody
    void writeRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestHeaders
    void writeRequestLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestLine
    java.lang.String getRequestLine(org.apache.commons.httpclient.HttpConnection) -> getRequestLine
    org.apache.commons.httpclient.params.HttpMethodParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpMethodParams) -> setParams
    org.apache.commons.httpclient.HttpVersion getEffectiveVersion() -> getEffectiveVersion
    boolean canResponseHaveBody(int) -> canResponseHaveBody
    java.lang.String getProxyAuthenticationRealm() -> getProxyAuthenticationRealm
    java.lang.String getAuthenticationRealm() -> getAuthenticationRealm
    java.lang.String getContentCharSet(org.apache.commons.httpclient.Header) -> getContentCharSet
    java.lang.String getRequestCharSet() -> getRequestCharSet
    java.lang.String getResponseCharSet() -> getResponseCharSet
    int getRecoverableExceptionCount() -> getRecoverableExceptionCount
    void responseBodyConsumed() -> responseBodyConsumed
    void ensureConnectionRelease() -> ensureConnectionRelease
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> getHostConfiguration
    void setHostConfiguration(org.apache.commons.httpclient.HostConfiguration) -> setHostConfiguration
    org.apache.commons.httpclient.MethodRetryHandler getMethodRetryHandler() -> getMethodRetryHandler
    void setMethodRetryHandler(org.apache.commons.httpclient.MethodRetryHandler) -> setMethodRetryHandler
    void fakeResponse(org.apache.commons.httpclient.StatusLine,org.apache.commons.httpclient.HeaderGroup,java.io.InputStream) -> fakeResponse
    org.apache.commons.httpclient.auth.AuthState getHostAuthState() -> getHostAuthState
    org.apache.commons.httpclient.auth.AuthState getProxyAuthState() -> getProxyAuthState
    boolean isAborted() -> isAborted
    boolean isRequestSent() -> isRequestSent
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpMethodBase$1 -> org.apache.commons.httpclient.HttpMethodBase$1:
    org.apache.commons.httpclient.HttpMethodBase this$0 -> this$0
    void responseConsumed() -> responseConsumed
org.apache.commons.httpclient.HttpMethodDirector -> org.apache.commons.httpclient.HttpMethodDirector:
    java.lang.String WWW_AUTH_CHALLENGE -> WWW_AUTH_CHALLENGE
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
    java.lang.String PROXY_AUTH_CHALLENGE -> PROXY_AUTH_CHALLENGE
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.ConnectMethod connectMethod -> connectMethod
    org.apache.commons.httpclient.HttpState state -> state
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> hostConfiguration
    org.apache.commons.httpclient.HttpConnectionManager connectionManager -> connectionManager
    org.apache.commons.httpclient.params.HttpClientParams params -> params
    org.apache.commons.httpclient.HttpConnection conn -> conn
    boolean releaseConnection -> releaseConnection
    org.apache.commons.httpclient.auth.AuthChallengeProcessor authProcessor -> authProcessor
    java.util.Set redirectLocations -> redirectLocations
    java.lang.Class class$org$apache$commons$httpclient$HttpMethodDirector -> class$org$apache$commons$httpclient$HttpMethodDirector
    void executeMethod(org.apache.commons.httpclient.HttpMethod) -> executeMethod
    void authenticate(org.apache.commons.httpclient.HttpMethod) -> authenticate
    boolean cleanAuthHeaders(org.apache.commons.httpclient.HttpMethod,java.lang.String) -> cleanAuthHeaders
    void authenticateHost(org.apache.commons.httpclient.HttpMethod) -> authenticateHost
    void authenticateProxy(org.apache.commons.httpclient.HttpMethod) -> authenticateProxy
    void applyConnectionParams(org.apache.commons.httpclient.HttpMethod) -> applyConnectionParams
    void executeWithRetry(org.apache.commons.httpclient.HttpMethod) -> executeWithRetry
    boolean executeConnect() -> executeConnect
    void fakeResponse(org.apache.commons.httpclient.HttpMethod) -> fakeResponse
    boolean processRedirectResponse(org.apache.commons.httpclient.HttpMethod) -> processRedirectResponse
    boolean processAuthenticationResponse(org.apache.commons.httpclient.HttpMethod) -> processAuthenticationResponse
    boolean processWWWAuthChallenge(org.apache.commons.httpclient.HttpMethod) -> processWWWAuthChallenge
    boolean processProxyAuthChallenge(org.apache.commons.httpclient.HttpMethod) -> processProxyAuthChallenge
    boolean isRedirectNeeded(org.apache.commons.httpclient.HttpMethod) -> isRedirectNeeded
    boolean isAuthenticationNeeded(org.apache.commons.httpclient.HttpMethod) -> isAuthenticationNeeded
    org.apache.commons.httpclient.Credentials promptForCredentials(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.params.HttpParams,org.apache.commons.httpclient.auth.AuthScope) -> promptForCredentials
    org.apache.commons.httpclient.Credentials promptForProxyCredentials(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.params.HttpParams,org.apache.commons.httpclient.auth.AuthScope) -> promptForProxyCredentials
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> getHostConfiguration
    org.apache.commons.httpclient.HttpState getState() -> getState
    org.apache.commons.httpclient.HttpConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.commons.httpclient.params.HttpParams getParams() -> getParams
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpMethodRetryHandler -> org.apache.commons.httpclient.HttpMethodRetryHandler:
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,java.io.IOException,int) -> retryMethod
org.apache.commons.httpclient.HttpParser -> org.apache.commons.httpclient.HttpParser:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$HttpParser -> class$org$apache$commons$httpclient$HttpParser
    byte[] readRawLine(java.io.InputStream) -> readRawLine
    java.lang.String readLine(java.io.InputStream,java.lang.String) -> readLine
    java.lang.String readLine(java.io.InputStream) -> readLine
    org.apache.commons.httpclient.Header[] parseHeaders(java.io.InputStream,java.lang.String) -> parseHeaders
    org.apache.commons.httpclient.Header[] parseHeaders(java.io.InputStream) -> parseHeaders
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpRecoverableException -> org.apache.commons.httpclient.HttpRecoverableException:
org.apache.commons.httpclient.HttpState -> org.apache.commons.httpclient.HttpState:
    java.util.HashMap credMap -> credMap
    java.util.HashMap proxyCred -> proxyCred
    java.util.ArrayList cookies -> cookies
    boolean preemptive -> preemptive
    int cookiePolicy -> cookiePolicy
    java.lang.String PREEMPTIVE_PROPERTY -> PREEMPTIVE_PROPERTY
    java.lang.String PREEMPTIVE_DEFAULT -> PREEMPTIVE_DEFAULT
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$HttpState -> class$org$apache$commons$httpclient$HttpState
    void addCookie(org.apache.commons.httpclient.Cookie) -> addCookie
    void addCookies(org.apache.commons.httpclient.Cookie[]) -> addCookies
    org.apache.commons.httpclient.Cookie[] getCookies() -> getCookies
    org.apache.commons.httpclient.Cookie[] getCookies(java.lang.String,int,java.lang.String,boolean) -> getCookies
    boolean purgeExpiredCookies() -> purgeExpiredCookies
    boolean purgeExpiredCookies(java.util.Date) -> purgeExpiredCookies
    int getCookiePolicy() -> getCookiePolicy
    void setAuthenticationPreemptive(boolean) -> setAuthenticationPreemptive
    boolean isAuthenticationPreemptive() -> isAuthenticationPreemptive
    void setCookiePolicy(int) -> setCookiePolicy
    void setCredentials(java.lang.String,java.lang.String,org.apache.commons.httpclient.Credentials) -> setCredentials
    void setCredentials(org.apache.commons.httpclient.auth.AuthScope,org.apache.commons.httpclient.Credentials) -> setCredentials
    org.apache.commons.httpclient.Credentials matchCredentials(java.util.HashMap,org.apache.commons.httpclient.auth.AuthScope) -> matchCredentials
    org.apache.commons.httpclient.Credentials getCredentials(java.lang.String,java.lang.String) -> getCredentials
    org.apache.commons.httpclient.Credentials getCredentials(org.apache.commons.httpclient.auth.AuthScope) -> getCredentials
    void setProxyCredentials(java.lang.String,java.lang.String,org.apache.commons.httpclient.Credentials) -> setProxyCredentials
    void setProxyCredentials(org.apache.commons.httpclient.auth.AuthScope,org.apache.commons.httpclient.Credentials) -> setProxyCredentials
    org.apache.commons.httpclient.Credentials getProxyCredentials(java.lang.String,java.lang.String) -> getProxyCredentials
    org.apache.commons.httpclient.Credentials getProxyCredentials(org.apache.commons.httpclient.auth.AuthScope) -> getProxyCredentials
    java.lang.String toString() -> toString
    java.lang.String getCredentialsStringRepresentation(java.util.Map) -> getCredentialsStringRepresentation
    java.lang.String getCookiesStringRepresentation(java.util.List) -> getCookiesStringRepresentation
    void clearCredentials() -> clearCredentials
    void clearProxyCredentials() -> clearProxyCredentials
    void clearCookies() -> clearCookies
    void clear() -> clear
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.HttpStatus -> org.apache.commons.httpclient.HttpStatus:
    java.lang.String[][] REASON_PHRASES -> REASON_PHRASES
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
    java.lang.String getStatusText(int) -> getStatusText
    void addStatusCodeMap(int,java.lang.String) -> addStatusCodeMap
org.apache.commons.httpclient.HttpURL -> org.apache.commons.httpclient.HttpURL:
    char[] DEFAULT_SCHEME -> DEFAULT_SCHEME
    char[] _default_scheme -> _default_scheme
    int DEFAULT_PORT -> DEFAULT_PORT
    int _default_port -> _default_port
    long serialVersionUID -> serialVersionUID
    java.lang.String toUserinfo(java.lang.String,java.lang.String) -> toUserinfo
    char[] getRawScheme() -> getRawScheme
    java.lang.String getScheme() -> getScheme
    int getPort() -> getPort
    void setRawUserinfo(char[],char[]) -> setRawUserinfo
    void setEscapedUserinfo(java.lang.String,java.lang.String) -> setEscapedUserinfo
    void setUserinfo(java.lang.String,java.lang.String) -> setUserinfo
    void setRawUser(char[]) -> setRawUser
    void setEscapedUser(java.lang.String) -> setEscapedUser
    void setUser(java.lang.String) -> setUser
    char[] getRawUser() -> getRawUser
    java.lang.String getEscapedUser() -> getEscapedUser
    java.lang.String getUser() -> getUser
    void setRawPassword(char[]) -> setRawPassword
    void setEscapedPassword(java.lang.String) -> setEscapedPassword
    void setPassword(java.lang.String) -> setPassword
    char[] getRawPassword() -> getRawPassword
    java.lang.String getEscapedPassword() -> getEscapedPassword
    java.lang.String getPassword() -> getPassword
    char[] getRawCurrentHierPath() -> getRawCurrentHierPath
    char[] getRawAboveHierPath() -> getRawAboveHierPath
    char[] getRawPath() -> getRawPath
    void setQuery(java.lang.String,java.lang.String) -> setQuery
    void setQuery(java.lang.String[],java.lang.String[]) -> setQuery
    void checkValid() -> checkValid
    void setURI() -> setURI
org.apache.commons.httpclient.HttpVersion -> org.apache.commons.httpclient.HttpVersion:
    int major -> major
    int minor -> minor
    org.apache.commons.httpclient.HttpVersion HTTP_0_9 -> HTTP_0_9
    org.apache.commons.httpclient.HttpVersion HTTP_1_0 -> HTTP_1_0
    org.apache.commons.httpclient.HttpVersion HTTP_1_1 -> HTTP_1_1
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.apache.commons.httpclient.HttpVersion) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(org.apache.commons.httpclient.HttpVersion) -> equals
    boolean greaterEquals(org.apache.commons.httpclient.HttpVersion) -> greaterEquals
    boolean lessEquals(org.apache.commons.httpclient.HttpVersion) -> lessEquals
    java.lang.String toString() -> toString
    org.apache.commons.httpclient.HttpVersion parse(java.lang.String) -> parse
org.apache.commons.httpclient.HttpsURL -> org.apache.commons.httpclient.HttpsURL:
    char[] DEFAULT_SCHEME -> DEFAULT_SCHEME
    char[] _default_scheme -> _default_scheme
    int DEFAULT_PORT -> DEFAULT_PORT
    int _default_port -> _default_port
    long serialVersionUID -> serialVersionUID
    char[] getRawScheme() -> getRawScheme
    java.lang.String getScheme() -> getScheme
    int getPort() -> getPort
    void checkValid() -> checkValid
org.apache.commons.httpclient.MethodRetryHandler -> org.apache.commons.httpclient.MethodRetryHandler:
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpRecoverableException,int,boolean) -> retryMethod
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager:
    org.apache.commons.logging.Log LOG -> LOG
    int DEFAULT_MAX_HOST_CONNECTIONS -> DEFAULT_MAX_HOST_CONNECTIONS
    int DEFAULT_MAX_TOTAL_CONNECTIONS -> DEFAULT_MAX_TOTAL_CONNECTIONS
    java.util.Map REFERENCE_TO_CONNECTION_SOURCE -> REFERENCE_TO_CONNECTION_SOURCE
    java.lang.ref.ReferenceQueue REFERENCE_QUEUE -> REFERENCE_QUEUE
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread REFERENCE_QUEUE_THREAD -> REFERENCE_QUEUE_THREAD
    java.util.WeakHashMap ALL_CONNECTION_MANAGERS -> ALL_CONNECTION_MANAGERS
    org.apache.commons.httpclient.params.HttpConnectionManagerParams params -> params
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool connectionPool -> connectionPool
    boolean shutdown -> shutdown
    java.lang.Class class$org$apache$commons$httpclient$MultiThreadedHttpConnectionManager -> class$org$apache$commons$httpclient$MultiThreadedHttpConnectionManager
    void shutdownAll() -> shutdownAll
    void storeReferenceToConnection(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference,org.apache.commons.httpclient.HostConfiguration,org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> storeReferenceToConnection
    void shutdownCheckedOutConnections(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> shutdownCheckedOutConnections
    void removeReferenceToConnection(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference) -> removeReferenceToConnection
    void shutdown() -> shutdown
    boolean isConnectionStaleCheckingEnabled() -> isConnectionStaleCheckingEnabled
    void setConnectionStaleCheckingEnabled(boolean) -> setConnectionStaleCheckingEnabled
    void setMaxConnectionsPerHost(int) -> setMaxConnectionsPerHost
    int getMaxConnectionsPerHost() -> getMaxConnectionsPerHost
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    int getMaxTotalConnections() -> getMaxTotalConnections
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration) -> getConnection
    org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration,long) -> getConnectionWithTimeout
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration,long) -> getConnection
    org.apache.commons.httpclient.HttpConnection doGetConnection(org.apache.commons.httpclient.HostConfiguration,long) -> doGetConnection
    int getConnectionsInPool(org.apache.commons.httpclient.HostConfiguration) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    int getConnectionsInUse(org.apache.commons.httpclient.HostConfiguration) -> getConnectionsInUse
    int getConnectionsInUse() -> getConnectionsInUse
    void deleteClosedConnections() -> deleteClosedConnections
    void closeIdleConnections(long) -> closeIdleConnections
    void releaseConnection(org.apache.commons.httpclient.HttpConnection) -> releaseConnection
    org.apache.commons.httpclient.HostConfiguration configurationForConnection(org.apache.commons.httpclient.HttpConnection) -> configurationForConnection
    org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams) -> setParams
    java.lang.Class class$(java.lang.String) -> class$
    void access$600(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> access$600
    org.apache.commons.logging.Log access$700() -> access$700
    org.apache.commons.httpclient.params.HttpConnectionManagerParams access$800(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager) -> access$800
    void access$900(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference,org.apache.commons.httpclient.HostConfiguration,org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> access$900
    org.apache.commons.httpclient.HostConfiguration access$1100(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager,org.apache.commons.httpclient.HttpConnection) -> access$1100
    boolean access$1200(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager) -> access$1200
    void access$1300(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference) -> access$1300
    java.util.Map access$1400() -> access$1400
    java.lang.ref.ReferenceQueue access$1500() -> access$1500
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$1 -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$1:
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool:
    java.util.LinkedList freeConnections -> freeConnections
    java.util.LinkedList waitingThreads -> waitingThreads
    java.util.Map mapHosts -> mapHosts
    org.apache.commons.httpclient.util.IdleConnectionHandler idleConnectionHandler -> idleConnectionHandler
    int numConnections -> numConnections
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager this$0 -> this$0
    void shutdown() -> shutdown
    org.apache.commons.httpclient.HttpConnection createConnection(org.apache.commons.httpclient.HostConfiguration) -> createConnection
    void handleLostConnection(org.apache.commons.httpclient.HostConfiguration) -> handleLostConnection
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool getHostPool(org.apache.commons.httpclient.HostConfiguration) -> getHostPool
    org.apache.commons.httpclient.HttpConnection getFreeConnection(org.apache.commons.httpclient.HostConfiguration) -> getFreeConnection
    void deleteClosedConnections() -> deleteClosedConnections
    void closeIdleConnections(long) -> closeIdleConnections
    void deleteConnection(org.apache.commons.httpclient.HttpConnection) -> deleteConnection
    void deleteLeastUsedConnection() -> deleteLeastUsedConnection
    void notifyWaitingThread(org.apache.commons.httpclient.HostConfiguration) -> notifyWaitingThread
    void notifyWaitingThread(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool) -> notifyWaitingThread
    void freeConnection(org.apache.commons.httpclient.HttpConnection) -> freeConnection
    int access$200(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> access$200
    java.util.LinkedList access$300(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> access$300
    java.util.LinkedList access$500(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool) -> access$500
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionSource -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionSource:
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool connectionPool -> connectionPool
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> hostConfiguration
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool:
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> hostConfiguration
    java.util.LinkedList freeConnections -> freeConnections
    java.util.LinkedList waitingThreads -> waitingThreads
    int numConnections -> numConnections
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionAdapter -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionAdapter:
    org.apache.commons.httpclient.HttpConnection wrappedConnection -> wrappedConnection
    boolean hasConnection() -> hasConnection
    org.apache.commons.httpclient.HttpConnection getWrappedConnection() -> getWrappedConnection
    void close() -> close
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    boolean isStaleCheckingEnabled() -> isStaleCheckingEnabled
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
    java.lang.String getHost() -> getHost
    org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager() -> getHttpConnectionManager
    java.io.InputStream getLastResponseInputStream() -> getLastResponseInputStream
    int getPort() -> getPort
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> getProtocol
    java.lang.String getProxyHost() -> getProxyHost
    int getProxyPort() -> getProxyPort
    java.io.OutputStream getRequestOutputStream() -> getRequestOutputStream
    java.io.InputStream getResponseInputStream() -> getResponseInputStream
    boolean isOpen() -> isOpen
    boolean closeIfStale() -> closeIfStale
    boolean isProxied() -> isProxied
    boolean isResponseAvailable() -> isResponseAvailable
    boolean isResponseAvailable(int) -> isResponseAvailable
    boolean isSecure() -> isSecure
    boolean isTransparent() -> isTransparent
    void open() -> open
    void print(java.lang.String) -> print
    void printLine() -> printLine
    void printLine(java.lang.String) -> printLine
    java.lang.String readLine() -> readLine
    java.lang.String readLine(java.lang.String) -> readLine
    void releaseConnection() -> releaseConnection
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setHost(java.lang.String) -> setHost
    void setHttpConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> setHttpConnectionManager
    void setLastResponseInputStream(java.io.InputStream) -> setLastResponseInputStream
    void setPort(int) -> setPort
    void setProtocol(org.apache.commons.httpclient.protocol.Protocol) -> setProtocol
    void setProxyHost(java.lang.String) -> setProxyHost
    void setProxyPort(int) -> setProxyPort
    void setSoTimeout(int) -> setSoTimeout
    void shutdownOutput() -> shutdownOutput
    void tunnelCreated() -> tunnelCreated
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void writeLine() -> writeLine
    void writeLine(byte[]) -> writeLine
    void flushRequestOutputStream() -> flushRequestOutputStream
    int getSoTimeout() -> getSoTimeout
    java.lang.String getVirtualHost() -> getVirtualHost
    void setVirtualHost(java.lang.String) -> setVirtualHost
    int getSendBufferSize() -> getSendBufferSize
    void setSendBufferSize(int) -> setSendBufferSize
    org.apache.commons.httpclient.params.HttpConnectionParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionParams) -> setParams
    void print(java.lang.String,java.lang.String) -> print
    void printLine(java.lang.String,java.lang.String) -> printLine
    void setSocketTimeout(int) -> setSocketTimeout
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionWithReference:
    java.lang.ref.WeakReference reference -> reference
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread:
    boolean shutdown -> shutdown
    void shutdown() -> shutdown
    void handleReference(java.lang.ref.Reference) -> handleReference
    void run() -> run
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$WaitingThread -> org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$WaitingThread:
    java.lang.Thread thread -> thread
    org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool hostConnectionPool -> hostConnectionPool
org.apache.commons.httpclient.NTCredentials -> org.apache.commons.httpclient.NTCredentials:
    java.lang.String domain -> domain
    java.lang.String host -> host
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getDomain() -> getDomain
    void setHost(java.lang.String) -> setHost
    java.lang.String getHost() -> getHost
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.httpclient.NameValuePair -> org.apache.commons.httpclient.NameValuePair:
    java.lang.String name -> name
    java.lang.String value -> value
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setValue(java.lang.String) -> setValue
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.NoHttpResponseException -> org.apache.commons.httpclient.NoHttpResponseException:
org.apache.commons.httpclient.ProtocolException -> org.apache.commons.httpclient.ProtocolException:
org.apache.commons.httpclient.ProxyClient -> org.apache.commons.httpclient.ProxyClient:
    org.apache.commons.httpclient.HttpState state -> state
    org.apache.commons.httpclient.params.HttpClientParams params -> params
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> hostConfiguration
    org.apache.commons.httpclient.HttpState getState() -> getState
    void setState(org.apache.commons.httpclient.HttpState) -> setState
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> getHostConfiguration
    void setHostConfiguration(org.apache.commons.httpclient.HostConfiguration) -> setHostConfiguration
    org.apache.commons.httpclient.params.HttpClientParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpClientParams) -> setParams
    org.apache.commons.httpclient.ProxyClient$ConnectResponse connect() -> connect
org.apache.commons.httpclient.ProxyClient$1 -> org.apache.commons.httpclient.ProxyClient$1:
org.apache.commons.httpclient.ProxyClient$ConnectResponse -> org.apache.commons.httpclient.ProxyClient$ConnectResponse:
    org.apache.commons.httpclient.ConnectMethod connectMethod -> connectMethod
    java.net.Socket socket -> socket
    org.apache.commons.httpclient.ConnectMethod getConnectMethod() -> getConnectMethod
    void setConnectMethod(org.apache.commons.httpclient.ConnectMethod) -> setConnectMethod
    java.net.Socket getSocket() -> getSocket
    void setSocket(java.net.Socket) -> setSocket
    void access$100(org.apache.commons.httpclient.ProxyClient$ConnectResponse,org.apache.commons.httpclient.ConnectMethod) -> access$100
    void access$200(org.apache.commons.httpclient.ProxyClient$ConnectResponse,java.net.Socket) -> access$200
org.apache.commons.httpclient.ProxyClient$DummyConnectionManager -> org.apache.commons.httpclient.ProxyClient$DummyConnectionManager:
    org.apache.commons.httpclient.HttpConnection httpConnection -> httpConnection
    org.apache.commons.httpclient.params.HttpParams connectionParams -> connectionParams
    void closeIdleConnections(long) -> closeIdleConnections
    org.apache.commons.httpclient.HttpConnection getConnection() -> getConnection
    void setConnectionParams(org.apache.commons.httpclient.params.HttpParams) -> setConnectionParams
    org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration,long) -> getConnectionWithTimeout
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration,long) -> getConnection
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration) -> getConnection
    void releaseConnection(org.apache.commons.httpclient.HttpConnection) -> releaseConnection
    org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams) -> setParams
org.apache.commons.httpclient.ProxyHost -> org.apache.commons.httpclient.ProxyHost:
    java.lang.Object clone() -> clone
org.apache.commons.httpclient.RedirectException -> org.apache.commons.httpclient.RedirectException:
org.apache.commons.httpclient.ResponseConsumedWatcher -> org.apache.commons.httpclient.ResponseConsumedWatcher:
    void responseConsumed() -> responseConsumed
org.apache.commons.httpclient.SimpleHttpConnectionManager -> org.apache.commons.httpclient.SimpleHttpConnectionManager:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.commons.httpclient.HttpConnection httpConnection -> httpConnection
    org.apache.commons.httpclient.params.HttpConnectionManagerParams params -> params
    long idleStartTime -> idleStartTime
    boolean inUse -> inUse
    java.lang.Class class$org$apache$commons$httpclient$SimpleHttpConnectionManager -> class$org$apache$commons$httpclient$SimpleHttpConnectionManager
    void finishLastResponse(org.apache.commons.httpclient.HttpConnection) -> finishLastResponse
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration) -> getConnection
    boolean isConnectionStaleCheckingEnabled() -> isConnectionStaleCheckingEnabled
    void setConnectionStaleCheckingEnabled(boolean) -> setConnectionStaleCheckingEnabled
    org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration,long) -> getConnectionWithTimeout
    org.apache.commons.httpclient.HttpConnection getConnection(org.apache.commons.httpclient.HostConfiguration,long) -> getConnection
    void releaseConnection(org.apache.commons.httpclient.HttpConnection) -> releaseConnection
    org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams() -> getParams
    void setParams(org.apache.commons.httpclient.params.HttpConnectionManagerParams) -> setParams
    void closeIdleConnections(long) -> closeIdleConnections
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.StatusLine -> org.apache.commons.httpclient.StatusLine:
    java.lang.String statusLine -> statusLine
    java.lang.String httpVersion -> httpVersion
    int statusCode -> statusCode
    java.lang.String reasonPhrase -> reasonPhrase
    int getStatusCode() -> getStatusCode
    java.lang.String getHttpVersion() -> getHttpVersion
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String toString() -> toString
    boolean startsWithHTTP(java.lang.String) -> startsWithHTTP
org.apache.commons.httpclient.URI -> org.apache.commons.httpclient.URI:
    long serialVersionUID -> serialVersionUID
    int hash -> hash
    char[] _uri -> _uri
    java.lang.String protocolCharset -> protocolCharset
    java.lang.String defaultProtocolCharset -> defaultProtocolCharset
    java.lang.String defaultDocumentCharset -> defaultDocumentCharset
    java.lang.String defaultDocumentCharsetByLocale -> defaultDocumentCharsetByLocale
    java.lang.String defaultDocumentCharsetByPlatform -> defaultDocumentCharsetByPlatform
    char[] _scheme -> _scheme
    char[] _opaque -> _opaque
    char[] _authority -> _authority
    char[] _userinfo -> _userinfo
    char[] _host -> _host
    int _port -> _port
    char[] _path -> _path
    char[] _query -> _query
    char[] _fragment -> _fragment
    char[] rootPath -> rootPath
    java.util.BitSet percent -> percent
    java.util.BitSet digit -> digit
    java.util.BitSet alpha -> alpha
    java.util.BitSet alphanum -> alphanum
    java.util.BitSet hex -> hex
    java.util.BitSet escaped -> escaped
    java.util.BitSet mark -> mark
    java.util.BitSet unreserved -> unreserved
    java.util.BitSet reserved -> reserved
    java.util.BitSet uric -> uric
    java.util.BitSet fragment -> fragment
    java.util.BitSet query -> query
    java.util.BitSet pchar -> pchar
    java.util.BitSet param -> param
    java.util.BitSet segment -> segment
    java.util.BitSet path_segments -> path_segments
    java.util.BitSet abs_path -> abs_path
    java.util.BitSet uric_no_slash -> uric_no_slash
    java.util.BitSet opaque_part -> opaque_part
    java.util.BitSet path -> path
    java.util.BitSet port -> port
    java.util.BitSet IPv4address -> IPv4address
    java.util.BitSet IPv6address -> IPv6address
    java.util.BitSet IPv6reference -> IPv6reference
    java.util.BitSet toplabel -> toplabel
    java.util.BitSet domainlabel -> domainlabel
    java.util.BitSet hostname -> hostname
    java.util.BitSet host -> host
    java.util.BitSet hostport -> hostport
    java.util.BitSet userinfo -> userinfo
    java.util.BitSet within_userinfo -> within_userinfo
    java.util.BitSet server -> server
    java.util.BitSet reg_name -> reg_name
    java.util.BitSet authority -> authority
    java.util.BitSet scheme -> scheme
    java.util.BitSet rel_segment -> rel_segment
    java.util.BitSet rel_path -> rel_path
    java.util.BitSet net_path -> net_path
    java.util.BitSet hier_part -> hier_part
    java.util.BitSet relativeURI -> relativeURI
    java.util.BitSet absoluteURI -> absoluteURI
    java.util.BitSet URI_reference -> URI_reference
    java.util.BitSet control -> control
    java.util.BitSet space -> space
    java.util.BitSet delims -> delims
    java.util.BitSet unwise -> unwise
    java.util.BitSet disallowed_rel_path -> disallowed_rel_path
    java.util.BitSet disallowed_opaque_part -> disallowed_opaque_part
    java.util.BitSet allowed_authority -> allowed_authority
    java.util.BitSet allowed_opaque_part -> allowed_opaque_part
    java.util.BitSet allowed_reg_name -> allowed_reg_name
    java.util.BitSet allowed_userinfo -> allowed_userinfo
    java.util.BitSet allowed_within_userinfo -> allowed_within_userinfo
    java.util.BitSet allowed_IPv6reference -> allowed_IPv6reference
    java.util.BitSet allowed_host -> allowed_host
    java.util.BitSet allowed_within_authority -> allowed_within_authority
    java.util.BitSet allowed_abs_path -> allowed_abs_path
    java.util.BitSet allowed_rel_path -> allowed_rel_path
    java.util.BitSet allowed_within_path -> allowed_within_path
    java.util.BitSet allowed_query -> allowed_query
    java.util.BitSet allowed_within_query -> allowed_within_query
    java.util.BitSet allowed_fragment -> allowed_fragment
    boolean _is_hier_part -> _is_hier_part
    boolean _is_opaque_part -> _is_opaque_part
    boolean _is_net_path -> _is_net_path
    boolean _is_abs_path -> _is_abs_path
    boolean _is_rel_path -> _is_rel_path
    boolean _is_reg_name -> _is_reg_name
    boolean _is_server -> _is_server
    boolean _is_hostname -> _is_hostname
    boolean _is_IPv4address -> _is_IPv4address
    boolean _is_IPv6reference -> _is_IPv6reference
    char[] encode(java.lang.String,java.util.BitSet,java.lang.String) -> encode
    java.lang.String decode(char[],java.lang.String) -> decode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    boolean prevalidate(java.lang.String,java.util.BitSet) -> prevalidate
    boolean validate(char[],java.util.BitSet) -> validate
    boolean validate(char[],int,int,java.util.BitSet) -> validate
    void parseUriReference(java.lang.String,boolean) -> parseUriReference
    int indexFirstOf(java.lang.String,java.lang.String) -> indexFirstOf
    int indexFirstOf(java.lang.String,java.lang.String,int) -> indexFirstOf
    int indexFirstOf(char[],char) -> indexFirstOf
    int indexFirstOf(char[],char,int) -> indexFirstOf
    void parseAuthority(java.lang.String,boolean) -> parseAuthority
    void setURI() -> setURI
    boolean isAbsoluteURI() -> isAbsoluteURI
    boolean isRelativeURI() -> isRelativeURI
    boolean isHierPart() -> isHierPart
    boolean isOpaquePart() -> isOpaquePart
    boolean isNetPath() -> isNetPath
    boolean isAbsPath() -> isAbsPath
    boolean isRelPath() -> isRelPath
    boolean hasAuthority() -> hasAuthority
    boolean isRegName() -> isRegName
    boolean isServer() -> isServer
    boolean hasUserinfo() -> hasUserinfo
    boolean isHostname() -> isHostname
    boolean isIPv4address() -> isIPv4address
    boolean isIPv6reference() -> isIPv6reference
    boolean hasQuery() -> hasQuery
    boolean hasFragment() -> hasFragment
    void setDefaultProtocolCharset(java.lang.String) -> setDefaultProtocolCharset
    java.lang.String getDefaultProtocolCharset() -> getDefaultProtocolCharset
    java.lang.String getProtocolCharset() -> getProtocolCharset
    void setDefaultDocumentCharset(java.lang.String) -> setDefaultDocumentCharset
    java.lang.String getDefaultDocumentCharset() -> getDefaultDocumentCharset
    java.lang.String getDefaultDocumentCharsetByLocale() -> getDefaultDocumentCharsetByLocale
    java.lang.String getDefaultDocumentCharsetByPlatform() -> getDefaultDocumentCharsetByPlatform
    char[] getRawScheme() -> getRawScheme
    java.lang.String getScheme() -> getScheme
    void setRawAuthority(char[]) -> setRawAuthority
    void setEscapedAuthority(java.lang.String) -> setEscapedAuthority
    char[] getRawAuthority() -> getRawAuthority
    java.lang.String getEscapedAuthority() -> getEscapedAuthority
    java.lang.String getAuthority() -> getAuthority
    char[] getRawUserinfo() -> getRawUserinfo
    java.lang.String getEscapedUserinfo() -> getEscapedUserinfo
    java.lang.String getUserinfo() -> getUserinfo
    char[] getRawHost() -> getRawHost
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    void setRawPath(char[]) -> setRawPath
    void setEscapedPath(java.lang.String) -> setEscapedPath
    void setPath(java.lang.String) -> setPath
    char[] resolvePath(char[],char[]) -> resolvePath
    char[] getRawCurrentHierPath(char[]) -> getRawCurrentHierPath
    char[] getRawCurrentHierPath() -> getRawCurrentHierPath
    java.lang.String getEscapedCurrentHierPath() -> getEscapedCurrentHierPath
    java.lang.String getCurrentHierPath() -> getCurrentHierPath
    char[] getRawAboveHierPath() -> getRawAboveHierPath
    java.lang.String getEscapedAboveHierPath() -> getEscapedAboveHierPath
    java.lang.String getAboveHierPath() -> getAboveHierPath
    char[] getRawPath() -> getRawPath
    java.lang.String getEscapedPath() -> getEscapedPath
    java.lang.String getPath() -> getPath
    char[] getRawName() -> getRawName
    java.lang.String getEscapedName() -> getEscapedName
    java.lang.String getName() -> getName
    char[] getRawPathQuery() -> getRawPathQuery
    java.lang.String getEscapedPathQuery() -> getEscapedPathQuery
    java.lang.String getPathQuery() -> getPathQuery
    void setRawQuery(char[]) -> setRawQuery
    void setEscapedQuery(java.lang.String) -> setEscapedQuery
    void setQuery(java.lang.String) -> setQuery
    char[] getRawQuery() -> getRawQuery
    java.lang.String getEscapedQuery() -> getEscapedQuery
    java.lang.String getQuery() -> getQuery
    void setRawFragment(char[]) -> setRawFragment
    void setEscapedFragment(java.lang.String) -> setEscapedFragment
    void setFragment(java.lang.String) -> setFragment
    char[] getRawFragment() -> getRawFragment
    java.lang.String getEscapedFragment() -> getEscapedFragment
    java.lang.String getFragment() -> getFragment
    char[] removeFragmentIdentifier(char[]) -> removeFragmentIdentifier
    char[] normalize(char[]) -> normalize
    void normalize() -> normalize
    boolean equals(char[],char[]) -> equals
    boolean equals(java.lang.Object) -> equals
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.Object clone() -> clone
    char[] getRawURI() -> getRawURI
    java.lang.String getEscapedURI() -> getEscapedURI
    java.lang.String getURI() -> getURI
    char[] getRawURIReference() -> getRawURIReference
    java.lang.String getEscapedURIReference() -> getEscapedURIReference
    java.lang.String getURIReference() -> getURIReference
    java.lang.String toString() -> toString
org.apache.commons.httpclient.URI$DefaultCharsetChanged -> org.apache.commons.httpclient.URI$DefaultCharsetChanged:
    int UNKNOWN -> UNKNOWN
    int PROTOCOL_CHARSET -> PROTOCOL_CHARSET
    int DOCUMENT_CHARSET -> DOCUMENT_CHARSET
    int reasonCode -> reasonCode
    java.lang.String reason -> reason
    int getReasonCode() -> getReasonCode
    java.lang.String getReason() -> getReason
org.apache.commons.httpclient.URI$LocaleToCharsetMap -> org.apache.commons.httpclient.URI$LocaleToCharsetMap:
    java.util.Hashtable LOCALE_TO_CHARSET_MAP -> LOCALE_TO_CHARSET_MAP
    java.lang.String getCharset(java.util.Locale) -> getCharset
org.apache.commons.httpclient.URIException -> org.apache.commons.httpclient.URIException:
    int UNKNOWN -> UNKNOWN
    int PARSING -> PARSING
    int UNSUPPORTED_ENCODING -> UNSUPPORTED_ENCODING
    int ESCAPING -> ESCAPING
    int PUNYCODE -> PUNYCODE
    int reasonCode -> reasonCode
    java.lang.String reason -> reason
    int getReasonCode() -> getReasonCode
    void setReasonCode(int) -> setReasonCode
    java.lang.String getReason() -> getReason
    void setReason(java.lang.String) -> setReason
org.apache.commons.httpclient.UsernamePasswordCredentials -> org.apache.commons.httpclient.UsernamePasswordCredentials:
    java.lang.String userName -> userName
    java.lang.String password -> password
    void setUserName(java.lang.String) -> setUserName
    java.lang.String getUserName() -> getUserName
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getPassword() -> getPassword
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.httpclient.Wire -> org.apache.commons.httpclient.Wire:
    org.apache.commons.httpclient.Wire HEADER_WIRE -> HEADER_WIRE
    org.apache.commons.httpclient.Wire CONTENT_WIRE -> CONTENT_WIRE
    org.apache.commons.logging.Log log -> log
    void wire(java.lang.String,java.io.InputStream) -> wire
    boolean enabled() -> enabled
    void output(java.io.InputStream) -> output
    void input(java.io.InputStream) -> input
    void output(byte[],int,int) -> output
    void input(byte[],int,int) -> input
    void output(byte[]) -> output
    void input(byte[]) -> input
    void output(int) -> output
    void input(int) -> input
    void output(java.lang.String) -> output
    void input(java.lang.String) -> input
org.apache.commons.httpclient.WireLogInputStream -> org.apache.commons.httpclient.WireLogInputStream:
    java.io.InputStream in -> in
    org.apache.commons.httpclient.Wire wire -> wire
    int read(byte[],int,int) -> read
    int read() -> read
    int read(byte[]) -> read
org.apache.commons.httpclient.WireLogOutputStream -> org.apache.commons.httpclient.WireLogOutputStream:
    java.io.OutputStream out -> out
    org.apache.commons.httpclient.Wire wire -> wire
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
org.apache.commons.httpclient.auth.AuthChallengeException -> org.apache.commons.httpclient.auth.AuthChallengeException:
org.apache.commons.httpclient.auth.AuthChallengeParser -> org.apache.commons.httpclient.auth.AuthChallengeParser:
    java.lang.String extractScheme(java.lang.String) -> extractScheme
    java.util.Map extractParams(java.lang.String) -> extractParams
    java.util.Map parseChallenges(org.apache.commons.httpclient.Header[]) -> parseChallenges
org.apache.commons.httpclient.auth.AuthChallengeProcessor -> org.apache.commons.httpclient.auth.AuthChallengeProcessor:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.params.HttpParams params -> params
    java.lang.Class class$org$apache$commons$httpclient$auth$AuthChallengeProcessor -> class$org$apache$commons$httpclient$auth$AuthChallengeProcessor
    org.apache.commons.httpclient.auth.AuthScheme selectAuthScheme(java.util.Map) -> selectAuthScheme
    org.apache.commons.httpclient.auth.AuthScheme processChallenge(org.apache.commons.httpclient.auth.AuthState,java.util.Map) -> processChallenge
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.AuthPolicy -> org.apache.commons.httpclient.auth.AuthPolicy:
    java.util.HashMap SCHEMES -> SCHEMES
    java.util.ArrayList SCHEME_LIST -> SCHEME_LIST
    java.lang.String AUTH_SCHEME_PRIORITY -> AUTH_SCHEME_PRIORITY
    java.lang.String NTLM -> NTLM
    java.lang.String DIGEST -> DIGEST
    java.lang.String BASIC -> BASIC
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$auth$NTLMScheme -> class$org$apache$commons$httpclient$auth$NTLMScheme
    java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme -> class$org$apache$commons$httpclient$auth$DigestScheme
    java.lang.Class class$org$apache$commons$httpclient$auth$BasicScheme -> class$org$apache$commons$httpclient$auth$BasicScheme
    java.lang.Class class$org$apache$commons$httpclient$auth$AuthPolicy -> class$org$apache$commons$httpclient$auth$AuthPolicy
    void registerAuthScheme(java.lang.String,java.lang.Class) -> registerAuthScheme
    void unregisterAuthScheme(java.lang.String) -> unregisterAuthScheme
    org.apache.commons.httpclient.auth.AuthScheme getAuthScheme(java.lang.String) -> getAuthScheme
    java.util.List getDefaultAuthPrefs() -> getDefaultAuthPrefs
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.AuthScheme -> org.apache.commons.httpclient.auth.AuthScheme:
    void processChallenge(java.lang.String) -> processChallenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    java.lang.String getID() -> getID
    boolean isConnectionBased() -> isConnectionBased
    boolean isComplete() -> isComplete
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
org.apache.commons.httpclient.auth.AuthSchemeBase -> org.apache.commons.httpclient.auth.AuthSchemeBase:
    java.lang.String challenge -> challenge
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    boolean isComplete() -> isComplete
    boolean isConnectionBased() -> isConnectionBased
    java.lang.String getID() -> getID
    java.lang.String getRealm() -> getRealm
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getSchemeName() -> getSchemeName
    void processChallenge(java.lang.String) -> processChallenge
org.apache.commons.httpclient.auth.AuthScope -> org.apache.commons.httpclient.auth.AuthScope:
    java.lang.String ANY_HOST -> ANY_HOST
    int ANY_PORT -> ANY_PORT
    java.lang.String ANY_REALM -> ANY_REALM
    java.lang.String ANY_SCHEME -> ANY_SCHEME
    org.apache.commons.httpclient.auth.AuthScope ANY -> ANY
    java.lang.String scheme -> scheme
    java.lang.String realm -> realm
    java.lang.String host -> host
    int port -> port
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getRealm() -> getRealm
    java.lang.String getScheme() -> getScheme
    boolean paramsEqual(java.lang.String,java.lang.String) -> paramsEqual
    boolean paramsEqual(int,int) -> paramsEqual
    int match(org.apache.commons.httpclient.auth.AuthScope) -> match
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
org.apache.commons.httpclient.auth.AuthState -> org.apache.commons.httpclient.auth.AuthState:
    java.lang.String PREEMPTIVE_AUTH_SCHEME -> PREEMPTIVE_AUTH_SCHEME
    org.apache.commons.httpclient.auth.AuthScheme authScheme -> authScheme
    boolean authRequested -> authRequested
    boolean authAttempted -> authAttempted
    boolean preemptive -> preemptive
    void invalidate() -> invalidate
    boolean isAuthRequested() -> isAuthRequested
    void setAuthRequested(boolean) -> setAuthRequested
    boolean isAuthAttempted() -> isAuthAttempted
    void setAuthAttempted(boolean) -> setAuthAttempted
    void setPreemptive() -> setPreemptive
    boolean isPreemptive() -> isPreemptive
    void setAuthScheme(org.apache.commons.httpclient.auth.AuthScheme) -> setAuthScheme
    org.apache.commons.httpclient.auth.AuthScheme getAuthScheme() -> getAuthScheme
    java.lang.String getRealm() -> getRealm
    java.lang.String toString() -> toString
org.apache.commons.httpclient.auth.AuthenticationException -> org.apache.commons.httpclient.auth.AuthenticationException:
org.apache.commons.httpclient.auth.BasicScheme -> org.apache.commons.httpclient.auth.BasicScheme:
    org.apache.commons.logging.Log LOG -> LOG
    boolean complete -> complete
    java.lang.Class class$org$apache$commons$httpclient$auth$BasicScheme -> class$org$apache$commons$httpclient$auth$BasicScheme
    java.lang.String getSchemeName() -> getSchemeName
    void processChallenge(java.lang.String) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    boolean isConnectionBased() -> isConnectionBased
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.UsernamePasswordCredentials) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.UsernamePasswordCredentials,java.lang.String) -> authenticate
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.CredentialsNotAvailableException -> org.apache.commons.httpclient.auth.CredentialsNotAvailableException:
org.apache.commons.httpclient.auth.CredentialsProvider -> org.apache.commons.httpclient.auth.CredentialsProvider:
    java.lang.String PROVIDER -> PROVIDER
    org.apache.commons.httpclient.Credentials getCredentials(org.apache.commons.httpclient.auth.AuthScheme,java.lang.String,int,boolean) -> getCredentials
org.apache.commons.httpclient.auth.DigestScheme -> org.apache.commons.httpclient.auth.DigestScheme:
    org.apache.commons.logging.Log LOG -> LOG
    char[] HEXADECIMAL -> HEXADECIMAL
    boolean complete -> complete
    java.lang.String NC -> NC
    int QOP_MISSING -> QOP_MISSING
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH -> QOP_AUTH
    int qopVariant -> qopVariant
    java.lang.String cnonce -> cnonce
    org.apache.commons.httpclient.util.ParameterFormatter formatter -> formatter
    java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme -> class$org$apache$commons$httpclient$auth$DigestScheme
    java.lang.String getID() -> getID
    void processChallenge(java.lang.String) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    boolean isConnectionBased() -> isConnectionBased
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
    java.lang.String createDigest(java.lang.String,java.lang.String) -> createDigest
    java.lang.String createDigestHeader(java.lang.String,java.lang.String) -> createDigestHeader
    java.lang.String getQopVariantString() -> getQopVariantString
    java.lang.String encode(byte[]) -> encode
    java.lang.String createCnonce() -> createCnonce
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.HttpAuthRealm -> org.apache.commons.httpclient.auth.HttpAuthRealm:
org.apache.commons.httpclient.auth.HttpAuthenticator -> org.apache.commons.httpclient.auth.HttpAuthenticator:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String WWW_AUTH -> WWW_AUTH
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
    java.lang.String PROXY_AUTH -> PROXY_AUTH
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
    java.lang.Class class$org$apache$commons$httpclient$auth$HttpAuthenticator -> class$org$apache$commons$httpclient$auth$HttpAuthenticator
    org.apache.commons.httpclient.auth.AuthScheme selectAuthScheme(org.apache.commons.httpclient.Header[]) -> selectAuthScheme
    boolean doAuthenticateDefault(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState,boolean) -> doAuthenticateDefault
    boolean authenticateDefault(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState) -> authenticateDefault
    boolean authenticateProxyDefault(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState) -> authenticateProxyDefault
    boolean doAuthenticate(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState,boolean) -> doAuthenticate
    boolean authenticate(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState) -> authenticate
    boolean authenticateProxy(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpState) -> authenticateProxy
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.InvalidCredentialsException -> org.apache.commons.httpclient.auth.InvalidCredentialsException:
org.apache.commons.httpclient.auth.MalformedChallengeException -> org.apache.commons.httpclient.auth.MalformedChallengeException:
org.apache.commons.httpclient.auth.NTLM -> org.apache.commons.httpclient.auth.NTLM:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    byte[] currentResponse -> currentResponse
    int currentPosition -> currentPosition
    java.lang.String credentialCharset -> credentialCharset
    java.lang.String getResponseFor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getResponseFor
    javax.crypto.Cipher getCipher(byte[]) -> getCipher
    byte[] setupKey(byte[]) -> setupKey
    byte[] encrypt(byte[],byte[]) -> encrypt
    void prepareResponse(int) -> prepareResponse
    void addByte(byte) -> addByte
    void addBytes(byte[]) -> addBytes
    java.lang.String getResponse() -> getResponse
    java.lang.String getType1Message(java.lang.String,java.lang.String) -> getType1Message
    byte[] parseType2Message(java.lang.String) -> parseType2Message
    java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[]) -> getType3Message
    byte[] hashPassword(java.lang.String,byte[]) -> hashPassword
    void calcResp(byte[],byte[],byte[]) -> calcResp
    byte[] convertShort(int) -> convertShort
    java.lang.String getCredentialCharset() -> getCredentialCharset
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
org.apache.commons.httpclient.auth.NTLMScheme -> org.apache.commons.httpclient.auth.NTLMScheme:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String ntlmchallenge -> ntlmchallenge
    int UNINITIATED -> UNINITIATED
    int INITIATED -> INITIATED
    int TYPE1_MSG_GENERATED -> TYPE1_MSG_GENERATED
    int TYPE2_MSG_RECEIVED -> TYPE2_MSG_RECEIVED
    int TYPE3_MSG_GENERATED -> TYPE3_MSG_GENERATED
    int FAILED -> FAILED
    int state -> state
    java.lang.Class class$org$apache$commons$httpclient$auth$NTLMScheme -> class$org$apache$commons$httpclient$auth$NTLMScheme
    void processChallenge(java.lang.String) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getRealm() -> getRealm
    java.lang.String getID() -> getID
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean isConnectionBased() -> isConnectionBased
    java.lang.String authenticate(org.apache.commons.httpclient.NTCredentials,java.lang.String) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.NTCredentials,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.auth.RFC2617Scheme -> org.apache.commons.httpclient.auth.RFC2617Scheme:
    java.util.Map params -> params
    void processChallenge(java.lang.String) -> processChallenge
    java.util.Map getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    java.lang.String getID() -> getID
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> authenticate
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,java.lang.String,java.lang.String) -> authenticate
    boolean isComplete() -> isComplete
    boolean isConnectionBased() -> isConnectionBased
    java.lang.String getSchemeName() -> getSchemeName
org.apache.commons.httpclient.cookie.CookiePolicy -> org.apache.commons.httpclient.cookie.CookiePolicy:
    java.util.Map SPECS -> SPECS
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String RFC_2109 -> RFC_2109
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
    java.lang.String DEFAULT -> DEFAULT
    int COMPATIBILITY -> COMPATIBILITY
    int NETSCAPE_DRAFT -> NETSCAPE_DRAFT
    int RFC2109 -> RFC2109
    int defaultPolicy -> defaultPolicy
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec -> class$org$apache$commons$httpclient$cookie$RFC2109Spec
    java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpecBase -> class$org$apache$commons$httpclient$cookie$CookieSpecBase
    java.lang.Class class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec -> class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec
    java.lang.Class class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec -> class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec
    java.lang.Class class$org$apache$commons$httpclient$cookie$CookiePolicy -> class$org$apache$commons$httpclient$cookie$CookiePolicy
    void registerCookieSpec(java.lang.String,java.lang.Class) -> registerCookieSpec
    void unregisterCookieSpec(java.lang.String) -> unregisterCookieSpec
    org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String) -> getCookieSpec
    int getDefaultPolicy() -> getDefaultPolicy
    void setDefaultPolicy(int) -> setDefaultPolicy
    org.apache.commons.httpclient.cookie.CookieSpec getSpecByPolicy(int) -> getSpecByPolicy
    org.apache.commons.httpclient.cookie.CookieSpec getDefaultSpec() -> getDefaultSpec
    org.apache.commons.httpclient.cookie.CookieSpec getSpecByVersion(int) -> getSpecByVersion
    org.apache.commons.httpclient.cookie.CookieSpec getCompatibilitySpec() -> getCompatibilitySpec
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.cookie.CookieSpec -> org.apache.commons.httpclient.cookie.CookieSpec:
    java.lang.String PATH_DELIM -> PATH_DELIM
    char PATH_DELIM_CHAR -> PATH_DELIM_CHAR
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> parse
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Header) -> parse
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> parseAttribute
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> validate
    void setValidDateFormats(java.util.Collection) -> setValidDateFormats
    java.util.Collection getValidDateFormats() -> getValidDateFormats
    boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> match
    org.apache.commons.httpclient.Cookie[] match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie[]) -> match
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    boolean pathMatch(java.lang.String,java.lang.String) -> pathMatch
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> formatCookie
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> formatCookies
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie[]) -> formatCookieHeader
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie) -> formatCookieHeader
org.apache.commons.httpclient.cookie.CookieSpecBase -> org.apache.commons.httpclient.cookie.CookieSpecBase:
    org.apache.commons.logging.Log LOG -> LOG
    java.util.Collection datepatterns -> datepatterns
    java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec -> class$org$apache$commons$httpclient$cookie$CookieSpec
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> parse
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Header) -> parse
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> parseAttribute
    java.util.Collection getValidDateFormats() -> getValidDateFormats
    void setValidDateFormats(java.util.Collection) -> setValidDateFormats
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> validate
    boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> match
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    boolean pathMatch(java.lang.String,java.lang.String) -> pathMatch
    org.apache.commons.httpclient.Cookie[] match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie[]) -> match
    void addInPathOrder(java.util.List,org.apache.commons.httpclient.Cookie) -> addInPathOrder
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> formatCookie
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> formatCookies
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie[]) -> formatCookieHeader
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie) -> formatCookieHeader
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.cookie.IgnoreCookiesSpec -> org.apache.commons.httpclient.cookie.IgnoreCookiesSpec:
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> parse
    java.util.Collection getValidDateFormats() -> getValidDateFormats
    void setValidDateFormats(java.util.Collection) -> setValidDateFormats
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> formatCookie
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie) -> formatCookieHeader
    org.apache.commons.httpclient.Header formatCookieHeader(org.apache.commons.httpclient.Cookie[]) -> formatCookieHeader
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> formatCookies
    boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> match
    org.apache.commons.httpclient.Cookie[] match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie[]) -> match
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Header) -> parse
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> parseAttribute
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> validate
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    boolean pathMatch(java.lang.String,java.lang.String) -> pathMatch
org.apache.commons.httpclient.cookie.MalformedCookieException -> org.apache.commons.httpclient.cookie.MalformedCookieException:
org.apache.commons.httpclient.cookie.NetscapeDraftSpec -> org.apache.commons.httpclient.cookie.NetscapeDraftSpec:
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> parse
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> parseAttribute
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> validate
    boolean isSpecialDomain(java.lang.String) -> isSpecialDomain
org.apache.commons.httpclient.cookie.RFC2109Spec -> org.apache.commons.httpclient.cookie.RFC2109Spec:
    org.apache.commons.httpclient.util.ParameterFormatter formatter -> formatter
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> parseAttribute
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> validate
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    void formatParam(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair,int) -> formatParam
    void formatCookieAsVer(java.lang.StringBuffer,org.apache.commons.httpclient.Cookie,int) -> formatCookieAsVer
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> formatCookie
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> formatCookies
org.apache.commons.httpclient.methods.ByteArrayRequestEntity -> org.apache.commons.httpclient.methods.ByteArrayRequestEntity:
    byte[] content -> content
    java.lang.String contentType -> contentType
    boolean isRepeatable() -> isRepeatable
    java.lang.String getContentType() -> getContentType
    void writeRequest(java.io.OutputStream) -> writeRequest
    long getContentLength() -> getContentLength
    byte[] getContent() -> getContent
org.apache.commons.httpclient.methods.DeleteMethod -> org.apache.commons.httpclient.methods.DeleteMethod:
    java.lang.String getName() -> getName
org.apache.commons.httpclient.methods.EntityEnclosingMethod -> org.apache.commons.httpclient.methods.EntityEnclosingMethod:
    long CONTENT_LENGTH_AUTO -> CONTENT_LENGTH_AUTO
    long CONTENT_LENGTH_CHUNKED -> CONTENT_LENGTH_CHUNKED
    org.apache.commons.logging.Log LOG -> LOG
    java.io.InputStream requestStream -> requestStream
    java.lang.String requestString -> requestString
    org.apache.commons.httpclient.methods.RequestEntity requestEntity -> requestEntity
    int repeatCount -> repeatCount
    long requestContentLength -> requestContentLength
    boolean chunked -> chunked
    java.lang.Class class$org$apache$commons$httpclient$methods$EntityEnclosingMethod -> class$org$apache$commons$httpclient$methods$EntityEnclosingMethod
    boolean hasRequestContent() -> hasRequestContent
    void clearRequestBody() -> clearRequestBody
    byte[] generateRequestBody() -> generateRequestBody
    org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity() -> generateRequestEntity
    boolean getFollowRedirects() -> getFollowRedirects
    void setFollowRedirects(boolean) -> setFollowRedirects
    void setRequestContentLength(int) -> setRequestContentLength
    java.lang.String getRequestCharSet() -> getRequestCharSet
    void setRequestContentLength(long) -> setRequestContentLength
    void setContentChunked(boolean) -> setContentChunked
    long getRequestContentLength() -> getRequestContentLength
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addRequestHeaders
    void addContentLengthRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addContentLengthRequestHeader
    void setRequestBody(java.io.InputStream) -> setRequestBody
    void setRequestBody(java.lang.String) -> setRequestBody
    boolean writeRequestBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestBody
    void recycle() -> recycle
    org.apache.commons.httpclient.methods.RequestEntity getRequestEntity() -> getRequestEntity
    void setRequestEntity(org.apache.commons.httpclient.methods.RequestEntity) -> setRequestEntity
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.ExpectContinueMethod -> org.apache.commons.httpclient.methods.ExpectContinueMethod:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$methods$ExpectContinueMethod -> class$org$apache$commons$httpclient$methods$ExpectContinueMethod
    boolean getUseExpectHeader() -> getUseExpectHeader
    void setUseExpectHeader(boolean) -> setUseExpectHeader
    boolean hasRequestContent() -> hasRequestContent
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addRequestHeaders
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.GetMethod -> org.apache.commons.httpclient.methods.GetMethod:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$methods$GetMethod -> class$org$apache$commons$httpclient$methods$GetMethod
    java.lang.String getName() -> getName
    void recycle() -> recycle
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.HeadMethod -> org.apache.commons.httpclient.methods.HeadMethod:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$methods$HeadMethod -> class$org$apache$commons$httpclient$methods$HeadMethod
    java.lang.String getName() -> getName
    void recycle() -> recycle
    void readResponseBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> readResponseBody
    int getBodyCheckTimeout() -> getBodyCheckTimeout
    void setBodyCheckTimeout(int) -> setBodyCheckTimeout
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.InputStreamRequestEntity -> org.apache.commons.httpclient.methods.InputStreamRequestEntity:
    int CONTENT_LENGTH_AUTO -> CONTENT_LENGTH_AUTO
    org.apache.commons.logging.Log LOG -> LOG
    long contentLength -> contentLength
    java.io.InputStream content -> content
    byte[] buffer -> buffer
    java.lang.String contentType -> contentType
    java.lang.Class class$org$apache$commons$httpclient$methods$InputStreamRequestEntity -> class$org$apache$commons$httpclient$methods$InputStreamRequestEntity
    java.lang.String getContentType() -> getContentType
    void bufferContent() -> bufferContent
    boolean isRepeatable() -> isRepeatable
    void writeRequest(java.io.OutputStream) -> writeRequest
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.MultipartPostMethod -> org.apache.commons.httpclient.methods.MultipartPostMethod:
    java.lang.String MULTIPART_FORM_CONTENT_TYPE -> MULTIPART_FORM_CONTENT_TYPE
    org.apache.commons.logging.Log LOG -> LOG
    java.util.List parameters -> parameters
    java.lang.Class class$org$apache$commons$httpclient$methods$MultipartPostMethod -> class$org$apache$commons$httpclient$methods$MultipartPostMethod
    boolean hasRequestContent() -> hasRequestContent
    java.lang.String getName() -> getName
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    void addParameter(java.lang.String,java.io.File) -> addParameter
    void addParameter(java.lang.String,java.lang.String,java.io.File) -> addParameter
    void addPart(org.apache.commons.httpclient.methods.multipart.Part) -> addPart
    org.apache.commons.httpclient.methods.multipart.Part[] getParts() -> getParts
    void addContentLengthRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addContentLengthRequestHeader
    void addContentTypeRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addContentTypeRequestHeader
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> addRequestHeaders
    boolean writeRequestBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> writeRequestBody
    long getRequestContentLength() -> getRequestContentLength
    void recycle() -> recycle
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.OptionsMethod -> org.apache.commons.httpclient.methods.OptionsMethod:
    org.apache.commons.logging.Log LOG -> LOG
    java.util.Vector methodsAllowed -> methodsAllowed
    java.lang.Class class$org$apache$commons$httpclient$methods$OptionsMethod -> class$org$apache$commons$httpclient$methods$OptionsMethod
    java.lang.String getName() -> getName
    boolean isAllowed(java.lang.String) -> isAllowed
    java.util.Enumeration getAllowedMethods() -> getAllowedMethods
    void processResponseHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> processResponseHeaders
    boolean needContentLength() -> needContentLength
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.PostMethod -> org.apache.commons.httpclient.methods.PostMethod:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String FORM_URL_ENCODED_CONTENT_TYPE -> FORM_URL_ENCODED_CONTENT_TYPE
    java.util.Vector params -> params
    java.lang.Class class$org$apache$commons$httpclient$methods$PostMethod -> class$org$apache$commons$httpclient$methods$PostMethod
    java.lang.String getName() -> getName
    boolean hasRequestContent() -> hasRequestContent
    void clearRequestBody() -> clearRequestBody
    org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity() -> generateRequestEntity
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    org.apache.commons.httpclient.NameValuePair getParameter(java.lang.String) -> getParameter
    org.apache.commons.httpclient.NameValuePair[] getParameters() -> getParameters
    void addParameter(java.lang.String,java.lang.String) -> addParameter
    void addParameter(org.apache.commons.httpclient.NameValuePair) -> addParameter
    void addParameters(org.apache.commons.httpclient.NameValuePair[]) -> addParameters
    boolean removeParameter(java.lang.String) -> removeParameter
    boolean removeParameter(java.lang.String,java.lang.String) -> removeParameter
    void setRequestBody(org.apache.commons.httpclient.NameValuePair[]) -> setRequestBody
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.PutMethod -> org.apache.commons.httpclient.methods.PutMethod:
    java.lang.String getName() -> getName
org.apache.commons.httpclient.methods.RequestEntity -> org.apache.commons.httpclient.methods.RequestEntity:
    boolean isRepeatable() -> isRepeatable
    void writeRequest(java.io.OutputStream) -> writeRequest
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
org.apache.commons.httpclient.methods.StringRequestEntity -> org.apache.commons.httpclient.methods.StringRequestEntity:
    byte[] content -> content
    java.lang.String charset -> charset
    java.lang.String contentType -> contentType
    java.lang.String getContentType() -> getContentType
    boolean isRepeatable() -> isRepeatable
    void writeRequest(java.io.OutputStream) -> writeRequest
    long getContentLength() -> getContentLength
    java.lang.String getContent() -> getContent
    java.lang.String getCharset() -> getCharset
org.apache.commons.httpclient.methods.TraceMethod -> org.apache.commons.httpclient.methods.TraceMethod:
    java.lang.String getName() -> getName
    void recycle() -> recycle
org.apache.commons.httpclient.methods.multipart.ByteArrayPartSource -> org.apache.commons.httpclient.methods.multipart.ByteArrayPartSource:
    java.lang.String fileName -> fileName
    byte[] bytes -> bytes
    long getLength() -> getLength
    java.lang.String getFileName() -> getFileName
    java.io.InputStream createInputStream() -> createInputStream
org.apache.commons.httpclient.methods.multipart.FilePart -> org.apache.commons.httpclient.methods.multipart.FilePart:
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String DEFAULT_TRANSFER_ENCODING -> DEFAULT_TRANSFER_ENCODING
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String FILE_NAME -> FILE_NAME
    byte[] FILE_NAME_BYTES -> FILE_NAME_BYTES
    org.apache.commons.httpclient.methods.multipart.PartSource source -> source
    java.lang.Class class$org$apache$commons$httpclient$methods$multipart$FilePart -> class$org$apache$commons$httpclient$methods$multipart$FilePart
    void sendDispositionHeader(java.io.OutputStream) -> sendDispositionHeader
    void sendData(java.io.OutputStream) -> sendData
    org.apache.commons.httpclient.methods.multipart.PartSource getSource() -> getSource
    long lengthOfData() -> lengthOfData
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.multipart.FilePartSource -> org.apache.commons.httpclient.methods.multipart.FilePartSource:
    java.io.File file -> file
    java.lang.String fileName -> fileName
    long getLength() -> getLength
    java.lang.String getFileName() -> getFileName
    java.io.InputStream createInputStream() -> createInputStream
org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity -> org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity:
    org.apache.commons.logging.Log log -> log
    java.lang.String MULTIPART_FORM_CONTENT_TYPE -> MULTIPART_FORM_CONTENT_TYPE
    byte[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.commons.httpclient.methods.multipart.Part[] parts -> parts
    byte[] multipartBoundary -> multipartBoundary
    org.apache.commons.httpclient.params.HttpMethodParams params -> params
    java.lang.Class class$org$apache$commons$httpclient$methods$multipart$MultipartRequestEntity -> class$org$apache$commons$httpclient$methods$multipart$MultipartRequestEntity
    byte[] generateMultipartBoundary() -> generateMultipartBoundary
    byte[] getMultipartBoundary() -> getMultipartBoundary
    boolean isRepeatable() -> isRepeatable
    void writeRequest(java.io.OutputStream) -> writeRequest
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.multipart.Part -> org.apache.commons.httpclient.methods.multipart.Part:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String BOUNDARY -> BOUNDARY
    byte[] BOUNDARY_BYTES -> BOUNDARY_BYTES
    byte[] DEFAULT_BOUNDARY_BYTES -> DEFAULT_BOUNDARY_BYTES
    java.lang.String CRLF -> CRLF
    byte[] CRLF_BYTES -> CRLF_BYTES
    java.lang.String QUOTE -> QUOTE
    byte[] QUOTE_BYTES -> QUOTE_BYTES
    java.lang.String EXTRA -> EXTRA
    byte[] EXTRA_BYTES -> EXTRA_BYTES
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    byte[] CONTENT_DISPOSITION_BYTES -> CONTENT_DISPOSITION_BYTES
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    byte[] CONTENT_TYPE_BYTES -> CONTENT_TYPE_BYTES
    java.lang.String CHARSET -> CHARSET
    byte[] CHARSET_BYTES -> CHARSET_BYTES
    java.lang.String CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    byte[] CONTENT_TRANSFER_ENCODING_BYTES -> CONTENT_TRANSFER_ENCODING_BYTES
    byte[] boundaryBytes -> boundaryBytes
    java.lang.Class class$org$apache$commons$httpclient$methods$multipart$Part -> class$org$apache$commons$httpclient$methods$multipart$Part
    java.lang.String getBoundary() -> getBoundary
    java.lang.String getName() -> getName
    java.lang.String getContentType() -> getContentType
    java.lang.String getCharSet() -> getCharSet
    java.lang.String getTransferEncoding() -> getTransferEncoding
    byte[] getPartBoundary() -> getPartBoundary
    void setPartBoundary(byte[]) -> setPartBoundary
    boolean isRepeatable() -> isRepeatable
    void sendStart(java.io.OutputStream) -> sendStart
    void sendDispositionHeader(java.io.OutputStream) -> sendDispositionHeader
    void sendContentTypeHeader(java.io.OutputStream) -> sendContentTypeHeader
    void sendTransferEncodingHeader(java.io.OutputStream) -> sendTransferEncodingHeader
    void sendEndOfHeader(java.io.OutputStream) -> sendEndOfHeader
    void sendData(java.io.OutputStream) -> sendData
    long lengthOfData() -> lengthOfData
    void sendEnd(java.io.OutputStream) -> sendEnd
    void send(java.io.OutputStream) -> send
    long length() -> length
    java.lang.String toString() -> toString
    void sendParts(java.io.OutputStream,org.apache.commons.httpclient.methods.multipart.Part[]) -> sendParts
    void sendParts(java.io.OutputStream,org.apache.commons.httpclient.methods.multipart.Part[],byte[]) -> sendParts
    long getLengthOfParts(org.apache.commons.httpclient.methods.multipart.Part[]) -> getLengthOfParts
    long getLengthOfParts(org.apache.commons.httpclient.methods.multipart.Part[],byte[]) -> getLengthOfParts
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.methods.multipart.PartBase -> org.apache.commons.httpclient.methods.multipart.PartBase:
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    java.lang.String charSet -> charSet
    java.lang.String transferEncoding -> transferEncoding
    java.lang.String getName() -> getName
    java.lang.String getContentType() -> getContentType
    java.lang.String getCharSet() -> getCharSet
    java.lang.String getTransferEncoding() -> getTransferEncoding
    void setCharSet(java.lang.String) -> setCharSet
    void setContentType(java.lang.String) -> setContentType
    void setName(java.lang.String) -> setName
    void setTransferEncoding(java.lang.String) -> setTransferEncoding
org.apache.commons.httpclient.methods.multipart.PartSource -> org.apache.commons.httpclient.methods.multipart.PartSource:
    long getLength() -> getLength
    java.lang.String getFileName() -> getFileName
    java.io.InputStream createInputStream() -> createInputStream
org.apache.commons.httpclient.methods.multipart.StringPart -> org.apache.commons.httpclient.methods.multipart.StringPart:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String DEFAULT_TRANSFER_ENCODING -> DEFAULT_TRANSFER_ENCODING
    byte[] content -> content
    java.lang.String value -> value
    java.lang.Class class$org$apache$commons$httpclient$methods$multipart$StringPart -> class$org$apache$commons$httpclient$methods$multipart$StringPart
    byte[] getContent() -> getContent
    void sendData(java.io.OutputStream) -> sendData
    long lengthOfData() -> lengthOfData
    void setCharSet(java.lang.String) -> setCharSet
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.params.DefaultHttpParams -> org.apache.commons.httpclient.params.DefaultHttpParams:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.params.HttpParamsFactory httpParamsFactory -> httpParamsFactory
    org.apache.commons.httpclient.params.HttpParams defaults -> defaults
    java.util.HashMap parameters -> parameters
    java.lang.Class class$org$apache$commons$httpclient$params$DefaultHttpParams -> class$org$apache$commons$httpclient$params$DefaultHttpParams
    org.apache.commons.httpclient.params.HttpParams getDefaultParams() -> getDefaultParams
    void setHttpParamsFactory(org.apache.commons.httpclient.params.HttpParamsFactory) -> setHttpParamsFactory
    org.apache.commons.httpclient.params.HttpParams getDefaults() -> getDefaults
    void setDefaults(org.apache.commons.httpclient.params.HttpParams) -> setDefaults
    java.lang.Object getParameter(java.lang.String) -> getParameter
    void setParameter(java.lang.String,java.lang.Object) -> setParameter
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    long getLongParameter(java.lang.String,long) -> getLongParameter
    void setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    void setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    void setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    void setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
    void clear() -> clear
    java.lang.Object clone() -> clone
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.params.DefaultHttpParamsFactory -> org.apache.commons.httpclient.params.DefaultHttpParamsFactory:
    org.apache.commons.httpclient.params.HttpParams httpParams -> httpParams
    java.lang.Class class$org$apache$commons$httpclient$SimpleHttpConnectionManager -> class$org$apache$commons$httpclient$SimpleHttpConnectionManager
    org.apache.commons.httpclient.params.HttpParams getDefaultParams() -> getDefaultParams
    org.apache.commons.httpclient.params.HttpParams createParams() -> createParams
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.params.HostParams -> org.apache.commons.httpclient.params.HostParams:
    java.lang.String DEFAULT_HEADERS -> DEFAULT_HEADERS
    void setVirtualHost(java.lang.String) -> setVirtualHost
    java.lang.String getVirtualHost() -> getVirtualHost
org.apache.commons.httpclient.params.HttpClientParams -> org.apache.commons.httpclient.params.HttpClientParams:
    java.lang.String CONNECTION_MANAGER_TIMEOUT -> CONNECTION_MANAGER_TIMEOUT
    java.lang.String CONNECTION_MANAGER_CLASS -> CONNECTION_MANAGER_CLASS
    java.lang.String PREEMPTIVE_AUTHENTICATION -> PREEMPTIVE_AUTHENTICATION
    java.lang.String REJECT_RELATIVE_REDIRECT -> REJECT_RELATIVE_REDIRECT
    java.lang.String MAX_REDIRECTS -> MAX_REDIRECTS
    java.lang.String ALLOW_CIRCULAR_REDIRECTS -> ALLOW_CIRCULAR_REDIRECTS
    java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS -> PROTOCOL_STRICTNESS_PARAMETERS
    long getConnectionManagerTimeout() -> getConnectionManagerTimeout
    void setConnectionManagerTimeout(long) -> setConnectionManagerTimeout
    java.lang.Class getConnectionManagerClass() -> getConnectionManagerClass
    void setConnectionManagerClass(java.lang.Class) -> setConnectionManagerClass
    boolean isAuthenticationPreemptive() -> isAuthenticationPreemptive
    void setAuthenticationPreemptive(boolean) -> setAuthenticationPreemptive
    void makeStrict() -> makeStrict
    void makeLenient() -> makeLenient
org.apache.commons.httpclient.params.HttpConnectionManagerParams -> org.apache.commons.httpclient.params.HttpConnectionManagerParams:
    java.lang.String MAX_HOST_CONNECTIONS -> MAX_HOST_CONNECTIONS
    java.lang.String MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
    void setDefaultMaxConnectionsPerHost(int) -> setDefaultMaxConnectionsPerHost
    void setMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration,int) -> setMaxConnectionsPerHost
    int getDefaultMaxConnectionsPerHost() -> getDefaultMaxConnectionsPerHost
    int getMaxConnectionsPerHost(org.apache.commons.httpclient.HostConfiguration) -> getMaxConnectionsPerHost
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    int getMaxTotalConnections() -> getMaxTotalConnections
org.apache.commons.httpclient.params.HttpConnectionParams -> org.apache.commons.httpclient.params.HttpConnectionParams:
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String TCP_NODELAY -> TCP_NODELAY
    java.lang.String SO_SNDBUF -> SO_SNDBUF
    java.lang.String SO_RCVBUF -> SO_RCVBUF
    java.lang.String SO_LINGER -> SO_LINGER
    java.lang.String CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    java.lang.String STALE_CONNECTION_CHECK -> STALE_CONNECTION_CHECK
    int getSoTimeout() -> getSoTimeout
    void setSoTimeout(int) -> setSoTimeout
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    boolean getTcpNoDelay() -> getTcpNoDelay
    int getSendBufferSize() -> getSendBufferSize
    void setSendBufferSize(int) -> setSendBufferSize
    int getReceiveBufferSize() -> getReceiveBufferSize
    void setReceiveBufferSize(int) -> setReceiveBufferSize
    int getLinger() -> getLinger
    void setLinger(int) -> setLinger
    int getConnectionTimeout() -> getConnectionTimeout
    void setConnectionTimeout(int) -> setConnectionTimeout
    boolean isStaleCheckingEnabled() -> isStaleCheckingEnabled
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
org.apache.commons.httpclient.params.HttpMethodParams -> org.apache.commons.httpclient.params.HttpMethodParams:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String UNAMBIGUOUS_STATUS_LINE -> UNAMBIGUOUS_STATUS_LINE
    java.lang.String SINGLE_COOKIE_HEADER -> SINGLE_COOKIE_HEADER
    java.lang.String STRICT_TRANSFER_ENCODING -> STRICT_TRANSFER_ENCODING
    java.lang.String REJECT_HEAD_BODY -> REJECT_HEAD_BODY
    java.lang.String HEAD_BODY_CHECK_TIMEOUT -> HEAD_BODY_CHECK_TIMEOUT
    java.lang.String USE_EXPECT_CONTINUE -> USE_EXPECT_CONTINUE
    java.lang.String CREDENTIAL_CHARSET -> CREDENTIAL_CHARSET
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String HTTP_CONTENT_CHARSET -> HTTP_CONTENT_CHARSET
    java.lang.String COOKIE_POLICY -> COOKIE_POLICY
    java.lang.String WARN_EXTRA_INPUT -> WARN_EXTRA_INPUT
    java.lang.String STATUS_LINE_GARBAGE_LIMIT -> STATUS_LINE_GARBAGE_LIMIT
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String RETRY_HANDLER -> RETRY_HANDLER
    java.lang.String BUFFER_WARN_TRIGGER_LIMIT -> BUFFER_WARN_TRIGGER_LIMIT
    java.lang.String VIRTUAL_HOST -> VIRTUAL_HOST
    java.lang.String MULTIPART_BOUNDARY -> MULTIPART_BOUNDARY
    java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS -> PROTOCOL_STRICTNESS_PARAMETERS
    java.lang.Class class$org$apache$commons$httpclient$params$HttpMethodParams -> class$org$apache$commons$httpclient$params$HttpMethodParams
    java.lang.String getHttpElementCharset() -> getHttpElementCharset
    void setHttpElementCharset(java.lang.String) -> setHttpElementCharset
    java.lang.String getContentCharset() -> getContentCharset
    void setContentCharset(java.lang.String) -> setContentCharset
    java.lang.String getCredentialCharset() -> getCredentialCharset
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
    org.apache.commons.httpclient.HttpVersion getVersion() -> getVersion
    void setVersion(org.apache.commons.httpclient.HttpVersion) -> setVersion
    java.lang.String getCookiePolicy() -> getCookiePolicy
    void setCookiePolicy(java.lang.String) -> setCookiePolicy
    int getSoTimeout() -> getSoTimeout
    void setSoTimeout(int) -> setSoTimeout
    void setVirtualHost(java.lang.String) -> setVirtualHost
    java.lang.String getVirtualHost() -> getVirtualHost
    void makeStrict() -> makeStrict
    void makeLenient() -> makeLenient
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.params.HttpParams -> org.apache.commons.httpclient.params.HttpParams:
    org.apache.commons.httpclient.params.HttpParams getDefaults() -> getDefaults
    void setDefaults(org.apache.commons.httpclient.params.HttpParams) -> setDefaults
    java.lang.Object getParameter(java.lang.String) -> getParameter
    void setParameter(java.lang.String,java.lang.Object) -> setParameter
    long getLongParameter(java.lang.String,long) -> getLongParameter
    void setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    void setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    void setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    void setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.commons.httpclient.params.HttpParamsFactory -> org.apache.commons.httpclient.params.HttpParamsFactory:
    org.apache.commons.httpclient.params.HttpParams getDefaultParams() -> getDefaultParams
org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory -> org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory:
    java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ProtocolSocketFactory,java.lang.String,int,java.net.InetAddress,int,int) -> createSocket
    java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask,int) -> createSocket
org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1 -> org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1:
    org.apache.commons.httpclient.protocol.ProtocolSocketFactory val$socketfactory -> val$socketfactory
    java.lang.String val$host -> val$host
    int val$port -> val$port
    java.net.InetAddress val$localAddress -> val$localAddress
    int val$localPort -> val$localPort
    void doit() -> doit
org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask -> org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask:
    java.net.Socket socket -> socket
    java.io.IOException exception -> exception
    void setSocket(java.net.Socket) -> setSocket
    java.net.Socket getSocket() -> getSocket
    void doit() -> doit
    void run() -> run
    java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask) -> access$000
org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory -> org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory:
    org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory factory -> factory
    java.lang.Class class$org$apache$commons$httpclient$protocol$DefaultProtocolSocketFactory -> class$org$apache$commons$httpclient$protocol$DefaultProtocolSocketFactory
    org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams) -> createSocket
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.protocol.Protocol -> org.apache.commons.httpclient.protocol.Protocol:
    java.util.Map PROTOCOLS -> PROTOCOLS
    java.lang.String scheme -> scheme
    org.apache.commons.httpclient.protocol.ProtocolSocketFactory socketFactory -> socketFactory
    int defaultPort -> defaultPort
    boolean secure -> secure
    void registerProtocol(java.lang.String,org.apache.commons.httpclient.protocol.Protocol) -> registerProtocol
    void unregisterProtocol(java.lang.String) -> unregisterProtocol
    org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String) -> getProtocol
    org.apache.commons.httpclient.protocol.Protocol lazyRegisterProtocol(java.lang.String) -> lazyRegisterProtocol
    int getDefaultPort() -> getDefaultPort
    org.apache.commons.httpclient.protocol.ProtocolSocketFactory getSocketFactory() -> getSocketFactory
    java.lang.String getScheme() -> getScheme
    boolean isSecure() -> isSecure
    int resolvePort(int) -> resolvePort
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.protocol.ProtocolSocketFactory -> org.apache.commons.httpclient.protocol.ProtocolSocketFactory:
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams) -> createSocket
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
org.apache.commons.httpclient.protocol.ReflectionSocketFactory -> org.apache.commons.httpclient.protocol.ReflectionSocketFactory:
    boolean REFLECTION_FAILED -> REFLECTION_FAILED
    java.lang.reflect.Constructor INETSOCKETADDRESS_CONSTRUCTOR -> INETSOCKETADDRESS_CONSTRUCTOR
    java.lang.reflect.Method SOCKETCONNECT_METHOD -> SOCKETCONNECT_METHOD
    java.lang.reflect.Method SOCKETBIND_METHOD -> SOCKETBIND_METHOD
    java.lang.Class SOCKETTIMEOUTEXCEPTION_CLASS -> SOCKETTIMEOUTEXCEPTION_CLASS
    java.lang.Class class$java$net$InetAddress -> class$java$net$InetAddress
    java.lang.Class class$java$net$Socket -> class$java$net$Socket
    java.net.Socket createSocket(java.lang.String,java.lang.String,int,java.net.InetAddress,int,int) -> createSocket
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory -> org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory:
    org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory factory -> factory
    java.lang.Class class$org$apache$commons$httpclient$protocol$SSLProtocolSocketFactory -> class$org$apache$commons$httpclient$protocol$SSLProtocolSocketFactory
    org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams) -> createSocket
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory -> org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory:
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.commons.httpclient.util.DateParseException -> org.apache.commons.httpclient.util.DateParseException:
org.apache.commons.httpclient.util.DateParser -> org.apache.commons.httpclient.util.DateParser:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.util.Collection DEFAULT_PATTERNS -> DEFAULT_PATTERNS
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.util.Collection) -> parseDate
org.apache.commons.httpclient.util.DateUtil -> org.apache.commons.httpclient.util.DateUtil:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.util.Collection DEFAULT_PATTERNS -> DEFAULT_PATTERNS
    java.util.Date DEFAULT_TWO_DIGIT_YEAR_START -> DEFAULT_TWO_DIGIT_YEAR_START
    java.util.TimeZone GMT -> GMT
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.util.Collection) -> parseDate
    java.util.Date parseDate(java.lang.String,java.util.Collection,java.util.Date) -> parseDate
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
org.apache.commons.httpclient.util.EncodingUtil -> org.apache.commons.httpclient.util.EncodingUtil:
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.Class class$org$apache$commons$httpclient$util$EncodingUtil -> class$org$apache$commons$httpclient$util$EncodingUtil
    java.lang.String formUrlEncode(org.apache.commons.httpclient.NameValuePair[],java.lang.String) -> formUrlEncode
    java.lang.String doFormUrlEncode(org.apache.commons.httpclient.NameValuePair[],java.lang.String) -> doFormUrlEncode
    java.lang.String getString(byte[],int,int,java.lang.String) -> getString
    java.lang.String getString(byte[],java.lang.String) -> getString
    byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    java.lang.String getAsciiString(byte[]) -> getAsciiString
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.util.ExceptionUtil -> org.apache.commons.httpclient.util.ExceptionUtil:
    org.apache.commons.logging.Log LOG -> LOG
    java.lang.reflect.Method INIT_CAUSE_METHOD -> INIT_CAUSE_METHOD
    java.lang.Class SOCKET_TIMEOUT_CLASS -> SOCKET_TIMEOUT_CLASS
    java.lang.Class class$org$apache$commons$httpclient$util$ExceptionUtil -> class$org$apache$commons$httpclient$util$ExceptionUtil
    java.lang.Class class$java$lang$Throwable -> class$java$lang$Throwable
    java.lang.reflect.Method getInitCauseMethod() -> getInitCauseMethod
    java.lang.Class SocketTimeoutExceptionClass() -> SocketTimeoutExceptionClass
    void initCause(java.lang.Throwable,java.lang.Throwable) -> initCause
    boolean isSocketTimeoutException(java.io.InterruptedIOException) -> isSocketTimeoutException
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.util.HttpURLConnection -> org.apache.commons.httpclient.util.HttpURLConnection:
    org.apache.commons.logging.Log LOG -> LOG
    org.apache.commons.httpclient.HttpMethod method -> method
    java.net.URL url -> url
    java.lang.Class class$org$apache$commons$httpclient$util$HttpURLConnection -> class$org$apache$commons$httpclient$util$HttpURLConnection
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
    void disconnect() -> disconnect
    void connect() -> connect
    boolean usingProxy() -> usingProxy
    java.lang.String getRequestMethod() -> getRequestMethod
    int getResponseCode() -> getResponseCode
    java.lang.String getResponseMessage() -> getResponseMessage
    java.lang.String getHeaderField(java.lang.String) -> getHeaderField
    java.lang.String getHeaderFieldKey(int) -> getHeaderFieldKey
    java.lang.String getHeaderField(int) -> getHeaderField
    java.net.URL getURL() -> getURL
    void setInstanceFollowRedirects(boolean) -> setInstanceFollowRedirects
    boolean getInstanceFollowRedirects() -> getInstanceFollowRedirects
    void setRequestMethod(java.lang.String) -> setRequestMethod
    java.security.Permission getPermission() -> getPermission
    java.lang.Object getContent() -> getContent
    java.lang.Object getContent(java.lang.Class[]) -> getContent
    java.io.OutputStream getOutputStream() -> getOutputStream
    void setDoInput(boolean) -> setDoInput
    boolean getDoInput() -> getDoInput
    void setDoOutput(boolean) -> setDoOutput
    boolean getDoOutput() -> getDoOutput
    void setAllowUserInteraction(boolean) -> setAllowUserInteraction
    boolean getAllowUserInteraction() -> getAllowUserInteraction
    void setUseCaches(boolean) -> setUseCaches
    boolean getUseCaches() -> getUseCaches
    void setIfModifiedSince(long) -> setIfModifiedSince
    long getIfModifiedSince() -> getIfModifiedSince
    boolean getDefaultUseCaches() -> getDefaultUseCaches
    void setDefaultUseCaches(boolean) -> setDefaultUseCaches
    void setRequestProperty(java.lang.String,java.lang.String) -> setRequestProperty
    java.lang.String getRequestProperty(java.lang.String) -> getRequestProperty
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.util.IdleConnectionHandler -> org.apache.commons.httpclient.util.IdleConnectionHandler:
    org.apache.commons.logging.Log LOG -> LOG
    java.util.Map connectionToAdded -> connectionToAdded
    java.lang.Class class$org$apache$commons$httpclient$util$IdleConnectionHandler -> class$org$apache$commons$httpclient$util$IdleConnectionHandler
    void add(org.apache.commons.httpclient.HttpConnection) -> add
    void remove(org.apache.commons.httpclient.HttpConnection) -> remove
    void removeAll() -> removeAll
    void closeIdleConnections(long) -> closeIdleConnections
    java.lang.Class class$(java.lang.String) -> class$
org.apache.commons.httpclient.util.IdleConnectionTimeoutThread -> org.apache.commons.httpclient.util.IdleConnectionTimeoutThread:
    java.util.List connectionManagers -> connectionManagers
    boolean shutdown -> shutdown
    long timeoutInterval -> timeoutInterval
    long connectionTimeout -> connectionTimeout
    void addConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> addConnectionManager
    void removeConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> removeConnectionManager
    void run() -> run
    void shutdown() -> shutdown
    void setConnectionTimeout(long) -> setConnectionTimeout
    void setTimeoutInterval(long) -> setTimeoutInterval
org.apache.commons.httpclient.util.LangUtils -> org.apache.commons.httpclient.util.LangUtils:
    int HASH_SEED -> HASH_SEED
    int HASH_OFFSET -> HASH_OFFSET
    int hashCode(int,int) -> hashCode
    int hashCode(int,java.lang.Object) -> hashCode
    int hashCode(int,boolean) -> hashCode
    boolean equals(java.lang.Object,java.lang.Object) -> equals
org.apache.commons.httpclient.util.ParameterFormatter -> org.apache.commons.httpclient.util.ParameterFormatter:
    char[] SEPARATORS -> SEPARATORS
    char[] UNSAFE_CHARS -> UNSAFE_CHARS
    boolean alwaysUseQuotes -> alwaysUseQuotes
    boolean isOneOf(char[],char) -> isOneOf
    boolean isUnsafeChar(char) -> isUnsafeChar
    boolean isSeparator(char) -> isSeparator
    boolean isAlwaysUseQuotes() -> isAlwaysUseQuotes
    void setAlwaysUseQuotes(boolean) -> setAlwaysUseQuotes
    void formatValue(java.lang.StringBuffer,java.lang.String,boolean) -> formatValue
    void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair) -> format
    java.lang.String format(org.apache.commons.httpclient.NameValuePair) -> format
org.apache.commons.httpclient.util.ParameterParser -> org.apache.commons.httpclient.util.ParameterParser:
    char[] chars -> chars
    int pos -> pos
    int len -> len
    int i1 -> i1
    int i2 -> i2
    boolean hasChar() -> hasChar
    java.lang.String getToken(boolean) -> getToken
    boolean isOneOf(char,char[]) -> isOneOf
    java.lang.String parseToken(char[]) -> parseToken
    java.lang.String parseQuotedToken(char[]) -> parseQuotedToken
    java.util.List parse(java.lang.String,char) -> parse
    java.util.List parse(char[],char) -> parse
    java.util.List parse(char[],int,int,char) -> parse
org.apache.commons.httpclient.util.TimeoutController -> org.apache.commons.httpclient.util.TimeoutController:
    void execute(java.lang.Thread,long) -> execute
    void execute(java.lang.Runnable,long) -> execute
org.apache.commons.httpclient.util.TimeoutController$TimeoutException -> org.apache.commons.httpclient.util.TimeoutController$TimeoutException:
org.apache.commons.httpclient.util.URIUtil -> org.apache.commons.httpclient.util.URIUtil:
    java.util.BitSet empty -> empty
    java.lang.String getName(java.lang.String) -> getName
    java.lang.String getQuery(java.lang.String) -> getQuery
    java.lang.String getPath(java.lang.String) -> getPath
    java.lang.String getPathQuery(java.lang.String) -> getPathQuery
    java.lang.String getFromPath(java.lang.String) -> getFromPath
    java.lang.String encodeAll(java.lang.String) -> encodeAll
    java.lang.String encodeAll(java.lang.String,java.lang.String) -> encodeAll
    java.lang.String encodeWithinAuthority(java.lang.String) -> encodeWithinAuthority
    java.lang.String encodeWithinAuthority(java.lang.String,java.lang.String) -> encodeWithinAuthority
    java.lang.String encodePathQuery(java.lang.String) -> encodePathQuery
    java.lang.String encodePathQuery(java.lang.String,java.lang.String) -> encodePathQuery
    java.lang.String encodeWithinPath(java.lang.String) -> encodeWithinPath
    java.lang.String encodeWithinPath(java.lang.String,java.lang.String) -> encodeWithinPath
    java.lang.String encodePath(java.lang.String) -> encodePath
    java.lang.String encodePath(java.lang.String,java.lang.String) -> encodePath
    java.lang.String encodeWithinQuery(java.lang.String) -> encodeWithinQuery
    java.lang.String encodeWithinQuery(java.lang.String,java.lang.String) -> encodeWithinQuery
    java.lang.String encodeQuery(java.lang.String) -> encodeQuery
    java.lang.String encodeQuery(java.lang.String,java.lang.String) -> encodeQuery
    java.lang.String encode(java.lang.String,java.util.BitSet) -> encode
    java.lang.String encode(java.lang.String,java.util.BitSet,java.lang.String) -> encode
    java.lang.String decode(java.lang.String) -> decode
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
org.apache.commons.httpclient.util.URIUtil$Coder -> org.apache.commons.httpclient.util.URIUtil$Coder:
    char[] encode(java.lang.String,java.util.BitSet,java.lang.String) -> encode
    java.lang.String decode(char[],java.lang.String) -> decode
    boolean verifyEscaped(char[]) -> verifyEscaped
    java.lang.String replace(java.lang.String,char[],char[]) -> replace
    java.lang.String replace(java.lang.String,char,char) -> replace
org.apache.harmony.javax.security.auth.AuthPermission -> org.apache.harmony.javax.security.auth.AuthPermission:
    long serialVersionUID -> serialVersionUID
    java.lang.String CREATE_LOGIN_CONTEXT -> CREATE_LOGIN_CONTEXT
    java.lang.String CREATE_LOGIN_CONTEXT_ANY -> CREATE_LOGIN_CONTEXT_ANY
    java.lang.String init(java.lang.String) -> init
org.apache.harmony.javax.security.auth.DestroyFailedException -> org.apache.harmony.javax.security.auth.DestroyFailedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.Destroyable -> org.apache.harmony.javax.security.auth.Destroyable:
    void destroy() -> destroy
    boolean isDestroyed() -> isDestroyed
org.apache.harmony.javax.security.auth.PrivateCredentialPermission -> org.apache.harmony.javax.security.auth.PrivateCredentialPermission:
    long serialVersionUID -> serialVersionUID
    java.lang.String READ -> READ
    java.lang.String credentialClass -> credentialClass
    int offset -> offset
    org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner[] set -> set
    void initTargetName(java.lang.String) -> initTargetName
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String[][] getPrincipals() -> getPrincipals
    java.lang.String getActions() -> getActions
    java.lang.String getCredentialClass() -> getCredentialClass
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean implies(java.security.Permission) -> implies
    java.security.PermissionCollection newPermissionCollection() -> newPermissionCollection
    boolean sameMembers(java.lang.Object[],java.lang.Object[],int) -> sameMembers
org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner -> org.apache.harmony.javax.security.auth.PrivateCredentialPermission$CredOwner:
    long serialVersionUID -> serialVersionUID
    java.lang.String principalClass -> principalClass
    java.lang.String principalName -> principalName
    boolean isClassWildcard -> isClassWildcard
    boolean isPNameWildcard -> isPNameWildcard
    boolean implies(java.lang.Object) -> implies
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.harmony.javax.security.auth.RefreshFailedException -> org.apache.harmony.javax.security.auth.RefreshFailedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.Refreshable -> org.apache.harmony.javax.security.auth.Refreshable:
    void refresh() -> refresh
    boolean isCurrent() -> isCurrent
org.apache.harmony.javax.security.auth.Subject -> org.apache.harmony.javax.security.auth.Subject:
    long serialVersionUID -> serialVersionUID
    org.apache.harmony.javax.security.auth.AuthPermission _AS -> _AS
    org.apache.harmony.javax.security.auth.AuthPermission _AS_PRIVILEGED -> _AS_PRIVILEGED
    org.apache.harmony.javax.security.auth.AuthPermission _SUBJECT -> _SUBJECT
    org.apache.harmony.javax.security.auth.AuthPermission _PRINCIPALS -> _PRINCIPALS
    org.apache.harmony.javax.security.auth.AuthPermission _PRIVATE_CREDENTIALS -> _PRIVATE_CREDENTIALS
    org.apache.harmony.javax.security.auth.AuthPermission _PUBLIC_CREDENTIALS -> _PUBLIC_CREDENTIALS
    org.apache.harmony.javax.security.auth.AuthPermission _READ_ONLY -> _READ_ONLY
    java.util.Set principals -> principals
    boolean readOnly -> readOnly
    org.apache.harmony.javax.security.auth.Subject$SecureSet privateCredentials -> privateCredentials
    org.apache.harmony.javax.security.auth.Subject$SecureSet publicCredentials -> publicCredentials
    java.lang.Object doAs(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction) -> doAs
    java.lang.Object doAsPrivileged(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext) -> doAsPrivileged
    java.lang.Object doAs_PrivilegedAction(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedAction,java.security.AccessControlContext) -> doAs_PrivilegedAction
    java.lang.Object doAs(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction) -> doAs
    java.lang.Object doAsPrivileged(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext) -> doAsPrivileged
    java.lang.Object doAs_PrivilegedExceptionAction(org.apache.harmony.javax.security.auth.Subject,java.security.PrivilegedExceptionAction,java.security.AccessControlContext) -> doAs_PrivilegedExceptionAction
    boolean equals(java.lang.Object) -> equals
    java.util.Set getPrincipals() -> getPrincipals
    java.util.Set getPrincipals(java.lang.Class) -> getPrincipals
    java.util.Set getPrivateCredentials() -> getPrivateCredentials
    java.util.Set getPrivateCredentials(java.lang.Class) -> getPrivateCredentials
    java.util.Set getPublicCredentials() -> getPublicCredentials
    java.util.Set getPublicCredentials(java.lang.Class) -> getPublicCredentials
    int hashCode() -> hashCode
    void setReadOnly() -> setReadOnly
    boolean isReadOnly() -> isReadOnly
    java.lang.String toString() -> toString
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    org.apache.harmony.javax.security.auth.Subject getSubject(java.security.AccessControlContext) -> getSubject
    void checkPermission(java.security.Permission) -> checkPermission
    void checkState() -> checkState
    org.apache.harmony.javax.security.auth.AuthPermission access$000() -> access$000
    void access$100(org.apache.harmony.javax.security.auth.Subject) -> access$100
    void access$200(java.security.Permission) -> access$200
    org.apache.harmony.javax.security.auth.AuthPermission access$300() -> access$300
    java.util.Set access$400(org.apache.harmony.javax.security.auth.Subject) -> access$400
    org.apache.harmony.javax.security.auth.AuthPermission access$500() -> access$500
org.apache.harmony.javax.security.auth.Subject$1 -> org.apache.harmony.javax.security.auth.Subject$1:
    java.security.AccessControlContext val$context -> val$context
    org.apache.harmony.javax.security.auth.SubjectDomainCombiner val$combiner -> val$combiner
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$2 -> org.apache.harmony.javax.security.auth.Subject$2:
    java.security.AccessControlContext val$context -> val$context
    org.apache.harmony.javax.security.auth.SubjectDomainCombiner val$combiner -> val$combiner
    java.security.AccessControlContext run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$3 -> org.apache.harmony.javax.security.auth.Subject$3:
    java.security.AccessControlContext val$context -> val$context
    java.security.DomainCombiner run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.Subject$SecureSet -> org.apache.harmony.javax.security.auth.Subject$SecureSet:
    long serialVersionUID -> serialVersionUID
    java.util.LinkedList elements -> elements
    int setType -> setType
    int SET_Principal -> SET_Principal
    int SET_PrivCred -> SET_PrivCred
    int SET_PubCred -> SET_PubCred
    org.apache.harmony.javax.security.auth.AuthPermission permission -> permission
    org.apache.harmony.javax.security.auth.Subject this$0 -> this$0
    void verifyElement(java.lang.Object) -> verifyElement
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.util.Set get(java.lang.Class) -> get
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    org.apache.harmony.javax.security.auth.AuthPermission access$600(org.apache.harmony.javax.security.auth.Subject$SecureSet) -> access$600
org.apache.harmony.javax.security.auth.Subject$SecureSet$1 -> org.apache.harmony.javax.security.auth.Subject$SecureSet$1:
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    java.lang.Object next() -> next
org.apache.harmony.javax.security.auth.Subject$SecureSet$2 -> org.apache.harmony.javax.security.auth.Subject$SecureSet$2:
    java.util.LinkedList elements -> elements
    java.lang.Class val$c -> val$c
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
org.apache.harmony.javax.security.auth.Subject$SecureSet$SecureIterator -> org.apache.harmony.javax.security.auth.Subject$SecureSet$SecureIterator:
    java.util.Iterator iterator -> iterator
    org.apache.harmony.javax.security.auth.Subject$SecureSet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.harmony.javax.security.auth.SubjectDomainCombiner -> org.apache.harmony.javax.security.auth.SubjectDomainCombiner:
    org.apache.harmony.javax.security.auth.Subject subject -> subject
    org.apache.harmony.javax.security.auth.AuthPermission _GET -> _GET
    org.apache.harmony.javax.security.auth.Subject getSubject() -> getSubject
    java.security.ProtectionDomain[] combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[]) -> combine
org.apache.harmony.javax.security.auth.callback.Callback -> org.apache.harmony.javax.security.auth.callback.Callback:
org.apache.harmony.javax.security.auth.callback.CallbackHandler -> org.apache.harmony.javax.security.auth.callback.CallbackHandler:
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
org.apache.harmony.javax.security.auth.callback.ChoiceCallback -> org.apache.harmony.javax.security.auth.callback.ChoiceCallback:
    long serialVersionUID -> serialVersionUID
    int defaultChoice -> defaultChoice
    java.lang.String prompt -> prompt
    boolean multipleSelectionsAllowed -> multipleSelectionsAllowed
    java.lang.String[] choices -> choices
    int[] selections -> selections
    void setChoices(java.lang.String[]) -> setChoices
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultChoice(int) -> setDefaultChoice
    boolean allowMultipleSelections() -> allowMultipleSelections
    java.lang.String[] getChoices() -> getChoices
    int getDefaultChoice() -> getDefaultChoice
    java.lang.String getPrompt() -> getPrompt
    int[] getSelectedIndexes() -> getSelectedIndexes
    void setSelectedIndex(int) -> setSelectedIndex
    void setSelectedIndexes(int[]) -> setSelectedIndexes
org.apache.harmony.javax.security.auth.callback.ConfirmationCallback -> org.apache.harmony.javax.security.auth.callback.ConfirmationCallback:
    long serialVersionUID -> serialVersionUID
    int YES -> YES
    int NO -> NO
    int CANCEL -> CANCEL
    int OK -> OK
    int YES_NO_OPTION -> YES_NO_OPTION
    int YES_NO_CANCEL_OPTION -> YES_NO_CANCEL_OPTION
    int OK_CANCEL_OPTION -> OK_CANCEL_OPTION
    int UNSPECIFIED_OPTION -> UNSPECIFIED_OPTION
    int INFORMATION -> INFORMATION
    int WARNING -> WARNING
    int ERROR -> ERROR
    java.lang.String prompt -> prompt
    int messageType -> messageType
    int optionType -> optionType
    int defaultOption -> defaultOption
    java.lang.String[] options -> options
    int selection -> selection
    java.lang.String getPrompt() -> getPrompt
    int getMessageType() -> getMessageType
    int getDefaultOption() -> getDefaultOption
    java.lang.String[] getOptions() -> getOptions
    int getOptionType() -> getOptionType
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
org.apache.harmony.javax.security.auth.callback.LanguageCallback -> org.apache.harmony.javax.security.auth.callback.LanguageCallback:
    long serialVersionUID -> serialVersionUID
    java.util.Locale locale -> locale
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.harmony.javax.security.auth.callback.NameCallback -> org.apache.harmony.javax.security.auth.callback.NameCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String prompt -> prompt
    java.lang.String defaultName -> defaultName
    java.lang.String inputName -> inputName
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultName(java.lang.String) -> setDefaultName
    java.lang.String getPrompt() -> getPrompt
    java.lang.String getDefaultName() -> getDefaultName
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
org.apache.harmony.javax.security.auth.callback.PasswordCallback -> org.apache.harmony.javax.security.auth.callback.PasswordCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String prompt -> prompt
    boolean echoOn -> echoOn
    char[] inputPassword -> inputPassword
    void setPrompt(java.lang.String) -> setPrompt
    java.lang.String getPrompt() -> getPrompt
    boolean isEchoOn() -> isEchoOn
    void setPassword(char[]) -> setPassword
    char[] getPassword() -> getPassword
    void clearPassword() -> clearPassword
org.apache.harmony.javax.security.auth.callback.TextInputCallback -> org.apache.harmony.javax.security.auth.callback.TextInputCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String defaultText -> defaultText
    java.lang.String prompt -> prompt
    java.lang.String inputText -> inputText
    void setPrompt(java.lang.String) -> setPrompt
    void setDefaultText(java.lang.String) -> setDefaultText
    java.lang.String getDefaultText() -> getDefaultText
    java.lang.String getPrompt() -> getPrompt
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
org.apache.harmony.javax.security.auth.callback.TextOutputCallback -> org.apache.harmony.javax.security.auth.callback.TextOutputCallback:
    long serialVersionUID -> serialVersionUID
    int INFORMATION -> INFORMATION
    int WARNING -> WARNING
    int ERROR -> ERROR
    java.lang.String message -> message
    int messageType -> messageType
    java.lang.String getMessage() -> getMessage
    int getMessageType() -> getMessageType
org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException -> org.apache.harmony.javax.security.auth.callback.UnsupportedCallbackException:
    long serialVersionUID -> serialVersionUID
    org.apache.harmony.javax.security.auth.callback.Callback callback -> callback
    org.apache.harmony.javax.security.auth.callback.Callback getCallback() -> getCallback
org.apache.harmony.javax.security.auth.login.AccountException -> org.apache.harmony.javax.security.auth.login.AccountException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountExpiredException -> org.apache.harmony.javax.security.auth.login.AccountExpiredException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountLockedException -> org.apache.harmony.javax.security.auth.login.AccountLockedException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AccountNotFoundException -> org.apache.harmony.javax.security.auth.login.AccountNotFoundException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.AppConfigurationEntry -> org.apache.harmony.javax.security.auth.login.AppConfigurationEntry:
    java.util.Map options -> options
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag controlFlag -> controlFlag
    java.lang.String loginModuleName -> loginModuleName
    java.lang.String getLoginModuleName() -> getLoginModuleName
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag getControlFlag() -> getControlFlag
    java.util.Map getOptions() -> getOptions
org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag -> org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag:
    java.lang.String flag -> flag
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag REQUIRED -> REQUIRED
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag REQUISITE -> REQUISITE
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag OPTIONAL -> OPTIONAL
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry$LoginModuleControlFlag SUFFICIENT -> SUFFICIENT
    java.lang.String toString() -> toString
org.apache.harmony.javax.security.auth.login.Configuration -> org.apache.harmony.javax.security.auth.login.Configuration:
    org.apache.harmony.javax.security.auth.login.Configuration configuration -> configuration
    org.apache.harmony.javax.security.auth.AuthPermission GET_LOGIN_CONFIGURATION -> GET_LOGIN_CONFIGURATION
    org.apache.harmony.javax.security.auth.AuthPermission SET_LOGIN_CONFIGURATION -> SET_LOGIN_CONFIGURATION
    java.lang.String LOGIN_CONFIGURATION_PROVIDER -> LOGIN_CONFIGURATION_PROVIDER
    org.apache.harmony.javax.security.auth.login.Configuration getConfiguration() -> getConfiguration
    org.apache.harmony.javax.security.auth.login.Configuration getDefaultProvider() -> getDefaultProvider
    org.apache.harmony.javax.security.auth.login.Configuration getAccessibleConfiguration() -> getAccessibleConfiguration
    void setConfiguration(org.apache.harmony.javax.security.auth.login.Configuration) -> setConfiguration
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String) -> getAppConfigurationEntry
    void refresh() -> refresh
org.apache.harmony.javax.security.auth.login.Configuration$1 -> org.apache.harmony.javax.security.auth.login.Configuration$1:
    void refresh() -> refresh
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry[] getAppConfigurationEntry(java.lang.String) -> getAppConfigurationEntry
org.apache.harmony.javax.security.auth.login.CredentialException -> org.apache.harmony.javax.security.auth.login.CredentialException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.CredentialExpiredException -> org.apache.harmony.javax.security.auth.login.CredentialExpiredException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.CredentialNotFoundException -> org.apache.harmony.javax.security.auth.login.CredentialNotFoundException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.FailedLoginException -> org.apache.harmony.javax.security.auth.login.FailedLoginException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.login.LoginContext -> org.apache.harmony.javax.security.auth.login.LoginContext:
    java.lang.String DEFAULT_CALLBACK_HANDLER_PROPERTY -> DEFAULT_CALLBACK_HANDLER_PROPERTY
    int OPTIONAL -> OPTIONAL
    int REQUIRED -> REQUIRED
    int REQUISITE -> REQUISITE
    int SUFFICIENT -> SUFFICIENT
    org.apache.harmony.javax.security.auth.Subject subject -> subject
    boolean userProvidedSubject -> userProvidedSubject
    boolean userProvidedConfig -> userProvidedConfig
    java.security.AccessControlContext userContext -> userContext
    org.apache.harmony.javax.security.auth.callback.CallbackHandler callbackHandler -> callbackHandler
    org.apache.harmony.javax.security.auth.login.LoginContext$Module[] modules -> modules
    java.util.Map sharedState -> sharedState
    java.lang.ClassLoader contextClassLoader -> contextClassLoader
    boolean loggedIn -> loggedIn
    void init(java.lang.String,org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,org.apache.harmony.javax.security.auth.login.Configuration) -> init
    org.apache.harmony.javax.security.auth.Subject getSubject() -> getSubject
    void login() -> login
    void loginImpl() -> loginImpl
    void logout() -> logout
    void logoutImpl() -> logoutImpl
    java.lang.ClassLoader access$002(org.apache.harmony.javax.security.auth.login.LoginContext,java.lang.ClassLoader) -> access$002
    java.lang.ClassLoader access$000(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$000
    org.apache.harmony.javax.security.auth.callback.CallbackHandler access$102(org.apache.harmony.javax.security.auth.login.LoginContext,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> access$102
    void access$200(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$200
    void access$300(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$300
    java.security.AccessControlContext access$500(org.apache.harmony.javax.security.auth.login.LoginContext) -> access$500
org.apache.harmony.javax.security.auth.login.LoginContext$1 -> org.apache.harmony.javax.security.auth.login.LoginContext$1:
    org.apache.harmony.javax.security.auth.callback.CallbackHandler val$cbHandler -> val$cbHandler
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$2 -> org.apache.harmony.javax.security.auth.login.LoginContext$2:
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$3 -> org.apache.harmony.javax.security.auth.login.LoginContext$3:
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler -> org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler:
    org.apache.harmony.javax.security.auth.callback.CallbackHandler hiddenHandlerRef -> hiddenHandlerRef
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    org.apache.harmony.javax.security.auth.callback.CallbackHandler access$400(org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler) -> access$400
org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler$1 -> org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler$1:
    org.apache.harmony.javax.security.auth.callback.Callback[] val$callbacks -> val$callbacks
    org.apache.harmony.javax.security.auth.login.LoginContext$ContextedCallbackHandler this$1 -> this$1
    java.lang.Void run() -> run
    java.lang.Object run() -> run
org.apache.harmony.javax.security.auth.login.LoginContext$Module -> org.apache.harmony.javax.security.auth.login.LoginContext$Module:
    org.apache.harmony.javax.security.auth.login.AppConfigurationEntry entry -> entry
    int flag -> flag
    org.apache.harmony.javax.security.auth.spi.LoginModule module -> module
    java.lang.Class klass -> klass
    org.apache.harmony.javax.security.auth.login.LoginContext this$0 -> this$0
    int getFlag() -> getFlag
    void create(org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,java.util.Map) -> create
org.apache.harmony.javax.security.auth.login.LoginException -> org.apache.harmony.javax.security.auth.login.LoginException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.auth.spi.LoginModule -> org.apache.harmony.javax.security.auth.spi.LoginModule:
    void initialize(org.apache.harmony.javax.security.auth.Subject,org.apache.harmony.javax.security.auth.callback.CallbackHandler,java.util.Map,java.util.Map) -> initialize
    boolean login() -> login
    boolean commit() -> commit
    boolean abort() -> abort
    boolean logout() -> logout
org.apache.harmony.javax.security.sasl.AuthenticationException -> org.apache.harmony.javax.security.sasl.AuthenticationException:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.AuthorizeCallback -> org.apache.harmony.javax.security.sasl.AuthorizeCallback:
    long serialVersionUID -> serialVersionUID
    java.lang.String authenticationID -> authenticationID
    java.lang.String authorizationID -> authorizationID
    java.lang.String authorizedID -> authorizedID
    boolean authorized -> authorized
    java.lang.String getAuthenticationID() -> getAuthenticationID
    java.lang.String getAuthorizationID() -> getAuthorizationID
    java.lang.String getAuthorizedID() -> getAuthorizedID
    boolean isAuthorized() -> isAuthorized
    void setAuthorized(boolean) -> setAuthorized
    void setAuthorizedID(java.lang.String) -> setAuthorizedID
org.apache.harmony.javax.security.sasl.RealmCallback -> org.apache.harmony.javax.security.sasl.RealmCallback:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.RealmChoiceCallback -> org.apache.harmony.javax.security.sasl.RealmChoiceCallback:
    long serialVersionUID -> serialVersionUID
org.apache.harmony.javax.security.sasl.Sasl -> org.apache.harmony.javax.security.sasl.Sasl:
    java.lang.String CLIENTFACTORYSRV -> CLIENTFACTORYSRV
    java.lang.String SERVERFACTORYSRV -> SERVERFACTORYSRV
    java.lang.String POLICY_NOPLAINTEXT -> POLICY_NOPLAINTEXT
    java.lang.String POLICY_NOACTIVE -> POLICY_NOACTIVE
    java.lang.String POLICY_NODICTIONARY -> POLICY_NODICTIONARY
    java.lang.String POLICY_NOANONYMOUS -> POLICY_NOANONYMOUS
    java.lang.String POLICY_FORWARD_SECRECY -> POLICY_FORWARD_SECRECY
    java.lang.String POLICY_PASS_CREDENTIALS -> POLICY_PASS_CREDENTIALS
    java.lang.String MAX_BUFFER -> MAX_BUFFER
    java.lang.String RAW_SEND_SIZE -> RAW_SEND_SIZE
    java.lang.String REUSE -> REUSE
    java.lang.String QOP -> QOP
    java.lang.String STRENGTH -> STRENGTH
    java.lang.String SERVER_AUTH -> SERVER_AUTH
    java.lang.Object newInstance(java.lang.String,java.security.Provider) -> newInstance
    java.util.Collection findFactories(java.lang.String) -> findFactories
    java.util.Enumeration getSaslClientFactories() -> getSaslClientFactories
    java.util.Enumeration getSaslServerFactories() -> getSaslServerFactories
    org.apache.harmony.javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslServer
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
org.apache.harmony.javax.security.sasl.SaslClient -> org.apache.harmony.javax.security.sasl.SaslClient:
    void dispose() -> dispose
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
org.apache.harmony.javax.security.sasl.SaslClientFactory -> org.apache.harmony.javax.security.sasl.SaslClientFactory:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.harmony.javax.security.sasl.SaslException -> org.apache.harmony.javax.security.sasl.SaslException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable _exception -> _exception
    java.lang.Throwable getCause() -> getCause
    java.lang.Throwable initCause(java.lang.Throwable) -> initCause
    java.lang.String toString() -> toString
org.apache.harmony.javax.security.sasl.SaslServer -> org.apache.harmony.javax.security.sasl.SaslServer:
    void dispose() -> dispose
    byte[] evaluateResponse(byte[]) -> evaluateResponse
    java.lang.String getAuthorizationID() -> getAuthorizationID
    java.lang.String getMechanismName() -> getMechanismName
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
org.apache.harmony.javax.security.sasl.SaslServerFactory -> org.apache.harmony.javax.security.sasl.SaslServerFactory:
    org.apache.harmony.javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslServer
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.http.entity.mime.FormBodyPart -> org.apache.http.entity.mime.FormBodyPart:
    java.lang.String name -> name
    org.apache.http.entity.mime.Header header -> header
    org.apache.http.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    org.apache.http.entity.mime.content.ContentBody getBody() -> getBody
    org.apache.http.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> generateTransferEncoding
org.apache.http.entity.mime.Header -> org.apache.http.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.http.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.http.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpMultipart -> org.apache.http.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    org.apache.http.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
org.apache.http.entity.mime.HttpMultipart$1 -> org.apache.http.entity.mime.HttpMultipart$1:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode
org.apache.http.entity.mime.HttpMultipartMode -> org.apache.http.entity.mime.HttpMultipartMode:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.MIME -> org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
org.apache.http.entity.mime.MinimalField -> org.apache.http.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> org.apache.http.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.http.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> org.apache.http.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
org.apache.http.entity.mime.content.ByteArrayBody -> org.apache.http.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.ContentBody -> org.apache.http.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.ContentDescriptor -> org.apache.http.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.FileBody -> org.apache.http.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
org.apache.http.entity.mime.content.InputStreamBody -> org.apache.http.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.entity.mime.content.StringBody -> org.apache.http.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.qpid.management.common.sasl.CRAMMD5HashedSaslClientFactory -> org.apache.qpid.management.common.sasl.CRAMMD5HashedSaslClientFactory:
    java.lang.String MECHANISM -> MECHANISM
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.qpid.management.common.sasl.ClientSaslFactory -> org.apache.qpid.management.common.sasl.ClientSaslFactory:
    org.apache.harmony.javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> createSaslClient
    java.lang.String[] getMechanismNames(java.util.Map) -> getMechanismNames
org.apache.qpid.management.common.sasl.Constants -> org.apache.qpid.management.common.sasl.Constants:
    java.lang.String MECH_CRAMMD5 -> MECH_CRAMMD5
    java.lang.String MECH_PLAIN -> MECH_PLAIN
    java.lang.String SASL_CRAMMD5 -> SASL_CRAMMD5
    java.lang.String SASL_PLAIN -> SASL_PLAIN
org.apache.qpid.management.common.sasl.JCAProvider -> org.apache.qpid.management.common.sasl.JCAProvider:
    long serialVersionUID -> serialVersionUID
    void register(java.util.Map) -> register
org.apache.qpid.management.common.sasl.PlainSaslClient -> org.apache.qpid.management.common.sasl.PlainSaslClient:
    boolean completed -> completed
    org.apache.harmony.javax.security.auth.callback.CallbackHandler cbh -> cbh
    java.lang.String authorizationID -> authorizationID
    java.lang.String authenticationID -> authenticationID
    byte[] password -> password
    byte SEPARATOR -> SEPARATOR
    byte[] evaluateChallenge(byte[]) -> evaluateChallenge
    java.lang.String getMechanismName() -> getMechanismName
    boolean hasInitialResponse() -> hasInitialResponse
    boolean isComplete() -> isComplete
    byte[] unwrap(byte[],int,int) -> unwrap
    byte[] wrap(byte[],int,int) -> wrap
    java.lang.Object getNegotiatedProperty(java.lang.String) -> getNegotiatedProperty
    void clearPassword() -> clearPassword
    void dispose() -> dispose
    void finalize() -> finalize
    java.lang.Object[] getUserInfo() -> getUserInfo
org.apache.qpid.management.common.sasl.SaslProvider -> org.apache.qpid.management.common.sasl.SaslProvider:
    long serialVersionUID -> serialVersionUID
org.apache.qpid.management.common.sasl.UserPasswordCallbackHandler -> org.apache.qpid.management.common.sasl.UserPasswordCallbackHandler:
    java.lang.String user -> user
    char[] pwchars -> pwchars
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    void clearPassword() -> clearPassword
    void finalize() -> finalize
org.apache.qpid.management.common.sasl.UsernameHashedPasswordCallbackHandler -> org.apache.qpid.management.common.sasl.UsernameHashedPasswordCallbackHandler:
    java.lang.String user -> user
    char[] pwchars -> pwchars
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
    void clearPassword() -> clearPassword
    void finalize() -> finalize
    char[] getHash(java.lang.String) -> getHash
org.jivesoftware.smack.AbstractConnectionListener -> org.jivesoftware.smack.AbstractConnectionListener:
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smack.AccountManager -> org.jivesoftware.smack.AccountManager:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.packet.Registration info -> info
    boolean accountCreationSupported -> accountCreationSupported
    void setSupportsAccountCreation(boolean) -> setSupportsAccountCreation
    boolean supportsAccountCreation() -> supportsAccountCreation
    java.util.Collection getAccountAttributes() -> getAccountAttributes
    java.lang.String getAccountAttribute(java.lang.String) -> getAccountAttribute
    java.lang.String getAccountInstructions() -> getAccountInstructions
    void createAccount(java.lang.String,java.lang.String) -> createAccount
    void createAccount(java.lang.String,java.lang.String,java.util.Map) -> createAccount
    void changePassword(java.lang.String) -> changePassword
    void deleteAccount() -> deleteAccount
    void getRegistrationInfo() -> getRegistrationInfo
org.jivesoftware.smack.BOSHConfiguration -> org.jivesoftware.smack.BOSHConfiguration:
    boolean ssl -> ssl
    java.lang.String file -> file
    boolean isProxyEnabled() -> isProxyEnabled
    org.jivesoftware.smack.proxy.ProxyInfo getProxyInfo() -> getProxyInfo
    java.lang.String getProxyAddress() -> getProxyAddress
    int getProxyPort() -> getProxyPort
    boolean isUsingSSL() -> isUsingSSL
    java.net.URI getURI() -> getURI
org.jivesoftware.smack.BOSHConnection -> org.jivesoftware.smack.BOSHConnection:
    java.lang.String XMPP_BOSH_NS -> XMPP_BOSH_NS
    java.lang.String BOSH_URI -> BOSH_URI
    com.kenai.jbosh.BOSHClient client -> client
    org.jivesoftware.smack.BOSHConfiguration config -> config
    boolean connected -> connected
    boolean authenticated -> authenticated
    boolean anonymous -> anonymous
    boolean isFirstInitialization -> isFirstInitialization
    boolean wasAuthenticated -> wasAuthenticated
    boolean done -> done
    java.util.concurrent.ExecutorService listenerExecutor -> listenerExecutor
    java.io.PipedWriter readerPipe -> readerPipe
    java.lang.Thread readerConsumer -> readerConsumer
    java.lang.String authID -> authID
    java.lang.String sessionID -> sessionID
    java.lang.String user -> user
    org.jivesoftware.smack.Roster roster -> roster
    void connect() -> connect
    java.lang.String getConnectionID() -> getConnectionID
    org.jivesoftware.smack.Roster getRoster() -> getRoster
    java.lang.String getUser() -> getUser
    boolean isAnonymous() -> isAnonymous
    boolean isAuthenticated() -> isAuthenticated
    boolean isConnected() -> isConnected
    boolean isSecureConnection() -> isSecureConnection
    boolean isUsingCompression() -> isUsingCompression
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    void loginAnonymously() -> loginAnonymously
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    void disconnect(org.jivesoftware.smack.packet.Presence) -> disconnect
    void shutdown(org.jivesoftware.smack.packet.Presence) -> shutdown
    void setWasAuthenticated(boolean) -> setWasAuthenticated
    void send(com.kenai.jbosh.ComposableBody) -> send
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void initDebugger() -> initDebugger
    void notifyConnectionError(java.lang.Exception) -> notifyConnectionError
    void setRosterStorage(org.jivesoftware.smack.RosterStorage) -> setRosterStorage
    java.io.PipedWriter access$000(org.jivesoftware.smack.BOSHConnection) -> access$000
    java.lang.Thread access$100(org.jivesoftware.smack.BOSHConnection) -> access$100
    boolean access$200(org.jivesoftware.smack.BOSHConnection) -> access$200
    boolean access$302(org.jivesoftware.smack.BOSHConnection,boolean) -> access$302
    boolean access$400(org.jivesoftware.smack.BOSHConnection) -> access$400
    boolean access$402(org.jivesoftware.smack.BOSHConnection,boolean) -> access$402
    boolean access$500(org.jivesoftware.smack.BOSHConnection) -> access$500
    org.jivesoftware.smack.BOSHConfiguration access$600(org.jivesoftware.smack.BOSHConnection) -> access$600
org.jivesoftware.smack.BOSHConnection$1 -> org.jivesoftware.smack.BOSHConnection$1:
    org.jivesoftware.smack.BOSHConnection this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.jivesoftware.smack.BOSHConnection$2 -> org.jivesoftware.smack.BOSHConnection$2:
    org.jivesoftware.smack.BOSHConnection this$0 -> this$0
    void write(char[],int,int) -> write
    void close() -> close
    void flush() -> flush
org.jivesoftware.smack.BOSHConnection$3 -> org.jivesoftware.smack.BOSHConnection$3:
    org.jivesoftware.smack.BOSHConnection this$0 -> this$0
    void responseReceived(com.kenai.jbosh.BOSHMessageEvent) -> responseReceived
org.jivesoftware.smack.BOSHConnection$4 -> org.jivesoftware.smack.BOSHConnection$4:
    org.jivesoftware.smack.BOSHConnection this$0 -> this$0
    void requestSent(com.kenai.jbosh.BOSHMessageEvent) -> requestSent
org.jivesoftware.smack.BOSHConnection$5 -> org.jivesoftware.smack.BOSHConnection$5:
    java.lang.Thread thread -> thread
    int bufferLength -> bufferLength
    org.jivesoftware.smack.BOSHConnection this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.BOSHConnection$BOSHConnectionListener -> org.jivesoftware.smack.BOSHConnection$BOSHConnectionListener:
    org.jivesoftware.smack.BOSHConnection connection -> connection
    org.jivesoftware.smack.BOSHConnection this$0 -> this$0
    void connectionEvent(com.kenai.jbosh.BOSHClientConnEvent) -> connectionEvent
org.jivesoftware.smack.BOSHConnection$ListenerNotification -> org.jivesoftware.smack.BOSHConnection$ListenerNotification:
    org.jivesoftware.smack.packet.Packet packet -> packet
    org.jivesoftware.smack.BOSHConnection this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.BOSHPacketReader -> org.jivesoftware.smack.BOSHPacketReader:
    org.jivesoftware.smack.BOSHConnection connection -> connection
    void responseReceived(com.kenai.jbosh.BOSHMessageEvent) -> responseReceived
    void parseFeatures(org.xmlpull.v1.XmlPullParser) -> parseFeatures
org.jivesoftware.smack.Chat -> org.jivesoftware.smack.Chat:
    org.jivesoftware.smack.ChatManager chatManager -> chatManager
    java.lang.String threadID -> threadID
    java.lang.String participant -> participant
    java.util.Set listeners -> listeners
    java.lang.String getThreadID() -> getThreadID
    java.lang.String getParticipant() -> getParticipant
    void sendMessage(java.lang.String) -> sendMessage
    void sendMessage(org.jivesoftware.smack.packet.Message) -> sendMessage
    void addMessageListener(org.jivesoftware.smack.MessageListener) -> addMessageListener
    void removeMessageListener(org.jivesoftware.smack.MessageListener) -> removeMessageListener
    java.util.Collection getListeners() -> getListeners
    org.jivesoftware.smack.PacketCollector createCollector() -> createCollector
    void deliver(org.jivesoftware.smack.packet.Message) -> deliver
    boolean equals(java.lang.Object) -> equals
org.jivesoftware.smack.ChatManager -> org.jivesoftware.smack.ChatManager:
    java.lang.String prefix -> prefix
    long id -> id
    java.util.Map threadChats -> threadChats
    java.util.Map jidChats -> jidChats
    java.util.Set chatManagerListeners -> chatManagerListeners
    java.util.Map interceptors -> interceptors
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String nextID() -> nextID
    org.jivesoftware.smack.Chat createChat(java.lang.String,org.jivesoftware.smack.MessageListener) -> createChat
    org.jivesoftware.smack.Chat createChat(java.lang.String,java.lang.String,org.jivesoftware.smack.MessageListener) -> createChat
    org.jivesoftware.smack.Chat createChat(java.lang.String,java.lang.String,boolean) -> createChat
    org.jivesoftware.smack.Chat createChat(org.jivesoftware.smack.packet.Message) -> createChat
    org.jivesoftware.smack.Chat getUserChat(java.lang.String) -> getUserChat
    org.jivesoftware.smack.Chat getThreadChat(java.lang.String) -> getThreadChat
    void addChatListener(org.jivesoftware.smack.ChatManagerListener) -> addChatListener
    void removeChatListener(org.jivesoftware.smack.ChatManagerListener) -> removeChatListener
    java.util.Collection getChatListeners() -> getChatListeners
    void deliverMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> deliverMessage
    void sendMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> sendMessage
    org.jivesoftware.smack.PacketCollector createPacketCollector(org.jivesoftware.smack.Chat) -> createPacketCollector
    void addOutgoingMessageInterceptor(org.jivesoftware.smack.PacketInterceptor) -> addOutgoingMessageInterceptor
    void addOutgoingMessageInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addOutgoingMessageInterceptor
    org.jivesoftware.smack.Chat access$000(org.jivesoftware.smack.ChatManager,java.lang.String) -> access$000
    org.jivesoftware.smack.Chat access$100(org.jivesoftware.smack.ChatManager,org.jivesoftware.smack.packet.Message) -> access$100
    void access$200(org.jivesoftware.smack.ChatManager,org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> access$200
org.jivesoftware.smack.ChatManager$1 -> org.jivesoftware.smack.ChatManager$1:
    org.jivesoftware.smack.ChatManager this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.ChatManager$2 -> org.jivesoftware.smack.ChatManager$2:
    org.jivesoftware.smack.ChatManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.ChatManagerListener -> org.jivesoftware.smack.ChatManagerListener:
    void chatCreated(org.jivesoftware.smack.Chat,boolean) -> chatCreated
org.jivesoftware.smack.Connection -> org.jivesoftware.smack.Connection:
    java.util.concurrent.atomic.AtomicInteger connectionCounter -> connectionCounter
    java.util.Set connectionEstablishedListeners -> connectionEstablishedListeners
    boolean DEBUG_ENABLED -> DEBUG_ENABLED
    java.util.Collection connectionListeners -> connectionListeners
    java.util.Collection collectors -> collectors
    java.util.Map recvListeners -> recvListeners
    java.util.Map sendListeners -> sendListeners
    java.util.Map interceptors -> interceptors
    org.jivesoftware.smack.AccountManager accountManager -> accountManager
    org.jivesoftware.smack.ChatManager chatManager -> chatManager
    org.jivesoftware.smack.debugger.SmackDebugger debugger -> debugger
    java.io.Reader reader -> reader
    java.io.Writer writer -> writer
    org.jivesoftware.smack.RosterStorage rosterStorage -> rosterStorage
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> saslAuthentication
    int connectionCounterValue -> connectionCounterValue
    org.jivesoftware.smack.ConnectionConfiguration config -> config
    org.jivesoftware.smack.ConnectionConfiguration getConfiguration() -> getConfiguration
    java.lang.String getServiceName() -> getServiceName
    java.lang.String getHost() -> getHost
    java.lang.String getCapsNode() -> getCapsNode
    int getPort() -> getPort
    java.lang.String getUser() -> getUser
    java.lang.String getConnectionID() -> getConnectionID
    boolean isConnected() -> isConnected
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    boolean isSecureConnection() -> isSecureConnection
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    boolean isUsingCompression() -> isUsingCompression
    void connect() -> connect
    void login(java.lang.String,java.lang.String) -> login
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    void loginAnonymously() -> loginAnonymously
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    org.jivesoftware.smack.AccountManager getAccountManager() -> getAccountManager
    org.jivesoftware.smack.ChatManager getChatManager() -> getChatManager
    org.jivesoftware.smack.Roster getRoster() -> getRoster
    void setRosterStorage(org.jivesoftware.smack.RosterStorage) -> setRosterStorage
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> getSASLAuthentication
    void disconnect() -> disconnect
    void disconnect(org.jivesoftware.smack.packet.Presence) -> disconnect
    void addConnectionCreationListener(org.jivesoftware.smack.ConnectionCreationListener) -> addConnectionCreationListener
    void removeConnectionCreationListener(org.jivesoftware.smack.ConnectionCreationListener) -> removeConnectionCreationListener
    java.util.Collection getConnectionCreationListeners() -> getConnectionCreationListeners
    void addConnectionListener(org.jivesoftware.smack.ConnectionListener) -> addConnectionListener
    void removeConnectionListener(org.jivesoftware.smack.ConnectionListener) -> removeConnectionListener
    java.util.Collection getConnectionListeners() -> getConnectionListeners
    org.jivesoftware.smack.PacketCollector createPacketCollector(org.jivesoftware.smack.filter.PacketFilter) -> createPacketCollector
    void removePacketCollector(org.jivesoftware.smack.PacketCollector) -> removePacketCollector
    java.util.Collection getPacketCollectors() -> getPacketCollectors
    void addPacketListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketListener
    void removePacketListener(org.jivesoftware.smack.PacketListener) -> removePacketListener
    java.util.Map getPacketListeners() -> getPacketListeners
    void addPacketSendingListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketSendingListener
    void removePacketSendingListener(org.jivesoftware.smack.PacketListener) -> removePacketSendingListener
    java.util.Map getPacketSendingListeners() -> getPacketSendingListeners
    void firePacketSendingListeners(org.jivesoftware.smack.packet.Packet) -> firePacketSendingListeners
    void addPacketInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addPacketInterceptor
    void removePacketInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePacketInterceptor
    boolean isSendPresence() -> isSendPresence
    java.util.Map getPacketInterceptors() -> getPacketInterceptors
    void firePacketInterceptors(org.jivesoftware.smack.packet.Packet) -> firePacketInterceptors
    void initDebugger() -> initDebugger
org.jivesoftware.smack.Connection$InterceptorWrapper -> org.jivesoftware.smack.Connection$InterceptorWrapper:
    org.jivesoftware.smack.PacketInterceptor packetInterceptor -> packetInterceptor
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    boolean equals(java.lang.Object) -> equals
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> notifyListener
org.jivesoftware.smack.Connection$ListenerWrapper -> org.jivesoftware.smack.Connection$ListenerWrapper:
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    void notifyListener(org.jivesoftware.smack.packet.Packet) -> notifyListener
org.jivesoftware.smack.ConnectionConfiguration -> org.jivesoftware.smack.ConnectionConfiguration:
    java.lang.String serviceName -> serviceName
    java.lang.String host -> host
    int port -> port
    java.lang.String truststorePath -> truststorePath
    java.lang.String truststoreType -> truststoreType
    java.lang.String truststorePassword -> truststorePassword
    java.lang.String keystorePath -> keystorePath
    java.lang.String keystoreType -> keystoreType
    java.lang.String pkcs11Library -> pkcs11Library
    boolean verifyChainEnabled -> verifyChainEnabled
    boolean verifyRootCAEnabled -> verifyRootCAEnabled
    boolean selfSignedCertificateEnabled -> selfSignedCertificateEnabled
    boolean expiredCertificatesCheckEnabled -> expiredCertificatesCheckEnabled
    boolean notMatchingDomainCheckEnabled -> notMatchingDomainCheckEnabled
    boolean isRosterVersioningAvailable -> isRosterVersioningAvailable
    java.lang.String capsNode -> capsNode
    javax.net.ssl.SSLContext customSSLContext -> customSSLContext
    boolean compressionEnabled -> compressionEnabled
    boolean saslAuthenticationEnabled -> saslAuthenticationEnabled
    org.apache.harmony.javax.security.auth.callback.CallbackHandler callbackHandler -> callbackHandler
    boolean debuggerEnabled -> debuggerEnabled
    boolean reconnectionAllowed -> reconnectionAllowed
    javax.net.SocketFactory socketFactory -> socketFactory
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String resource -> resource
    boolean sendPresence -> sendPresence
    boolean rosterLoadedAtLogin -> rosterLoadedAtLogin
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode securityMode -> securityMode
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    void init(java.lang.String,int,java.lang.String,org.jivesoftware.smack.proxy.ProxyInfo) -> init
    void setServiceName(java.lang.String) -> setServiceName
    java.lang.String getServiceName() -> getServiceName
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode getSecurityMode() -> getSecurityMode
    void setSecurityMode(org.jivesoftware.smack.ConnectionConfiguration$SecurityMode) -> setSecurityMode
    java.lang.String getTruststorePath() -> getTruststorePath
    void setTruststorePath(java.lang.String) -> setTruststorePath
    java.lang.String getTruststoreType() -> getTruststoreType
    void setTruststoreType(java.lang.String) -> setTruststoreType
    java.lang.String getTruststorePassword() -> getTruststorePassword
    void setTruststorePassword(java.lang.String) -> setTruststorePassword
    java.lang.String getKeystorePath() -> getKeystorePath
    void setKeystorePath(java.lang.String) -> setKeystorePath
    java.lang.String getKeystoreType() -> getKeystoreType
    void setKeystoreType(java.lang.String) -> setKeystoreType
    java.lang.String getPKCS11Library() -> getPKCS11Library
    void setPKCS11Library(java.lang.String) -> setPKCS11Library
    boolean isVerifyChainEnabled() -> isVerifyChainEnabled
    void setVerifyChainEnabled(boolean) -> setVerifyChainEnabled
    boolean isVerifyRootCAEnabled() -> isVerifyRootCAEnabled
    void setVerifyRootCAEnabled(boolean) -> setVerifyRootCAEnabled
    boolean isSelfSignedCertificateEnabled() -> isSelfSignedCertificateEnabled
    void setSelfSignedCertificateEnabled(boolean) -> setSelfSignedCertificateEnabled
    boolean isExpiredCertificatesCheckEnabled() -> isExpiredCertificatesCheckEnabled
    void setExpiredCertificatesCheckEnabled(boolean) -> setExpiredCertificatesCheckEnabled
    boolean isNotMatchingDomainCheckEnabled() -> isNotMatchingDomainCheckEnabled
    void setNotMatchingDomainCheckEnabled(boolean) -> setNotMatchingDomainCheckEnabled
    javax.net.ssl.SSLContext getCustomSSLContext() -> getCustomSSLContext
    void setCustomSSLContext(javax.net.ssl.SSLContext) -> setCustomSSLContext
    boolean isCompressionEnabled() -> isCompressionEnabled
    void setCompressionEnabled(boolean) -> setCompressionEnabled
    boolean isSASLAuthenticationEnabled() -> isSASLAuthenticationEnabled
    void setSASLAuthenticationEnabled(boolean) -> setSASLAuthenticationEnabled
    boolean isDebuggerEnabled() -> isDebuggerEnabled
    void setDebuggerEnabled(boolean) -> setDebuggerEnabled
    void setReconnectionAllowed(boolean) -> setReconnectionAllowed
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    void setSocketFactory(javax.net.SocketFactory) -> setSocketFactory
    void setSendPresence(boolean) -> setSendPresence
    boolean isRosterLoadedAtLogin() -> isRosterLoadedAtLogin
    void setRosterLoadedAtLogin(boolean) -> setRosterLoadedAtLogin
    org.apache.harmony.javax.security.auth.callback.CallbackHandler getCallbackHandler() -> getCallbackHandler
    void setCallbackHandler(org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> setCallbackHandler
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.lang.String getResource() -> getResource
    boolean isRosterVersioningAvailable() -> isRosterVersioningAvailable
    void setRosterVersioningAvailable(boolean) -> setRosterVersioningAvailable
    void setCapsNode(java.lang.String) -> setCapsNode
    java.lang.String getCapsNode() -> getCapsNode
    boolean isSendPresence() -> isSendPresence
    void setLoginInfo(java.lang.String,java.lang.String,java.lang.String) -> setLoginInfo
org.jivesoftware.smack.ConnectionConfiguration$SecurityMode -> org.jivesoftware.smack.ConnectionConfiguration$SecurityMode:
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode required -> required
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode enabled -> enabled
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode disabled -> disabled
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] $VALUES -> $VALUES
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode[] values() -> values
    org.jivesoftware.smack.ConnectionConfiguration$SecurityMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.ConnectionCreationListener -> org.jivesoftware.smack.ConnectionCreationListener:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.ConnectionListener -> org.jivesoftware.smack.ConnectionListener:
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
org.jivesoftware.smack.MessageListener -> org.jivesoftware.smack.MessageListener:
    void processMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> processMessage
org.jivesoftware.smack.NonSASLAuthentication -> org.jivesoftware.smack.NonSASLAuthentication:
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
org.jivesoftware.smack.OpenTrustManager -> org.jivesoftware.smack.OpenTrustManager:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
org.jivesoftware.smack.PacketCollector -> org.jivesoftware.smack.PacketCollector:
    int MAX_PACKETS -> MAX_PACKETS
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    java.util.concurrent.LinkedBlockingQueue resultQueue -> resultQueue
    org.jivesoftware.smack.Connection conection -> conection
    boolean cancelled -> cancelled
    void cancel() -> cancel
    org.jivesoftware.smack.filter.PacketFilter getPacketFilter() -> getPacketFilter
    org.jivesoftware.smack.packet.Packet pollResult() -> pollResult
    org.jivesoftware.smack.packet.Packet nextResult() -> nextResult
    org.jivesoftware.smack.packet.Packet nextResult(long) -> nextResult
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PacketInterceptor -> org.jivesoftware.smack.PacketInterceptor:
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smack.PacketListener -> org.jivesoftware.smack.PacketListener:
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PacketReader -> org.jivesoftware.smack.PacketReader:
    java.lang.Thread readerThread -> readerThread
    java.util.concurrent.ExecutorService listenerExecutor -> listenerExecutor
    org.jivesoftware.smack.XMPPConnection connection -> connection
    org.xmlpull.v1.XmlPullParser parser -> parser
    boolean done -> done
    java.lang.String connectionID -> connectionID
    java.util.concurrent.Semaphore connectionSemaphore -> connectionSemaphore
    void init() -> init
    void startup() -> startup
    void shutdown() -> shutdown
    void cleanup() -> cleanup
    void notifyConnectionError(java.lang.Exception) -> notifyConnectionError
    void notifyReconnection() -> notifyReconnection
    void resetParser() -> resetParser
    void parsePackets(java.lang.Thread) -> parsePackets
    void releaseConnectionIDLock() -> releaseConnectionIDLock
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void parseFeatures(org.xmlpull.v1.XmlPullParser) -> parseFeatures
    void access$000(org.jivesoftware.smack.PacketReader,java.lang.Thread) -> access$000
    org.jivesoftware.smack.XMPPConnection access$100(org.jivesoftware.smack.PacketReader) -> access$100
org.jivesoftware.smack.PacketReader$1 -> org.jivesoftware.smack.PacketReader$1:
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PacketReader$2 -> org.jivesoftware.smack.PacketReader$2:
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.jivesoftware.smack.PacketReader$ListenerNotification -> org.jivesoftware.smack.PacketReader$ListenerNotification:
    org.jivesoftware.smack.packet.Packet packet -> packet
    org.jivesoftware.smack.PacketReader this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PacketWriter -> org.jivesoftware.smack.PacketWriter:
    java.lang.Thread writerThread -> writerThread
    java.lang.Thread keepAliveThread -> keepAliveThread
    java.io.Writer writer -> writer
    org.jivesoftware.smack.XMPPConnection connection -> connection
    java.util.concurrent.BlockingQueue queue -> queue
    boolean done -> done
    long lastActive -> lastActive
    void init() -> init
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    void startup() -> startup
    void startKeepAliveProcess() -> startKeepAliveProcess
    void setWriter(java.io.Writer) -> setWriter
    void shutdown() -> shutdown
    void cleanup() -> cleanup
    org.jivesoftware.smack.packet.Packet nextPacket() -> nextPacket
    void writePackets(java.lang.Thread) -> writePackets
    void openStream() -> openStream
    void access$000(org.jivesoftware.smack.PacketWriter,java.lang.Thread) -> access$000
    boolean access$100(org.jivesoftware.smack.PacketWriter) -> access$100
    java.lang.Thread access$200(org.jivesoftware.smack.PacketWriter) -> access$200
    java.io.Writer access$300(org.jivesoftware.smack.PacketWriter) -> access$300
    long access$400(org.jivesoftware.smack.PacketWriter) -> access$400
org.jivesoftware.smack.PacketWriter$1 -> org.jivesoftware.smack.PacketWriter$1:
    org.jivesoftware.smack.PacketWriter this$0 -> this$0
    void run() -> run
org.jivesoftware.smack.PacketWriter$KeepAliveTask -> org.jivesoftware.smack.PacketWriter$KeepAliveTask:
    int delay -> delay
    java.lang.Thread thread -> thread
    org.jivesoftware.smack.PacketWriter this$0 -> this$0
    void setThread(java.lang.Thread) -> setThread
    void run() -> run
org.jivesoftware.smack.PrivacyList -> org.jivesoftware.smack.PrivacyList:
    boolean isActiveList -> isActiveList
    boolean isDefaultList -> isDefaultList
    java.lang.String listName -> listName
    java.util.List items -> items
    boolean isActiveList() -> isActiveList
    boolean isDefaultList() -> isDefaultList
    java.util.List getItems() -> getItems
    java.lang.String toString() -> toString
org.jivesoftware.smack.PrivacyListListener -> org.jivesoftware.smack.PrivacyListListener:
    void setPrivacyList(java.lang.String,java.util.List) -> setPrivacyList
    void updatedPrivacyList(java.lang.String) -> updatedPrivacyList
org.jivesoftware.smack.PrivacyListManager -> org.jivesoftware.smack.PrivacyListManager:
    java.util.Map instances -> instances
    org.jivesoftware.smack.Connection connection -> connection
    java.util.List listeners -> listeners
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    java.lang.String getUser() -> getUser
    void init() -> init
    org.jivesoftware.smack.PrivacyListManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    org.jivesoftware.smack.packet.Privacy getRequest(org.jivesoftware.smack.packet.Privacy) -> getRequest
    org.jivesoftware.smack.packet.Packet setRequest(org.jivesoftware.smack.packet.Privacy) -> setRequest
    org.jivesoftware.smack.packet.Privacy getPrivacyWithListNames() -> getPrivacyWithListNames
    org.jivesoftware.smack.PrivacyList getActiveList() -> getActiveList
    org.jivesoftware.smack.PrivacyList getDefaultList() -> getDefaultList
    java.util.List getPrivacyListItems(java.lang.String) -> getPrivacyListItems
    org.jivesoftware.smack.PrivacyList getPrivacyList(java.lang.String) -> getPrivacyList
    org.jivesoftware.smack.PrivacyList[] getPrivacyLists() -> getPrivacyLists
    void setActiveListName(java.lang.String) -> setActiveListName
    void declineActiveList() -> declineActiveList
    void setDefaultListName(java.lang.String) -> setDefaultListName
    void declineDefaultList() -> declineDefaultList
    void createPrivacyList(java.lang.String,java.util.List) -> createPrivacyList
    void updatePrivacyList(java.lang.String,java.util.List) -> updatePrivacyList
    void deletePrivacyList(java.lang.String) -> deletePrivacyList
    void addListener(org.jivesoftware.smack.PrivacyListListener) -> addListener
    org.jivesoftware.smack.Connection access$100(org.jivesoftware.smack.PrivacyListManager) -> access$100
    java.util.Map access$200() -> access$200
    java.util.List access$300(org.jivesoftware.smack.PrivacyListManager) -> access$300
org.jivesoftware.smack.PrivacyListManager$1 -> org.jivesoftware.smack.PrivacyListManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.PrivacyListManager$2 -> org.jivesoftware.smack.PrivacyListManager$2:
    org.jivesoftware.smack.PrivacyListManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smack.PrivacyListManager$3 -> org.jivesoftware.smack.PrivacyListManager$3:
    org.jivesoftware.smack.PrivacyListManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.PrivacyListManager$3$1 -> org.jivesoftware.smack.PrivacyListManager$3$1:
    org.jivesoftware.smack.PrivacyListManager$3 this$1 -> this$1
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.ReconnectionManager -> org.jivesoftware.smack.ReconnectionManager:
    org.jivesoftware.smack.Connection connection -> connection
    boolean done -> done
    boolean isReconnectionAllowed() -> isReconnectionAllowed
    void reconnect() -> reconnect
    void notifyReconnectionFailed(java.lang.Exception) -> notifyReconnectionFailed
    void notifyAttemptToReconnectIn(int) -> notifyAttemptToReconnectIn
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    boolean access$100(org.jivesoftware.smack.ReconnectionManager) -> access$100
    org.jivesoftware.smack.Connection access$200(org.jivesoftware.smack.ReconnectionManager) -> access$200
org.jivesoftware.smack.ReconnectionManager$1 -> org.jivesoftware.smack.ReconnectionManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.ReconnectionManager$2 -> org.jivesoftware.smack.ReconnectionManager$2:
    int attempts -> attempts
    org.jivesoftware.smack.ReconnectionManager this$0 -> this$0
    int timeDelay() -> timeDelay
    void run() -> run
org.jivesoftware.smack.Roster -> org.jivesoftware.smack.Roster:
    org.jivesoftware.smack.Roster$SubscriptionMode defaultSubscriptionMode -> defaultSubscriptionMode
    org.jivesoftware.smack.RosterStorage persistentStorage -> persistentStorage
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Map groups -> groups
    java.util.Map entries -> entries
    java.util.List unfiledEntries -> unfiledEntries
    java.util.List rosterListeners -> rosterListeners
    java.util.Map presenceMap -> presenceMap
    boolean rosterInitialized -> rosterInitialized
    org.jivesoftware.smack.Roster$PresencePacketListener presencePacketListener -> presencePacketListener
    org.jivesoftware.smack.Roster$SubscriptionMode subscriptionMode -> subscriptionMode
    java.lang.String requestPacketId -> requestPacketId
    org.jivesoftware.smack.Roster$SubscriptionMode getDefaultSubscriptionMode() -> getDefaultSubscriptionMode
    void setDefaultSubscriptionMode(org.jivesoftware.smack.Roster$SubscriptionMode) -> setDefaultSubscriptionMode
    org.jivesoftware.smack.Roster$SubscriptionMode getSubscriptionMode() -> getSubscriptionMode
    void setSubscriptionMode(org.jivesoftware.smack.Roster$SubscriptionMode) -> setSubscriptionMode
    void reload() -> reload
    void addRosterListener(org.jivesoftware.smack.RosterListener) -> addRosterListener
    void removeRosterListener(org.jivesoftware.smack.RosterListener) -> removeRosterListener
    org.jivesoftware.smack.RosterGroup createGroup(java.lang.String) -> createGroup
    void createEntry(java.lang.String,java.lang.String,java.lang.String[]) -> createEntry
    void insertRosterItems(java.util.List) -> insertRosterItems
    void insertRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> insertRosterItem
    void removeEntry(org.jivesoftware.smack.RosterEntry) -> removeEntry
    int getEntryCount() -> getEntryCount
    java.util.Collection getEntries() -> getEntries
    int getUnfiledEntryCount() -> getUnfiledEntryCount
    java.util.Collection getUnfiledEntries() -> getUnfiledEntries
    org.jivesoftware.smack.RosterEntry getEntry(java.lang.String) -> getEntry
    boolean contains(java.lang.String) -> contains
    org.jivesoftware.smack.RosterGroup getGroup(java.lang.String) -> getGroup
    int getGroupCount() -> getGroupCount
    java.util.Collection getGroups() -> getGroups
    org.jivesoftware.smack.packet.Presence getPresence(java.lang.String) -> getPresence
    org.jivesoftware.smack.packet.Presence getPresenceResource(java.lang.String) -> getPresenceResource
    java.util.Iterator getPresences(java.lang.String) -> getPresences
    void cleanup() -> cleanup
    java.lang.String getPresenceMapKey(java.lang.String) -> getPresenceMapKey
    void setOfflinePresences() -> setOfflinePresences
    void fireRosterChangedEvent(java.util.Collection,java.util.Collection,java.util.Collection) -> fireRosterChangedEvent
    void fireRosterPresenceEvent(org.jivesoftware.smack.packet.Presence) -> fireRosterPresenceEvent
    void access$200(org.jivesoftware.smack.Roster) -> access$200
    org.jivesoftware.smack.Connection access$300(org.jivesoftware.smack.Roster) -> access$300
    java.lang.String access$500(org.jivesoftware.smack.Roster,java.lang.String) -> access$500
    java.util.Map access$600(org.jivesoftware.smack.Roster) -> access$600
    java.util.Map access$700(org.jivesoftware.smack.Roster) -> access$700
    void access$800(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.Presence) -> access$800
    org.jivesoftware.smack.Roster$SubscriptionMode access$900(org.jivesoftware.smack.Roster) -> access$900
    org.jivesoftware.smack.RosterStorage access$1000(org.jivesoftware.smack.Roster) -> access$1000
    void access$1100(org.jivesoftware.smack.Roster,org.jivesoftware.smack.packet.RosterPacket$Item,java.util.Collection,java.util.Collection,java.util.Collection) -> access$1100
    void access$1200(org.jivesoftware.smack.Roster,java.util.Collection,java.util.Collection,java.util.Collection) -> access$1200
    org.jivesoftware.smack.RosterStorage access$1002(org.jivesoftware.smack.Roster,org.jivesoftware.smack.RosterStorage) -> access$1002
org.jivesoftware.smack.Roster$1 -> org.jivesoftware.smack.Roster$1:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
org.jivesoftware.smack.Roster$2 -> org.jivesoftware.smack.Roster$2:
    org.jivesoftware.smack.ConnectionListener val$connectionListener -> val$connectionListener
    org.jivesoftware.smack.Roster this$0 -> this$0
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smack.Roster$PresencePacketListener -> org.jivesoftware.smack.Roster$PresencePacketListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$RosterPacketListener -> org.jivesoftware.smack.Roster$RosterPacketListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$RosterResultListener -> org.jivesoftware.smack.Roster$RosterResultListener:
    org.jivesoftware.smack.Roster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.Roster$SubscriptionMode -> org.jivesoftware.smack.Roster$SubscriptionMode:
    org.jivesoftware.smack.Roster$SubscriptionMode accept_all -> accept_all
    org.jivesoftware.smack.Roster$SubscriptionMode reject_all -> reject_all
    org.jivesoftware.smack.Roster$SubscriptionMode manual -> manual
    org.jivesoftware.smack.Roster$SubscriptionMode[] $VALUES -> $VALUES
    org.jivesoftware.smack.Roster$SubscriptionMode[] values() -> values
    org.jivesoftware.smack.Roster$SubscriptionMode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.RosterEntry -> org.jivesoftware.smack.RosterEntry:
    java.lang.String user -> user
    java.lang.String name -> name
    org.jivesoftware.smack.packet.RosterPacket$ItemType type -> type
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus status -> status
    org.jivesoftware.smack.Roster roster -> roster
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void updateState(java.lang.String,org.jivesoftware.smack.packet.RosterPacket$ItemType,org.jivesoftware.smack.packet.RosterPacket$ItemStatus) -> updateState
    java.util.Collection getGroups() -> getGroups
    org.jivesoftware.smack.packet.RosterPacket$ItemType getType() -> getType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus getStatus() -> getStatus
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean equalsDeep(java.lang.Object) -> equalsDeep
    org.jivesoftware.smack.packet.RosterPacket$Item toRosterItem(org.jivesoftware.smack.RosterEntry) -> toRosterItem
org.jivesoftware.smack.RosterGroup -> org.jivesoftware.smack.RosterGroup:
    java.lang.String name -> name
    org.jivesoftware.smack.Connection connection -> connection
    java.util.List entries -> entries
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    int getEntryCount() -> getEntryCount
    java.util.Collection getEntries() -> getEntries
    org.jivesoftware.smack.RosterEntry getEntry(java.lang.String) -> getEntry
    boolean contains(org.jivesoftware.smack.RosterEntry) -> contains
    boolean contains(java.lang.String) -> contains
    void addEntry(org.jivesoftware.smack.RosterEntry) -> addEntry
    void removeEntry(org.jivesoftware.smack.RosterEntry) -> removeEntry
    void addEntryLocal(org.jivesoftware.smack.RosterEntry) -> addEntryLocal
    void removeEntryLocal(org.jivesoftware.smack.RosterEntry) -> removeEntryLocal
org.jivesoftware.smack.RosterListener -> org.jivesoftware.smack.RosterListener:
    void entriesAdded(java.util.Collection) -> entriesAdded
    void entriesUpdated(java.util.Collection) -> entriesUpdated
    void entriesDeleted(java.util.Collection) -> entriesDeleted
    void presenceChanged(org.jivesoftware.smack.packet.Presence) -> presenceChanged
org.jivesoftware.smack.RosterStorage -> org.jivesoftware.smack.RosterStorage:
    java.util.List getEntries() -> getEntries
    org.jivesoftware.smack.packet.RosterPacket$Item getEntry(java.lang.String) -> getEntry
    int getEntryCount() -> getEntryCount
    java.lang.String getRosterVersion() -> getRosterVersion
    void addEntry(org.jivesoftware.smack.packet.RosterPacket$Item,java.lang.String) -> addEntry
    void removeEntry(java.lang.String) -> removeEntry
    void updateLocalEntry(org.jivesoftware.smack.packet.RosterPacket$Item) -> updateLocalEntry
org.jivesoftware.smack.SASLAuthentication -> org.jivesoftware.smack.SASLAuthentication:
    java.util.Map implementedMechanisms -> implementedMechanisms
    java.util.List mechanismsPreferences -> mechanismsPreferences
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Collection serverMechanisms -> serverMechanisms
    org.jivesoftware.smack.sasl.SASLMechanism currentMechanism -> currentMechanism
    boolean saslNegotiated -> saslNegotiated
    boolean saslFailed -> saslFailed
    boolean resourceBinded -> resourceBinded
    boolean sessionSupported -> sessionSupported
    java.lang.String errorCondition -> errorCondition
    void registerSASLMechanism(java.lang.String,java.lang.Class) -> registerSASLMechanism
    void unregisterSASLMechanism(java.lang.String) -> unregisterSASLMechanism
    void supportSASLMechanism(java.lang.String) -> supportSASLMechanism
    void supportSASLMechanism(java.lang.String,int) -> supportSASLMechanism
    void unsupportSASLMechanism(java.lang.String) -> unsupportSASLMechanism
    java.util.List getRegisterSASLMechanisms() -> getRegisterSASLMechanisms
    boolean hasAnonymousAuthentication() -> hasAnonymousAuthentication
    boolean hasNonAnonymousAuthentication() -> hasNonAnonymousAuthentication
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
    java.lang.String bindResourceAndEstablishSession(java.lang.String) -> bindResourceAndEstablishSession
    void setAvailableSASLMethods(java.util.Collection) -> setAvailableSASLMethods
    boolean isAuthenticated() -> isAuthenticated
    void challengeReceived(java.lang.String) -> challengeReceived
    void authenticated() -> authenticated
    void authenticationFailed() -> authenticationFailed
    void authenticationFailed(java.lang.String) -> authenticationFailed
    void bindingRequired() -> bindingRequired
    void send(org.jivesoftware.smack.packet.Packet) -> send
    void sessionsSupported() -> sessionsSupported
    void init() -> init
org.jivesoftware.smack.ServerTrustManager -> org.jivesoftware.smack.ServerTrustManager:
    java.util.regex.Pattern cnPattern -> cnPattern
    org.jivesoftware.smack.ConnectionConfiguration configuration -> configuration
    java.lang.String server -> server
    java.security.KeyStore trustStore -> trustStore
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.util.List getPeerIdentity(java.security.cert.X509Certificate) -> getPeerIdentity
    java.util.List getSubjectAlternativeNames(java.security.cert.X509Certificate) -> getSubjectAlternativeNames
org.jivesoftware.smack.SmackConfiguration -> org.jivesoftware.smack.SmackConfiguration:
    java.lang.String SMACK_VERSION -> SMACK_VERSION
    int packetReplyTimeout -> packetReplyTimeout
    int keepAliveInterval -> keepAliveInterval
    java.util.Vector defaultMechs -> defaultMechs
    boolean localSocks5ProxyEnabled -> localSocks5ProxyEnabled
    int localSocks5ProxyPort -> localSocks5ProxyPort
    java.lang.String getVersion() -> getVersion
    int getPacketReplyTimeout() -> getPacketReplyTimeout
    void setPacketReplyTimeout(int) -> setPacketReplyTimeout
    int getKeepAliveInterval() -> getKeepAliveInterval
    void setKeepAliveInterval(int) -> setKeepAliveInterval
    void addSaslMech(java.lang.String) -> addSaslMech
    void addSaslMechs(java.util.Collection) -> addSaslMechs
    void removeSaslMech(java.lang.String) -> removeSaslMech
    void removeSaslMechs(java.util.Collection) -> removeSaslMechs
    java.util.List getSaslMechs() -> getSaslMechs
    boolean isLocalSocks5ProxyEnabled() -> isLocalSocks5ProxyEnabled
    void setLocalSocks5ProxyEnabled(boolean) -> setLocalSocks5ProxyEnabled
    int getLocalSocks5ProxyPort() -> getLocalSocks5ProxyPort
    void setLocalSocks5ProxyPort(int) -> setLocalSocks5ProxyPort
    void parseClassToLoad(org.xmlpull.v1.XmlPullParser) -> parseClassToLoad
    int parseIntProperty(org.xmlpull.v1.XmlPullParser,int) -> parseIntProperty
    java.lang.ClassLoader[] getClassLoaders() -> getClassLoaders
org.jivesoftware.smack.UserAuthentication -> org.jivesoftware.smack.UserAuthentication:
    java.lang.String authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    java.lang.String authenticateAnonymously() -> authenticateAnonymously
org.jivesoftware.smack.XMPPConnection -> org.jivesoftware.smack.XMPPConnection:
    java.net.Socket socket -> socket
    java.lang.String connectionID -> connectionID
    java.lang.String user -> user
    boolean connected -> connected
    boolean authenticated -> authenticated
    boolean wasAuthenticated -> wasAuthenticated
    boolean anonymous -> anonymous
    boolean usingTLS -> usingTLS
    org.jivesoftware.smack.PacketWriter packetWriter -> packetWriter
    org.jivesoftware.smack.PacketReader packetReader -> packetReader
    org.jivesoftware.smack.Roster roster -> roster
    java.util.Collection compressionMethods -> compressionMethods
    boolean usingCompression -> usingCompression
    java.lang.String getConnectionID() -> getConnectionID
    java.lang.String getUser() -> getUser
    void login(java.lang.String,java.lang.String,java.lang.String) -> login
    void loginAnonymously() -> loginAnonymously
    org.jivesoftware.smack.Roster getRoster() -> getRoster
    boolean isConnected() -> isConnected
    boolean isSecureConnection() -> isSecureConnection
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    void shutdown(org.jivesoftware.smack.packet.Presence) -> shutdown
    void disconnect(org.jivesoftware.smack.packet.Presence) -> disconnect
    void sendPacket(org.jivesoftware.smack.packet.Packet) -> sendPacket
    void addPacketWriterInterceptor(org.jivesoftware.smack.PacketInterceptor,org.jivesoftware.smack.filter.PacketFilter) -> addPacketWriterInterceptor
    void removePacketWriterInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePacketWriterInterceptor
    void addPacketWriterListener(org.jivesoftware.smack.PacketListener,org.jivesoftware.smack.filter.PacketFilter) -> addPacketWriterListener
    void removePacketWriterListener(org.jivesoftware.smack.PacketListener) -> removePacketWriterListener
    void connectUsingConfiguration(org.jivesoftware.smack.ConnectionConfiguration) -> connectUsingConfiguration
    void initConnection() -> initConnection
    void initReaderAndWriter() -> initReaderAndWriter
    boolean isUsingTLS() -> isUsingTLS
    void startTLSReceived(boolean) -> startTLSReceived
    void proceedTLSReceived() -> proceedTLSReceived
    void setAvailableCompressionMethods(java.util.Collection) -> setAvailableCompressionMethods
    boolean hasAvailableCompressionMethod(java.lang.String) -> hasAvailableCompressionMethod
    boolean isUsingCompression() -> isUsingCompression
    boolean useCompression() -> useCompression
    void requestStreamCompression() -> requestStreamCompression
    void startStreamCompression() -> startStreamCompression
    void streamCompressionDenied() -> streamCompressionDenied
    void connect() -> connect
    void setWasAuthenticated(boolean) -> setWasAuthenticated
    void setRosterStorage(org.jivesoftware.smack.RosterStorage) -> setRosterStorage
org.jivesoftware.smack.XMPPException -> org.jivesoftware.smack.XMPPException:
    org.jivesoftware.smack.packet.StreamError streamError -> streamError
    org.jivesoftware.smack.packet.XMPPError error -> error
    java.lang.Throwable wrappedThrowable -> wrappedThrowable
    org.jivesoftware.smack.packet.XMPPError getXMPPError() -> getXMPPError
    org.jivesoftware.smack.packet.StreamError getStreamError() -> getStreamError
    java.lang.Throwable getWrappedThrowable() -> getWrappedThrowable
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.jivesoftware.smack.debugger.ConsoleDebugger -> org.jivesoftware.smack.debugger.ConsoleDebugger:
    boolean printInterpreted -> printInterpreted
    java.text.SimpleDateFormat dateFormatter -> dateFormatter
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.PacketListener listener -> listener
    org.jivesoftware.smack.ConnectionListener connListener -> connListener
    java.io.Writer writer -> writer
    java.io.Reader reader -> reader
    org.jivesoftware.smack.util.ReaderListener readerListener -> readerListener
    org.jivesoftware.smack.util.WriterListener writerListener -> writerListener
    void createDebug() -> createDebug
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
    java.text.SimpleDateFormat access$000(org.jivesoftware.smack.debugger.ConsoleDebugger) -> access$000
    org.jivesoftware.smack.Connection access$100(org.jivesoftware.smack.debugger.ConsoleDebugger) -> access$100
org.jivesoftware.smack.debugger.ConsoleDebugger$1 -> org.jivesoftware.smack.debugger.ConsoleDebugger$1:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void read(java.lang.String) -> read
org.jivesoftware.smack.debugger.ConsoleDebugger$2 -> org.jivesoftware.smack.debugger.ConsoleDebugger$2:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void write(java.lang.String) -> write
org.jivesoftware.smack.debugger.ConsoleDebugger$3 -> org.jivesoftware.smack.debugger.ConsoleDebugger$3:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smack.debugger.ConsoleDebugger$4 -> org.jivesoftware.smack.debugger.ConsoleDebugger$4:
    org.jivesoftware.smack.debugger.ConsoleDebugger this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
org.jivesoftware.smack.debugger.SmackDebugger -> org.jivesoftware.smack.debugger.SmackDebugger:
    void userHasLogged(java.lang.String) -> userHasLogged
    java.io.Reader getReader() -> getReader
    java.io.Writer getWriter() -> getWriter
    java.io.Reader newConnectionReader(java.io.Reader) -> newConnectionReader
    java.io.Writer newConnectionWriter(java.io.Writer) -> newConnectionWriter
    org.jivesoftware.smack.PacketListener getReaderListener() -> getReaderListener
    org.jivesoftware.smack.PacketListener getWriterListener() -> getWriterListener
org.jivesoftware.smack.filter.AndFilter -> org.jivesoftware.smack.filter.AndFilter:
    java.util.List filters -> filters
    void addFilter(org.jivesoftware.smack.filter.PacketFilter) -> addFilter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.FromContainsFilter -> org.jivesoftware.smack.filter.FromContainsFilter:
    java.lang.String from -> from
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.FromMatchesFilter -> org.jivesoftware.smack.filter.FromMatchesFilter:
    java.lang.String address -> address
    boolean matchBareJID -> matchBareJID
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.IQTypeFilter -> org.jivesoftware.smack.filter.IQTypeFilter:
    org.jivesoftware.smack.packet.IQ$Type type -> type
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.MessageTypeFilter -> org.jivesoftware.smack.filter.MessageTypeFilter:
    org.jivesoftware.smack.packet.Message$Type type -> type
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.NotFilter -> org.jivesoftware.smack.filter.NotFilter:
    org.jivesoftware.smack.filter.PacketFilter filter -> filter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.OrFilter -> org.jivesoftware.smack.filter.OrFilter:
    int size -> size
    org.jivesoftware.smack.filter.PacketFilter[] filters -> filters
    void addFilter(org.jivesoftware.smack.filter.PacketFilter) -> addFilter
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.PacketExtensionFilter -> org.jivesoftware.smack.filter.PacketExtensionFilter:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.PacketFilter -> org.jivesoftware.smack.filter.PacketFilter:
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.PacketIDFilter -> org.jivesoftware.smack.filter.PacketIDFilter:
    java.lang.String packetID -> packetID
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.PacketTypeFilter -> org.jivesoftware.smack.filter.PacketTypeFilter:
    java.lang.Class packetType -> packetType
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    java.lang.String toString() -> toString
org.jivesoftware.smack.filter.ThreadFilter -> org.jivesoftware.smack.filter.ThreadFilter:
    java.lang.String thread -> thread
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.filter.ToContainsFilter -> org.jivesoftware.smack.filter.ToContainsFilter:
    java.lang.String to -> to
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smack.packet.Authentication -> org.jivesoftware.smack.packet.Authentication:
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String digest -> digest
    java.lang.String resource -> resource
    java.lang.String getUsername() -> getUsername
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    java.lang.String getDigest() -> getDigest
    void setDigest(java.lang.String,java.lang.String) -> setDigest
    void setDigest(java.lang.String) -> setDigest
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.Bind -> org.jivesoftware.smack.packet.Bind:
    java.lang.String resource -> resource
    java.lang.String jid -> jid
    java.lang.String getResource() -> getResource
    void setResource(java.lang.String) -> setResource
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.DefaultPacketExtension -> org.jivesoftware.smack.packet.DefaultPacketExtension:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    java.util.Map map -> map
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.Collection getNames() -> getNames
    java.lang.String getValue(java.lang.String) -> getValue
    void setValue(java.lang.String,java.lang.String) -> setValue
org.jivesoftware.smack.packet.IQ -> org.jivesoftware.smack.packet.IQ:
    org.jivesoftware.smack.packet.IQ$Type type -> type
    org.jivesoftware.smack.packet.IQ$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.IQ$Type) -> setType
    java.lang.String toXML() -> toXML
    java.lang.String getChildElementXML() -> getChildElementXML
    org.jivesoftware.smack.packet.IQ createResultIQ(org.jivesoftware.smack.packet.IQ) -> createResultIQ
    org.jivesoftware.smack.packet.IQ createErrorResponse(org.jivesoftware.smack.packet.IQ,org.jivesoftware.smack.packet.XMPPError) -> createErrorResponse
org.jivesoftware.smack.packet.IQ$1 -> org.jivesoftware.smack.packet.IQ$1:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.IQ$2 -> org.jivesoftware.smack.packet.IQ$2:
    org.jivesoftware.smack.packet.IQ val$request -> val$request
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.IQ$Type -> org.jivesoftware.smack.packet.IQ$Type:
    org.jivesoftware.smack.packet.IQ$Type GET -> GET
    org.jivesoftware.smack.packet.IQ$Type SET -> SET
    org.jivesoftware.smack.packet.IQ$Type RESULT -> RESULT
    org.jivesoftware.smack.packet.IQ$Type ERROR -> ERROR
    java.lang.String value -> value
    org.jivesoftware.smack.packet.IQ$Type fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Message -> org.jivesoftware.smack.packet.Message:
    org.jivesoftware.smack.packet.Message$Type type -> type
    java.lang.String thread -> thread
    java.lang.String language -> language
    java.util.Set subjects -> subjects
    java.util.Set bodies -> bodies
    org.jivesoftware.smack.packet.Message$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.Message$Type) -> setType
    java.lang.String getSubject() -> getSubject
    java.lang.String getSubject(java.lang.String) -> getSubject
    org.jivesoftware.smack.packet.Message$Subject getMessageSubject(java.lang.String) -> getMessageSubject
    java.util.Collection getSubjects() -> getSubjects
    void setSubject(java.lang.String) -> setSubject
    org.jivesoftware.smack.packet.Message$Subject addSubject(java.lang.String,java.lang.String) -> addSubject
    boolean removeSubject(java.lang.String) -> removeSubject
    boolean removeSubject(org.jivesoftware.smack.packet.Message$Subject) -> removeSubject
    java.util.Collection getSubjectLanguages() -> getSubjectLanguages
    java.lang.String getBody() -> getBody
    java.lang.String getBody(java.lang.String) -> getBody
    org.jivesoftware.smack.packet.Message$Body getMessageBody(java.lang.String) -> getMessageBody
    java.util.Collection getBodies() -> getBodies
    void setBody(java.lang.String) -> setBody
    org.jivesoftware.smack.packet.Message$Body addBody(java.lang.String,java.lang.String) -> addBody
    boolean removeBody(java.lang.String) -> removeBody
    boolean removeBody(org.jivesoftware.smack.packet.Message$Body) -> removeBody
    java.util.Collection getBodyLanguages() -> getBodyLanguages
    java.lang.String getThread() -> getThread
    void setThread(java.lang.String) -> setThread
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String determineLanguage(java.lang.String) -> determineLanguage
    java.lang.String toXML() -> toXML
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.Message$1 -> org.jivesoftware.smack.packet.Message$1:
org.jivesoftware.smack.packet.Message$Body -> org.jivesoftware.smack.packet.Message$Body:
    java.lang.String message -> message
    java.lang.String language -> language
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getMessage() -> getMessage
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String access$300(org.jivesoftware.smack.packet.Message$Body) -> access$300
    java.lang.String access$400(org.jivesoftware.smack.packet.Message$Body) -> access$400
org.jivesoftware.smack.packet.Message$Subject -> org.jivesoftware.smack.packet.Message$Subject:
    java.lang.String subject -> subject
    java.lang.String language -> language
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getSubject() -> getSubject
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String access$000(org.jivesoftware.smack.packet.Message$Subject) -> access$000
    java.lang.String access$100(org.jivesoftware.smack.packet.Message$Subject) -> access$100
org.jivesoftware.smack.packet.Message$Type -> org.jivesoftware.smack.packet.Message$Type:
    org.jivesoftware.smack.packet.Message$Type normal -> normal
    org.jivesoftware.smack.packet.Message$Type chat -> chat
    org.jivesoftware.smack.packet.Message$Type groupchat -> groupchat
    org.jivesoftware.smack.packet.Message$Type headline -> headline
    org.jivesoftware.smack.packet.Message$Type error -> error
    org.jivesoftware.smack.packet.Message$Type[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.Message$Type[] values() -> values
    org.jivesoftware.smack.packet.Message$Type valueOf(java.lang.String) -> valueOf
    org.jivesoftware.smack.packet.Message$Type fromString(java.lang.String) -> fromString
org.jivesoftware.smack.packet.Packet -> org.jivesoftware.smack.packet.Packet:
    java.lang.String DEFAULT_LANGUAGE -> DEFAULT_LANGUAGE
    java.lang.String DEFAULT_XML_NS -> DEFAULT_XML_NS
    java.lang.String ID_NOT_AVAILABLE -> ID_NOT_AVAILABLE
    java.text.DateFormat XEP_0082_UTC_FORMAT -> XEP_0082_UTC_FORMAT
    java.lang.String prefix -> prefix
    long id -> id
    java.lang.String xmlns -> xmlns
    java.lang.String packetID -> packetID
    java.lang.String to -> to
    java.lang.String from -> from
    java.util.List packetExtensions -> packetExtensions
    java.util.Map properties -> properties
    org.jivesoftware.smack.packet.XMPPError error -> error
    java.lang.String nextID() -> nextID
    void setDefaultXmlns(java.lang.String) -> setDefaultXmlns
    java.lang.String getPacketID() -> getPacketID
    void setPacketID(java.lang.String) -> setPacketID
    java.lang.String getTo() -> getTo
    void setTo(java.lang.String) -> setTo
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    org.jivesoftware.smack.packet.XMPPError getError() -> getError
    void setError(org.jivesoftware.smack.packet.XMPPError) -> setError
    java.util.Collection getExtensions() -> getExtensions
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String) -> getExtension
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(org.jivesoftware.smack.packet.PacketExtension) -> addExtension
    void removeExtension(org.jivesoftware.smack.packet.PacketExtension) -> removeExtension
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void deleteProperty(java.lang.String) -> deleteProperty
    java.util.Collection getPropertyNames() -> getPropertyNames
    java.lang.String toXML() -> toXML
    java.lang.String getExtensionsXML() -> getExtensionsXML
    java.lang.String getXmlns() -> getXmlns
    java.lang.String getDefaultLanguage() -> getDefaultLanguage
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.packet.PacketExtension -> org.jivesoftware.smack.packet.PacketExtension:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.Presence -> org.jivesoftware.smack.packet.Presence:
    org.jivesoftware.smack.packet.Presence$Type type -> type
    java.lang.String status -> status
    int priority -> priority
    org.jivesoftware.smack.packet.Presence$Mode mode -> mode
    java.lang.String language -> language
    boolean isAvailable() -> isAvailable
    boolean isAway() -> isAway
    org.jivesoftware.smack.packet.Presence$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.Presence$Type) -> setType
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    org.jivesoftware.smack.packet.Presence$Mode getMode() -> getMode
    void setMode(org.jivesoftware.smack.packet.Presence$Mode) -> setMode
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.Presence$Mode -> org.jivesoftware.smack.packet.Presence$Mode:
    org.jivesoftware.smack.packet.Presence$Mode chat -> chat
    org.jivesoftware.smack.packet.Presence$Mode available -> available
    org.jivesoftware.smack.packet.Presence$Mode away -> away
    org.jivesoftware.smack.packet.Presence$Mode xa -> xa
    org.jivesoftware.smack.packet.Presence$Mode dnd -> dnd
    org.jivesoftware.smack.packet.Presence$Mode[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.Presence$Mode[] values() -> values
    org.jivesoftware.smack.packet.Presence$Mode valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Presence$Type -> org.jivesoftware.smack.packet.Presence$Type:
    org.jivesoftware.smack.packet.Presence$Type available -> available
    org.jivesoftware.smack.packet.Presence$Type unavailable -> unavailable
    org.jivesoftware.smack.packet.Presence$Type subscribe -> subscribe
    org.jivesoftware.smack.packet.Presence$Type subscribed -> subscribed
    org.jivesoftware.smack.packet.Presence$Type unsubscribe -> unsubscribe
    org.jivesoftware.smack.packet.Presence$Type unsubscribed -> unsubscribed
    org.jivesoftware.smack.packet.Presence$Type error -> error
    org.jivesoftware.smack.packet.Presence$Type[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.Presence$Type[] values() -> values
    org.jivesoftware.smack.packet.Presence$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Privacy -> org.jivesoftware.smack.packet.Privacy:
    boolean declineActiveList -> declineActiveList
    java.lang.String activeName -> activeName
    boolean declineDefaultList -> declineDefaultList
    java.lang.String defaultName -> defaultName
    java.util.Map itemLists -> itemLists
    java.util.List setPrivacyList(java.lang.String,java.util.List) -> setPrivacyList
    java.util.List setActivePrivacyList() -> setActivePrivacyList
    void deletePrivacyList(java.lang.String) -> deletePrivacyList
    java.util.List getActivePrivacyList() -> getActivePrivacyList
    java.util.List getDefaultPrivacyList() -> getDefaultPrivacyList
    java.util.List getPrivacyList(java.lang.String) -> getPrivacyList
    org.jivesoftware.smack.packet.PrivacyItem getItem(java.lang.String,int) -> getItem
    boolean changeDefaultList(java.lang.String) -> changeDefaultList
    void deleteList(java.lang.String) -> deleteList
    java.lang.String getActiveName() -> getActiveName
    void setActiveName(java.lang.String) -> setActiveName
    java.lang.String getDefaultName() -> getDefaultName
    void setDefaultName(java.lang.String) -> setDefaultName
    java.util.Map getItemLists() -> getItemLists
    boolean isDeclineActiveList() -> isDeclineActiveList
    void setDeclineActiveList(boolean) -> setDeclineActiveList
    boolean isDeclineDefaultList() -> isDeclineDefaultList
    void setDeclineDefaultList(boolean) -> setDeclineDefaultList
    java.util.Set getPrivacyListNames() -> getPrivacyListNames
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.PrivacyItem -> org.jivesoftware.smack.packet.PrivacyItem:
    boolean allow -> allow
    int order -> order
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule rule -> rule
    boolean filterIQ -> filterIQ
    boolean filterMessage -> filterMessage
    boolean filterPresence_in -> filterPresence_in
    boolean filterPresence_out -> filterPresence_out
    boolean isAllow() -> isAllow
    void setAllow(boolean) -> setAllow
    boolean isFilterIQ() -> isFilterIQ
    void setFilterIQ(boolean) -> setFilterIQ
    boolean isFilterMessage() -> isFilterMessage
    void setFilterMessage(boolean) -> setFilterMessage
    boolean isFilterPresence_in() -> isFilterPresence_in
    void setFilterPresence_in(boolean) -> setFilterPresence_in
    boolean isFilterPresence_out() -> isFilterPresence_out
    void setFilterPresence_out(boolean) -> setFilterPresence_out
    int getOrder() -> getOrder
    void setOrder(int) -> setOrder
    void setValue(java.lang.String) -> setValue
    org.jivesoftware.smack.packet.PrivacyItem$Type getType() -> getType
    java.lang.String getValue() -> getValue
    boolean isFilterEverything() -> isFilterEverything
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule getRule() -> getRule
    void setRule(org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule) -> setRule
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule -> org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule:
    org.jivesoftware.smack.packet.PrivacyItem$Type type -> type
    java.lang.String value -> value
    java.lang.String SUBSCRIPTION_BOTH -> SUBSCRIPTION_BOTH
    java.lang.String SUBSCRIPTION_TO -> SUBSCRIPTION_TO
    java.lang.String SUBSCRIPTION_FROM -> SUBSCRIPTION_FROM
    java.lang.String SUBSCRIPTION_NONE -> SUBSCRIPTION_NONE
    org.jivesoftware.smack.packet.PrivacyItem$PrivacyRule fromString(java.lang.String) -> fromString
    org.jivesoftware.smack.packet.PrivacyItem$Type getType() -> getType
    void setType(org.jivesoftware.smack.packet.PrivacyItem$Type) -> setType
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    void setSuscriptionValue(java.lang.String) -> setSuscriptionValue
    boolean isSuscription() -> isSuscription
org.jivesoftware.smack.packet.PrivacyItem$Type -> org.jivesoftware.smack.packet.PrivacyItem$Type:
    org.jivesoftware.smack.packet.PrivacyItem$Type group -> group
    org.jivesoftware.smack.packet.PrivacyItem$Type jid -> jid
    org.jivesoftware.smack.packet.PrivacyItem$Type subscription -> subscription
    org.jivesoftware.smack.packet.PrivacyItem$Type[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.PrivacyItem$Type[] values() -> values
    org.jivesoftware.smack.packet.PrivacyItem$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Registration -> org.jivesoftware.smack.packet.Registration:
    java.lang.String instructions -> instructions
    java.util.Map attributes -> attributes
    java.util.List requiredFields -> requiredFields
    boolean registered -> registered
    boolean remove -> remove
    java.lang.String getInstructions() -> getInstructions
    void setInstructions(java.lang.String) -> setInstructions
    java.util.Map getAttributes() -> getAttributes
    void addRequiredField(java.lang.String) -> addRequiredField
    java.util.List getRequiredFields() -> getRequiredFields
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setRegistered(boolean) -> setRegistered
    boolean isRegistered() -> isRegistered
    java.lang.String getField(java.lang.String) -> getField
    java.util.List getFieldNames() -> getFieldNames
    void setUsername(java.lang.String) -> setUsername
    void setPassword(java.lang.String) -> setPassword
    void setRemove(boolean) -> setRemove
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.RosterPacket -> org.jivesoftware.smack.packet.RosterPacket:
    java.util.List rosterItems -> rosterItems
    java.lang.String version -> version
    void addRosterItem(org.jivesoftware.smack.packet.RosterPacket$Item) -> addRosterItem
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    int getRosterItemCount() -> getRosterItemCount
    java.util.Collection getRosterItems() -> getRosterItems
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.RosterPacket$Item -> org.jivesoftware.smack.packet.RosterPacket$Item:
    java.lang.String user -> user
    java.lang.String name -> name
    org.jivesoftware.smack.packet.RosterPacket$ItemType itemType -> itemType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus itemStatus -> itemStatus
    java.util.Set groupNames -> groupNames
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    org.jivesoftware.smack.packet.RosterPacket$ItemType getItemType() -> getItemType
    void setItemType(org.jivesoftware.smack.packet.RosterPacket$ItemType) -> setItemType
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus getItemStatus() -> getItemStatus
    void setItemStatus(org.jivesoftware.smack.packet.RosterPacket$ItemStatus) -> setItemStatus
    java.util.Set getGroupNames() -> getGroupNames
    void addGroupName(java.lang.String) -> addGroupName
    void removeGroupName(java.lang.String) -> removeGroupName
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.packet.RosterPacket$ItemStatus -> org.jivesoftware.smack.packet.RosterPacket$ItemStatus:
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus SUBSCRIPTION_PENDING -> SUBSCRIPTION_PENDING
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus UNSUBSCRIPTION_PENDING -> UNSUBSCRIPTION_PENDING
    java.lang.String value -> value
    org.jivesoftware.smack.packet.RosterPacket$ItemStatus fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.RosterPacket$ItemType -> org.jivesoftware.smack.packet.RosterPacket$ItemType:
    org.jivesoftware.smack.packet.RosterPacket$ItemType none -> none
    org.jivesoftware.smack.packet.RosterPacket$ItemType to -> to
    org.jivesoftware.smack.packet.RosterPacket$ItemType from -> from
    org.jivesoftware.smack.packet.RosterPacket$ItemType both -> both
    org.jivesoftware.smack.packet.RosterPacket$ItemType remove -> remove
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.RosterPacket$ItemType[] values() -> values
    org.jivesoftware.smack.packet.RosterPacket$ItemType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.packet.Session -> org.jivesoftware.smack.packet.Session:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.packet.StreamError -> org.jivesoftware.smack.packet.StreamError:
    java.lang.String code -> code
    java.lang.String getCode() -> getCode
    java.lang.String toString() -> toString
org.jivesoftware.smack.packet.XMPPError -> org.jivesoftware.smack.packet.XMPPError:
    int code -> code
    org.jivesoftware.smack.packet.XMPPError$Type type -> type
    java.lang.String condition -> condition
    java.lang.String message -> message
    java.util.List applicationExtensions -> applicationExtensions
    void init(org.jivesoftware.smack.packet.XMPPError$Condition) -> init
    java.lang.String getCondition() -> getCondition
    org.jivesoftware.smack.packet.XMPPError$Type getType() -> getType
    int getCode() -> getCode
    java.lang.String getMessage() -> getMessage
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
    java.util.List getExtensions() -> getExtensions
    org.jivesoftware.smack.packet.PacketExtension getExtension(java.lang.String,java.lang.String) -> getExtension
    void addExtension(org.jivesoftware.smack.packet.PacketExtension) -> addExtension
    void setExtension(java.util.List) -> setExtension
org.jivesoftware.smack.packet.XMPPError$Condition -> org.jivesoftware.smack.packet.XMPPError$Condition:
    org.jivesoftware.smack.packet.XMPPError$Condition interna_server_error -> interna_server_error
    org.jivesoftware.smack.packet.XMPPError$Condition forbidden -> forbidden
    org.jivesoftware.smack.packet.XMPPError$Condition bad_request -> bad_request
    org.jivesoftware.smack.packet.XMPPError$Condition conflict -> conflict
    org.jivesoftware.smack.packet.XMPPError$Condition feature_not_implemented -> feature_not_implemented
    org.jivesoftware.smack.packet.XMPPError$Condition gone -> gone
    org.jivesoftware.smack.packet.XMPPError$Condition item_not_found -> item_not_found
    org.jivesoftware.smack.packet.XMPPError$Condition jid_malformed -> jid_malformed
    org.jivesoftware.smack.packet.XMPPError$Condition no_acceptable -> no_acceptable
    org.jivesoftware.smack.packet.XMPPError$Condition not_allowed -> not_allowed
    org.jivesoftware.smack.packet.XMPPError$Condition not_authorized -> not_authorized
    org.jivesoftware.smack.packet.XMPPError$Condition payment_required -> payment_required
    org.jivesoftware.smack.packet.XMPPError$Condition recipient_unavailable -> recipient_unavailable
    org.jivesoftware.smack.packet.XMPPError$Condition redirect -> redirect
    org.jivesoftware.smack.packet.XMPPError$Condition registration_required -> registration_required
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_error -> remote_server_error
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_not_found -> remote_server_not_found
    org.jivesoftware.smack.packet.XMPPError$Condition remote_server_timeout -> remote_server_timeout
    org.jivesoftware.smack.packet.XMPPError$Condition resource_constraint -> resource_constraint
    org.jivesoftware.smack.packet.XMPPError$Condition service_unavailable -> service_unavailable
    org.jivesoftware.smack.packet.XMPPError$Condition subscription_required -> subscription_required
    org.jivesoftware.smack.packet.XMPPError$Condition undefined_condition -> undefined_condition
    org.jivesoftware.smack.packet.XMPPError$Condition unexpected_request -> unexpected_request
    org.jivesoftware.smack.packet.XMPPError$Condition request_timeout -> request_timeout
    java.lang.String value -> value
    java.lang.String toString() -> toString
    java.lang.String access$000(org.jivesoftware.smack.packet.XMPPError$Condition) -> access$000
org.jivesoftware.smack.packet.XMPPError$ErrorSpecification -> org.jivesoftware.smack.packet.XMPPError$ErrorSpecification:
    int code -> code
    org.jivesoftware.smack.packet.XMPPError$Type type -> type
    org.jivesoftware.smack.packet.XMPPError$Condition condition -> condition
    java.util.Map instances -> instances
    java.util.Map errorSpecifications() -> errorSpecifications
    org.jivesoftware.smack.packet.XMPPError$ErrorSpecification specFor(org.jivesoftware.smack.packet.XMPPError$Condition) -> specFor
    org.jivesoftware.smack.packet.XMPPError$Condition getCondition() -> getCondition
    org.jivesoftware.smack.packet.XMPPError$Type getType() -> getType
    int getCode() -> getCode
org.jivesoftware.smack.packet.XMPPError$Type -> org.jivesoftware.smack.packet.XMPPError$Type:
    org.jivesoftware.smack.packet.XMPPError$Type WAIT -> WAIT
    org.jivesoftware.smack.packet.XMPPError$Type CANCEL -> CANCEL
    org.jivesoftware.smack.packet.XMPPError$Type MODIFY -> MODIFY
    org.jivesoftware.smack.packet.XMPPError$Type AUTH -> AUTH
    org.jivesoftware.smack.packet.XMPPError$Type CONTINUE -> CONTINUE
    org.jivesoftware.smack.packet.XMPPError$Type[] $VALUES -> $VALUES
    org.jivesoftware.smack.packet.XMPPError$Type[] values() -> values
    org.jivesoftware.smack.packet.XMPPError$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.provider.IQProvider -> org.jivesoftware.smack.provider.IQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smack.provider.PacketExtensionProvider -> org.jivesoftware.smack.provider.PacketExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smack.provider.PrivacyProvider -> org.jivesoftware.smack.provider.PrivacyProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    void parseList(org.xmlpull.v1.XmlPullParser,org.jivesoftware.smack.packet.Privacy) -> parseList
    org.jivesoftware.smack.packet.PrivacyItem parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
org.jivesoftware.smack.provider.ProviderManager -> org.jivesoftware.smack.provider.ProviderManager:
    org.jivesoftware.smack.provider.ProviderManager instance -> instance
    java.util.Map extensionProviders -> extensionProviders
    java.util.Map iqProviders -> iqProviders
    org.jivesoftware.smack.provider.ProviderManager getInstance() -> getInstance
    void setInstance(org.jivesoftware.smack.provider.ProviderManager) -> setInstance
    void initialize() -> initialize
    java.lang.Object getIQProvider(java.lang.String,java.lang.String) -> getIQProvider
    java.util.Collection getIQProviders() -> getIQProviders
    void addIQProvider(java.lang.String,java.lang.String,java.lang.Object) -> addIQProvider
    void removeIQProvider(java.lang.String,java.lang.String) -> removeIQProvider
    java.lang.Object getExtensionProvider(java.lang.String,java.lang.String) -> getExtensionProvider
    void addExtensionProvider(java.lang.String,java.lang.String,java.lang.Object) -> addExtensionProvider
    void removeExtensionProvider(java.lang.String,java.lang.String) -> removeExtensionProvider
    java.util.Collection getExtensionProviders() -> getExtensionProviders
    java.lang.String getProviderKey(java.lang.String,java.lang.String) -> getProviderKey
    java.lang.ClassLoader[] getClassLoaders() -> getClassLoaders
org.jivesoftware.smack.proxy.DirectSocketFactory -> org.jivesoftware.smack.proxy.DirectSocketFactory:
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
org.jivesoftware.smack.proxy.HTTPProxySocketFactory -> org.jivesoftware.smack.proxy.HTTPProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.util.regex.Pattern RESPONSE_PATTERN -> RESPONSE_PATTERN
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket httpProxifiedSocket(java.lang.String,int) -> httpProxifiedSocket
org.jivesoftware.smack.proxy.ProxyException -> org.jivesoftware.smack.proxy.ProxyException:
org.jivesoftware.smack.proxy.ProxyInfo -> org.jivesoftware.smack.proxy.ProxyInfo:
    java.lang.String proxyAddress -> proxyAddress
    int proxyPort -> proxyPort
    java.lang.String proxyUsername -> proxyUsername
    java.lang.String proxyPassword -> proxyPassword
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType proxyType -> proxyType
    org.jivesoftware.smack.proxy.ProxyInfo forHttpProxy(java.lang.String,int,java.lang.String,java.lang.String) -> forHttpProxy
    org.jivesoftware.smack.proxy.ProxyInfo forSocks4Proxy(java.lang.String,int,java.lang.String,java.lang.String) -> forSocks4Proxy
    org.jivesoftware.smack.proxy.ProxyInfo forSocks5Proxy(java.lang.String,int,java.lang.String,java.lang.String) -> forSocks5Proxy
    org.jivesoftware.smack.proxy.ProxyInfo forNoProxy() -> forNoProxy
    org.jivesoftware.smack.proxy.ProxyInfo forDefaultProxy() -> forDefaultProxy
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType getProxyType() -> getProxyType
    java.lang.String getProxyAddress() -> getProxyAddress
    int getProxyPort() -> getProxyPort
    java.lang.String getProxyUsername() -> getProxyUsername
    java.lang.String getProxyPassword() -> getProxyPassword
    javax.net.SocketFactory getSocketFactory() -> getSocketFactory
org.jivesoftware.smack.proxy.ProxyInfo$ProxyType -> org.jivesoftware.smack.proxy.ProxyInfo$ProxyType:
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType NONE -> NONE
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType HTTP -> HTTP
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS4 -> SOCKS4
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType SOCKS5 -> SOCKS5
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] $VALUES -> $VALUES
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType[] values() -> values
    org.jivesoftware.smack.proxy.ProxyInfo$ProxyType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smack.proxy.Socks4ProxySocketFactory -> org.jivesoftware.smack.proxy.Socks4ProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks4ProxifiedSocket(java.lang.String,int) -> socks4ProxifiedSocket
org.jivesoftware.smack.proxy.Socks5ProxySocketFactory -> org.jivesoftware.smack.proxy.Socks5ProxySocketFactory:
    org.jivesoftware.smack.proxy.ProxyInfo proxy -> proxy
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int) -> createSocket
    java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int) -> createSocket
    java.net.Socket socks5ProxifiedSocket(java.lang.String,int) -> socks5ProxifiedSocket
    void fill(java.io.InputStream,byte[],int) -> fill
org.jivesoftware.smack.sasl.SASLAnonymous -> org.jivesoftware.smack.sasl.SASLAnonymous:
    java.lang.String getName() -> getName
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate() -> authenticate
    void challengeReceived(java.lang.String) -> challengeReceived
org.jivesoftware.smack.sasl.SASLCramMD5Mechanism -> org.jivesoftware.smack.sasl.SASLCramMD5Mechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism -> org.jivesoftware.smack.sasl.SASLDigestMD5Mechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLExternalMechanism -> org.jivesoftware.smack.sasl.SASLExternalMechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.sasl.SASLFacebookConnect -> org.jivesoftware.smack.sasl.SASLFacebookConnect:
    java.lang.String sessionKey -> sessionKey
    java.lang.String sessionSecret -> sessionSecret
    java.lang.String apiKey -> apiKey
    void authenticate() -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    java.lang.String getName() -> getName
    void challengeReceived(java.lang.String) -> challengeReceived
    java.util.Map getQueryMap(java.lang.String) -> getQueryMap
    java.lang.String convertToHex(byte[]) -> convertToHex
    java.lang.String MD5(java.lang.String) -> MD5
org.jivesoftware.smack.sasl.SASLFacebookConnect$1 -> org.jivesoftware.smack.sasl.SASLFacebookConnect$1:
    java.lang.StringBuilder val$stanza -> val$stanza
    org.jivesoftware.smack.sasl.SASLFacebookConnect this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLFacebookConnect$2 -> org.jivesoftware.smack.sasl.SASLFacebookConnect$2:
    java.lang.StringBuilder val$stanza -> val$stanza
    org.jivesoftware.smack.sasl.SASLFacebookConnect this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLGSSAPIMechanism -> org.jivesoftware.smack.sasl.SASLGSSAPIMechanism:
    java.lang.String getName() -> getName
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
org.jivesoftware.smack.sasl.SASLMechanism -> org.jivesoftware.smack.sasl.SASLMechanism:
    org.jivesoftware.smack.SASLAuthentication saslAuthentication -> saslAuthentication
    org.apache.harmony.javax.security.sasl.SaslClient sc -> sc
    java.lang.String authenticationId -> authenticationId
    java.lang.String password -> password
    java.lang.String hostname -> hostname
    void authenticate(java.lang.String,java.lang.String,java.lang.String) -> authenticate
    void authenticate(java.lang.String,java.lang.String,org.apache.harmony.javax.security.auth.callback.CallbackHandler) -> authenticate
    void authenticate() -> authenticate
    void challengeReceived(java.lang.String) -> challengeReceived
    java.lang.String getName() -> getName
    org.jivesoftware.smack.SASLAuthentication getSASLAuthentication() -> getSASLAuthentication
    void handle(org.apache.harmony.javax.security.auth.callback.Callback[]) -> handle
org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism -> org.jivesoftware.smack.sasl.SASLMechanism$AuthMechanism:
    java.lang.String name -> name
    java.lang.String authenticationText -> authenticationText
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Challenge -> org.jivesoftware.smack.sasl.SASLMechanism$Challenge:
    java.lang.String data -> data
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Failure -> org.jivesoftware.smack.sasl.SASLMechanism$Failure:
    java.lang.String condition -> condition
    java.lang.String getCondition() -> getCondition
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Response -> org.jivesoftware.smack.sasl.SASLMechanism$Response:
    java.lang.String authenticationText -> authenticationText
    org.jivesoftware.smack.sasl.SASLMechanism this$0 -> this$0
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLMechanism$Success -> org.jivesoftware.smack.sasl.SASLMechanism$Success:
    java.lang.String data -> data
    java.lang.String toXML() -> toXML
org.jivesoftware.smack.sasl.SASLPlainMechanism -> org.jivesoftware.smack.sasl.SASLPlainMechanism:
    java.lang.String getName() -> getName
org.jivesoftware.smack.util.Base64 -> org.jivesoftware.smack.util.Base64:
    int NO_OPTIONS -> NO_OPTIONS
    int ENCODE -> ENCODE
    int DECODE -> DECODE
    int GZIP -> GZIP
    int DONT_BREAK_LINES -> DONT_BREAK_LINES
    int URL_SAFE -> URL_SAFE
    int ORDERED -> ORDERED
    int MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte NEW_LINE -> NEW_LINE
    java.lang.String PREFERRED_ENCODING -> PREFERRED_ENCODING
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    byte[] _STANDARD_ALPHABET -> _STANDARD_ALPHABET
    byte[] _STANDARD_DECODABET -> _STANDARD_DECODABET
    byte[] _URL_SAFE_ALPHABET -> _URL_SAFE_ALPHABET
    byte[] _URL_SAFE_DECODABET -> _URL_SAFE_DECODABET
    byte[] _ORDERED_ALPHABET -> _ORDERED_ALPHABET
    byte[] _ORDERED_DECODABET -> _ORDERED_DECODABET
    byte[] getAlphabet(int) -> getAlphabet
    byte[] getDecodabet(int) -> getDecodabet
    void main(java.lang.String[]) -> main
    void usage(java.lang.String) -> usage
    byte[] encode3to4(byte[],byte[],int,int) -> encode3to4
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> encode3to4
    java.lang.String encodeObject(java.io.Serializable) -> encodeObject
    java.lang.String encodeObject(java.io.Serializable,int) -> encodeObject
    java.lang.String encodeBytes(byte[]) -> encodeBytes
    java.lang.String encodeBytes(byte[],int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int,int) -> encodeBytes
    int decode4to3(byte[],int,byte[],int,int) -> decode4to3
    byte[] decode(byte[],int,int,int) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(java.lang.String,int) -> decode
    java.lang.Object decodeToObject(java.lang.String) -> decodeToObject
    boolean encodeToFile(byte[],java.lang.String) -> encodeToFile
    boolean decodeToFile(java.lang.String,java.lang.String) -> decodeToFile
    byte[] decodeFromFile(java.lang.String) -> decodeFromFile
    java.lang.String encodeFromFile(java.lang.String) -> encodeFromFile
    void encodeFileToFile(java.lang.String,java.lang.String) -> encodeFileToFile
    void decodeFileToFile(java.lang.String,java.lang.String) -> decodeFileToFile
    byte[] access$000(int) -> access$000
    byte[] access$100(int) -> access$100
    byte[] access$200(byte[],int,int,byte[],int,int) -> access$200
    int access$300(byte[],int,byte[],int,int) -> access$300
    byte[] access$400(byte[],byte[],int,int) -> access$400
org.jivesoftware.smack.util.Base64$InputStream -> org.jivesoftware.smack.util.Base64$InputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int numSigBytes -> numSigBytes
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    int options -> options
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    int read() -> read
    int read(byte[],int,int) -> read
org.jivesoftware.smack.util.Base64$OutputStream -> org.jivesoftware.smack.util.Base64$OutputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    byte[] b4 -> b4
    boolean suspendEncoding -> suspendEncoding
    int options -> options
    byte[] alphabet -> alphabet
    byte[] decodabet -> decodabet
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flushBase64() -> flushBase64
    void close() -> close
    void suspendEncoding() -> suspendEncoding
    void resumeEncoding() -> resumeEncoding
org.jivesoftware.smack.util.Cache -> org.jivesoftware.smack.util.Cache:
    java.util.Map map -> map
    org.jivesoftware.smack.util.Cache$LinkedList lastAccessedList -> lastAccessedList
    org.jivesoftware.smack.util.Cache$LinkedList ageList -> ageList
    int maxCacheSize -> maxCacheSize
    long maxLifetime -> maxLifetime
    long cacheHits -> cacheHits
    long cacheMisses -> cacheMisses
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object remove(java.lang.Object,boolean) -> remove
    void clear() -> clear
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Collection values() -> values
    boolean containsKey(java.lang.Object) -> containsKey
    void putAll(java.util.Map) -> putAll
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    long getCacheHits() -> getCacheHits
    long getCacheMisses() -> getCacheMisses
    int getMaxCacheSize() -> getMaxCacheSize
    void setMaxCacheSize(int) -> setMaxCacheSize
    long getMaxLifetime() -> getMaxLifetime
    void setMaxLifetime(long) -> setMaxLifetime
    void deleteExpiredEntries() -> deleteExpiredEntries
    void cullCache() -> cullCache
org.jivesoftware.smack.util.Cache$1 -> org.jivesoftware.smack.util.Cache$1:
    java.util.Collection values -> values
    org.jivesoftware.smack.util.Cache this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.jivesoftware.smack.util.Cache$1$1 -> org.jivesoftware.smack.util.Cache$1$1:
    java.util.Iterator it -> it
    org.jivesoftware.smack.util.Cache$1 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.jivesoftware.smack.util.Cache$2 -> org.jivesoftware.smack.util.Cache$2:
    java.util.Set set -> set
    org.jivesoftware.smack.util.Cache this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.util.Set access$000(org.jivesoftware.smack.util.Cache$2) -> access$000
org.jivesoftware.smack.util.Cache$2$1 -> org.jivesoftware.smack.util.Cache$2$1:
    java.util.Iterator it -> it
    org.jivesoftware.smack.util.Cache$2 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.jivesoftware.smack.util.Cache$2$1$1 -> org.jivesoftware.smack.util.Cache$2$1$1:
    org.jivesoftware.smack.util.Cache$2$1 this$2 -> this$2
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.Cache$CacheObject -> org.jivesoftware.smack.util.Cache$CacheObject:
    java.lang.Object object -> object
    org.jivesoftware.smack.util.Cache$LinkedListNode lastAccessedListNode -> lastAccessedListNode
    org.jivesoftware.smack.util.Cache$LinkedListNode ageListNode -> ageListNode
    int readCount -> readCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.util.Cache$LinkedList -> org.jivesoftware.smack.util.Cache$LinkedList:
    org.jivesoftware.smack.util.Cache$LinkedListNode head -> head
    org.jivesoftware.smack.util.Cache$LinkedListNode getFirst() -> getFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode getLast() -> getLast
    org.jivesoftware.smack.util.Cache$LinkedListNode addFirst(org.jivesoftware.smack.util.Cache$LinkedListNode) -> addFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode addFirst(java.lang.Object) -> addFirst
    org.jivesoftware.smack.util.Cache$LinkedListNode addLast(java.lang.Object) -> addLast
    void clear() -> clear
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.Cache$LinkedListNode -> org.jivesoftware.smack.util.Cache$LinkedListNode:
    org.jivesoftware.smack.util.Cache$LinkedListNode previous -> previous
    org.jivesoftware.smack.util.Cache$LinkedListNode next -> next
    java.lang.Object object -> object
    long timestamp -> timestamp
    void remove() -> remove
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.DNSUtil -> org.jivesoftware.smack.util.DNSUtil:
    java.util.Map ccache -> ccache
    java.util.Map scache -> scache
    org.jivesoftware.smack.util.DNSUtil$HostAddress resolveSRV(java.lang.String) -> resolveSRV
    org.jivesoftware.smack.util.DNSUtil$HostAddress resolveXMPPDomain(java.lang.String) -> resolveXMPPDomain
    org.jivesoftware.smack.util.DNSUtil$HostAddress resolveXMPPServerDomain(java.lang.String) -> resolveXMPPServerDomain
org.jivesoftware.smack.util.DNSUtil$1 -> org.jivesoftware.smack.util.DNSUtil$1:
org.jivesoftware.smack.util.DNSUtil$HostAddress -> org.jivesoftware.smack.util.DNSUtil$HostAddress:
    java.lang.String host -> host
    int port -> port
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
org.jivesoftware.smack.util.ObservableReader -> org.jivesoftware.smack.util.ObservableReader:
    java.io.Reader wrappedReader -> wrappedReader
    java.util.List listeners -> listeners
    int read(char[],int,int) -> read
    void close() -> close
    int read() -> read
    int read(char[]) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void addReaderListener(org.jivesoftware.smack.util.ReaderListener) -> addReaderListener
    void removeReaderListener(org.jivesoftware.smack.util.ReaderListener) -> removeReaderListener
org.jivesoftware.smack.util.ObservableWriter -> org.jivesoftware.smack.util.ObservableWriter:
    java.io.Writer wrappedWriter -> wrappedWriter
    java.util.List listeners -> listeners
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void write(int) -> write
    void write(char[]) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    void notifyListeners(java.lang.String) -> notifyListeners
    void addWriterListener(org.jivesoftware.smack.util.WriterListener) -> addWriterListener
    void removeWriterListener(org.jivesoftware.smack.util.WriterListener) -> removeWriterListener
org.jivesoftware.smack.util.PacketParserUtils -> org.jivesoftware.smack.util.PacketParserUtils:
    java.lang.String PROPERTIES_NAMESPACE -> PROPERTIES_NAMESPACE
    org.jivesoftware.smack.packet.Packet parseMessage(org.xmlpull.v1.XmlPullParser) -> parseMessage
    java.lang.String parseContent(org.xmlpull.v1.XmlPullParser) -> parseContent
    org.jivesoftware.smack.packet.Presence parsePresence(org.xmlpull.v1.XmlPullParser) -> parsePresence
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser,org.jivesoftware.smack.Connection) -> parseIQ
    org.jivesoftware.smack.packet.Authentication parseAuthentication(org.xmlpull.v1.XmlPullParser) -> parseAuthentication
    org.jivesoftware.smack.packet.RosterPacket parseRoster(org.xmlpull.v1.XmlPullParser) -> parseRoster
    org.jivesoftware.smack.packet.Registration parseRegistration(org.xmlpull.v1.XmlPullParser) -> parseRegistration
    org.jivesoftware.smack.packet.Bind parseResourceBinding(org.xmlpull.v1.XmlPullParser) -> parseResourceBinding
    java.util.Collection parseMechanisms(org.xmlpull.v1.XmlPullParser) -> parseMechanisms
    java.util.Collection parseCompressionMethods(org.xmlpull.v1.XmlPullParser) -> parseCompressionMethods
    java.util.Map parseProperties(org.xmlpull.v1.XmlPullParser) -> parseProperties
    org.jivesoftware.smack.sasl.SASLMechanism$Failure parseSASLFailure(org.xmlpull.v1.XmlPullParser) -> parseSASLFailure
    org.jivesoftware.smack.packet.StreamError parseStreamError(org.xmlpull.v1.XmlPullParser) -> parseStreamError
    org.jivesoftware.smack.packet.XMPPError parseError(org.xmlpull.v1.XmlPullParser) -> parseError
    org.jivesoftware.smack.packet.PacketExtension parsePacketExtension(java.lang.String,java.lang.String,org.xmlpull.v1.XmlPullParser) -> parsePacketExtension
    java.lang.String getLanguageAttribute(org.xmlpull.v1.XmlPullParser) -> getLanguageAttribute
    java.lang.Object parseWithIntrospection(java.lang.String,java.lang.Class,org.xmlpull.v1.XmlPullParser) -> parseWithIntrospection
    java.lang.Object decode(java.lang.Class,java.lang.String) -> decode
org.jivesoftware.smack.util.PacketParserUtils$1 -> org.jivesoftware.smack.util.PacketParserUtils$1:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.PacketParserUtils$2 -> org.jivesoftware.smack.util.PacketParserUtils$2:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smack.util.ReaderListener -> org.jivesoftware.smack.util.ReaderListener:
    void read(java.lang.String) -> read
org.jivesoftware.smack.util.StringUtils -> org.jivesoftware.smack.util.StringUtils:
    char[] QUOTE_ENCODE -> QUOTE_ENCODE
    char[] APOS_ENCODE -> APOS_ENCODE
    char[] AMP_ENCODE -> AMP_ENCODE
    char[] LT_ENCODE -> LT_ENCODE
    char[] GT_ENCODE -> GT_ENCODE
    java.security.MessageDigest digest -> digest
    java.util.Random randGen -> randGen
    char[] numbersAndLetters -> numbersAndLetters
    java.lang.String parseName(java.lang.String) -> parseName
    java.lang.String parseServer(java.lang.String) -> parseServer
    java.lang.String parseResource(java.lang.String) -> parseResource
    java.lang.String parseBareAddress(java.lang.String) -> parseBareAddress
    java.lang.String escapeNode(java.lang.String) -> escapeNode
    java.lang.String unescapeNode(java.lang.String) -> unescapeNode
    java.lang.String escapeForXML(java.lang.String) -> escapeForXML
    java.lang.String hash(java.lang.String) -> hash
    java.lang.String encodeHex(byte[]) -> encodeHex
    java.lang.String encodeBase64(java.lang.String) -> encodeBase64
    java.lang.String encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64(byte[],boolean) -> encodeBase64
    java.lang.String encodeBase64(byte[],int,int,boolean) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    java.lang.String randomString(int) -> randomString
org.jivesoftware.smack.util.WriterListener -> org.jivesoftware.smack.util.WriterListener:
    void write(java.lang.String) -> write
org.jivesoftware.smack.util.collections.AbstractEmptyIterator -> org.jivesoftware.smack.util.collections.AbstractEmptyIterator:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    void reset() -> reset
org.jivesoftware.smack.util.collections.AbstractHashedMap -> org.jivesoftware.smack.util.collections.AbstractHashedMap:
    java.lang.String NO_NEXT_ENTRY -> NO_NEXT_ENTRY
    java.lang.String NO_PREVIOUS_ENTRY -> NO_PREVIOUS_ENTRY
    java.lang.String REMOVE_INVALID -> REMOVE_INVALID
    java.lang.String GETKEY_INVALID -> GETKEY_INVALID
    java.lang.String GETVALUE_INVALID -> GETVALUE_INVALID
    java.lang.String SETVALUE_INVALID -> SETVALUE_INVALID
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    int DEFAULT_THRESHOLD -> DEFAULT_THRESHOLD
    float DEFAULT_LOAD_FACTOR -> DEFAULT_LOAD_FACTOR
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    java.lang.Object NULL -> NULL
    float loadFactor -> loadFactor
    int size -> size
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry[] data -> data
    int threshold -> threshold
    int modCount -> modCount
    org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet entrySet -> entrySet
    org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet keySet -> keySet
    org.jivesoftware.smack.util.collections.AbstractHashedMap$Values values -> values
    void init() -> init
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    int hash(java.lang.Object) -> hash
    boolean isEqualKey(java.lang.Object,java.lang.Object) -> isEqualKey
    boolean isEqualValue(java.lang.Object,java.lang.Object) -> isEqualValue
    int hashIndex(int,int) -> hashIndex
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry getEntry(java.lang.Object) -> getEntry
    void updateEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> updateEntry
    void reuseEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,int,java.lang.Object,java.lang.Object) -> reuseEntry
    void addMapping(int,int,java.lang.Object,java.lang.Object) -> addMapping
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry createEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object) -> createEntry
    void addEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int) -> addEntry
    void removeMapping(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> removeMapping
    void removeEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> removeEntry
    void destroyEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> destroyEntry
    void checkCapacity() -> checkCapacity
    void ensureCapacity(int) -> ensureCapacity
    int calculateNewCapacity(int) -> calculateNewCapacity
    int calculateThreshold(int,float) -> calculateThreshold
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry entryNext(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryNext
    int entryHashCode(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryHashCode
    java.lang.Object entryKey(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryKey
    java.lang.Object entryValue(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> entryValue
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
    java.util.Set entrySet() -> entrySet
    java.util.Iterator createEntrySetIterator() -> createEntrySetIterator
    java.util.Set keySet() -> keySet
    java.util.Iterator createKeySetIterator() -> createKeySetIterator
    java.util.Collection values() -> values
    java.util.Iterator createValuesIterator() -> createValuesIterator
    void doWriteObject(java.io.ObjectOutputStream) -> doWriteObject
    void doReadObject(java.io.ObjectInputStream) -> doReadObject
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet -> org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySet:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.util.Map$Entry) -> contains
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySetIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$EntrySetIterator:
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next() -> next
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry:
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next -> next
    int hashCode -> hashCode
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    void setKey(java.lang.Object) -> setKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object access$000(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> access$000
    java.lang.Object access$002(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> access$002
    java.lang.Object access$102(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,java.lang.Object) -> access$102
    java.lang.Object access$100(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry) -> access$100
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashIterator:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int hashIndex -> hashIndex
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry last -> last
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry next -> next
    int expectedModCount -> expectedModCount
    boolean hasNext() -> hasNext
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry nextEntry() -> nextEntry
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry currentEntry() -> currentEntry
    void remove() -> remove
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractHashedMap$HashMapIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$HashMapIterator:
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet -> org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySet:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySetIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$KeySetIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractHashedMap$Values -> org.jivesoftware.smack.util.collections.AbstractHashedMap$Values:
    org.jivesoftware.smack.util.collections.AbstractHashedMap parent -> parent
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
org.jivesoftware.smack.util.collections.AbstractHashedMap$ValuesIterator -> org.jivesoftware.smack.util.collections.AbstractHashedMap$ValuesIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractKeyValue -> org.jivesoftware.smack.util.collections.AbstractKeyValue:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
org.jivesoftware.smack.util.collections.AbstractMapEntry -> org.jivesoftware.smack.util.collections.AbstractMapEntry:
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.AbstractReferenceMap -> org.jivesoftware.smack.util.collections.AbstractReferenceMap:
    int HARD -> HARD
    int SOFT -> SOFT
    int WEAK -> WEAK
    int keyType -> keyType
    int valueType -> valueType
    boolean purgeValues -> purgeValues
    java.lang.ref.ReferenceQueue queue -> queue
    void init() -> init
    void verify(java.lang.String,int) -> verify
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    void purgeBeforeRead() -> purgeBeforeRead
    void purgeBeforeWrite() -> purgeBeforeWrite
    void purge() -> purge
    void purge(java.lang.ref.Reference) -> purge
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry getEntry(java.lang.Object) -> getEntry
    int hashEntry(java.lang.Object,java.lang.Object) -> hashEntry
    boolean isEqualKey(java.lang.Object,java.lang.Object) -> isEqualKey
    org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry createEntry(org.jivesoftware.smack.util.collections.AbstractHashedMap$HashEntry,int,java.lang.Object,java.lang.Object) -> createEntry
    java.util.Iterator createEntrySetIterator() -> createEntrySetIterator
    java.util.Iterator createKeySetIterator() -> createKeySetIterator
    java.util.Iterator createValuesIterator() -> createValuesIterator
    void doWriteObject(java.io.ObjectOutputStream) -> doWriteObject
    void doReadObject(java.io.ObjectInputStream) -> doReadObject
    java.lang.ref.ReferenceQueue access$000(org.jivesoftware.smack.util.collections.AbstractReferenceMap) -> access$000
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap parent -> parent
    java.lang.ref.Reference refKey -> refKey
    java.lang.ref.Reference refValue -> refValue
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.ref.Reference toReference(int,java.lang.Object,int) -> toReference
    boolean purge(java.lang.ref.Reference) -> purge
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySet -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySet:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySetIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntrySetIterator:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry next() -> next
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceIteratorBase -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceIteratorBase:
    org.jivesoftware.smack.util.collections.AbstractReferenceMap parent -> parent
    int index -> index
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry entry -> entry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry previous -> previous
    java.lang.Object nextKey -> nextKey
    java.lang.Object nextValue -> nextValue
    java.lang.Object currentKey -> currentKey
    java.lang.Object currentValue -> currentValue
    int expectedModCount -> expectedModCount
    boolean hasNext() -> hasNext
    void checkMod() -> checkMod
    boolean nextNull() -> nextNull
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry nextEntry() -> nextEntry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry currentEntry() -> currentEntry
    org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceEntry superNext() -> superNext
    void remove() -> remove
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySet -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySet:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySetIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceKeySetIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceMapIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceMapIterator:
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValues -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValues:
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValuesIterator -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$ReferenceValuesIterator:
    java.lang.Object next() -> next
org.jivesoftware.smack.util.collections.AbstractReferenceMap$SoftRef -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$SoftRef:
    int hash -> hash
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.AbstractReferenceMap$WeakRef -> org.jivesoftware.smack.util.collections.AbstractReferenceMap$WeakRef:
    int hash -> hash
    int hashCode() -> hashCode
org.jivesoftware.smack.util.collections.DefaultMapEntry -> org.jivesoftware.smack.util.collections.DefaultMapEntry:
org.jivesoftware.smack.util.collections.EmptyIterator -> org.jivesoftware.smack.util.collections.EmptyIterator:
    org.jivesoftware.smack.util.collections.ResettableIterator RESETTABLE_INSTANCE -> RESETTABLE_INSTANCE
    java.util.Iterator INSTANCE -> INSTANCE
    java.util.Iterator getInstance() -> getInstance
    void reset() -> reset
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
    void remove() -> remove
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
    int previousIndex() -> previousIndex
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    boolean hasNext() -> hasNext
org.jivesoftware.smack.util.collections.EmptyMapIterator -> org.jivesoftware.smack.util.collections.EmptyMapIterator:
    org.jivesoftware.smack.util.collections.MapIterator INSTANCE -> INSTANCE
    void reset() -> reset
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
    void remove() -> remove
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
    int previousIndex() -> previousIndex
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    boolean hasNext() -> hasNext
org.jivesoftware.smack.util.collections.IterableMap -> org.jivesoftware.smack.util.collections.IterableMap:
    org.jivesoftware.smack.util.collections.MapIterator mapIterator() -> mapIterator
org.jivesoftware.smack.util.collections.KeyValue -> org.jivesoftware.smack.util.collections.KeyValue:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
org.jivesoftware.smack.util.collections.MapIterator -> org.jivesoftware.smack.util.collections.MapIterator:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    void remove() -> remove
    java.lang.Object setValue(java.lang.Object) -> setValue
org.jivesoftware.smack.util.collections.ReferenceMap -> org.jivesoftware.smack.util.collections.ReferenceMap:
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.jivesoftware.smack.util.collections.ResettableIterator -> org.jivesoftware.smack.util.collections.ResettableIterator:
    void reset() -> reset
org.jivesoftware.smackx.CapsVerListener -> org.jivesoftware.smackx.CapsVerListener:
    void capsVerUpdated(java.lang.String) -> capsVerUpdated
org.jivesoftware.smackx.ChatState -> org.jivesoftware.smackx.ChatState:
    org.jivesoftware.smackx.ChatState active -> active
    org.jivesoftware.smackx.ChatState composing -> composing
    org.jivesoftware.smackx.ChatState paused -> paused
    org.jivesoftware.smackx.ChatState inactive -> inactive
    org.jivesoftware.smackx.ChatState gone -> gone
    org.jivesoftware.smackx.ChatState[] $VALUES -> $VALUES
    org.jivesoftware.smackx.ChatState[] values() -> values
    org.jivesoftware.smackx.ChatState valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.ChatStateListener -> org.jivesoftware.smackx.ChatStateListener:
    void stateChanged(org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> stateChanged
org.jivesoftware.smackx.ChatStateManager -> org.jivesoftware.smackx.ChatStateManager:
    java.util.Map managers -> managers
    org.jivesoftware.smack.filter.PacketFilter filter -> filter
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.ChatStateManager$OutgoingMessageInterceptor outgoingInterceptor -> outgoingInterceptor
    org.jivesoftware.smackx.ChatStateManager$IncomingMessageInterceptor incomingInterceptor -> incomingInterceptor
    java.util.Map chatStates -> chatStates
    org.jivesoftware.smackx.ChatStateManager getInstance(org.jivesoftware.smack.Connection) -> getInstance
    void init() -> init
    void setCurrentState(org.jivesoftware.smackx.ChatState,org.jivesoftware.smack.Chat) -> setCurrentState
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean updateChatState(org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> updateChatState
    void fireNewChatState(org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> fireNewChatState
    org.jivesoftware.smack.Connection access$200(org.jivesoftware.smackx.ChatStateManager) -> access$200
    boolean access$300(org.jivesoftware.smackx.ChatStateManager,org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> access$300
    void access$400(org.jivesoftware.smackx.ChatStateManager,org.jivesoftware.smack.Chat,org.jivesoftware.smackx.ChatState) -> access$400
org.jivesoftware.smackx.ChatStateManager$1 -> org.jivesoftware.smackx.ChatStateManager$1:
org.jivesoftware.smackx.ChatStateManager$IncomingMessageInterceptor -> org.jivesoftware.smackx.ChatStateManager$IncomingMessageInterceptor:
    org.jivesoftware.smackx.ChatStateManager this$0 -> this$0
    void chatCreated(org.jivesoftware.smack.Chat,boolean) -> chatCreated
    void processMessage(org.jivesoftware.smack.Chat,org.jivesoftware.smack.packet.Message) -> processMessage
org.jivesoftware.smackx.ChatStateManager$OutgoingMessageInterceptor -> org.jivesoftware.smackx.ChatStateManager$OutgoingMessageInterceptor:
    org.jivesoftware.smackx.ChatStateManager this$0 -> this$0
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smackx.DefaultMessageEventRequestListener -> org.jivesoftware.smackx.DefaultMessageEventRequestListener:
    void deliveredNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> deliveredNotificationRequested
    void displayedNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> displayedNotificationRequested
    void composingNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> composingNotificationRequested
    void offlineNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> offlineNotificationRequested
org.jivesoftware.smackx.EntityCapsManager -> org.jivesoftware.smackx.EntityCapsManager:
    java.lang.String HASH_METHOD -> HASH_METHOD
    java.lang.String HASH_METHOD_CAPS -> HASH_METHOD_CAPS
    java.lang.String entityNode -> entityNode
    java.util.Map caps -> caps
    java.util.Map userCaps -> userCaps
    java.util.Set capsVerListeners -> capsVerListeners
    java.lang.String currentCapsVersion -> currentCapsVersion
    void addDiscoverInfoByNode(java.lang.String,org.jivesoftware.smackx.packet.DiscoverInfo) -> addDiscoverInfoByNode
    void addUserCapsNode(java.lang.String,java.lang.String) -> addUserCapsNode
    void removeUserCapsNode(java.lang.String) -> removeUserCapsNode
    java.lang.String getNodeVersionByUser(java.lang.String) -> getNodeVersionByUser
    org.jivesoftware.smackx.packet.DiscoverInfo getDiscoverInfoByUser(java.lang.String) -> getDiscoverInfoByUser
    java.lang.String getCapsVersion() -> getCapsVersion
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    org.jivesoftware.smackx.packet.DiscoverInfo getDiscoverInfoByNode(java.lang.String) -> getDiscoverInfoByNode
    void cleanupDicsoverInfo(org.jivesoftware.smackx.packet.DiscoverInfo) -> cleanupDicsoverInfo
    void addPacketListener(org.jivesoftware.smack.Connection) -> addPacketListener
    void addCapsVerListener(org.jivesoftware.smackx.CapsVerListener) -> addCapsVerListener
    void removeCapsVerListener(org.jivesoftware.smackx.CapsVerListener) -> removeCapsVerListener
    void notifyCapsVerListeners() -> notifyCapsVerListeners
    java.lang.String capsToHash(java.lang.String) -> capsToHash
    java.lang.String formFieldValuesToCaps(java.util.Iterator) -> formFieldValuesToCaps
    void calculateEntityCapsVersion(org.jivesoftware.smackx.packet.DiscoverInfo,java.lang.String,java.lang.String,java.util.List,org.jivesoftware.smackx.packet.DataForm) -> calculateEntityCapsVersion
    void setCurrentCapsVersion(org.jivesoftware.smackx.packet.DiscoverInfo,java.lang.String) -> setCurrentCapsVersion
org.jivesoftware.smackx.EntityCapsManager$1 -> org.jivesoftware.smackx.EntityCapsManager$1:
    org.jivesoftware.smackx.EntityCapsManager this$0 -> this$0
    int compare(org.jivesoftware.smackx.FormField,org.jivesoftware.smackx.FormField) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.jivesoftware.smackx.EntityCapsManager$CapsPacketListener -> org.jivesoftware.smackx.EntityCapsManager$CapsPacketListener:
    org.jivesoftware.smackx.EntityCapsManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.Form -> org.jivesoftware.smackx.Form:
    java.lang.String TYPE_FORM -> TYPE_FORM
    java.lang.String TYPE_SUBMIT -> TYPE_SUBMIT
    java.lang.String TYPE_CANCEL -> TYPE_CANCEL
    java.lang.String TYPE_RESULT -> TYPE_RESULT
    org.jivesoftware.smackx.packet.DataForm dataForm -> dataForm
    org.jivesoftware.smackx.Form getFormFrom(org.jivesoftware.smack.packet.Packet) -> getFormFrom
    void addField(org.jivesoftware.smackx.FormField) -> addField
    void setAnswer(java.lang.String,java.lang.String) -> setAnswer
    void setAnswer(java.lang.String,int) -> setAnswer
    void setAnswer(java.lang.String,long) -> setAnswer
    void setAnswer(java.lang.String,float) -> setAnswer
    void setAnswer(java.lang.String,double) -> setAnswer
    void setAnswer(java.lang.String,boolean) -> setAnswer
    void setAnswer(org.jivesoftware.smackx.FormField,java.lang.Object) -> setAnswer
    void setAnswer(java.lang.String,java.util.List) -> setAnswer
    void setDefaultAnswer(java.lang.String) -> setDefaultAnswer
    java.util.Iterator getFields() -> getFields
    org.jivesoftware.smackx.FormField getField(java.lang.String) -> getField
    java.lang.String getInstructions() -> getInstructions
    java.lang.String getTitle() -> getTitle
    java.lang.String getType() -> getType
    void setInstructions(java.lang.String) -> setInstructions
    void setTitle(java.lang.String) -> setTitle
    org.jivesoftware.smackx.packet.DataForm getDataFormToSend() -> getDataFormToSend
    boolean isFormType() -> isFormType
    boolean isSubmitType() -> isSubmitType
    org.jivesoftware.smackx.Form createAnswerForm() -> createAnswerForm
org.jivesoftware.smackx.FormField -> org.jivesoftware.smackx.FormField:
    java.lang.String TYPE_BOOLEAN -> TYPE_BOOLEAN
    java.lang.String TYPE_FIXED -> TYPE_FIXED
    java.lang.String TYPE_HIDDEN -> TYPE_HIDDEN
    java.lang.String TYPE_JID_MULTI -> TYPE_JID_MULTI
    java.lang.String TYPE_JID_SINGLE -> TYPE_JID_SINGLE
    java.lang.String TYPE_LIST_MULTI -> TYPE_LIST_MULTI
    java.lang.String TYPE_LIST_SINGLE -> TYPE_LIST_SINGLE
    java.lang.String TYPE_TEXT_MULTI -> TYPE_TEXT_MULTI
    java.lang.String TYPE_TEXT_PRIVATE -> TYPE_TEXT_PRIVATE
    java.lang.String TYPE_TEXT_SINGLE -> TYPE_TEXT_SINGLE
    java.lang.String description -> description
    boolean required -> required
    java.lang.String label -> label
    java.lang.String variable -> variable
    java.lang.String type -> type
    java.util.List options -> options
    java.util.List values -> values
    java.lang.String getDescription() -> getDescription
    java.lang.String getLabel() -> getLabel
    java.util.Iterator getOptions() -> getOptions
    boolean isRequired() -> isRequired
    java.lang.String getType() -> getType
    java.util.Iterator getValues() -> getValues
    java.lang.String getVariable() -> getVariable
    void setDescription(java.lang.String) -> setDescription
    void setLabel(java.lang.String) -> setLabel
    void setRequired(boolean) -> setRequired
    void setType(java.lang.String) -> setType
    void addValue(java.lang.String) -> addValue
    void addValues(java.util.List) -> addValues
    void resetValues() -> resetValues
    void addOption(org.jivesoftware.smackx.FormField$Option) -> addOption
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.FormField$Option -> org.jivesoftware.smackx.FormField$Option:
    java.lang.String label -> label
    java.lang.String value -> value
    java.lang.String getLabel() -> getLabel
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.Gateway -> org.jivesoftware.smackx.Gateway:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.ServiceDiscoveryManager sdManager -> sdManager
    org.jivesoftware.smack.Roster roster -> roster
    java.lang.String entityJID -> entityJID
    org.jivesoftware.smack.packet.Registration registerInfo -> registerInfo
    org.jivesoftware.smackx.packet.DiscoverInfo$Identity identity -> identity
    org.jivesoftware.smackx.packet.DiscoverInfo info -> info
    void discoverInfo() -> discoverInfo
    org.jivesoftware.smackx.packet.DiscoverInfo$Identity getIdentity() -> getIdentity
    org.jivesoftware.smack.packet.Registration getRegisterInfo() -> getRegisterInfo
    void refreshRegisterInfo() -> refreshRegisterInfo
    boolean canRegister() -> canRegister
    java.util.List getRequiredFields() -> getRequiredFields
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isRegistered() -> isRegistered
    java.lang.String getField(java.lang.String) -> getField
    java.util.List getFieldNames() -> getFieldNames
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
    java.lang.String getInstructions() -> getInstructions
    void register(java.lang.String,java.lang.String,java.util.Map) -> register
    void register(java.lang.String,java.lang.String) -> register
    void unregister() -> unregister
    void login() -> login
    void login(org.jivesoftware.smack.packet.Presence) -> login
    void logout() -> logout
    java.lang.String access$100(org.jivesoftware.smackx.Gateway) -> access$100
    org.jivesoftware.smack.Roster access$200(org.jivesoftware.smackx.Gateway) -> access$200
    org.jivesoftware.smack.Connection access$300(org.jivesoftware.smackx.Gateway) -> access$300
org.jivesoftware.smackx.Gateway$1 -> org.jivesoftware.smackx.Gateway$1:
org.jivesoftware.smackx.Gateway$GatewayPresenceListener -> org.jivesoftware.smackx.Gateway$GatewayPresenceListener:
    org.jivesoftware.smackx.Gateway this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.GatewayManager -> org.jivesoftware.smackx.GatewayManager:
    java.util.Map instances -> instances
    org.jivesoftware.smackx.ServiceDiscoveryManager sdManager -> sdManager
    java.util.Map localGateways -> localGateways
    java.util.Map nonLocalGateways -> nonLocalGateways
    java.util.Map gateways -> gateways
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.Roster roster -> roster
    void loadLocalGateways() -> loadLocalGateways
    void discoverGateway(java.lang.String) -> discoverGateway
    void loadNonLocalGateways() -> loadNonLocalGateways
    org.jivesoftware.smackx.GatewayManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    java.util.List getLocalGateways() -> getLocalGateways
    java.util.List getNonLocalGateways() -> getNonLocalGateways
    void refreshNonLocalGateways() -> refreshNonLocalGateways
    org.jivesoftware.smackx.Gateway getGateway(java.lang.String) -> getGateway
org.jivesoftware.smackx.GroupChatInvitation -> org.jivesoftware.smackx.GroupChatInvitation:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String roomAddress -> roomAddress
    java.lang.String getRoomAddress() -> getRoomAddress
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.GroupChatInvitation$Provider -> org.jivesoftware.smackx.GroupChatInvitation$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.LastActivityManager -> org.jivesoftware.smackx.LastActivityManager:
    long lastMessageSent -> lastMessageSent
    org.jivesoftware.smack.Connection connection -> connection
    void resetIdleTime() -> resetIdleTime
    long getIdleTime() -> getIdleTime
    org.jivesoftware.smackx.packet.LastActivity getLastActivity(org.jivesoftware.smack.Connection,java.lang.String) -> getLastActivity
    void access$100(org.jivesoftware.smackx.LastActivityManager) -> access$100
    long access$200(org.jivesoftware.smackx.LastActivityManager) -> access$200
    org.jivesoftware.smack.Connection access$300(org.jivesoftware.smackx.LastActivityManager) -> access$300
org.jivesoftware.smackx.LastActivityManager$1 -> org.jivesoftware.smackx.LastActivityManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.LastActivityManager$2 -> org.jivesoftware.smackx.LastActivityManager$2:
    org.jivesoftware.smackx.LastActivityManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.LastActivityManager$3 -> org.jivesoftware.smackx.LastActivityManager$3:
    org.jivesoftware.smackx.LastActivityManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.MessageEventManager -> org.jivesoftware.smackx.MessageEventManager:
    java.util.List messageEventNotificationListeners -> messageEventNotificationListeners
    java.util.List messageEventRequestListeners -> messageEventRequestListeners
    org.jivesoftware.smack.Connection con -> con
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    void addNotificationsRequests(org.jivesoftware.smack.packet.Message,boolean,boolean,boolean,boolean) -> addNotificationsRequests
    void addMessageEventRequestListener(org.jivesoftware.smackx.MessageEventRequestListener) -> addMessageEventRequestListener
    void removeMessageEventRequestListener(org.jivesoftware.smackx.MessageEventRequestListener) -> removeMessageEventRequestListener
    void addMessageEventNotificationListener(org.jivesoftware.smackx.MessageEventNotificationListener) -> addMessageEventNotificationListener
    void removeMessageEventNotificationListener(org.jivesoftware.smackx.MessageEventNotificationListener) -> removeMessageEventNotificationListener
    void fireMessageEventRequestListeners(java.lang.String,java.lang.String,java.lang.String) -> fireMessageEventRequestListeners
    void fireMessageEventNotificationListeners(java.lang.String,java.lang.String,java.lang.String) -> fireMessageEventNotificationListeners
    void init() -> init
    void sendDeliveredNotification(java.lang.String,java.lang.String) -> sendDeliveredNotification
    void sendDisplayedNotification(java.lang.String,java.lang.String) -> sendDisplayedNotification
    void sendComposingNotification(java.lang.String,java.lang.String) -> sendComposingNotification
    void sendCancelledNotification(java.lang.String,java.lang.String) -> sendCancelledNotification
    void destroy() -> destroy
    void finalize() -> finalize
    void access$000(org.jivesoftware.smackx.MessageEventManager,java.lang.String,java.lang.String,java.lang.String) -> access$000
    void access$100(org.jivesoftware.smackx.MessageEventManager,java.lang.String,java.lang.String,java.lang.String) -> access$100
org.jivesoftware.smackx.MessageEventManager$1 -> org.jivesoftware.smackx.MessageEventManager$1:
    org.jivesoftware.smackx.MessageEventManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.MessageEventNotificationListener -> org.jivesoftware.smackx.MessageEventNotificationListener:
    void deliveredNotification(java.lang.String,java.lang.String) -> deliveredNotification
    void displayedNotification(java.lang.String,java.lang.String) -> displayedNotification
    void composingNotification(java.lang.String,java.lang.String) -> composingNotification
    void offlineNotification(java.lang.String,java.lang.String) -> offlineNotification
    void cancelledNotification(java.lang.String,java.lang.String) -> cancelledNotification
org.jivesoftware.smackx.MessageEventRequestListener -> org.jivesoftware.smackx.MessageEventRequestListener:
    void deliveredNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> deliveredNotificationRequested
    void displayedNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> displayedNotificationRequested
    void composingNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> composingNotificationRequested
    void offlineNotificationRequested(java.lang.String,java.lang.String,org.jivesoftware.smackx.MessageEventManager) -> offlineNotificationRequested
org.jivesoftware.smackx.MultipleRecipientInfo -> org.jivesoftware.smackx.MultipleRecipientInfo:
    org.jivesoftware.smackx.packet.MultipleAddresses extension -> extension
    java.util.List getTOAddresses() -> getTOAddresses
    java.util.List getCCAddresses() -> getCCAddresses
    java.lang.String getReplyRoom() -> getReplyRoom
    boolean shouldNotReply() -> shouldNotReply
    org.jivesoftware.smackx.packet.MultipleAddresses$Address getReplyAddress() -> getReplyAddress
org.jivesoftware.smackx.MultipleRecipientManager -> org.jivesoftware.smackx.MultipleRecipientManager:
    org.jivesoftware.smack.util.Cache services -> services
    void send(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List) -> send
    void send(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,boolean) -> send
    void reply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Message,org.jivesoftware.smack.packet.Message) -> reply
    org.jivesoftware.smackx.MultipleRecipientInfo getMultipleRecipientInfo(org.jivesoftware.smack.packet.Packet) -> getMultipleRecipientInfo
    void sendToIndividualRecipients(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List) -> sendToIndividualRecipients
    void sendThroughService(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,java.util.List,java.util.List,java.util.List,java.lang.String,java.lang.String,boolean,java.lang.String) -> sendThroughService
    java.lang.String getMultipleRecipienServiceAddress(org.jivesoftware.smack.Connection) -> getMultipleRecipienServiceAddress
org.jivesoftware.smackx.MultipleRecipientManager$PacketCopy -> org.jivesoftware.smackx.MultipleRecipientManager$PacketCopy:
    java.lang.String text -> text
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.NodeInformationProvider -> org.jivesoftware.smackx.NodeInformationProvider:
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
org.jivesoftware.smackx.OfflineMessageHeader -> org.jivesoftware.smackx.OfflineMessageHeader:
    java.lang.String user -> user
    java.lang.String jid -> jid
    java.lang.String stamp -> stamp
    java.lang.String getUser() -> getUser
    java.lang.String getJid() -> getJid
    java.lang.String getStamp() -> getStamp
org.jivesoftware.smackx.OfflineMessageManager -> org.jivesoftware.smackx.OfflineMessageManager:
    java.lang.String namespace -> namespace
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    boolean supportsFlexibleRetrieval() -> supportsFlexibleRetrieval
    int getMessageCount() -> getMessageCount
    java.util.Iterator getHeaders() -> getHeaders
    java.util.Iterator getMessages(java.util.List) -> getMessages
    java.util.Iterator getMessages() -> getMessages
    void deleteMessages(java.util.List) -> deleteMessages
    void deleteMessages() -> deleteMessages
org.jivesoftware.smackx.OfflineMessageManager$1 -> org.jivesoftware.smackx.OfflineMessageManager$1:
    java.util.List val$nodes -> val$nodes
    org.jivesoftware.smackx.OfflineMessageManager this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.PEPListener -> org.jivesoftware.smackx.PEPListener:
    void eventReceived(java.lang.String,org.jivesoftware.smackx.packet.PEPEvent) -> eventReceived
org.jivesoftware.smackx.PEPManager -> org.jivesoftware.smackx.PEPManager:
    java.util.List pepListeners -> pepListeners
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    void addPEPListener(org.jivesoftware.smackx.PEPListener) -> addPEPListener
    void removePEPListener(org.jivesoftware.smackx.PEPListener) -> removePEPListener
    void publish(org.jivesoftware.smackx.packet.PEPItem) -> publish
    void firePEPListeners(java.lang.String,org.jivesoftware.smackx.packet.PEPEvent) -> firePEPListeners
    void init() -> init
    void destroy() -> destroy
    void finalize() -> finalize
    void access$000(org.jivesoftware.smackx.PEPManager,java.lang.String,org.jivesoftware.smackx.packet.PEPEvent) -> access$000
org.jivesoftware.smackx.PEPManager$1 -> org.jivesoftware.smackx.PEPManager$1:
    org.jivesoftware.smackx.PEPManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.PrivateDataManager -> org.jivesoftware.smackx.PrivateDataManager:
    java.util.Map privateDataProviders -> privateDataProviders
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String user -> user
    org.jivesoftware.smackx.provider.PrivateDataProvider getPrivateDataProvider(java.lang.String,java.lang.String) -> getPrivateDataProvider
    void addPrivateDataProvider(java.lang.String,java.lang.String,org.jivesoftware.smackx.provider.PrivateDataProvider) -> addPrivateDataProvider
    void removePrivateDataProvider(java.lang.String,java.lang.String) -> removePrivateDataProvider
    org.jivesoftware.smackx.packet.PrivateData getPrivateData(java.lang.String,java.lang.String) -> getPrivateData
    void setPrivateData(org.jivesoftware.smackx.packet.PrivateData) -> setPrivateData
    java.lang.String getProviderKey(java.lang.String,java.lang.String) -> getProviderKey
org.jivesoftware.smackx.PrivateDataManager$1 -> org.jivesoftware.smackx.PrivateDataManager$1:
    java.lang.String val$elementName -> val$elementName
    java.lang.String val$namespace -> val$namespace
    org.jivesoftware.smackx.PrivateDataManager this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.PrivateDataManager$2 -> org.jivesoftware.smackx.PrivateDataManager$2:
    org.jivesoftware.smackx.packet.PrivateData val$privateData -> val$privateData
    org.jivesoftware.smackx.PrivateDataManager this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.PrivateDataManager$PrivateDataIQProvider -> org.jivesoftware.smackx.PrivateDataManager$PrivateDataIQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.PrivateDataManager$PrivateDataResult -> org.jivesoftware.smackx.PrivateDataManager$PrivateDataResult:
    org.jivesoftware.smackx.packet.PrivateData privateData -> privateData
    org.jivesoftware.smackx.packet.PrivateData getPrivateData() -> getPrivateData
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.RemoteRosterEntry -> org.jivesoftware.smackx.RemoteRosterEntry:
    java.lang.String user -> user
    java.lang.String name -> name
    java.util.List groupNames -> groupNames
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    java.util.Iterator getGroupNames() -> getGroupNames
    java.lang.String[] getGroupArrayNames() -> getGroupArrayNames
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.ReportedData -> org.jivesoftware.smackx.ReportedData:
    java.util.List columns -> columns
    java.util.List rows -> rows
    java.lang.String title -> title
    org.jivesoftware.smackx.ReportedData getReportedDataFrom(org.jivesoftware.smack.packet.Packet) -> getReportedDataFrom
    void addRow(org.jivesoftware.smackx.ReportedData$Row) -> addRow
    void addColumn(org.jivesoftware.smackx.ReportedData$Column) -> addColumn
    java.util.Iterator getRows() -> getRows
    java.util.Iterator getColumns() -> getColumns
    java.lang.String getTitle() -> getTitle
org.jivesoftware.smackx.ReportedData$Column -> org.jivesoftware.smackx.ReportedData$Column:
    java.lang.String label -> label
    java.lang.String variable -> variable
    java.lang.String type -> type
    java.lang.String getLabel() -> getLabel
    java.lang.String getType() -> getType
    java.lang.String getVariable() -> getVariable
org.jivesoftware.smackx.ReportedData$Field -> org.jivesoftware.smackx.ReportedData$Field:
    java.lang.String variable -> variable
    java.util.List values -> values
    java.lang.String getVariable() -> getVariable
    java.util.Iterator getValues() -> getValues
org.jivesoftware.smackx.ReportedData$Row -> org.jivesoftware.smackx.ReportedData$Row:
    java.util.List fields -> fields
    java.util.Iterator getValues(java.lang.String) -> getValues
    java.util.Iterator getFields() -> getFields
org.jivesoftware.smackx.RosterExchangeListener -> org.jivesoftware.smackx.RosterExchangeListener:
    void entriesReceived(java.lang.String,java.util.Iterator) -> entriesReceived
org.jivesoftware.smackx.RosterExchangeManager -> org.jivesoftware.smackx.RosterExchangeManager:
    java.util.List rosterExchangeListeners -> rosterExchangeListeners
    org.jivesoftware.smack.Connection con -> con
    org.jivesoftware.smack.filter.PacketFilter packetFilter -> packetFilter
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    void addRosterListener(org.jivesoftware.smackx.RosterExchangeListener) -> addRosterListener
    void removeRosterListener(org.jivesoftware.smackx.RosterExchangeListener) -> removeRosterListener
    void send(org.jivesoftware.smack.Roster,java.lang.String) -> send
    void send(org.jivesoftware.smack.RosterEntry,java.lang.String) -> send
    void send(org.jivesoftware.smack.RosterGroup,java.lang.String) -> send
    void fireRosterExchangeListeners(java.lang.String,java.util.Iterator) -> fireRosterExchangeListeners
    void init() -> init
    void destroy() -> destroy
    void finalize() -> finalize
    void access$000(org.jivesoftware.smackx.RosterExchangeManager,java.lang.String,java.util.Iterator) -> access$000
org.jivesoftware.smackx.RosterExchangeManager$1 -> org.jivesoftware.smackx.RosterExchangeManager$1:
    org.jivesoftware.smackx.RosterExchangeManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.ServiceDiscoveryManager -> org.jivesoftware.smackx.ServiceDiscoveryManager:
    java.lang.String identityName -> identityName
    java.lang.String identityType -> identityType
    java.lang.String entityNode -> entityNode
    boolean cacheNonCaps -> cacheNonCaps
    java.lang.String currentCapsVersion -> currentCapsVersion
    boolean sendPresence -> sendPresence
    java.util.Map nonCapsCache -> nonCapsCache
    org.jivesoftware.smackx.EntityCapsManager capsManager -> capsManager
    java.util.Map instances -> instances
    org.jivesoftware.smack.Connection connection -> connection
    java.util.List features -> features
    org.jivesoftware.smackx.packet.DataForm extendedInfo -> extendedInfo
    java.util.Map nodeInformationProviders -> nodeInformationProviders
    org.jivesoftware.smackx.ServiceDiscoveryManager getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    java.lang.String getIdentityName() -> getIdentityName
    void setIdentityName(java.lang.String) -> setIdentityName
    java.lang.String getIdentityType() -> getIdentityType
    void setIdentityType(java.lang.String) -> setIdentityType
    void setNonCapsCaching(boolean) -> setNonCapsCaching
    boolean isNonCapsCachingEnabled() -> isNonCapsCachingEnabled
    void addDiscoverInfoTo(org.jivesoftware.smackx.packet.DiscoverInfo) -> addDiscoverInfoTo
    org.jivesoftware.smackx.packet.DiscoverInfo getOwnDiscoverInfo() -> getOwnDiscoverInfo
    void init() -> init
    org.jivesoftware.smackx.NodeInformationProvider getNodeInformationProvider(java.lang.String) -> getNodeInformationProvider
    void setNodeInformationProvider(java.lang.String,org.jivesoftware.smackx.NodeInformationProvider) -> setNodeInformationProvider
    void removeNodeInformationProvider(java.lang.String) -> removeNodeInformationProvider
    java.util.Iterator getFeatures() -> getFeatures
    void addFeature(java.lang.String) -> addFeature
    void removeFeature(java.lang.String) -> removeFeature
    boolean includesFeature(java.lang.String) -> includesFeature
    void setExtendedInfo(org.jivesoftware.smackx.packet.DataForm) -> setExtendedInfo
    void removeExtendedInfo() -> removeExtendedInfo
    org.jivesoftware.smackx.packet.DiscoverInfo discoverInfoByCaps(java.lang.String) -> discoverInfoByCaps
    org.jivesoftware.smackx.packet.DiscoverInfo discoverInfo(java.lang.String) -> discoverInfo
    org.jivesoftware.smackx.packet.DiscoverInfo discoverInfo(java.lang.String,java.lang.String) -> discoverInfo
    org.jivesoftware.smackx.packet.DiscoverItems discoverItems(java.lang.String) -> discoverItems
    org.jivesoftware.smackx.packet.DiscoverItems discoverItems(java.lang.String,java.lang.String) -> discoverItems
    boolean canPublishItems(java.lang.String) -> canPublishItems
    boolean canPublishItems(org.jivesoftware.smackx.packet.DiscoverInfo) -> canPublishItems
    void publishItems(java.lang.String,org.jivesoftware.smackx.packet.DiscoverItems) -> publishItems
    void publishItems(java.lang.String,java.lang.String,org.jivesoftware.smackx.packet.DiscoverItems) -> publishItems
    org.jivesoftware.smackx.packet.DiscoverInfo cloneDiscoverInfo(org.jivesoftware.smackx.packet.DiscoverInfo) -> cloneDiscoverInfo
    void setEntityCapsManager(org.jivesoftware.smackx.EntityCapsManager) -> setEntityCapsManager
    void renewEntityCapsVersion() -> renewEntityCapsVersion
    java.lang.String getEntityCapsVersion() -> getEntityCapsVersion
    org.jivesoftware.smackx.EntityCapsManager getEntityCapsManager() -> getEntityCapsManager
    void setSendPresence() -> setSendPresence
    boolean isSendPresence() -> isSendPresence
    java.util.Map access$100() -> access$100
    org.jivesoftware.smack.Connection access$200(org.jivesoftware.smackx.ServiceDiscoveryManager) -> access$200
    org.jivesoftware.smackx.EntityCapsManager access$300(org.jivesoftware.smackx.ServiceDiscoveryManager) -> access$300
    java.lang.String access$400(org.jivesoftware.smackx.ServiceDiscoveryManager) -> access$400
    org.jivesoftware.smackx.NodeInformationProvider access$500(org.jivesoftware.smackx.ServiceDiscoveryManager,java.lang.String) -> access$500
    boolean access$600(org.jivesoftware.smackx.ServiceDiscoveryManager) -> access$600
org.jivesoftware.smackx.ServiceDiscoveryManager$1 -> org.jivesoftware.smackx.ServiceDiscoveryManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.ServiceDiscoveryManager$2 -> org.jivesoftware.smackx.ServiceDiscoveryManager$2:
    org.jivesoftware.smackx.ServiceDiscoveryManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
org.jivesoftware.smackx.ServiceDiscoveryManager$3 -> org.jivesoftware.smackx.ServiceDiscoveryManager$3:
    org.jivesoftware.smackx.ServiceDiscoveryManager this$0 -> this$0
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smackx.ServiceDiscoveryManager$4 -> org.jivesoftware.smackx.ServiceDiscoveryManager$4:
    org.jivesoftware.smackx.ServiceDiscoveryManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.ServiceDiscoveryManager$5 -> org.jivesoftware.smackx.ServiceDiscoveryManager$5:
    org.jivesoftware.smackx.ServiceDiscoveryManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.ServiceDiscoveryManager$CapsPresenceRenewer -> org.jivesoftware.smackx.ServiceDiscoveryManager$CapsPresenceRenewer:
    org.jivesoftware.smackx.ServiceDiscoveryManager this$0 -> this$0
    void capsVerUpdated(java.lang.String) -> capsVerUpdated
org.jivesoftware.smackx.SharedGroupManager -> org.jivesoftware.smackx.SharedGroupManager:
    java.util.List getSharedGroups(org.jivesoftware.smack.Connection) -> getSharedGroups
org.jivesoftware.smackx.XHTMLManager -> org.jivesoftware.smackx.XHTMLManager:
    java.lang.String namespace -> namespace
    java.util.Iterator getBodies(org.jivesoftware.smack.packet.Message) -> getBodies
    void addBody(org.jivesoftware.smack.packet.Message,java.lang.String) -> addBody
    boolean isXHTMLMessage(org.jivesoftware.smack.packet.Message) -> isXHTMLMessage
    void setServiceEnabled(org.jivesoftware.smack.Connection,boolean) -> setServiceEnabled
    boolean isServiceEnabled(org.jivesoftware.smack.Connection) -> isServiceEnabled
    boolean isServiceEnabled(org.jivesoftware.smack.Connection,java.lang.String) -> isServiceEnabled
org.jivesoftware.smackx.XHTMLManager$1 -> org.jivesoftware.smackx.XHTMLManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.XHTMLText -> org.jivesoftware.smackx.XHTMLText:
    java.lang.StringBuilder text -> text
    void appendOpenAnchorTag(java.lang.String,java.lang.String) -> appendOpenAnchorTag
    void appendCloseAnchorTag() -> appendCloseAnchorTag
    void appendOpenBlockQuoteTag(java.lang.String) -> appendOpenBlockQuoteTag
    void appendCloseBlockQuoteTag() -> appendCloseBlockQuoteTag
    void appendOpenBodyTag(java.lang.String,java.lang.String) -> appendOpenBodyTag
    java.lang.String closeBodyTag() -> closeBodyTag
    void appendBrTag() -> appendBrTag
    void appendOpenCiteTag() -> appendOpenCiteTag
    void appendOpenCodeTag() -> appendOpenCodeTag
    void appendCloseCodeTag() -> appendCloseCodeTag
    void appendOpenEmTag() -> appendOpenEmTag
    void appendCloseEmTag() -> appendCloseEmTag
    void appendOpenHeaderTag(int,java.lang.String) -> appendOpenHeaderTag
    void appendCloseHeaderTag(int) -> appendCloseHeaderTag
    void appendImageTag(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> appendImageTag
    void appendLineItemTag(java.lang.String) -> appendLineItemTag
    void appendOpenOrderedListTag(java.lang.String) -> appendOpenOrderedListTag
    void appendCloseOrderedListTag() -> appendCloseOrderedListTag
    void appendOpenUnorderedListTag(java.lang.String) -> appendOpenUnorderedListTag
    void appendCloseUnorderedListTag() -> appendCloseUnorderedListTag
    void appendOpenParagraphTag(java.lang.String) -> appendOpenParagraphTag
    void appendCloseParagraphTag() -> appendCloseParagraphTag
    void appendOpenInlinedQuoteTag(java.lang.String) -> appendOpenInlinedQuoteTag
    void appendCloseInlinedQuoteTag() -> appendCloseInlinedQuoteTag
    void appendOpenSpanTag(java.lang.String) -> appendOpenSpanTag
    void appendCloseSpanTag() -> appendCloseSpanTag
    void appendOpenStrongTag() -> appendOpenStrongTag
    void appendCloseStrongTag() -> appendCloseStrongTag
    void append(java.lang.String) -> append
    java.lang.String toString() -> toString
org.jivesoftware.smackx.bookmark.BookmarkManager -> org.jivesoftware.smackx.bookmark.BookmarkManager:
    java.util.Map bookmarkManagerMap -> bookmarkManagerMap
    org.jivesoftware.smackx.PrivateDataManager privateDataManager -> privateDataManager
    org.jivesoftware.smackx.bookmark.Bookmarks bookmarks -> bookmarks
    java.lang.Object bookmarkLock -> bookmarkLock
    org.jivesoftware.smackx.bookmark.BookmarkManager getBookmarkManager(org.jivesoftware.smack.Connection) -> getBookmarkManager
    java.util.Collection getBookmarkedConferences() -> getBookmarkedConferences
    void addBookmarkedConference(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String) -> addBookmarkedConference
    void removeBookmarkedConference(java.lang.String) -> removeBookmarkedConference
    java.util.Collection getBookmarkedURLs() -> getBookmarkedURLs
    void addBookmarkedURL(java.lang.String,java.lang.String,boolean) -> addBookmarkedURL
    void removeBookmarkedURL(java.lang.String) -> removeBookmarkedURL
    org.jivesoftware.smackx.bookmark.Bookmarks retrieveBookmarks() -> retrieveBookmarks
org.jivesoftware.smackx.bookmark.BookmarkedConference -> org.jivesoftware.smackx.bookmark.BookmarkedConference:
    java.lang.String name -> name
    boolean autoJoin -> autoJoin
    java.lang.String jid -> jid
    java.lang.String nickname -> nickname
    java.lang.String password -> password
    boolean isShared -> isShared
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean isAutoJoin() -> isAutoJoin
    void setAutoJoin(boolean) -> setAutoJoin
    java.lang.String getJid() -> getJid
    java.lang.String getNickname() -> getNickname
    void setNickname(java.lang.String) -> setNickname
    java.lang.String getPassword() -> getPassword
    void setPassword(java.lang.String) -> setPassword
    boolean equals(java.lang.Object) -> equals
    void setShared(boolean) -> setShared
    boolean isShared() -> isShared
org.jivesoftware.smackx.bookmark.BookmarkedURL -> org.jivesoftware.smackx.bookmark.BookmarkedURL:
    java.lang.String name -> name
    java.lang.String URL -> URL
    boolean isRss -> isRss
    boolean isShared -> isShared
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getURL() -> getURL
    void setRss(boolean) -> setRss
    boolean isRss() -> isRss
    boolean equals(java.lang.Object) -> equals
    void setShared(boolean) -> setShared
    boolean isShared() -> isShared
org.jivesoftware.smackx.bookmark.Bookmarks -> org.jivesoftware.smackx.bookmark.Bookmarks:
    java.util.List bookmarkedURLS -> bookmarkedURLS
    java.util.List bookmarkedConferences -> bookmarkedConferences
    void addBookmarkedURL(org.jivesoftware.smackx.bookmark.BookmarkedURL) -> addBookmarkedURL
    void removeBookmarkedURL(org.jivesoftware.smackx.bookmark.BookmarkedURL) -> removeBookmarkedURL
    void clearBookmarkedURLS() -> clearBookmarkedURLS
    void addBookmarkedConference(org.jivesoftware.smackx.bookmark.BookmarkedConference) -> addBookmarkedConference
    void removeBookmarkedConference(org.jivesoftware.smackx.bookmark.BookmarkedConference) -> removeBookmarkedConference
    void clearBookmarkedConferences() -> clearBookmarkedConferences
    java.util.List getBookmarkedURLS() -> getBookmarkedURLS
    java.util.List getBookmarkedConferences() -> getBookmarkedConferences
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    org.jivesoftware.smackx.bookmark.BookmarkedURL getURLStorage(org.xmlpull.v1.XmlPullParser) -> getURLStorage
    org.jivesoftware.smackx.bookmark.BookmarkedConference getConferenceStorage(org.xmlpull.v1.XmlPullParser) -> getConferenceStorage
    org.jivesoftware.smackx.bookmark.BookmarkedURL access$000(org.xmlpull.v1.XmlPullParser) -> access$000
    org.jivesoftware.smackx.bookmark.BookmarkedConference access$100(org.xmlpull.v1.XmlPullParser) -> access$100
org.jivesoftware.smackx.bookmark.Bookmarks$Provider -> org.jivesoftware.smackx.bookmark.Bookmarks$Provider:
    org.jivesoftware.smackx.packet.PrivateData parsePrivateData(org.xmlpull.v1.XmlPullParser) -> parsePrivateData
org.jivesoftware.smackx.bookmark.SharedBookmark -> org.jivesoftware.smackx.bookmark.SharedBookmark:
    boolean isShared() -> isShared
org.jivesoftware.smackx.bytestreams.BytestreamListener -> org.jivesoftware.smackx.bytestreams.BytestreamListener:
    void incomingBytestreamRequest(org.jivesoftware.smackx.bytestreams.BytestreamRequest) -> incomingBytestreamRequest
org.jivesoftware.smackx.bytestreams.BytestreamManager -> org.jivesoftware.smackx.bytestreams.BytestreamManager:
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> removeIncomingBytestreamListener
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener,java.lang.String) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(java.lang.String) -> removeIncomingBytestreamListener
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String) -> establishSession
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String,java.lang.String) -> establishSession
org.jivesoftware.smackx.bytestreams.BytestreamRequest -> org.jivesoftware.smackx.bytestreams.BytestreamRequest:
    java.lang.String getFrom() -> getFrom
    java.lang.String getSessionID() -> getSessionID
    org.jivesoftware.smackx.bytestreams.BytestreamSession accept() -> accept
    void reject() -> reject
org.jivesoftware.smackx.bytestreams.BytestreamSession -> org.jivesoftware.smackx.bytestreams.BytestreamSession:
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    void close() -> close
    int getReadTimeout() -> getReadTimeout
    void setReadTimeout(int) -> setReadTimeout
org.jivesoftware.smackx.bytestreams.ibb.CloseListener -> org.jivesoftware.smackx.bytestreams.ibb.CloseListener:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager manager -> manager
    org.jivesoftware.smack.filter.PacketFilter closeFilter -> closeFilter
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    org.jivesoftware.smack.filter.PacketFilter getFilter() -> getFilter
org.jivesoftware.smackx.bytestreams.ibb.DataListener -> org.jivesoftware.smackx.bytestreams.ibb.DataListener:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager manager -> manager
    org.jivesoftware.smack.filter.PacketFilter dataFilter -> dataFilter
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    org.jivesoftware.smack.filter.PacketFilter getFilter() -> getFilter
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamListener -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamListener:
    void incomingBytestreamRequest(org.jivesoftware.smackx.bytestreams.BytestreamRequest) -> incomingBytestreamRequest
    void incomingBytestreamRequest(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamRequest) -> incomingBytestreamRequest
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager:
    java.lang.String NAMESPACE -> NAMESPACE
    int MAXIMUM_BLOCK_SIZE -> MAXIMUM_BLOCK_SIZE
    java.lang.String SESSION_ID_PREFIX -> SESSION_ID_PREFIX
    java.util.Random randomGenerator -> randomGenerator
    java.util.Map managers -> managers
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Map userListeners -> userListeners
    java.util.List allRequestListeners -> allRequestListeners
    org.jivesoftware.smackx.bytestreams.ibb.InitiationListener initiationListener -> initiationListener
    org.jivesoftware.smackx.bytestreams.ibb.DataListener dataListener -> dataListener
    org.jivesoftware.smackx.bytestreams.ibb.CloseListener closeListener -> closeListener
    java.util.Map sessions -> sessions
    int defaultBlockSize -> defaultBlockSize
    int maximumBlockSize -> maximumBlockSize
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType stanza -> stanza
    java.util.List ignoredBytestreamRequests -> ignoredBytestreamRequests
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager getByteStreamManager(org.jivesoftware.smack.Connection) -> getByteStreamManager
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> removeIncomingBytestreamListener
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener,java.lang.String) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(java.lang.String) -> removeIncomingBytestreamListener
    void ignoreBytestreamRequestOnce(java.lang.String) -> ignoreBytestreamRequestOnce
    int getDefaultBlockSize() -> getDefaultBlockSize
    void setDefaultBlockSize(int) -> setDefaultBlockSize
    int getMaximumBlockSize() -> getMaximumBlockSize
    void setMaximumBlockSize(int) -> setMaximumBlockSize
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType getStanza() -> getStanza
    void setStanza(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType) -> setStanza
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession establishSession(java.lang.String) -> establishSession
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession establishSession(java.lang.String,java.lang.String) -> establishSession
    void replyRejectPacket(org.jivesoftware.smack.packet.IQ) -> replyRejectPacket
    void replyResourceConstraintPacket(org.jivesoftware.smack.packet.IQ) -> replyResourceConstraintPacket
    void replyItemNotFoundPacket(org.jivesoftware.smack.packet.IQ) -> replyItemNotFoundPacket
    java.lang.String getNextSessionID() -> getNextSessionID
    org.jivesoftware.smack.Connection getConnection() -> getConnection
    org.jivesoftware.smackx.bytestreams.BytestreamListener getUserListener(java.lang.String) -> getUserListener
    java.util.List getAllRequestListeners() -> getAllRequestListeners
    java.util.Map getSessions() -> getSessions
    java.util.List getIgnoredBytestreamRequests() -> getIgnoredBytestreamRequests
    void disableService() -> disableService
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String,java.lang.String) -> establishSession
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String) -> establishSession
    void access$000(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager) -> access$000
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1 -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1$1 -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1$1:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager val$manager -> val$manager
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$1 this$0 -> this$0
    void connectionClosed() -> connectionClosed
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType IQ -> IQ
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType MESSAGE -> MESSAGE
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType[] $VALUES -> $VALUES
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType[] values() -> values
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamRequest -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamRequest:
    org.jivesoftware.smackx.bytestreams.ibb.packet.Open byteStreamRequest -> byteStreamRequest
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager manager -> manager
    java.lang.String getFrom() -> getFrom
    java.lang.String getSessionID() -> getSessionID
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession accept() -> accept
    void reject() -> reject
    org.jivesoftware.smackx.bytestreams.BytestreamSession accept() -> accept
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.bytestreams.ibb.packet.Open byteStreamRequest -> byteStreamRequest
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream inputStream -> inputStream
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBOutputStream outputStream -> outputStream
    java.lang.String remoteJID -> remoteJID
    boolean closeBothStreamsEnabled -> closeBothStreamsEnabled
    boolean isClosed -> isClosed
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    int getReadTimeout() -> getReadTimeout
    void setReadTimeout(int) -> setReadTimeout
    boolean isCloseBothStreamsEnabled() -> isCloseBothStreamsEnabled
    void setCloseBothStreamsEnabled(boolean) -> setCloseBothStreamsEnabled
    void close() -> close
    void closeByPeer(org.jivesoftware.smackx.bytestreams.ibb.packet.Close) -> closeByPeer
    void closeByLocal(boolean) -> closeByLocal
    org.jivesoftware.smack.Connection access$800(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession) -> access$800
    java.lang.String access$1000(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession) -> access$1000
    org.jivesoftware.smackx.bytestreams.ibb.packet.Open access$1100(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession) -> access$1100
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$1 -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$1:
    int[] $SwitchMap$org$jivesoftware$smackx$bytestreams$ibb$InBandBytestreamManager$StanzaType -> $SwitchMap$org$jivesoftware$smackx$bytestreams$ibb$InBandBytestreamManager$StanzaType
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBDataPacketFilter -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBDataPacketFilter:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream:
    org.jivesoftware.smack.PacketListener dataPacketListener -> dataPacketListener
    java.util.concurrent.BlockingQueue dataQueue -> dataQueue
    byte[] buffer -> buffer
    int bufferPointer -> bufferPointer
    long seq -> seq
    boolean isClosed -> isClosed
    boolean closeInvoked -> closeInvoked
    int readTimeout -> readTimeout
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    org.jivesoftware.smack.PacketListener getDataPacketListener() -> getDataPacketListener
    org.jivesoftware.smack.filter.PacketFilter getDataPacketFilter() -> getDataPacketFilter
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    boolean loadBuffer() -> loadBuffer
    void checkClosed() -> checkClosed
    boolean markSupported() -> markSupported
    void close() -> close
    void closeInternal() -> closeInternal
    void cleanup() -> cleanup
    int access$400(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream) -> access$400
    int access$402(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream,int) -> access$402
    void access$500(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream) -> access$500
    void access$600(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream) -> access$600
    boolean access$700(org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBInputStream) -> access$700
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBOutputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IBBOutputStream:
    byte[] buffer -> buffer
    int bufferPointer -> bufferPointer
    long seq -> seq
    boolean isClosed -> isClosed
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    void writeToXML(org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension) -> writeToXML
    void write(int) -> write
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void writeOut(byte[],int,int) -> writeOut
    void flush() -> flush
    void flushBuffer() -> flushBuffer
    void close() -> close
    void closeInternal(boolean) -> closeInternal
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    org.jivesoftware.smack.PacketListener getDataPacketListener() -> getDataPacketListener
    org.jivesoftware.smack.filter.PacketFilter getDataPacketFilter() -> getDataPacketFilter
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream$1 -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream$1:
    long lastSequence -> lastSequence
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBInputStream this$1 -> this$1
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBOutputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$IQIBBOutputStream:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    void writeToXML(org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension) -> writeToXML
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    org.jivesoftware.smack.PacketListener getDataPacketListener() -> getDataPacketListener
    org.jivesoftware.smack.filter.PacketFilter getDataPacketFilter() -> getDataPacketFilter
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream$1 -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream$1:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBInputStream this$1 -> this$1
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBOutputStream -> org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession$MessageIBBOutputStream:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamSession this$0 -> this$0
    void writeToXML(org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension) -> writeToXML
org.jivesoftware.smackx.bytestreams.ibb.InitiationListener -> org.jivesoftware.smackx.bytestreams.ibb.InitiationListener:
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager manager -> manager
    org.jivesoftware.smack.filter.PacketFilter initFilter -> initFilter
    java.util.concurrent.ExecutorService initiationListenerExecutor -> initiationListenerExecutor
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void processRequest(org.jivesoftware.smack.packet.Packet) -> processRequest
    org.jivesoftware.smack.filter.PacketFilter getFilter() -> getFilter
    void shutdown() -> shutdown
    void access$000(org.jivesoftware.smackx.bytestreams.ibb.InitiationListener,org.jivesoftware.smack.packet.Packet) -> access$000
org.jivesoftware.smackx.bytestreams.ibb.InitiationListener$1 -> org.jivesoftware.smackx.bytestreams.ibb.InitiationListener$1:
    org.jivesoftware.smack.packet.Packet val$packet -> val$packet
    org.jivesoftware.smackx.bytestreams.ibb.InitiationListener this$0 -> this$0
    void run() -> run
org.jivesoftware.smackx.bytestreams.ibb.packet.Close -> org.jivesoftware.smackx.bytestreams.ibb.packet.Close:
    java.lang.String sessionID -> sessionID
    java.lang.String getSessionID() -> getSessionID
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.bytestreams.ibb.packet.Data -> org.jivesoftware.smackx.bytestreams.ibb.packet.Data:
    org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension dataPacketExtension -> dataPacketExtension
    org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension getDataPacketExtension() -> getDataPacketExtension
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension -> org.jivesoftware.smackx.bytestreams.ibb.packet.DataPacketExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String sessionID -> sessionID
    long seq -> seq
    java.lang.String data -> data
    byte[] decodedData -> decodedData
    java.lang.String getSessionID() -> getSessionID
    long getSeq() -> getSeq
    java.lang.String getData() -> getData
    byte[] getDecodedData() -> getDecodedData
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.bytestreams.ibb.packet.Open -> org.jivesoftware.smackx.bytestreams.ibb.packet.Open:
    java.lang.String sessionID -> sessionID
    int blockSize -> blockSize
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType stanza -> stanza
    java.lang.String getSessionID() -> getSessionID
    int getBlockSize() -> getBlockSize
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager$StanzaType getStanza() -> getStanza
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.bytestreams.ibb.provider.CloseIQProvider -> org.jivesoftware.smackx.bytestreams.ibb.provider.CloseIQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.bytestreams.ibb.provider.DataPacketProvider -> org.jivesoftware.smackx.bytestreams.ibb.provider.DataPacketProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.bytestreams.ibb.provider.OpenIQProvider -> org.jivesoftware.smackx.bytestreams.ibb.provider.OpenIQProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.bytestreams.socks5.InitiationListener -> org.jivesoftware.smackx.bytestreams.socks5.InitiationListener:
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager manager -> manager
    org.jivesoftware.smack.filter.PacketFilter initFilter -> initFilter
    java.util.concurrent.ExecutorService initiationListenerExecutor -> initiationListenerExecutor
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void processRequest(org.jivesoftware.smack.packet.Packet) -> processRequest
    org.jivesoftware.smack.filter.PacketFilter getFilter() -> getFilter
    void shutdown() -> shutdown
    void access$000(org.jivesoftware.smackx.bytestreams.socks5.InitiationListener,org.jivesoftware.smack.packet.Packet) -> access$000
org.jivesoftware.smackx.bytestreams.socks5.InitiationListener$1 -> org.jivesoftware.smackx.bytestreams.socks5.InitiationListener$1:
    org.jivesoftware.smack.packet.Packet val$packet -> val$packet
    org.jivesoftware.smackx.bytestreams.socks5.InitiationListener this$0 -> this$0
    void run() -> run
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamListener -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamListener:
    void incomingBytestreamRequest(org.jivesoftware.smackx.bytestreams.BytestreamRequest) -> incomingBytestreamRequest
    void incomingBytestreamRequest(org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamRequest) -> incomingBytestreamRequest
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String SESSION_ID_PREFIX -> SESSION_ID_PREFIX
    java.util.Random randomGenerator -> randomGenerator
    java.util.Map managers -> managers
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Map userListeners -> userListeners
    java.util.List allRequestListeners -> allRequestListeners
    org.jivesoftware.smackx.bytestreams.socks5.InitiationListener initiationListener -> initiationListener
    int targetResponseTimeout -> targetResponseTimeout
    int proxyConnectionTimeout -> proxyConnectionTimeout
    java.util.List proxyBlacklist -> proxyBlacklist
    java.lang.String lastWorkingProxy -> lastWorkingProxy
    boolean proxyPrioritizationEnabled -> proxyPrioritizationEnabled
    java.util.List ignoredBytestreamRequests -> ignoredBytestreamRequests
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager getBytestreamManager(org.jivesoftware.smack.Connection) -> getBytestreamManager
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener) -> removeIncomingBytestreamListener
    void addIncomingBytestreamListener(org.jivesoftware.smackx.bytestreams.BytestreamListener,java.lang.String) -> addIncomingBytestreamListener
    void removeIncomingBytestreamListener(java.lang.String) -> removeIncomingBytestreamListener
    void ignoreBytestreamRequestOnce(java.lang.String) -> ignoreBytestreamRequestOnce
    void disableService() -> disableService
    int getTargetResponseTimeout() -> getTargetResponseTimeout
    void setTargetResponseTimeout(int) -> setTargetResponseTimeout
    int getProxyConnectionTimeout() -> getProxyConnectionTimeout
    void setProxyConnectionTimeout(int) -> setProxyConnectionTimeout
    boolean isProxyPrioritizationEnabled() -> isProxyPrioritizationEnabled
    void setProxyPrioritizationEnabled(boolean) -> setProxyPrioritizationEnabled
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession establishSession(java.lang.String) -> establishSession
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession establishSession(java.lang.String,java.lang.String) -> establishSession
    boolean supportsSocks5(java.lang.String) -> supportsSocks5
    java.util.List determineProxies() -> determineProxies
    java.util.List determineStreamHostInfos(java.util.List) -> determineStreamHostInfos
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream createStreamHostRequest(java.lang.String) -> createStreamHostRequest
    java.util.List getLocalStreamHost() -> getLocalStreamHost
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream createBytestreamInitiation(java.lang.String,java.lang.String,java.util.List) -> createBytestreamInitiation
    void replyRejectPacket(org.jivesoftware.smack.packet.IQ) -> replyRejectPacket
    void activate() -> activate
    void enableService() -> enableService
    java.lang.String getNextSessionID() -> getNextSessionID
    org.jivesoftware.smack.Connection getConnection() -> getConnection
    org.jivesoftware.smackx.bytestreams.BytestreamListener getUserListener(java.lang.String) -> getUserListener
    java.util.List getAllRequestListeners() -> getAllRequestListeners
    java.util.List getIgnoredBytestreamRequests() -> getIgnoredBytestreamRequests
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String,java.lang.String) -> establishSession
    org.jivesoftware.smackx.bytestreams.BytestreamSession establishSession(java.lang.String) -> establishSession
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1 -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1$1 -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1$1:
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager val$manager -> val$manager
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager$1 this$0 -> this$0
    void connectionClosed() -> connectionClosed
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamRequest -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamRequest:
    long BLACKLIST_LIFETIME -> BLACKLIST_LIFETIME
    int BLACKLIST_MAX_SIZE -> BLACKLIST_MAX_SIZE
    org.jivesoftware.smack.util.Cache ADDRESS_BLACKLIST -> ADDRESS_BLACKLIST
    int CONNECTION_FAILURE_THRESHOLD -> CONNECTION_FAILURE_THRESHOLD
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream bytestreamRequest -> bytestreamRequest
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager manager -> manager
    int totalConnectTimeout -> totalConnectTimeout
    int minimumConnectTimeout -> minimumConnectTimeout
    int getConnectFailureThreshold() -> getConnectFailureThreshold
    void setConnectFailureThreshold(int) -> setConnectFailureThreshold
    int getTotalConnectTimeout() -> getTotalConnectTimeout
    void setTotalConnectTimeout(int) -> setTotalConnectTimeout
    int getMinimumConnectTimeout() -> getMinimumConnectTimeout
    void setMinimumConnectTimeout(int) -> setMinimumConnectTimeout
    java.lang.String getFrom() -> getFrom
    java.lang.String getSessionID() -> getSessionID
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession accept() -> accept
    void reject() -> reject
    void cancelRequest() -> cancelRequest
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream createUsedHostResponse(org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost) -> createUsedHostResponse
    void incrementConnectionFailures(java.lang.String) -> incrementConnectionFailures
    int getConnectionFailures(java.lang.String) -> getConnectionFailures
    org.jivesoftware.smackx.bytestreams.BytestreamSession accept() -> accept
org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession -> org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamSession:
    java.net.Socket socket -> socket
    boolean isDirect -> isDirect
    boolean isDirect() -> isDirect
    boolean isMediated() -> isMediated
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    int getReadTimeout() -> getReadTimeout
    void setReadTimeout(int) -> setReadTimeout
    void close() -> close
org.jivesoftware.smackx.bytestreams.socks5.Socks5Client -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Client:
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost streamHost -> streamHost
    java.lang.String digest -> digest
    java.net.Socket getSocket(int) -> getSocket
    boolean establish(java.net.Socket) -> establish
    byte[] createSocks5ConnectRequest() -> createSocks5ConnectRequest
org.jivesoftware.smackx.bytestreams.socks5.Socks5Client$1 -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Client$1:
    org.jivesoftware.smackx.bytestreams.socks5.Socks5Client this$0 -> this$0
    java.net.Socket call() -> call
    java.lang.Object call() -> call
org.jivesoftware.smackx.bytestreams.socks5.Socks5ClientForInitiator -> org.jivesoftware.smackx.bytestreams.socks5.Socks5ClientForInitiator:
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String sessionID -> sessionID
    java.lang.String target -> target
    java.net.Socket getSocket(int) -> getSocket
    void activate() -> activate
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream createStreamHostActivation() -> createStreamHostActivation
org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy:
    org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy socks5Server -> socks5Server
    org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$Socks5ServerProcess serverProcess -> serverProcess
    java.lang.Thread serverThread -> serverThread
    java.net.ServerSocket serverSocket -> serverSocket
    java.util.Map connectionMap -> connectionMap
    java.util.List allowedConnections -> allowedConnections
    java.util.Set localAddresses -> localAddresses
    org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy getSocks5Proxy() -> getSocks5Proxy
    void start() -> start
    void stop() -> stop
    void addLocalAddress(java.lang.String) -> addLocalAddress
    void removeLocalAddress(java.lang.String) -> removeLocalAddress
    java.util.List getLocalAddresses() -> getLocalAddresses
    void replaceLocalAddresses(java.util.List) -> replaceLocalAddresses
    int getPort() -> getPort
    java.net.Socket getSocket(java.lang.String) -> getSocket
    void addTransfer(java.lang.String) -> addTransfer
    void removeTransfer(java.lang.String) -> removeTransfer
    boolean isRunning() -> isRunning
    java.net.ServerSocket access$100(org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy) -> access$100
    java.util.List access$200(org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy) -> access$200
    java.util.Map access$300(org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy) -> access$300
org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$1 -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$1:
org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$Socks5ServerProcess -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy$Socks5ServerProcess:
    org.jivesoftware.smackx.bytestreams.socks5.Socks5Proxy this$0 -> this$0
    void run() -> run
    void establishConnection(java.net.Socket) -> establishConnection
org.jivesoftware.smackx.bytestreams.socks5.Socks5Utils -> org.jivesoftware.smackx.bytestreams.socks5.Socks5Utils:
    java.lang.String createDigest(java.lang.String,java.lang.String,java.lang.String) -> createDigest
    byte[] receiveSocks5Message(java.io.DataInputStream) -> receiveSocks5Message
org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream -> org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream:
    java.lang.String sessionID -> sessionID
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode mode -> mode
    java.util.List streamHosts -> streamHosts
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHostUsed usedHost -> usedHost
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Activate toActivate -> toActivate
    void setSessionID(java.lang.String) -> setSessionID
    java.lang.String getSessionID() -> getSessionID
    void setMode(org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode) -> setMode
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode getMode() -> getMode
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost addStreamHost(java.lang.String,java.lang.String) -> addStreamHost
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost addStreamHost(java.lang.String,java.lang.String,int) -> addStreamHost
    void addStreamHost(org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost) -> addStreamHost
    java.util.Collection getStreamHosts() -> getStreamHosts
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost getStreamHost(java.lang.String) -> getStreamHost
    int countStreamHosts() -> countStreamHosts
    void setUsedHost(java.lang.String) -> setUsedHost
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHostUsed getUsedHost() -> getUsedHost
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Activate getToActivate() -> getToActivate
    void setToActivate(java.lang.String) -> setToActivate
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Activate -> org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Activate:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENTNAME -> ELEMENTNAME
    java.lang.String target -> target
    java.lang.String getTarget() -> getTarget
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getElementName() -> getElementName
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode -> org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode:
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode tcp -> tcp
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode udp -> udp
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode[] $VALUES -> $VALUES
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode[] values() -> values
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode valueOf(java.lang.String) -> valueOf
    org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$Mode fromName(java.lang.String) -> fromName
org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost -> org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHost:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENTNAME -> ELEMENTNAME
    java.lang.String JID -> JID
    java.lang.String addy -> addy
    int port -> port
    java.lang.String getJID() -> getJID
    java.lang.String getAddress() -> getAddress
    void setPort(int) -> setPort
    int getPort() -> getPort
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getElementName() -> getElementName
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHostUsed -> org.jivesoftware.smackx.bytestreams.socks5.packet.Bytestream$StreamHostUsed:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENTNAME -> ELEMENTNAME
    java.lang.String JID -> JID
    java.lang.String getJID() -> getJID
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getElementName() -> getElementName
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.bytestreams.socks5.provider.BytestreamsProvider -> org.jivesoftware.smackx.bytestreams.socks5.provider.BytestreamsProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.commands.AdHocCommand -> org.jivesoftware.smackx.commands.AdHocCommand:
    org.jivesoftware.smackx.packet.AdHocCommandData data -> data
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition getSpecificErrorCondition(org.jivesoftware.smack.packet.XMPPError) -> getSpecificErrorCondition
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setNode(java.lang.String) -> setNode
    java.lang.String getNode() -> getNode
    java.lang.String getOwnerJID() -> getOwnerJID
    java.util.List getNotes() -> getNotes
    void addNote(org.jivesoftware.smackx.commands.AdHocCommandNote) -> addNote
    java.lang.String getRaw() -> getRaw
    org.jivesoftware.smackx.Form getForm() -> getForm
    void setForm(org.jivesoftware.smackx.Form) -> setForm
    void execute() -> execute
    void next(org.jivesoftware.smackx.Form) -> next
    void complete(org.jivesoftware.smackx.Form) -> complete
    void prev() -> prev
    void cancel() -> cancel
    java.util.List getActions() -> getActions
    void addActionAvailable(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> addActionAvailable
    org.jivesoftware.smackx.commands.AdHocCommand$Action getExecuteAction() -> getExecuteAction
    void setExecuteAction(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> setExecuteAction
    org.jivesoftware.smackx.commands.AdHocCommand$Status getStatus() -> getStatus
    void setData(org.jivesoftware.smackx.packet.AdHocCommandData) -> setData
    org.jivesoftware.smackx.packet.AdHocCommandData getData() -> getData
    boolean isValidAction(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> isValidAction
org.jivesoftware.smackx.commands.AdHocCommand$Action -> org.jivesoftware.smackx.commands.AdHocCommand$Action:
    org.jivesoftware.smackx.commands.AdHocCommand$Action execute -> execute
    org.jivesoftware.smackx.commands.AdHocCommand$Action cancel -> cancel
    org.jivesoftware.smackx.commands.AdHocCommand$Action prev -> prev
    org.jivesoftware.smackx.commands.AdHocCommand$Action next -> next
    org.jivesoftware.smackx.commands.AdHocCommand$Action complete -> complete
    org.jivesoftware.smackx.commands.AdHocCommand$Action unknown -> unknown
    org.jivesoftware.smackx.commands.AdHocCommand$Action[] $VALUES -> $VALUES
    org.jivesoftware.smackx.commands.AdHocCommand$Action[] values() -> values
    org.jivesoftware.smackx.commands.AdHocCommand$Action valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition -> org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition:
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition badAction -> badAction
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition malformedAction -> malformedAction
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition badLocale -> badLocale
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition badPayload -> badPayload
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition badSessionid -> badSessionid
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition sessionExpired -> sessionExpired
    java.lang.String value -> value
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition[] $VALUES -> $VALUES
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition[] values() -> values
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
org.jivesoftware.smackx.commands.AdHocCommand$Status -> org.jivesoftware.smackx.commands.AdHocCommand$Status:
    org.jivesoftware.smackx.commands.AdHocCommand$Status executing -> executing
    org.jivesoftware.smackx.commands.AdHocCommand$Status completed -> completed
    org.jivesoftware.smackx.commands.AdHocCommand$Status canceled -> canceled
    org.jivesoftware.smackx.commands.AdHocCommand$Status[] $VALUES -> $VALUES
    org.jivesoftware.smackx.commands.AdHocCommand$Status[] values() -> values
    org.jivesoftware.smackx.commands.AdHocCommand$Status valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.commands.AdHocCommandManager -> org.jivesoftware.smackx.commands.AdHocCommandManager:
    java.lang.String DISCO_NAMESPACE -> DISCO_NAMESPACE
    java.lang.String discoNode -> discoNode
    int SESSION_TIMEOUT -> SESSION_TIMEOUT
    java.util.Map instances -> instances
    java.lang.Thread sessionsSweeper -> sessionsSweeper
    org.jivesoftware.smack.Connection connection -> connection
    java.util.Map commands -> commands
    java.util.Map executingCommands -> executingCommands
    org.jivesoftware.smackx.commands.AdHocCommandManager getAddHocCommandsManager(org.jivesoftware.smack.Connection) -> getAddHocCommandsManager
    void registerCommand(java.lang.String,java.lang.String,java.lang.Class) -> registerCommand
    void registerCommand(java.lang.String,java.lang.String,org.jivesoftware.smackx.commands.LocalCommandFactory) -> registerCommand
    org.jivesoftware.smackx.packet.DiscoverItems discoverCommands(java.lang.String) -> discoverCommands
    void publishCommands(java.lang.String) -> publishCommands
    org.jivesoftware.smackx.commands.RemoteCommand getRemoteCommand(java.lang.String,java.lang.String) -> getRemoteCommand
    void init() -> init
    void processAdHocCommand(org.jivesoftware.smackx.packet.AdHocCommandData) -> processAdHocCommand
    void respondError(org.jivesoftware.smackx.packet.AdHocCommandData,org.jivesoftware.smack.packet.XMPPError$Condition) -> respondError
    void respondError(org.jivesoftware.smackx.packet.AdHocCommandData,org.jivesoftware.smack.packet.XMPPError$Condition,org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition) -> respondError
    void respondError(org.jivesoftware.smackx.packet.AdHocCommandData,org.jivesoftware.smack.packet.XMPPError) -> respondError
    org.jivesoftware.smackx.commands.LocalCommand newInstanceOfCmd(java.lang.String,java.lang.String) -> newInstanceOfCmd
    java.util.Collection getRegisteredCommands() -> getRegisteredCommands
    org.jivesoftware.smack.Connection access$100(org.jivesoftware.smackx.commands.AdHocCommandManager) -> access$100
    java.util.Map access$200() -> access$200
    java.util.Collection access$300(org.jivesoftware.smackx.commands.AdHocCommandManager) -> access$300
    void access$400(org.jivesoftware.smackx.commands.AdHocCommandManager,org.jivesoftware.smackx.packet.AdHocCommandData) -> access$400
    java.util.Map access$500(org.jivesoftware.smackx.commands.AdHocCommandManager) -> access$500
org.jivesoftware.smackx.commands.AdHocCommandManager$1 -> org.jivesoftware.smackx.commands.AdHocCommandManager$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.commands.AdHocCommandManager$2 -> org.jivesoftware.smackx.commands.AdHocCommandManager$2:
    java.lang.Class val$clazz -> val$clazz
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    org.jivesoftware.smackx.commands.LocalCommand getInstance() -> getInstance
org.jivesoftware.smackx.commands.AdHocCommandManager$3 -> org.jivesoftware.smackx.commands.AdHocCommandManager$3:
    java.lang.String val$name -> val$name
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
org.jivesoftware.smackx.commands.AdHocCommandManager$4 -> org.jivesoftware.smackx.commands.AdHocCommandManager$4:
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
org.jivesoftware.smackx.commands.AdHocCommandManager$5 -> org.jivesoftware.smackx.commands.AdHocCommandManager$5:
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
org.jivesoftware.smackx.commands.AdHocCommandManager$6 -> org.jivesoftware.smackx.commands.AdHocCommandManager$6:
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.commands.AdHocCommandManager$7 -> org.jivesoftware.smackx.commands.AdHocCommandManager$7:
    org.jivesoftware.smackx.commands.AdHocCommandManager this$0 -> this$0
    void run() -> run
org.jivesoftware.smackx.commands.AdHocCommandManager$AdHocCommandInfo -> org.jivesoftware.smackx.commands.AdHocCommandManager$AdHocCommandInfo:
    java.lang.String node -> node
    java.lang.String name -> name
    java.lang.String ownerJID -> ownerJID
    org.jivesoftware.smackx.commands.LocalCommandFactory factory -> factory
    org.jivesoftware.smackx.commands.LocalCommand getCommandInstance() -> getCommandInstance
    java.lang.String getName() -> getName
    java.lang.String getNode() -> getNode
    java.lang.String getOwnerJID() -> getOwnerJID
org.jivesoftware.smackx.commands.AdHocCommandNote -> org.jivesoftware.smackx.commands.AdHocCommandNote:
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type type -> type
    java.lang.String value -> value
    java.lang.String getValue() -> getValue
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type getType() -> getType
org.jivesoftware.smackx.commands.AdHocCommandNote$Type -> org.jivesoftware.smackx.commands.AdHocCommandNote$Type:
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type info -> info
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type warn -> warn
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type error -> error
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type[] $VALUES -> $VALUES
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type[] values() -> values
    org.jivesoftware.smackx.commands.AdHocCommandNote$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.commands.LocalCommand -> org.jivesoftware.smackx.commands.LocalCommand:
    long creationDate -> creationDate
    java.lang.String sessionID -> sessionID
    java.lang.String ownerJID -> ownerJID
    int currenStage -> currenStage
    void setSessionID(java.lang.String) -> setSessionID
    java.lang.String getSessionID() -> getSessionID
    void setOwnerJID(java.lang.String) -> setOwnerJID
    java.lang.String getOwnerJID() -> getOwnerJID
    long getCreationDate() -> getCreationDate
    boolean isLastStage() -> isLastStage
    boolean hasPermission(java.lang.String) -> hasPermission
    int getCurrentStage() -> getCurrentStage
    void setData(org.jivesoftware.smackx.packet.AdHocCommandData) -> setData
    void incrementStage() -> incrementStage
    void decrementStage() -> decrementStage
org.jivesoftware.smackx.commands.LocalCommandFactory -> org.jivesoftware.smackx.commands.LocalCommandFactory:
    org.jivesoftware.smackx.commands.LocalCommand getInstance() -> getInstance
org.jivesoftware.smackx.commands.RemoteCommand -> org.jivesoftware.smackx.commands.RemoteCommand:
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String jid -> jid
    java.lang.String sessionID -> sessionID
    long packetReplyTimeout -> packetReplyTimeout
    void cancel() -> cancel
    void complete(org.jivesoftware.smackx.Form) -> complete
    void execute() -> execute
    void execute(org.jivesoftware.smackx.Form) -> execute
    void next(org.jivesoftware.smackx.Form) -> next
    void prev() -> prev
    void executeAction(org.jivesoftware.smackx.commands.AdHocCommand$Action,long) -> executeAction
    void executeAction(org.jivesoftware.smackx.commands.AdHocCommand$Action,org.jivesoftware.smackx.Form,long) -> executeAction
    java.lang.String getOwnerJID() -> getOwnerJID
    long getPacketReplyTimeout() -> getPacketReplyTimeout
    void setPacketReplyTimeout(long) -> setPacketReplyTimeout
org.jivesoftware.smackx.filetransfer.FaultTolerantNegotiator -> org.jivesoftware.smackx.filetransfer.FaultTolerantNegotiator:
    org.jivesoftware.smackx.filetransfer.StreamNegotiator primaryNegotiator -> primaryNegotiator
    org.jivesoftware.smackx.filetransfer.StreamNegotiator secondaryNegotiator -> secondaryNegotiator
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.filter.PacketFilter primaryFilter -> primaryFilter
    org.jivesoftware.smack.filter.PacketFilter secondaryFilter -> secondaryFilter
    org.jivesoftware.smack.filter.PacketFilter getInitiationPacketFilter(java.lang.String,java.lang.String) -> getInitiationPacketFilter
    java.io.InputStream negotiateIncomingStream(org.jivesoftware.smack.packet.Packet) -> negotiateIncomingStream
    org.jivesoftware.smack.packet.Packet initiateIncomingStream(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.packet.StreamInitiation) -> initiateIncomingStream
    java.io.InputStream createIncomingStream(org.jivesoftware.smackx.packet.StreamInitiation) -> createIncomingStream
    org.jivesoftware.smackx.filetransfer.StreamNegotiator determineNegotiator(org.jivesoftware.smack.packet.Packet) -> determineNegotiator
    java.io.OutputStream createOutgoingStream(java.lang.String,java.lang.String,java.lang.String) -> createOutgoingStream
    java.lang.String[] getNamespaces() -> getNamespaces
    void cleanup() -> cleanup
    org.jivesoftware.smackx.filetransfer.StreamNegotiator access$000(org.jivesoftware.smackx.filetransfer.FaultTolerantNegotiator,org.jivesoftware.smack.packet.Packet) -> access$000
org.jivesoftware.smackx.filetransfer.FaultTolerantNegotiator$NegotiatorService -> org.jivesoftware.smackx.filetransfer.FaultTolerantNegotiator$NegotiatorService:
    org.jivesoftware.smack.PacketCollector collector -> collector
    org.jivesoftware.smackx.filetransfer.FaultTolerantNegotiator this$0 -> this$0
    java.io.InputStream call() -> call
    java.lang.Object call() -> call
org.jivesoftware.smackx.filetransfer.FileTransfer -> org.jivesoftware.smackx.filetransfer.FileTransfer:
    java.lang.String fileName -> fileName
    java.lang.String filePath -> filePath
    long fileSize -> fileSize
    java.lang.String peer -> peer
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status status -> status
    java.lang.Object statusMonitor -> statusMonitor
    org.jivesoftware.smackx.filetransfer.FileTransferNegotiator negotiator -> negotiator
    java.lang.String streamID -> streamID
    long amountWritten -> amountWritten
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error error -> error
    java.lang.Exception exception -> exception
    int BUFFER_SIZE -> BUFFER_SIZE
    void setFileInfo(java.lang.String,long) -> setFileInfo
    void setFileInfo(java.lang.String,java.lang.String,long) -> setFileInfo
    long getFileSize() -> getFileSize
    java.lang.String getFileName() -> getFileName
    java.lang.String getFilePath() -> getFilePath
    java.lang.String getPeer() -> getPeer
    double getProgress() -> getProgress
    boolean isDone() -> isDone
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status getStatus() -> getStatus
    void setError(org.jivesoftware.smackx.filetransfer.FileTransfer$Error) -> setError
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error getError() -> getError
    java.lang.Exception getException() -> getException
    java.lang.String getStreamID() -> getStreamID
    void cancel() -> cancel
    void setException(java.lang.Exception) -> setException
    void setStatus(org.jivesoftware.smackx.filetransfer.FileTransfer$Status) -> setStatus
    boolean updateStatus(org.jivesoftware.smackx.filetransfer.FileTransfer$Status,org.jivesoftware.smackx.filetransfer.FileTransfer$Status) -> updateStatus
    void writeToStream(java.io.InputStream,java.io.OutputStream) -> writeToStream
    long getAmountWritten() -> getAmountWritten
org.jivesoftware.smackx.filetransfer.FileTransfer$Error -> org.jivesoftware.smackx.filetransfer.FileTransfer$Error:
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error none -> none
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error not_acceptable -> not_acceptable
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error bad_file -> bad_file
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error no_response -> no_response
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error connection -> connection
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error stream -> stream
    java.lang.String msg -> msg
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error[] $VALUES -> $VALUES
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error[] values() -> values
    org.jivesoftware.smackx.filetransfer.FileTransfer$Error valueOf(java.lang.String) -> valueOf
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
org.jivesoftware.smackx.filetransfer.FileTransfer$Status -> org.jivesoftware.smackx.filetransfer.FileTransfer$Status:
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status error -> error
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status initial -> initial
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status negotiating_transfer -> negotiating_transfer
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status refused -> refused
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status negotiating_stream -> negotiating_stream
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status negotiated -> negotiated
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status in_progress -> in_progress
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status complete -> complete
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status cancelled -> cancelled
    java.lang.String status -> status
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status[] $VALUES -> $VALUES
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status[] values() -> values
    org.jivesoftware.smackx.filetransfer.FileTransfer$Status valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
org.jivesoftware.smackx.filetransfer.FileTransferListener -> org.jivesoftware.smackx.filetransfer.FileTransferListener:
    void fileTransferRequest(org.jivesoftware.smackx.filetransfer.FileTransferRequest) -> fileTransferRequest
org.jivesoftware.smackx.filetransfer.FileTransferManager -> org.jivesoftware.smackx.filetransfer.FileTransferManager:
    org.jivesoftware.smackx.filetransfer.FileTransferNegotiator fileTransferNegotiator -> fileTransferNegotiator
    java.util.List listeners -> listeners
    org.jivesoftware.smack.Connection connection -> connection
    void addFileTransferListener(org.jivesoftware.smackx.filetransfer.FileTransferListener) -> addFileTransferListener
    void initListeners() -> initListeners
    void fireNewRequest(org.jivesoftware.smackx.packet.StreamInitiation) -> fireNewRequest
    void removeFileTransferListener(org.jivesoftware.smackx.filetransfer.FileTransferListener) -> removeFileTransferListener
    org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer createOutgoingFileTransfer(java.lang.String) -> createOutgoingFileTransfer
    org.jivesoftware.smackx.filetransfer.IncomingFileTransfer createIncomingFileTransfer(org.jivesoftware.smackx.filetransfer.FileTransferRequest) -> createIncomingFileTransfer
    void rejectIncomingFileTransfer(org.jivesoftware.smackx.filetransfer.FileTransferRequest) -> rejectIncomingFileTransfer
org.jivesoftware.smackx.filetransfer.FileTransferManager$1 -> org.jivesoftware.smackx.filetransfer.FileTransferManager$1:
    org.jivesoftware.smackx.filetransfer.FileTransferManager this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.filetransfer.FileTransferNegotiator -> org.jivesoftware.smackx.filetransfer.FileTransferNegotiator:
    java.lang.String[] NAMESPACE -> NAMESPACE
    java.util.Map transferObject -> transferObject
    java.lang.String STREAM_INIT_PREFIX -> STREAM_INIT_PREFIX
    java.lang.String STREAM_DATA_FIELD_NAME -> STREAM_DATA_FIELD_NAME
    java.util.Random randomGenerator -> randomGenerator
    boolean IBB_ONLY -> IBB_ONLY
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.filetransfer.StreamNegotiator byteStreamTransferManager -> byteStreamTransferManager
    org.jivesoftware.smackx.filetransfer.StreamNegotiator inbandTransferManager -> inbandTransferManager
    org.jivesoftware.smackx.filetransfer.FileTransferNegotiator getInstanceFor(org.jivesoftware.smack.Connection) -> getInstanceFor
    void setServiceEnabled(org.jivesoftware.smack.Connection,boolean) -> setServiceEnabled
    boolean isServiceEnabled(org.jivesoftware.smack.Connection) -> isServiceEnabled
    org.jivesoftware.smack.packet.IQ createIQ(java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.IQ$Type) -> createIQ
    java.util.Collection getSupportedProtocols() -> getSupportedProtocols
    void configureConnection(org.jivesoftware.smack.Connection) -> configureConnection
    void cleanup(org.jivesoftware.smack.Connection) -> cleanup
    org.jivesoftware.smackx.filetransfer.StreamNegotiator selectStreamNegotiator(org.jivesoftware.smackx.filetransfer.FileTransferRequest) -> selectStreamNegotiator
    org.jivesoftware.smackx.FormField getStreamMethodField(org.jivesoftware.smackx.packet.DataForm) -> getStreamMethodField
    org.jivesoftware.smackx.filetransfer.StreamNegotiator getNegotiator(org.jivesoftware.smackx.FormField) -> getNegotiator
    void rejectStream(org.jivesoftware.smackx.packet.StreamInitiation) -> rejectStream
    java.lang.String getNextStreamID() -> getNextStreamID
    org.jivesoftware.smackx.filetransfer.StreamNegotiator negotiateOutgoingTransfer(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,int) -> negotiateOutgoingTransfer
    org.jivesoftware.smackx.filetransfer.StreamNegotiator getOutgoingNegotiator(org.jivesoftware.smackx.FormField) -> getOutgoingNegotiator
    org.jivesoftware.smackx.packet.DataForm createDefaultInitiationForm() -> createDefaultInitiationForm
    void access$000(org.jivesoftware.smackx.filetransfer.FileTransferNegotiator,org.jivesoftware.smack.Connection) -> access$000
org.jivesoftware.smackx.filetransfer.FileTransferNegotiator$1 -> org.jivesoftware.smackx.filetransfer.FileTransferNegotiator$1:
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.filetransfer.FileTransferNegotiator$2 -> org.jivesoftware.smackx.filetransfer.FileTransferNegotiator$2:
    org.jivesoftware.smack.Connection val$connection -> val$connection
    org.jivesoftware.smackx.filetransfer.FileTransferNegotiator this$0 -> this$0
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectingIn(int) -> reconnectingIn
org.jivesoftware.smackx.filetransfer.FileTransferRequest -> org.jivesoftware.smackx.filetransfer.FileTransferRequest:
    org.jivesoftware.smackx.packet.StreamInitiation streamInitiation -> streamInitiation
    org.jivesoftware.smackx.filetransfer.FileTransferManager manager -> manager
    java.lang.String getFileName() -> getFileName
    long getFileSize() -> getFileSize
    java.lang.String getDescription() -> getDescription
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getRequestor() -> getRequestor
    java.lang.String getStreamID() -> getStreamID
    org.jivesoftware.smackx.packet.StreamInitiation getStreamInitiation() -> getStreamInitiation
    org.jivesoftware.smackx.filetransfer.IncomingFileTransfer accept() -> accept
    void reject() -> reject
org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator -> org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.bytestreams.ibb.InBandBytestreamManager manager -> manager
    java.io.OutputStream createOutgoingStream(java.lang.String,java.lang.String,java.lang.String) -> createOutgoingStream
    java.io.InputStream createIncomingStream(org.jivesoftware.smackx.packet.StreamInitiation) -> createIncomingStream
    org.jivesoftware.smack.filter.PacketFilter getInitiationPacketFilter(java.lang.String,java.lang.String) -> getInitiationPacketFilter
    java.lang.String[] getNamespaces() -> getNamespaces
    java.io.InputStream negotiateIncomingStream(org.jivesoftware.smack.packet.Packet) -> negotiateIncomingStream
    void cleanup() -> cleanup
org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator$1 -> org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator$1:
org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator$ByteStreamRequest -> org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator$ByteStreamRequest:
org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator$IBBOpenSidFilter -> org.jivesoftware.smackx.filetransfer.IBBTransferNegotiator$IBBOpenSidFilter:
    java.lang.String sessionID -> sessionID
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.filetransfer.IncomingFileTransfer -> org.jivesoftware.smackx.filetransfer.IncomingFileTransfer:
    org.jivesoftware.smackx.filetransfer.FileTransferRequest recieveRequest -> recieveRequest
    java.io.InputStream inputStream -> inputStream
    java.io.InputStream recieveFile() -> recieveFile
    void recieveFile(java.io.File) -> recieveFile
    void handleXMPPException(org.jivesoftware.smack.XMPPException) -> handleXMPPException
    java.io.InputStream negotiateStream() -> negotiateStream
    void cancel() -> cancel
    java.io.InputStream access$002(org.jivesoftware.smackx.filetransfer.IncomingFileTransfer,java.io.InputStream) -> access$002
    java.io.InputStream access$100(org.jivesoftware.smackx.filetransfer.IncomingFileTransfer) -> access$100
    void access$200(org.jivesoftware.smackx.filetransfer.IncomingFileTransfer,org.jivesoftware.smack.XMPPException) -> access$200
    java.io.InputStream access$000(org.jivesoftware.smackx.filetransfer.IncomingFileTransfer) -> access$000
    org.jivesoftware.smackx.filetransfer.FileTransferRequest access$300(org.jivesoftware.smackx.filetransfer.IncomingFileTransfer) -> access$300
org.jivesoftware.smackx.filetransfer.IncomingFileTransfer$1 -> org.jivesoftware.smackx.filetransfer.IncomingFileTransfer$1:
    java.io.File val$file -> val$file
    org.jivesoftware.smackx.filetransfer.IncomingFileTransfer this$0 -> this$0
    void run() -> run
org.jivesoftware.smackx.filetransfer.IncomingFileTransfer$2 -> org.jivesoftware.smackx.filetransfer.IncomingFileTransfer$2:
    org.jivesoftware.smackx.filetransfer.StreamNegotiator val$streamNegotiator -> val$streamNegotiator
    org.jivesoftware.smackx.filetransfer.IncomingFileTransfer this$0 -> this$0
    java.io.InputStream call() -> call
    java.lang.Object call() -> call
org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer -> org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer:
    int RESPONSE_TIMEOUT -> RESPONSE_TIMEOUT
    org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$NegotiationProgress callback -> callback
    java.io.OutputStream outputStream -> outputStream
    java.lang.String initiator -> initiator
    java.lang.Thread transferThread -> transferThread
    int getResponseTimeout() -> getResponseTimeout
    void setResponseTimeout(int) -> setResponseTimeout
    void setOutputStream(java.io.OutputStream) -> setOutputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.io.OutputStream sendFile(java.lang.String,long,java.lang.String) -> sendFile
    void sendFile(java.lang.String,long,java.lang.String,org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$NegotiationProgress) -> sendFile
    void checkTransferThread() -> checkTransferThread
    void sendFile(java.io.File,java.lang.String) -> sendFile
    void sendStream(java.io.InputStream,java.lang.String,long,java.lang.String) -> sendStream
    void handleXMPPException(org.jivesoftware.smack.XMPPException) -> handleXMPPException
    long getBytesSent() -> getBytesSent
    java.io.OutputStream negotiateStream(java.lang.String,long,java.lang.String) -> negotiateStream
    void cancel() -> cancel
    boolean updateStatus(org.jivesoftware.smackx.filetransfer.FileTransfer$Status,org.jivesoftware.smackx.filetransfer.FileTransfer$Status) -> updateStatus
    void setStatus(org.jivesoftware.smackx.filetransfer.FileTransfer$Status) -> setStatus
    void setException(java.lang.Exception) -> setException
    java.io.OutputStream access$002(org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer,java.io.OutputStream) -> access$002
    java.io.OutputStream access$100(org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer,java.lang.String,long,java.lang.String) -> access$100
    java.io.OutputStream access$000(org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer) -> access$000
    void access$200(org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer,org.jivesoftware.smack.XMPPException) -> access$200
org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$1 -> org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$1:
    java.lang.String val$fileName -> val$fileName
    long val$fileSize -> val$fileSize
    java.lang.String val$description -> val$description
    org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$NegotiationProgress val$progress -> val$progress
    org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer this$0 -> this$0
    void run() -> run
org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$2 -> org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$2:
    java.io.File val$file -> val$file
    java.lang.String val$description -> val$description
    org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer this$0 -> this$0
    void run() -> run
org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$3 -> org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$3:
    java.lang.String val$fileName -> val$fileName
    long val$fileSize -> val$fileSize
    java.lang.String val$description -> val$description
    java.io.InputStream val$in -> val$in
    org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer this$0 -> this$0
    void run() -> run
org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$NegotiationProgress -> org.jivesoftware.smackx.filetransfer.OutgoingFileTransfer$NegotiationProgress:
    void statusUpdated(org.jivesoftware.smackx.filetransfer.FileTransfer$Status,org.jivesoftware.smackx.filetransfer.FileTransfer$Status) -> statusUpdated
    void outputStreamEstablished(java.io.OutputStream) -> outputStreamEstablished
    void errorEstablishingStream(java.lang.Exception) -> errorEstablishingStream
org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator -> org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.bytestreams.socks5.Socks5BytestreamManager manager -> manager
    java.io.OutputStream createOutgoingStream(java.lang.String,java.lang.String,java.lang.String) -> createOutgoingStream
    java.io.InputStream createIncomingStream(org.jivesoftware.smackx.packet.StreamInitiation) -> createIncomingStream
    org.jivesoftware.smack.filter.PacketFilter getInitiationPacketFilter(java.lang.String,java.lang.String) -> getInitiationPacketFilter
    java.lang.String[] getNamespaces() -> getNamespaces
    java.io.InputStream negotiateIncomingStream(org.jivesoftware.smack.packet.Packet) -> negotiateIncomingStream
    void cleanup() -> cleanup
org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator$1 -> org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator$1:
org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator$ByteStreamRequest -> org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator$ByteStreamRequest:
org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator$BytestreamSIDFilter -> org.jivesoftware.smackx.filetransfer.Socks5TransferNegotiator$BytestreamSIDFilter:
    java.lang.String sessionID -> sessionID
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.filetransfer.StreamNegotiator -> org.jivesoftware.smackx.filetransfer.StreamNegotiator:
    org.jivesoftware.smackx.packet.StreamInitiation createInitiationAccept(org.jivesoftware.smackx.packet.StreamInitiation,java.lang.String[]) -> createInitiationAccept
    org.jivesoftware.smack.packet.IQ createError(java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.XMPPError) -> createError
    org.jivesoftware.smack.packet.Packet initiateIncomingStream(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.packet.StreamInitiation) -> initiateIncomingStream
    org.jivesoftware.smack.filter.PacketFilter getInitiationPacketFilter(java.lang.String,java.lang.String) -> getInitiationPacketFilter
    java.io.InputStream negotiateIncomingStream(org.jivesoftware.smack.packet.Packet) -> negotiateIncomingStream
    java.io.InputStream createIncomingStream(org.jivesoftware.smackx.packet.StreamInitiation) -> createIncomingStream
    java.io.OutputStream createOutgoingStream(java.lang.String,java.lang.String,java.lang.String) -> createOutgoingStream
    java.lang.String[] getNamespaces() -> getNamespaces
    void cleanup() -> cleanup
org.jivesoftware.smackx.muc.Affiliate -> org.jivesoftware.smackx.muc.Affiliate:
    java.lang.String jid -> jid
    java.lang.String affiliation -> affiliation
    java.lang.String role -> role
    java.lang.String nick -> nick
    java.lang.String getJid() -> getJid
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getRole() -> getRole
    java.lang.String getNick() -> getNick
org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector -> org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector:
    int MAX_PACKETS -> MAX_PACKETS
    java.util.LinkedList resultQueue -> resultQueue
    org.jivesoftware.smack.packet.Packet pollResult() -> pollResult
    org.jivesoftware.smack.packet.Packet nextResult() -> nextResult
    org.jivesoftware.smack.packet.Packet nextResult(long) -> nextResult
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.DeafOccupantInterceptor -> org.jivesoftware.smackx.muc.DeafOccupantInterceptor:
    void interceptPacket(org.jivesoftware.smack.packet.Packet) -> interceptPacket
org.jivesoftware.smackx.muc.DeafOccupantInterceptor$1 -> org.jivesoftware.smackx.muc.DeafOccupantInterceptor$1:
org.jivesoftware.smackx.muc.DeafOccupantInterceptor$DeafExtension -> org.jivesoftware.smackx.muc.DeafOccupantInterceptor$DeafExtension:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.muc.DefaultParticipantStatusListener -> org.jivesoftware.smackx.muc.DefaultParticipantStatusListener:
    void joined(java.lang.String) -> joined
    void left(java.lang.String) -> left
    void kicked(java.lang.String,java.lang.String,java.lang.String) -> kicked
    void voiceGranted(java.lang.String) -> voiceGranted
    void voiceRevoked(java.lang.String) -> voiceRevoked
    void banned(java.lang.String,java.lang.String,java.lang.String) -> banned
    void membershipGranted(java.lang.String) -> membershipGranted
    void membershipRevoked(java.lang.String) -> membershipRevoked
    void moderatorGranted(java.lang.String) -> moderatorGranted
    void moderatorRevoked(java.lang.String) -> moderatorRevoked
    void ownershipGranted(java.lang.String) -> ownershipGranted
    void ownershipRevoked(java.lang.String) -> ownershipRevoked
    void adminGranted(java.lang.String) -> adminGranted
    void adminRevoked(java.lang.String) -> adminRevoked
    void nicknameChanged(java.lang.String,java.lang.String) -> nicknameChanged
org.jivesoftware.smackx.muc.DefaultUserStatusListener -> org.jivesoftware.smackx.muc.DefaultUserStatusListener:
    void kicked(java.lang.String,java.lang.String) -> kicked
    void voiceGranted() -> voiceGranted
    void voiceRevoked() -> voiceRevoked
    void banned(java.lang.String,java.lang.String) -> banned
    void membershipGranted() -> membershipGranted
    void membershipRevoked() -> membershipRevoked
    void moderatorGranted() -> moderatorGranted
    void moderatorRevoked() -> moderatorRevoked
    void ownershipGranted() -> ownershipGranted
    void ownershipRevoked() -> ownershipRevoked
    void adminGranted() -> adminGranted
    void adminRevoked() -> adminRevoked
org.jivesoftware.smackx.muc.DiscussionHistory -> org.jivesoftware.smackx.muc.DiscussionHistory:
    int maxChars -> maxChars
    int maxStanzas -> maxStanzas
    int seconds -> seconds
    java.util.Date since -> since
    int getMaxChars() -> getMaxChars
    int getMaxStanzas() -> getMaxStanzas
    int getSeconds() -> getSeconds
    java.util.Date getSince() -> getSince
    void setMaxChars(int) -> setMaxChars
    void setMaxStanzas(int) -> setMaxStanzas
    void setSeconds(int) -> setSeconds
    void setSince(java.util.Date) -> setSince
    boolean isConfigured() -> isConfigured
    org.jivesoftware.smackx.packet.MUCInitialPresence$History getMUCHistory() -> getMUCHistory
org.jivesoftware.smackx.muc.HostedRoom -> org.jivesoftware.smackx.muc.HostedRoom:
    java.lang.String jid -> jid
    java.lang.String name -> name
    java.lang.String getJid() -> getJid
    java.lang.String getName() -> getName
org.jivesoftware.smackx.muc.InvitationListener -> org.jivesoftware.smackx.muc.InvitationListener:
    void invitationReceived(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> invitationReceived
org.jivesoftware.smackx.muc.InvitationRejectionListener -> org.jivesoftware.smackx.muc.InvitationRejectionListener:
    void invitationDeclined(java.lang.String,java.lang.String) -> invitationDeclined
org.jivesoftware.smackx.muc.MultiUserChat -> org.jivesoftware.smackx.muc.MultiUserChat:
    java.lang.String discoNamespace -> discoNamespace
    java.lang.String discoNode -> discoNode
    java.util.Map joinedRooms -> joinedRooms
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String room -> room
    java.lang.String subject -> subject
    java.lang.String nickname -> nickname
    boolean joined -> joined
    java.util.Map occupantsMap -> occupantsMap
    java.util.List invitationRejectionListeners -> invitationRejectionListeners
    java.util.List subjectUpdatedListeners -> subjectUpdatedListeners
    java.util.List userStatusListeners -> userStatusListeners
    java.util.List participantStatusListeners -> participantStatusListeners
    org.jivesoftware.smack.filter.PacketFilter presenceFilter -> presenceFilter
    java.util.List presenceInterceptors -> presenceInterceptors
    org.jivesoftware.smack.filter.PacketFilter messageFilter -> messageFilter
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor roomListenerMultiplexor -> roomListenerMultiplexor
    org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector messageCollector -> messageCollector
    java.util.List connectionListeners -> connectionListeners
    boolean isServiceEnabled(org.jivesoftware.smack.Connection,java.lang.String) -> isServiceEnabled
    java.util.Iterator getJoinedRooms(org.jivesoftware.smack.Connection) -> getJoinedRooms
    java.util.Iterator getJoinedRooms(org.jivesoftware.smack.Connection,java.lang.String) -> getJoinedRooms
    org.jivesoftware.smackx.muc.RoomInfo getRoomInfo(org.jivesoftware.smack.Connection,java.lang.String) -> getRoomInfo
    java.util.Collection getServiceNames(org.jivesoftware.smack.Connection) -> getServiceNames
    java.util.Collection getHostedRooms(org.jivesoftware.smack.Connection,java.lang.String) -> getHostedRooms
    java.lang.String getRoom() -> getRoom
    void create(java.lang.String) -> create
    void join(java.lang.String) -> join
    void join(java.lang.String,java.lang.String) -> join
    void join(java.lang.String,java.lang.String,org.jivesoftware.smackx.muc.DiscussionHistory,long) -> join
    boolean isJoined() -> isJoined
    void leave() -> leave
    org.jivesoftware.smackx.Form getConfigurationForm() -> getConfigurationForm
    void sendConfigurationForm(org.jivesoftware.smackx.Form) -> sendConfigurationForm
    org.jivesoftware.smackx.Form getRegistrationForm() -> getRegistrationForm
    void sendRegistrationForm(org.jivesoftware.smackx.Form) -> sendRegistrationForm
    void destroy(java.lang.String,java.lang.String) -> destroy
    void invite(java.lang.String,java.lang.String) -> invite
    void invite(org.jivesoftware.smack.packet.Message,java.lang.String,java.lang.String) -> invite
    void decline(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String,java.lang.String) -> decline
    void addInvitationListener(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.muc.InvitationListener) -> addInvitationListener
    void removeInvitationListener(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.muc.InvitationListener) -> removeInvitationListener
    void addInvitationRejectionListener(org.jivesoftware.smackx.muc.InvitationRejectionListener) -> addInvitationRejectionListener
    void removeInvitationRejectionListener(org.jivesoftware.smackx.muc.InvitationRejectionListener) -> removeInvitationRejectionListener
    void fireInvitationRejectionListeners(java.lang.String,java.lang.String) -> fireInvitationRejectionListeners
    void addSubjectUpdatedListener(org.jivesoftware.smackx.muc.SubjectUpdatedListener) -> addSubjectUpdatedListener
    void removeSubjectUpdatedListener(org.jivesoftware.smackx.muc.SubjectUpdatedListener) -> removeSubjectUpdatedListener
    void fireSubjectUpdatedListeners(java.lang.String,java.lang.String) -> fireSubjectUpdatedListeners
    void addPresenceInterceptor(org.jivesoftware.smack.PacketInterceptor) -> addPresenceInterceptor
    void removePresenceInterceptor(org.jivesoftware.smack.PacketInterceptor) -> removePresenceInterceptor
    java.lang.String getSubject() -> getSubject
    java.lang.String getReservedNickname() -> getReservedNickname
    java.lang.String getNickname() -> getNickname
    void changeNickname(java.lang.String) -> changeNickname
    void changeAvailabilityStatus(java.lang.String,org.jivesoftware.smack.packet.Presence$Mode) -> changeAvailabilityStatus
    void kickParticipant(java.lang.String,java.lang.String) -> kickParticipant
    void grantVoice(java.util.Collection) -> grantVoice
    void grantVoice(java.lang.String) -> grantVoice
    void revokeVoice(java.util.Collection) -> revokeVoice
    void revokeVoice(java.lang.String) -> revokeVoice
    void banUsers(java.util.Collection) -> banUsers
    void banUser(java.lang.String,java.lang.String) -> banUser
    void grantMembership(java.util.Collection) -> grantMembership
    void grantMembership(java.lang.String) -> grantMembership
    void revokeMembership(java.util.Collection) -> revokeMembership
    void revokeMembership(java.lang.String) -> revokeMembership
    void grantModerator(java.util.Collection) -> grantModerator
    void grantModerator(java.lang.String) -> grantModerator
    void revokeModerator(java.util.Collection) -> revokeModerator
    void revokeModerator(java.lang.String) -> revokeModerator
    void grantOwnership(java.util.Collection) -> grantOwnership
    void grantOwnership(java.lang.String) -> grantOwnership
    void revokeOwnership(java.util.Collection) -> revokeOwnership
    void revokeOwnership(java.lang.String) -> revokeOwnership
    void grantAdmin(java.util.Collection) -> grantAdmin
    void grantAdmin(java.lang.String) -> grantAdmin
    void revokeAdmin(java.util.Collection) -> revokeAdmin
    void revokeAdmin(java.lang.String) -> revokeAdmin
    void changeAffiliationByOwner(java.lang.String,java.lang.String) -> changeAffiliationByOwner
    void changeAffiliationByOwner(java.util.Collection,java.lang.String) -> changeAffiliationByOwner
    void changeAffiliationByAdmin(java.lang.String,java.lang.String,java.lang.String) -> changeAffiliationByAdmin
    void changeAffiliationByAdmin(java.util.Collection,java.lang.String) -> changeAffiliationByAdmin
    void changeRole(java.lang.String,java.lang.String,java.lang.String) -> changeRole
    void changeRole(java.util.Collection,java.lang.String) -> changeRole
    int getOccupantsCount() -> getOccupantsCount
    java.util.Iterator getOccupants() -> getOccupants
    org.jivesoftware.smack.packet.Presence getOccupantPresence(java.lang.String) -> getOccupantPresence
    org.jivesoftware.smackx.muc.Occupant getOccupant(java.lang.String) -> getOccupant
    void addParticipantListener(org.jivesoftware.smack.PacketListener) -> addParticipantListener
    void removeParticipantListener(org.jivesoftware.smack.PacketListener) -> removeParticipantListener
    java.util.Collection getOwners() -> getOwners
    java.util.Collection getAdmins() -> getAdmins
    java.util.Collection getMembers() -> getMembers
    java.util.Collection getOutcasts() -> getOutcasts
    java.util.Collection getAffiliatesByOwner(java.lang.String) -> getAffiliatesByOwner
    java.util.Collection getAffiliatesByAdmin(java.lang.String) -> getAffiliatesByAdmin
    java.util.Collection getModerators() -> getModerators
    java.util.Collection getParticipants() -> getParticipants
    java.util.Collection getOccupants(java.lang.String) -> getOccupants
    void sendMessage(java.lang.String) -> sendMessage
    org.jivesoftware.smack.Chat createPrivateChat(java.lang.String,org.jivesoftware.smack.MessageListener) -> createPrivateChat
    org.jivesoftware.smack.packet.Message createMessage() -> createMessage
    void sendMessage(org.jivesoftware.smack.packet.Message) -> sendMessage
    org.jivesoftware.smack.packet.Message pollMessage() -> pollMessage
    org.jivesoftware.smack.packet.Message nextMessage() -> nextMessage
    org.jivesoftware.smack.packet.Message nextMessage(long) -> nextMessage
    void addMessageListener(org.jivesoftware.smack.PacketListener) -> addMessageListener
    void removeMessageListener(org.jivesoftware.smack.PacketListener) -> removeMessageListener
    void changeSubject(java.lang.String) -> changeSubject
    void userHasJoined() -> userHasJoined
    void userHasLeft() -> userHasLeft
    org.jivesoftware.smackx.packet.MUCUser getMUCUserExtension(org.jivesoftware.smack.packet.Packet) -> getMUCUserExtension
    void addUserStatusListener(org.jivesoftware.smackx.muc.UserStatusListener) -> addUserStatusListener
    void removeUserStatusListener(org.jivesoftware.smackx.muc.UserStatusListener) -> removeUserStatusListener
    void fireUserStatusListeners(java.lang.String,java.lang.Object[]) -> fireUserStatusListeners
    void addParticipantStatusListener(org.jivesoftware.smackx.muc.ParticipantStatusListener) -> addParticipantStatusListener
    void removeParticipantStatusListener(org.jivesoftware.smackx.muc.ParticipantStatusListener) -> removeParticipantStatusListener
    void fireParticipantStatusListeners(java.lang.String,java.util.List) -> fireParticipantStatusListeners
    void init() -> init
    void checkRoleModifications(java.lang.String,java.lang.String,boolean,java.lang.String) -> checkRoleModifications
    void checkAffiliationModifications(java.lang.String,java.lang.String,boolean,java.lang.String) -> checkAffiliationModifications
    void checkPresenceCode(java.lang.String,boolean,org.jivesoftware.smackx.packet.MUCUser,java.lang.String) -> checkPresenceCode
    void finalize() -> finalize
    java.util.Iterator access$000(org.jivesoftware.smack.Connection) -> access$000
    java.lang.String access$102(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String) -> access$102
    void access$200(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String) -> access$200
    java.lang.String access$300(org.jivesoftware.smackx.muc.MultiUserChat) -> access$300
    java.lang.String access$400(org.jivesoftware.smackx.muc.MultiUserChat) -> access$400
    java.util.Map access$500(org.jivesoftware.smackx.muc.MultiUserChat) -> access$500
    org.jivesoftware.smackx.packet.MUCUser access$600(org.jivesoftware.smackx.muc.MultiUserChat,org.jivesoftware.smack.packet.Packet) -> access$600
    void access$700(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String,boolean,java.lang.String) -> access$700
    void access$800(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String,boolean,java.lang.String) -> access$800
    void access$900(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.util.List) -> access$900
    void access$1000(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,boolean,org.jivesoftware.smackx.packet.MUCUser,java.lang.String) -> access$1000
    void access$1100(org.jivesoftware.smackx.muc.MultiUserChat,java.lang.String,java.lang.String) -> access$1100
org.jivesoftware.smackx.muc.MultiUserChat$1 -> org.jivesoftware.smackx.muc.MultiUserChat$1:
    void connectionCreated(org.jivesoftware.smack.Connection) -> connectionCreated
org.jivesoftware.smackx.muc.MultiUserChat$1$1 -> org.jivesoftware.smackx.muc.MultiUserChat$1$1:
    org.jivesoftware.smack.Connection val$connection -> val$connection
    org.jivesoftware.smackx.muc.MultiUserChat$1 this$0 -> this$0
    java.util.List getNodeItems() -> getNodeItems
    java.util.List getNodeFeatures() -> getNodeFeatures
    java.util.List getNodeIdentities() -> getNodeIdentities
org.jivesoftware.smackx.muc.MultiUserChat$2 -> org.jivesoftware.smackx.muc.MultiUserChat$2:
    java.lang.String val$subject -> val$subject
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.muc.MultiUserChat$3 -> org.jivesoftware.smackx.muc.MultiUserChat$3:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.muc.MultiUserChat$4 -> org.jivesoftware.smackx.muc.MultiUserChat$4:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.MultiUserChat$5 -> org.jivesoftware.smackx.muc.MultiUserChat$5:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.MultiUserChat$6 -> org.jivesoftware.smackx.muc.MultiUserChat$6:
    org.jivesoftware.smackx.muc.MultiUserChat this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor -> org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor:
    java.util.Map monitors -> monitors
    java.util.List invitationsListeners -> invitationsListeners
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smack.filter.PacketFilter invitationFilter -> invitationFilter
    org.jivesoftware.smack.PacketListener invitationPacketListener -> invitationPacketListener
    org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor getInvitationsMonitor(org.jivesoftware.smack.Connection) -> getInvitationsMonitor
    void addInvitationListener(org.jivesoftware.smackx.muc.InvitationListener) -> addInvitationListener
    void removeInvitationListener(org.jivesoftware.smackx.muc.InvitationListener) -> removeInvitationListener
    void fireInvitationListeners(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> fireInvitationListeners
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void init() -> init
    void cancel() -> cancel
    void access$1200(org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> access$1200
org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor$1 -> org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor$1:
    org.jivesoftware.smackx.muc.MultiUserChat$InvitationsMonitor this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.Occupant -> org.jivesoftware.smackx.muc.Occupant:
    java.lang.String affiliation -> affiliation
    java.lang.String role -> role
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String getJid() -> getJid
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getRole() -> getRole
    java.lang.String getNick() -> getNick
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.jivesoftware.smackx.muc.PacketMultiplexListener -> org.jivesoftware.smackx.muc.PacketMultiplexListener:
    org.jivesoftware.smack.filter.PacketFilter MESSAGE_FILTER -> MESSAGE_FILTER
    org.jivesoftware.smack.filter.PacketFilter PRESENCE_FILTER -> PRESENCE_FILTER
    org.jivesoftware.smack.filter.PacketFilter SUBJECT_FILTER -> SUBJECT_FILTER
    org.jivesoftware.smack.filter.PacketFilter DECLINES_FILTER -> DECLINES_FILTER
    org.jivesoftware.smackx.muc.ConnectionDetachedPacketCollector messageCollector -> messageCollector
    org.jivesoftware.smack.PacketListener presenceListener -> presenceListener
    org.jivesoftware.smack.PacketListener subjectListener -> subjectListener
    org.jivesoftware.smack.PacketListener declinesListener -> declinesListener
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.muc.PacketMultiplexListener$1 -> org.jivesoftware.smackx.muc.PacketMultiplexListener$1:
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.muc.ParticipantStatusListener -> org.jivesoftware.smackx.muc.ParticipantStatusListener:
    void joined(java.lang.String) -> joined
    void left(java.lang.String) -> left
    void kicked(java.lang.String,java.lang.String,java.lang.String) -> kicked
    void voiceGranted(java.lang.String) -> voiceGranted
    void voiceRevoked(java.lang.String) -> voiceRevoked
    void banned(java.lang.String,java.lang.String,java.lang.String) -> banned
    void membershipGranted(java.lang.String) -> membershipGranted
    void membershipRevoked(java.lang.String) -> membershipRevoked
    void moderatorGranted(java.lang.String) -> moderatorGranted
    void moderatorRevoked(java.lang.String) -> moderatorRevoked
    void ownershipGranted(java.lang.String) -> ownershipGranted
    void ownershipRevoked(java.lang.String) -> ownershipRevoked
    void adminGranted(java.lang.String) -> adminGranted
    void adminRevoked(java.lang.String) -> adminRevoked
    void nicknameChanged(java.lang.String,java.lang.String) -> nicknameChanged
org.jivesoftware.smackx.muc.RoomInfo -> org.jivesoftware.smackx.muc.RoomInfo:
    java.lang.String room -> room
    java.lang.String description -> description
    java.lang.String subject -> subject
    int occupantsCount -> occupantsCount
    boolean membersOnly -> membersOnly
    boolean moderated -> moderated
    boolean nonanonymous -> nonanonymous
    boolean passwordProtected -> passwordProtected
    boolean persistent -> persistent
    java.lang.String getRoom() -> getRoom
    java.lang.String getDescription() -> getDescription
    java.lang.String getSubject() -> getSubject
    int getOccupantsCount() -> getOccupantsCount
    boolean isMembersOnly() -> isMembersOnly
    boolean isModerated() -> isModerated
    boolean isNonanonymous() -> isNonanonymous
    boolean isPasswordProtected() -> isPasswordProtected
    boolean isPersistent() -> isPersistent
org.jivesoftware.smackx.muc.RoomListenerMultiplexor -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor:
    java.util.Map monitors -> monitors
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter filter -> filter
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener listener -> listener
    org.jivesoftware.smackx.muc.RoomListenerMultiplexor getRoomMultiplexor(org.jivesoftware.smack.Connection) -> getRoomMultiplexor
    void addRoom(java.lang.String,org.jivesoftware.smackx.muc.PacketMultiplexListener) -> addRoom
    void connectionClosed() -> connectionClosed
    void connectionClosedOnError(java.lang.Exception) -> connectionClosedOnError
    void reconnectingIn(int) -> reconnectingIn
    void reconnectionSuccessful() -> reconnectionSuccessful
    void reconnectionFailed(java.lang.Exception) -> reconnectionFailed
    void init() -> init
    void removeRoom(java.lang.String) -> removeRoom
    void cancel() -> cancel
org.jivesoftware.smackx.muc.RoomListenerMultiplexor$1 -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor$1:
org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexFilter:
    java.util.Map roomAddressTable -> roomAddressTable
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
    void addRoom(java.lang.String) -> addRoom
    void removeRoom(java.lang.String) -> removeRoom
org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener -> org.jivesoftware.smackx.muc.RoomListenerMultiplexor$RoomMultiplexListener:
    java.util.Map roomListenersByAddress -> roomListenersByAddress
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
    void addRoom(java.lang.String,org.jivesoftware.smackx.muc.PacketMultiplexListener) -> addRoom
    void removeRoom(java.lang.String) -> removeRoom
org.jivesoftware.smackx.muc.SubjectUpdatedListener -> org.jivesoftware.smackx.muc.SubjectUpdatedListener:
    void subjectUpdated(java.lang.String,java.lang.String) -> subjectUpdated
org.jivesoftware.smackx.muc.UserStatusListener -> org.jivesoftware.smackx.muc.UserStatusListener:
    void kicked(java.lang.String,java.lang.String) -> kicked
    void voiceGranted() -> voiceGranted
    void voiceRevoked() -> voiceRevoked
    void banned(java.lang.String,java.lang.String) -> banned
    void membershipGranted() -> membershipGranted
    void membershipRevoked() -> membershipRevoked
    void moderatorGranted() -> moderatorGranted
    void moderatorRevoked() -> moderatorRevoked
    void ownershipGranted() -> ownershipGranted
    void ownershipRevoked() -> ownershipRevoked
    void adminGranted() -> adminGranted
    void adminRevoked() -> adminRevoked
org.jivesoftware.smackx.packet.AdHocCommandData -> org.jivesoftware.smackx.packet.AdHocCommandData:
    java.lang.String id -> id
    java.lang.String name -> name
    java.lang.String node -> node
    java.lang.String sessionID -> sessionID
    java.util.List notes -> notes
    org.jivesoftware.smackx.packet.DataForm form -> form
    org.jivesoftware.smackx.commands.AdHocCommand$Action action -> action
    org.jivesoftware.smackx.commands.AdHocCommand$Status status -> status
    java.util.ArrayList actions -> actions
    org.jivesoftware.smackx.commands.AdHocCommand$Action executeAction -> executeAction
    java.lang.String lang -> lang
    java.lang.String getChildElementXML() -> getChildElementXML
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.util.List getNotes() -> getNotes
    void addNote(org.jivesoftware.smackx.commands.AdHocCommandNote) -> addNote
    void remveNote(org.jivesoftware.smackx.commands.AdHocCommandNote) -> remveNote
    org.jivesoftware.smackx.packet.DataForm getForm() -> getForm
    void setForm(org.jivesoftware.smackx.packet.DataForm) -> setForm
    org.jivesoftware.smackx.commands.AdHocCommand$Action getAction() -> getAction
    void setAction(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> setAction
    org.jivesoftware.smackx.commands.AdHocCommand$Status getStatus() -> getStatus
    void setStatus(org.jivesoftware.smackx.commands.AdHocCommand$Status) -> setStatus
    java.util.List getActions() -> getActions
    void addAction(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> addAction
    void setExecuteAction(org.jivesoftware.smackx.commands.AdHocCommand$Action) -> setExecuteAction
    org.jivesoftware.smackx.commands.AdHocCommand$Action getExecuteAction() -> getExecuteAction
    void setSessionID(java.lang.String) -> setSessionID
    java.lang.String getSessionID() -> getSessionID
org.jivesoftware.smackx.packet.AdHocCommandData$SpecificError -> org.jivesoftware.smackx.packet.AdHocCommandData$SpecificError:
    java.lang.String namespace -> namespace
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition condition -> condition
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    org.jivesoftware.smackx.commands.AdHocCommand$SpecificErrorCondition getCondition() -> getCondition
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.AttentionExtension -> org.jivesoftware.smackx.packet.AttentionExtension:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.AttentionExtension$Provider -> org.jivesoftware.smackx.packet.AttentionExtension$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.CapsExtension -> org.jivesoftware.smackx.packet.CapsExtension:
    java.lang.String node -> node
    java.lang.String version -> version
    java.lang.String hash -> hash
    java.lang.String XMLNS -> XMLNS
    java.lang.String NODE_NAME -> NODE_NAME
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getHash() -> getHash
    void setHash(java.lang.String) -> setHash
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.ChatStateExtension -> org.jivesoftware.smackx.packet.ChatStateExtension:
    org.jivesoftware.smackx.ChatState state -> state
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.ChatStateExtension$Provider -> org.jivesoftware.smackx.packet.ChatStateExtension$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.DataForm -> org.jivesoftware.smackx.packet.DataForm:
    java.lang.String type -> type
    java.lang.String title -> title
    java.util.List instructions -> instructions
    org.jivesoftware.smackx.packet.DataForm$ReportedData reportedData -> reportedData
    java.util.List items -> items
    java.util.List fields -> fields
    java.lang.String getType() -> getType
    java.lang.String getTitle() -> getTitle
    java.util.Iterator getInstructions() -> getInstructions
    org.jivesoftware.smackx.packet.DataForm$ReportedData getReportedData() -> getReportedData
    java.util.Iterator getItems() -> getItems
    java.util.Iterator getFields() -> getFields
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    void setTitle(java.lang.String) -> setTitle
    void setInstructions(java.util.List) -> setInstructions
    void setReportedData(org.jivesoftware.smackx.packet.DataForm$ReportedData) -> setReportedData
    void addField(org.jivesoftware.smackx.FormField) -> addField
    void addInstruction(java.lang.String) -> addInstruction
    void addItem(org.jivesoftware.smackx.packet.DataForm$Item) -> addItem
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DataForm$Item -> org.jivesoftware.smackx.packet.DataForm$Item:
    java.util.List fields -> fields
    java.util.Iterator getFields() -> getFields
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DataForm$ReportedData -> org.jivesoftware.smackx.packet.DataForm$ReportedData:
    java.util.List fields -> fields
    java.util.Iterator getFields() -> getFields
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DefaultPrivateData -> org.jivesoftware.smackx.packet.DefaultPrivateData:
    java.lang.String elementName -> elementName
    java.lang.String namespace -> namespace
    java.util.Map map -> map
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.Iterator getNames() -> getNames
    java.lang.String getValue(java.lang.String) -> getValue
    void setValue(java.lang.String,java.lang.String) -> setValue
org.jivesoftware.smackx.packet.DelayInfo -> org.jivesoftware.smackx.packet.DelayInfo:
    org.jivesoftware.smackx.packet.DelayInformation wrappedInfo -> wrappedInfo
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.util.Date getStamp() -> getStamp
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DelayInformation -> org.jivesoftware.smackx.packet.DelayInformation:
    java.text.DateFormat XEP_0091_UTC_FORMAT -> XEP_0091_UTC_FORMAT
    java.util.Date stamp -> stamp
    java.lang.String from -> from
    java.lang.String reason -> reason
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    java.util.Date getStamp() -> getStamp
    java.lang.String getReason() -> getReason
    void setReason(java.lang.String) -> setReason
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DiscoverInfo -> org.jivesoftware.smackx.packet.DiscoverInfo:
    java.util.List features -> features
    java.util.List identities -> identities
    java.lang.String node -> node
    void addFeature(java.lang.String) -> addFeature
    void addFeature(org.jivesoftware.smackx.packet.DiscoverInfo$Feature) -> addFeature
    java.util.Iterator getFeatures() -> getFeatures
    void addIdentity(org.jivesoftware.smackx.packet.DiscoverInfo$Identity) -> addIdentity
    java.util.Iterator getIdentities() -> getIdentities
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    boolean containsFeature(java.lang.String) -> containsFeature
    java.lang.String getChildElementXML() -> getChildElementXML
    org.jivesoftware.smackx.packet.DiscoverInfo clone() -> clone
    java.lang.Object clone() -> clone
org.jivesoftware.smackx.packet.DiscoverInfo$Feature -> org.jivesoftware.smackx.packet.DiscoverInfo$Feature:
    java.lang.String variable -> variable
    java.lang.String getVar() -> getVar
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DiscoverInfo$Identity -> org.jivesoftware.smackx.packet.DiscoverInfo$Identity:
    java.lang.String category -> category
    java.lang.String name -> name
    java.lang.String type -> type
    java.lang.String getCategory() -> getCategory
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.DiscoverItems -> org.jivesoftware.smackx.packet.DiscoverItems:
    java.util.List items -> items
    java.lang.String node -> node
    void addItem(org.jivesoftware.smackx.packet.DiscoverItems$Item) -> addItem
    java.util.Iterator getItems() -> getItems
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.DiscoverItems$Item -> org.jivesoftware.smackx.packet.DiscoverItems$Item:
    java.lang.String UPDATE_ACTION -> UPDATE_ACTION
    java.lang.String REMOVE_ACTION -> REMOVE_ACTION
    java.lang.String entityID -> entityID
    java.lang.String name -> name
    java.lang.String node -> node
    java.lang.String action -> action
    java.lang.String getEntityID() -> getEntityID
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getAction() -> getAction
    void setAction(java.lang.String) -> setAction
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.Header -> org.jivesoftware.smackx.packet.Header:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.HeadersExtension -> org.jivesoftware.smackx.packet.HeadersExtension:
    java.lang.String NAMESPACE -> NAMESPACE
    java.util.Collection headers -> headers
    java.util.Collection getHeaders() -> getHeaders
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.LastActivity -> org.jivesoftware.smackx.packet.LastActivity:
    long lastActivity -> lastActivity
    java.lang.String message -> message
    java.lang.String getChildElementXML() -> getChildElementXML
    void setLastActivity(long) -> setLastActivity
    void setMessage(java.lang.String) -> setMessage
    long getIdleTime() -> getIdleTime
    java.lang.String getStatusMessage() -> getStatusMessage
    org.jivesoftware.smackx.packet.LastActivity getLastActivity(org.jivesoftware.smack.Connection,java.lang.String) -> getLastActivity
    void access$000(org.jivesoftware.smackx.packet.LastActivity,java.lang.String) -> access$000
org.jivesoftware.smackx.packet.LastActivity$Provider -> org.jivesoftware.smackx.packet.LastActivity$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.packet.MUCAdmin -> org.jivesoftware.smackx.packet.MUCAdmin:
    java.util.List items -> items
    java.util.Iterator getItems() -> getItems
    void addItem(org.jivesoftware.smackx.packet.MUCAdmin$Item) -> addItem
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.MUCAdmin$Item -> org.jivesoftware.smackx.packet.MUCAdmin$Item:
    java.lang.String actor -> actor
    java.lang.String reason -> reason
    java.lang.String affiliation -> affiliation
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String role -> role
    java.lang.String getActor() -> getActor
    java.lang.String getReason() -> getReason
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getJid() -> getJid
    java.lang.String getNick() -> getNick
    java.lang.String getRole() -> getRole
    void setActor(java.lang.String) -> setActor
    void setReason(java.lang.String) -> setReason
    void setJid(java.lang.String) -> setJid
    void setNick(java.lang.String) -> setNick
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCInitialPresence -> org.jivesoftware.smackx.packet.MUCInitialPresence:
    java.lang.String password -> password
    org.jivesoftware.smackx.packet.MUCInitialPresence$History history -> history
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    org.jivesoftware.smackx.packet.MUCInitialPresence$History getHistory() -> getHistory
    java.lang.String getPassword() -> getPassword
    void setHistory(org.jivesoftware.smackx.packet.MUCInitialPresence$History) -> setHistory
    void setPassword(java.lang.String) -> setPassword
org.jivesoftware.smackx.packet.MUCInitialPresence$History -> org.jivesoftware.smackx.packet.MUCInitialPresence$History:
    int maxChars -> maxChars
    int maxStanzas -> maxStanzas
    int seconds -> seconds
    java.util.Date since -> since
    int getMaxChars() -> getMaxChars
    int getMaxStanzas() -> getMaxStanzas
    int getSeconds() -> getSeconds
    java.util.Date getSince() -> getSince
    void setMaxChars(int) -> setMaxChars
    void setMaxStanzas(int) -> setMaxStanzas
    void setSeconds(int) -> setSeconds
    void setSince(java.util.Date) -> setSince
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCOwner -> org.jivesoftware.smackx.packet.MUCOwner:
    java.util.List items -> items
    org.jivesoftware.smackx.packet.MUCOwner$Destroy destroy -> destroy
    java.util.Iterator getItems() -> getItems
    org.jivesoftware.smackx.packet.MUCOwner$Destroy getDestroy() -> getDestroy
    void setDestroy(org.jivesoftware.smackx.packet.MUCOwner$Destroy) -> setDestroy
    void addItem(org.jivesoftware.smackx.packet.MUCOwner$Item) -> addItem
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.MUCOwner$Destroy -> org.jivesoftware.smackx.packet.MUCOwner$Destroy:
    java.lang.String reason -> reason
    java.lang.String jid -> jid
    java.lang.String getJid() -> getJid
    java.lang.String getReason() -> getReason
    void setJid(java.lang.String) -> setJid
    void setReason(java.lang.String) -> setReason
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCOwner$Item -> org.jivesoftware.smackx.packet.MUCOwner$Item:
    java.lang.String actor -> actor
    java.lang.String reason -> reason
    java.lang.String affiliation -> affiliation
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String role -> role
    java.lang.String getActor() -> getActor
    java.lang.String getReason() -> getReason
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getJid() -> getJid
    java.lang.String getNick() -> getNick
    java.lang.String getRole() -> getRole
    void setActor(java.lang.String) -> setActor
    void setReason(java.lang.String) -> setReason
    void setJid(java.lang.String) -> setJid
    void setNick(java.lang.String) -> setNick
    void setRole(java.lang.String) -> setRole
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser -> org.jivesoftware.smackx.packet.MUCUser:
    org.jivesoftware.smackx.packet.MUCUser$Invite invite -> invite
    org.jivesoftware.smackx.packet.MUCUser$Decline decline -> decline
    org.jivesoftware.smackx.packet.MUCUser$Item item -> item
    java.lang.String password -> password
    org.jivesoftware.smackx.packet.MUCUser$Status status -> status
    org.jivesoftware.smackx.packet.MUCUser$Destroy destroy -> destroy
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    org.jivesoftware.smackx.packet.MUCUser$Invite getInvite() -> getInvite
    org.jivesoftware.smackx.packet.MUCUser$Decline getDecline() -> getDecline
    org.jivesoftware.smackx.packet.MUCUser$Item getItem() -> getItem
    java.lang.String getPassword() -> getPassword
    org.jivesoftware.smackx.packet.MUCUser$Status getStatus() -> getStatus
    org.jivesoftware.smackx.packet.MUCUser$Destroy getDestroy() -> getDestroy
    void setInvite(org.jivesoftware.smackx.packet.MUCUser$Invite) -> setInvite
    void setDecline(org.jivesoftware.smackx.packet.MUCUser$Decline) -> setDecline
    void setItem(org.jivesoftware.smackx.packet.MUCUser$Item) -> setItem
    void setPassword(java.lang.String) -> setPassword
    void setStatus(org.jivesoftware.smackx.packet.MUCUser$Status) -> setStatus
    void setDestroy(org.jivesoftware.smackx.packet.MUCUser$Destroy) -> setDestroy
org.jivesoftware.smackx.packet.MUCUser$Decline -> org.jivesoftware.smackx.packet.MUCUser$Decline:
    java.lang.String reason -> reason
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.lang.String getTo() -> getTo
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    void setTo(java.lang.String) -> setTo
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Destroy -> org.jivesoftware.smackx.packet.MUCUser$Destroy:
    java.lang.String reason -> reason
    java.lang.String jid -> jid
    java.lang.String getJid() -> getJid
    java.lang.String getReason() -> getReason
    void setJid(java.lang.String) -> setJid
    void setReason(java.lang.String) -> setReason
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Invite -> org.jivesoftware.smackx.packet.MUCUser$Invite:
    java.lang.String reason -> reason
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String getFrom() -> getFrom
    java.lang.String getReason() -> getReason
    java.lang.String getTo() -> getTo
    void setFrom(java.lang.String) -> setFrom
    void setReason(java.lang.String) -> setReason
    void setTo(java.lang.String) -> setTo
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Item -> org.jivesoftware.smackx.packet.MUCUser$Item:
    java.lang.String actor -> actor
    java.lang.String reason -> reason
    java.lang.String affiliation -> affiliation
    java.lang.String jid -> jid
    java.lang.String nick -> nick
    java.lang.String role -> role
    java.lang.String getActor() -> getActor
    java.lang.String getReason() -> getReason
    java.lang.String getAffiliation() -> getAffiliation
    java.lang.String getJid() -> getJid
    java.lang.String getNick() -> getNick
    java.lang.String getRole() -> getRole
    void setActor(java.lang.String) -> setActor
    void setReason(java.lang.String) -> setReason
    void setJid(java.lang.String) -> setJid
    void setNick(java.lang.String) -> setNick
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MUCUser$Status -> org.jivesoftware.smackx.packet.MUCUser$Status:
    java.lang.String code -> code
    java.lang.String getCode() -> getCode
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MessageEvent -> org.jivesoftware.smackx.packet.MessageEvent:
    java.lang.String OFFLINE -> OFFLINE
    java.lang.String COMPOSING -> COMPOSING
    java.lang.String DISPLAYED -> DISPLAYED
    java.lang.String DELIVERED -> DELIVERED
    java.lang.String CANCELLED -> CANCELLED
    boolean offline -> offline
    boolean delivered -> delivered
    boolean displayed -> displayed
    boolean composing -> composing
    boolean cancelled -> cancelled
    java.lang.String packetID -> packetID
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    boolean isComposing() -> isComposing
    boolean isDelivered() -> isDelivered
    boolean isDisplayed() -> isDisplayed
    boolean isOffline() -> isOffline
    boolean isCancelled() -> isCancelled
    java.lang.String getPacketID() -> getPacketID
    java.util.Iterator getEventTypes() -> getEventTypes
    void setComposing(boolean) -> setComposing
    void setDelivered(boolean) -> setDelivered
    void setDisplayed(boolean) -> setDisplayed
    void setOffline(boolean) -> setOffline
    void setCancelled(boolean) -> setCancelled
    void setPacketID(java.lang.String) -> setPacketID
    boolean isMessageEventRequest() -> isMessageEventRequest
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MultipleAddresses -> org.jivesoftware.smackx.packet.MultipleAddresses:
    java.lang.String BCC -> BCC
    java.lang.String CC -> CC
    java.lang.String NO_REPLY -> NO_REPLY
    java.lang.String REPLY_ROOM -> REPLY_ROOM
    java.lang.String REPLY_TO -> REPLY_TO
    java.lang.String TO -> TO
    java.util.List addresses -> addresses
    void addAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String) -> addAddress
    void setNoReply() -> setNoReply
    java.util.List getAddressesOfType(java.lang.String) -> getAddressesOfType
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.MultipleAddresses$1 -> org.jivesoftware.smackx.packet.MultipleAddresses$1:
org.jivesoftware.smackx.packet.MultipleAddresses$Address -> org.jivesoftware.smackx.packet.MultipleAddresses$Address:
    java.lang.String type -> type
    java.lang.String jid -> jid
    java.lang.String node -> node
    java.lang.String description -> description
    boolean delivered -> delivered
    java.lang.String uri -> uri
    java.lang.String getType() -> getType
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    boolean isDelivered() -> isDelivered
    void setDelivered(boolean) -> setDelivered
    java.lang.String getUri() -> getUri
    void setUri(java.lang.String) -> setUri
    java.lang.String toXML() -> toXML
    void access$100(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$100
    void access$200(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$200
    void access$300(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$300
    void access$400(org.jivesoftware.smackx.packet.MultipleAddresses$Address,boolean) -> access$400
    void access$500(org.jivesoftware.smackx.packet.MultipleAddresses$Address,java.lang.String) -> access$500
    java.lang.String access$600(org.jivesoftware.smackx.packet.MultipleAddresses$Address) -> access$600
org.jivesoftware.smackx.packet.Nick -> org.jivesoftware.smackx.packet.Nick:
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String name -> name
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.Nick$Provider -> org.jivesoftware.smackx.packet.Nick$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.OfflineMessageInfo -> org.jivesoftware.smackx.packet.OfflineMessageInfo:
    java.lang.String node -> node
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getNode() -> getNode
    void setNode(java.lang.String) -> setNode
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.OfflineMessageInfo$Provider -> org.jivesoftware.smackx.packet.OfflineMessageInfo$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.packet.OfflineMessageRequest -> org.jivesoftware.smackx.packet.OfflineMessageRequest:
    java.util.List items -> items
    boolean purge -> purge
    boolean fetch -> fetch
    java.util.Iterator getItems() -> getItems
    void addItem(org.jivesoftware.smackx.packet.OfflineMessageRequest$Item) -> addItem
    boolean isPurge() -> isPurge
    void setPurge(boolean) -> setPurge
    boolean isFetch() -> isFetch
    void setFetch(boolean) -> setFetch
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.OfflineMessageRequest$Item -> org.jivesoftware.smackx.packet.OfflineMessageRequest$Item:
    java.lang.String action -> action
    java.lang.String jid -> jid
    java.lang.String node -> node
    java.lang.String getNode() -> getNode
    java.lang.String getAction() -> getAction
    void setAction(java.lang.String) -> setAction
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.OfflineMessageRequest$Provider -> org.jivesoftware.smackx.packet.OfflineMessageRequest$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.OfflineMessageRequest$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
org.jivesoftware.smackx.packet.PEPEvent -> org.jivesoftware.smackx.packet.PEPEvent:
    org.jivesoftware.smackx.packet.PEPItem item -> item
    void addPEPItem(org.jivesoftware.smackx.packet.PEPItem) -> addPEPItem
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.PEPItem -> org.jivesoftware.smackx.packet.PEPItem:
    java.lang.String id -> id
    java.lang.String getNode() -> getNode
    java.lang.String getItemDetailsXML() -> getItemDetailsXML
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.PEPPubSub -> org.jivesoftware.smackx.packet.PEPPubSub:
    org.jivesoftware.smackx.packet.PEPItem item -> item
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.PrivateData -> org.jivesoftware.smackx.packet.PrivateData:
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.RosterExchange -> org.jivesoftware.smackx.packet.RosterExchange:
    java.util.List remoteRosterEntries -> remoteRosterEntries
    void addRosterEntry(org.jivesoftware.smack.RosterEntry) -> addRosterEntry
    void addRosterEntry(org.jivesoftware.smackx.RemoteRosterEntry) -> addRosterEntry
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.util.Iterator getRosterEntries() -> getRosterEntries
    int getEntryCount() -> getEntryCount
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.SharedGroupsInfo -> org.jivesoftware.smackx.packet.SharedGroupsInfo:
    java.util.List groups -> groups
    java.util.List getGroups() -> getGroups
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.SharedGroupsInfo$Provider -> org.jivesoftware.smackx.packet.SharedGroupsInfo$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.packet.StreamInitiation -> org.jivesoftware.smackx.packet.StreamInitiation:
    java.lang.String id -> id
    java.lang.String mimeType -> mimeType
    org.jivesoftware.smackx.packet.StreamInitiation$File file -> file
    org.jivesoftware.smackx.packet.StreamInitiation$Feature featureNegotiation -> featureNegotiation
    void setSesssionID(java.lang.String) -> setSesssionID
    java.lang.String getSessionID() -> getSessionID
    void setMimeType(java.lang.String) -> setMimeType
    java.lang.String getMimeType() -> getMimeType
    void setFile(org.jivesoftware.smackx.packet.StreamInitiation$File) -> setFile
    org.jivesoftware.smackx.packet.StreamInitiation$File getFile() -> getFile
    void setFeatureNegotiationForm(org.jivesoftware.smackx.packet.DataForm) -> setFeatureNegotiationForm
    org.jivesoftware.smackx.packet.DataForm getFeatureNegotiationForm() -> getFeatureNegotiationForm
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.StreamInitiation$Feature -> org.jivesoftware.smackx.packet.StreamInitiation$Feature:
    org.jivesoftware.smackx.packet.DataForm data -> data
    org.jivesoftware.smackx.packet.StreamInitiation this$0 -> this$0
    org.jivesoftware.smackx.packet.DataForm getData() -> getData
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getElementName() -> getElementName
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.StreamInitiation$File -> org.jivesoftware.smackx.packet.StreamInitiation$File:
    java.lang.String name -> name
    long size -> size
    java.lang.String hash -> hash
    java.util.Date date -> date
    java.lang.String desc -> desc
    boolean isRanged -> isRanged
    java.lang.String getName() -> getName
    long getSize() -> getSize
    void setHash(java.lang.String) -> setHash
    java.lang.String getHash() -> getHash
    void setDate(java.util.Date) -> setDate
    java.util.Date getDate() -> getDate
    void setDesc(java.lang.String) -> setDesc
    java.lang.String getDesc() -> getDesc
    void setRanged(boolean) -> setRanged
    boolean isRanged() -> isRanged
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.packet.SyncPacketSend -> org.jivesoftware.smackx.packet.SyncPacketSend:
    org.jivesoftware.smack.packet.Packet getReply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,long) -> getReply
    org.jivesoftware.smack.packet.Packet getReply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet) -> getReply
org.jivesoftware.smackx.packet.Time -> org.jivesoftware.smackx.packet.Time:
    java.text.SimpleDateFormat utcFormat -> utcFormat
    java.text.DateFormat displayFormat -> displayFormat
    java.lang.String utc -> utc
    java.lang.String tz -> tz
    java.lang.String display -> display
    java.util.Date getTime() -> getTime
    void setTime(java.util.Date) -> setTime
    java.lang.String getUtc() -> getUtc
    void setUtc(java.lang.String) -> setUtc
    java.lang.String getTz() -> getTz
    void setTz(java.lang.String) -> setTz
    java.lang.String getDisplay() -> getDisplay
    void setDisplay(java.lang.String) -> setDisplay
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.VCard -> org.jivesoftware.smackx.packet.VCard:
    java.util.Map homePhones -> homePhones
    java.util.Map workPhones -> workPhones
    java.util.Map homeAddr -> homeAddr
    java.util.Map workAddr -> workAddr
    java.lang.String firstName -> firstName
    java.lang.String lastName -> lastName
    java.lang.String middleName -> middleName
    java.lang.String emailHome -> emailHome
    java.lang.String emailWork -> emailWork
    java.lang.String organization -> organization
    java.lang.String organizationUnit -> organizationUnit
    java.lang.String avatar -> avatar
    java.util.Map otherSimpleFields -> otherSimpleFields
    java.util.Map otherUnescapableFields -> otherUnescapableFields
    java.lang.String getField(java.lang.String) -> getField
    void setField(java.lang.String,java.lang.String) -> setField
    void setField(java.lang.String,java.lang.String,boolean) -> setField
    java.lang.String getFirstName() -> getFirstName
    void setFirstName(java.lang.String) -> setFirstName
    java.lang.String getLastName() -> getLastName
    void setLastName(java.lang.String) -> setLastName
    java.lang.String getMiddleName() -> getMiddleName
    void setMiddleName(java.lang.String) -> setMiddleName
    java.lang.String getNickName() -> getNickName
    void setNickName(java.lang.String) -> setNickName
    java.lang.String getEmailHome() -> getEmailHome
    void setEmailHome(java.lang.String) -> setEmailHome
    java.lang.String getEmailWork() -> getEmailWork
    void setEmailWork(java.lang.String) -> setEmailWork
    java.lang.String getJabberId() -> getJabberId
    void setJabberId(java.lang.String) -> setJabberId
    java.lang.String getOrganization() -> getOrganization
    void setOrganization(java.lang.String) -> setOrganization
    java.lang.String getOrganizationUnit() -> getOrganizationUnit
    void setOrganizationUnit(java.lang.String) -> setOrganizationUnit
    java.lang.String getAddressFieldHome(java.lang.String) -> getAddressFieldHome
    void setAddressFieldHome(java.lang.String,java.lang.String) -> setAddressFieldHome
    java.lang.String getAddressFieldWork(java.lang.String) -> getAddressFieldWork
    void setAddressFieldWork(java.lang.String,java.lang.String) -> setAddressFieldWork
    void setPhoneHome(java.lang.String,java.lang.String) -> setPhoneHome
    java.lang.String getPhoneHome(java.lang.String) -> getPhoneHome
    void setPhoneWork(java.lang.String,java.lang.String) -> setPhoneWork
    java.lang.String getPhoneWork(java.lang.String) -> getPhoneWork
    void setAvatar(java.net.URL) -> setAvatar
    void setAvatar(byte[]) -> setAvatar
    void setAvatar(byte[],java.lang.String) -> setAvatar
    void setEncodedImage(java.lang.String) -> setEncodedImage
    byte[] getAvatar() -> getAvatar
    byte[] getBytes(java.net.URL) -> getBytes
    byte[] getFileBytes(java.io.File) -> getFileBytes
    java.lang.String getAvatarHash() -> getAvatarHash
    void updateFN() -> updateFN
    void save(org.jivesoftware.smack.Connection) -> save
    void load(org.jivesoftware.smack.Connection) -> load
    void load(org.jivesoftware.smack.Connection,java.lang.String) -> load
    void doLoad(org.jivesoftware.smack.Connection,java.lang.String) -> doLoad
    java.lang.String getChildElementXML() -> getChildElementXML
    void copyFieldsFrom(org.jivesoftware.smackx.packet.VCard) -> copyFieldsFrom
    void checkAuthenticated(org.jivesoftware.smack.Connection,boolean) -> checkAuthenticated
    boolean hasContent() -> hasContent
    boolean hasNameField() -> hasNameField
    boolean hasOrganizationFields() -> hasOrganizationFields
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean access$000(org.jivesoftware.smackx.packet.VCard) -> access$000
    boolean access$200(org.jivesoftware.smackx.packet.VCard) -> access$200
    java.lang.String access$300(org.jivesoftware.smackx.packet.VCard) -> access$300
    java.lang.String access$400(org.jivesoftware.smackx.packet.VCard) -> access$400
    java.util.Map access$500(org.jivesoftware.smackx.packet.VCard) -> access$500
    java.util.Map access$600(org.jivesoftware.smackx.packet.VCard) -> access$600
    java.util.Map access$700(org.jivesoftware.smackx.packet.VCard) -> access$700
    java.util.Map access$800(org.jivesoftware.smackx.packet.VCard) -> access$800
    java.util.Map access$1100(org.jivesoftware.smackx.packet.VCard) -> access$1100
    java.util.Map access$1200(org.jivesoftware.smackx.packet.VCard) -> access$1200
    boolean access$1300(org.jivesoftware.smackx.packet.VCard) -> access$1300
    java.lang.String access$1400(org.jivesoftware.smackx.packet.VCard) -> access$1400
    java.lang.String access$1500(org.jivesoftware.smackx.packet.VCard) -> access$1500
    java.lang.String access$1600(org.jivesoftware.smackx.packet.VCard) -> access$1600
    java.lang.String access$1700(org.jivesoftware.smackx.packet.VCard) -> access$1700
    java.lang.String access$1800(org.jivesoftware.smackx.packet.VCard) -> access$1800
org.jivesoftware.smackx.packet.VCard$ContentBuilder -> org.jivesoftware.smackx.packet.VCard$ContentBuilder:
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter -> org.jivesoftware.smackx.packet.VCard$VCardWriter:
    java.lang.StringBuilder sb -> sb
    org.jivesoftware.smackx.packet.VCard this$0 -> this$0
    void write() -> write
    void buildActualContent() -> buildActualContent
    void appendEmail(java.lang.String,java.lang.String) -> appendEmail
    void appendPhones(java.util.Map,java.lang.String) -> appendPhones
    void appendAddress(java.util.Map,java.lang.String) -> appendAddress
    void appendEmptyTag(java.lang.Object) -> appendEmptyTag
    void appendGenericFields() -> appendGenericFields
    void appendOrganization() -> appendOrganization
    void appendN() -> appendN
    void appendTag(java.lang.String,java.lang.String,java.lang.String,boolean,org.jivesoftware.smackx.packet.VCard$ContentBuilder) -> appendTag
    void appendTag(java.lang.String,boolean,org.jivesoftware.smackx.packet.VCard$ContentBuilder) -> appendTag
    void appendTag(java.lang.String,java.lang.String) -> appendTag
    void access$100(org.jivesoftware.smackx.packet.VCard$VCardWriter) -> access$100
    void access$900(org.jivesoftware.smackx.packet.VCard$VCardWriter,java.lang.Object) -> access$900
    void access$1000(org.jivesoftware.smackx.packet.VCard$VCardWriter,java.lang.String,java.lang.String) -> access$1000
    java.lang.StringBuilder access$1900(org.jivesoftware.smackx.packet.VCard$VCardWriter) -> access$1900
org.jivesoftware.smackx.packet.VCard$VCardWriter$1 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$1:
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$2 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$2:
    java.lang.String val$type -> val$type
    java.lang.String val$email -> val$email
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$3 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$3:
    java.util.Map$Entry val$entry -> val$entry
    java.lang.String val$code -> val$code
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$4 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$4:
    java.lang.String val$code -> val$code
    java.util.Map val$addr -> val$addr
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$5 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$5:
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$6 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$6:
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.VCard$VCardWriter$7 -> org.jivesoftware.smackx.packet.VCard$VCardWriter$7:
    java.lang.String val$tagText -> val$tagText
    org.jivesoftware.smackx.packet.VCard$VCardWriter this$1 -> this$1
    void addTagContent() -> addTagContent
org.jivesoftware.smackx.packet.Version -> org.jivesoftware.smackx.packet.Version:
    java.lang.String name -> name
    java.lang.String version -> version
    java.lang.String os -> os
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getVersion() -> getVersion
    void setVersion(java.lang.String) -> setVersion
    java.lang.String getOs() -> getOs
    void setOs(java.lang.String) -> setOs
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.packet.XHTMLExtension -> org.jivesoftware.smackx.packet.XHTMLExtension:
    java.util.List bodies -> bodies
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.util.Iterator getBodies() -> getBodies
    void addBody(java.lang.String) -> addBody
    int getBodiesCount() -> getBodiesCount
org.jivesoftware.smackx.provider.AdHocCommandDataProvider -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadActionError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadActionError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadLocaleError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadLocaleError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadPayloadError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadPayloadError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadSessionIDError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$BadSessionIDError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$MalformedActionError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$MalformedActionError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.AdHocCommandDataProvider$SessionExpiredError -> org.jivesoftware.smackx.provider.AdHocCommandDataProvider$SessionExpiredError:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.CapsExtensionProvider -> org.jivesoftware.smackx.provider.CapsExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.DataFormProvider -> org.jivesoftware.smackx.provider.DataFormProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smackx.FormField parseField(org.xmlpull.v1.XmlPullParser) -> parseField
    org.jivesoftware.smackx.packet.DataForm$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    org.jivesoftware.smackx.packet.DataForm$ReportedData parseReported(org.xmlpull.v1.XmlPullParser) -> parseReported
    org.jivesoftware.smackx.FormField$Option parseOption(org.xmlpull.v1.XmlPullParser) -> parseOption
org.jivesoftware.smackx.provider.DelayInfoProvider -> org.jivesoftware.smackx.provider.DelayInfoProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.DelayInformationProvider -> org.jivesoftware.smackx.provider.DelayInformationProvider:
    java.text.SimpleDateFormat XEP_0091_UTC_FALLBACK_FORMAT -> XEP_0091_UTC_FALLBACK_FORMAT
    java.text.SimpleDateFormat XEP_0082_UTC_FORMAT_WITHOUT_MILLIS -> XEP_0082_UTC_FORMAT_WITHOUT_MILLIS
    java.util.Map formats -> formats
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    java.util.Date handleDateWithMissingLeadingZeros(java.lang.String) -> handleDateWithMissingLeadingZeros
    java.util.Calendar parseXEP91Date(java.lang.String,java.text.DateFormat) -> parseXEP91Date
    java.util.List filterDatesBefore(java.util.Calendar,java.util.Calendar[]) -> filterDatesBefore
    java.util.Calendar determineNearestDate(java.util.Calendar,java.util.List) -> determineNearestDate
org.jivesoftware.smackx.provider.DelayInformationProvider$1 -> org.jivesoftware.smackx.provider.DelayInformationProvider$1:
    java.util.Calendar val$now -> val$now
    org.jivesoftware.smackx.provider.DelayInformationProvider this$0 -> this$0
    int compare(java.util.Calendar,java.util.Calendar) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.jivesoftware.smackx.provider.DiscoverInfoProvider -> org.jivesoftware.smackx.provider.DiscoverInfoProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.DiscoverItemsProvider -> org.jivesoftware.smackx.provider.DiscoverItemsProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.EmbeddedExtensionProvider -> org.jivesoftware.smackx.provider.EmbeddedExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.provider.HeaderProvider -> org.jivesoftware.smackx.provider.HeaderProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.HeadersProvider -> org.jivesoftware.smackx.provider.HeadersProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.provider.MUCAdminProvider -> org.jivesoftware.smackx.provider.MUCAdminProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.MUCAdmin$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
org.jivesoftware.smackx.provider.MUCOwnerProvider -> org.jivesoftware.smackx.provider.MUCOwnerProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.MUCOwner$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    org.jivesoftware.smackx.packet.MUCOwner$Destroy parseDestroy(org.xmlpull.v1.XmlPullParser) -> parseDestroy
org.jivesoftware.smackx.provider.MUCUserProvider -> org.jivesoftware.smackx.provider.MUCUserProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smackx.packet.MUCUser$Item parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    org.jivesoftware.smackx.packet.MUCUser$Invite parseInvite(org.xmlpull.v1.XmlPullParser) -> parseInvite
    org.jivesoftware.smackx.packet.MUCUser$Decline parseDecline(org.xmlpull.v1.XmlPullParser) -> parseDecline
    org.jivesoftware.smackx.packet.MUCUser$Destroy parseDestroy(org.xmlpull.v1.XmlPullParser) -> parseDestroy
org.jivesoftware.smackx.provider.MessageEventProvider -> org.jivesoftware.smackx.provider.MessageEventProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.MultipleAddressesProvider -> org.jivesoftware.smackx.provider.MultipleAddressesProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.PEPProvider -> org.jivesoftware.smackx.provider.PEPProvider:
    java.util.Map nodeParsers -> nodeParsers
    org.jivesoftware.smack.packet.PacketExtension pepItem -> pepItem
    void registerPEPParserExtension(java.lang.String,org.jivesoftware.smack.provider.PacketExtensionProvider) -> registerPEPParserExtension
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.PrivateDataProvider -> org.jivesoftware.smackx.provider.PrivateDataProvider:
    org.jivesoftware.smackx.packet.PrivateData parsePrivateData(org.xmlpull.v1.XmlPullParser) -> parsePrivateData
org.jivesoftware.smackx.provider.RosterExchangeProvider -> org.jivesoftware.smackx.provider.RosterExchangeProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.provider.StreamInitiationProvider -> org.jivesoftware.smackx.provider.StreamInitiationProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.provider.VCardProvider -> org.jivesoftware.smackx.provider.VCardProvider:
    java.lang.String PREFERRED_ENCODING -> PREFERRED_ENCODING
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.packet.VCard createVCardFromXML(java.lang.String) -> createVCardFromXML
org.jivesoftware.smackx.provider.VCardProvider$VCardReader -> org.jivesoftware.smackx.provider.VCardProvider$VCardReader:
    org.jivesoftware.smackx.packet.VCard vCard -> vCard
    org.w3c.dom.Document document -> document
    void initializeFields() -> initializeFields
    void setupEmails() -> setupEmails
    void setupPhones() -> setupPhones
    boolean isWorkHome(java.lang.String) -> isWorkHome
    void setupAddresses() -> setupAddresses
    java.lang.String getTagContents(java.lang.String) -> getTagContents
    void setupSimpleFields() -> setupSimpleFields
    java.lang.String getTextContent(org.w3c.dom.Node) -> getTextContent
    void appendText(java.lang.StringBuilder,org.w3c.dom.Node) -> appendText
org.jivesoftware.smackx.provider.XHTMLExtensionProvider -> org.jivesoftware.smackx.provider.XHTMLExtensionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.pubsub.AccessModel -> org.jivesoftware.smackx.pubsub.AccessModel:
    org.jivesoftware.smackx.pubsub.AccessModel open -> open
    org.jivesoftware.smackx.pubsub.AccessModel authorize -> authorize
    org.jivesoftware.smackx.pubsub.AccessModel presence -> presence
    org.jivesoftware.smackx.pubsub.AccessModel roster -> roster
    org.jivesoftware.smackx.pubsub.AccessModel whitelist -> whitelist
    org.jivesoftware.smackx.pubsub.AccessModel[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.AccessModel[] values() -> values
    org.jivesoftware.smackx.pubsub.AccessModel valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.pubsub.Affiliation -> org.jivesoftware.smackx.pubsub.Affiliation:
    java.lang.String node -> node
    org.jivesoftware.smackx.pubsub.Affiliation$Type type -> type
    java.lang.String getNodeId() -> getNodeId
    org.jivesoftware.smackx.pubsub.Affiliation$Type getType() -> getType
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    void appendAttribute(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendAttribute
org.jivesoftware.smackx.pubsub.Affiliation$Type -> org.jivesoftware.smackx.pubsub.Affiliation$Type:
    org.jivesoftware.smackx.pubsub.Affiliation$Type member -> member
    org.jivesoftware.smackx.pubsub.Affiliation$Type none -> none
    org.jivesoftware.smackx.pubsub.Affiliation$Type outcast -> outcast
    org.jivesoftware.smackx.pubsub.Affiliation$Type owner -> owner
    org.jivesoftware.smackx.pubsub.Affiliation$Type publisher -> publisher
    org.jivesoftware.smackx.pubsub.Affiliation$Type[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.Affiliation$Type[] values() -> values
    org.jivesoftware.smackx.pubsub.Affiliation$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.pubsub.AffiliationsExtension -> org.jivesoftware.smackx.pubsub.AffiliationsExtension:
    java.util.List items -> items
    java.util.List getAffiliations() -> getAffiliations
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.pubsub.ChildrenAssociationPolicy -> org.jivesoftware.smackx.pubsub.ChildrenAssociationPolicy:
    org.jivesoftware.smackx.pubsub.ChildrenAssociationPolicy all -> all
    org.jivesoftware.smackx.pubsub.ChildrenAssociationPolicy owners -> owners
    org.jivesoftware.smackx.pubsub.ChildrenAssociationPolicy whitelist -> whitelist
    org.jivesoftware.smackx.pubsub.ChildrenAssociationPolicy[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.ChildrenAssociationPolicy[] values() -> values
    org.jivesoftware.smackx.pubsub.ChildrenAssociationPolicy valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.pubsub.CollectionNode -> org.jivesoftware.smackx.pubsub.CollectionNode:
org.jivesoftware.smackx.pubsub.ConfigurationEvent -> org.jivesoftware.smackx.pubsub.ConfigurationEvent:
    org.jivesoftware.smackx.pubsub.ConfigureForm form -> form
    org.jivesoftware.smackx.pubsub.ConfigureForm getConfiguration() -> getConfiguration
    java.util.List getExtensions() -> getExtensions
org.jivesoftware.smackx.pubsub.ConfigureForm -> org.jivesoftware.smackx.pubsub.ConfigureForm:
    org.jivesoftware.smackx.pubsub.AccessModel getAccessModel() -> getAccessModel
    void setAccessModel(org.jivesoftware.smackx.pubsub.AccessModel) -> setAccessModel
    java.lang.String getBodyXSLT() -> getBodyXSLT
    void setBodyXSLT(java.lang.String) -> setBodyXSLT
    java.util.Iterator getChildren() -> getChildren
    void setChildren(java.util.List) -> setChildren
    org.jivesoftware.smackx.pubsub.ChildrenAssociationPolicy getChildrenAssociationPolicy() -> getChildrenAssociationPolicy
    void setChildrenAssociationPolicy(org.jivesoftware.smackx.pubsub.ChildrenAssociationPolicy) -> setChildrenAssociationPolicy
    java.util.Iterator getChildrenAssociationWhitelist() -> getChildrenAssociationWhitelist
    void setChildrenAssociationWhitelist(java.util.List) -> setChildrenAssociationWhitelist
    int getChildrenMax() -> getChildrenMax
    void setChildrenMax(int) -> setChildrenMax
    java.lang.String getCollection() -> getCollection
    void setCollection(java.lang.String) -> setCollection
    java.lang.String getDataformXSLT() -> getDataformXSLT
    void setDataformXSLT(java.lang.String) -> setDataformXSLT
    boolean isDeliverPayloads() -> isDeliverPayloads
    void setDeliverPayloads(boolean) -> setDeliverPayloads
    org.jivesoftware.smackx.pubsub.ItemReply getItemReply() -> getItemReply
    void setItemReply(org.jivesoftware.smackx.pubsub.ItemReply) -> setItemReply
    int getMaxItems() -> getMaxItems
    void setMaxItems(int) -> setMaxItems
    int getMaxPayloadSize() -> getMaxPayloadSize
    void setMaxPayloadSize(int) -> setMaxPayloadSize
    org.jivesoftware.smackx.pubsub.NodeType getNodeType() -> getNodeType
    void setNodeType(org.jivesoftware.smackx.pubsub.NodeType) -> setNodeType
    boolean isNotifyConfig() -> isNotifyConfig
    void setNotifyConfig(boolean) -> setNotifyConfig
    boolean isNotifyDelete() -> isNotifyDelete
    void setNotifyDelete(boolean) -> setNotifyDelete
    boolean isNotifyRetract() -> isNotifyRetract
    void setNotifyRetract(boolean) -> setNotifyRetract
    boolean isPersistItems() -> isPersistItems
    void setPersistentItems(boolean) -> setPersistentItems
    boolean isPresenceBasedDelivery() -> isPresenceBasedDelivery
    void setPresenceBasedDelivery(boolean) -> setPresenceBasedDelivery
    org.jivesoftware.smackx.pubsub.PublishModel getPublishModel() -> getPublishModel
    void setPublishModel(org.jivesoftware.smackx.pubsub.PublishModel) -> setPublishModel
    java.util.Iterator getReplyRoom() -> getReplyRoom
    void setReplyRoom(java.util.List) -> setReplyRoom
    java.util.Iterator getReplyTo() -> getReplyTo
    void setReplyTo(java.util.List) -> setReplyTo
    java.util.Iterator getRosterGroupsAllowed() -> getRosterGroupsAllowed
    void setRosterGroupsAllowed(java.util.List) -> setRosterGroupsAllowed
    boolean isSubscibe() -> isSubscibe
    void setSubscribe(boolean) -> setSubscribe
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getDataType() -> getDataType
    void setDataType(java.lang.String) -> setDataType
    java.lang.String toString() -> toString
    boolean parseBoolean(java.lang.String) -> parseBoolean
    java.lang.String getFieldValue(org.jivesoftware.smackx.pubsub.ConfigureNodeFields) -> getFieldValue
    java.util.Iterator getFieldValues(org.jivesoftware.smackx.pubsub.ConfigureNodeFields) -> getFieldValues
    void addField(org.jivesoftware.smackx.pubsub.ConfigureNodeFields,java.lang.String) -> addField
    java.util.List getListSingle(java.lang.String) -> getListSingle
org.jivesoftware.smackx.pubsub.ConfigureNodeFields -> org.jivesoftware.smackx.pubsub.ConfigureNodeFields:
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields access_model -> access_model
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields body_xslt -> body_xslt
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields collection -> collection
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields dataform_xslt -> dataform_xslt
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields deliver_payloads -> deliver_payloads
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields itemreply -> itemreply
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields children_association_policy -> children_association_policy
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields children_association_whitelist -> children_association_whitelist
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields children -> children
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields children_max -> children_max
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields max_items -> max_items
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields max_payload_size -> max_payload_size
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields node_type -> node_type
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields notify_config -> notify_config
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields notify_delete -> notify_delete
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields notify_retract -> notify_retract
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields persist_items -> persist_items
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields presence_based_delivery -> presence_based_delivery
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields publish_model -> publish_model
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields replyroom -> replyroom
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields replyto -> replyto
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields roster_groups_allowed -> roster_groups_allowed
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields subscribe -> subscribe
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields title -> title
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields type -> type
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields[] values() -> values
    org.jivesoftware.smackx.pubsub.ConfigureNodeFields valueOf(java.lang.String) -> valueOf
    java.lang.String getFieldName() -> getFieldName
org.jivesoftware.smackx.pubsub.EmbeddedPacketExtension -> org.jivesoftware.smackx.pubsub.EmbeddedPacketExtension:
    java.util.List getExtensions() -> getExtensions
org.jivesoftware.smackx.pubsub.EventElement -> org.jivesoftware.smackx.pubsub.EventElement:
    org.jivesoftware.smackx.pubsub.EventElementType type -> type
    org.jivesoftware.smackx.pubsub.NodeExtension ext -> ext
    org.jivesoftware.smackx.pubsub.EventElementType getEventType() -> getEventType
    java.util.List getExtensions() -> getExtensions
    org.jivesoftware.smackx.pubsub.NodeExtension getEvent() -> getEvent
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.pubsub.EventElementType -> org.jivesoftware.smackx.pubsub.EventElementType:
    org.jivesoftware.smackx.pubsub.EventElementType collection -> collection
    org.jivesoftware.smackx.pubsub.EventElementType configuration -> configuration
    org.jivesoftware.smackx.pubsub.EventElementType delete -> delete
    org.jivesoftware.smackx.pubsub.EventElementType items -> items
    org.jivesoftware.smackx.pubsub.EventElementType purge -> purge
    org.jivesoftware.smackx.pubsub.EventElementType subscription -> subscription
    org.jivesoftware.smackx.pubsub.EventElementType[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.EventElementType[] values() -> values
    org.jivesoftware.smackx.pubsub.EventElementType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.pubsub.FormNode -> org.jivesoftware.smackx.pubsub.FormNode:
    org.jivesoftware.smackx.Form configForm -> configForm
    org.jivesoftware.smackx.Form getForm() -> getForm
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.pubsub.FormNodeType -> org.jivesoftware.smackx.pubsub.FormNodeType:
    org.jivesoftware.smackx.pubsub.FormNodeType CONFIGURE_OWNER -> CONFIGURE_OWNER
    org.jivesoftware.smackx.pubsub.FormNodeType CONFIGURE -> CONFIGURE
    org.jivesoftware.smackx.pubsub.FormNodeType OPTIONS -> OPTIONS
    org.jivesoftware.smackx.pubsub.FormNodeType DEFAULT -> DEFAULT
    org.jivesoftware.smackx.pubsub.FormNodeType[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.FormNodeType[] values() -> values
    org.jivesoftware.smackx.pubsub.FormNodeType valueOf(java.lang.String) -> valueOf
    org.jivesoftware.smackx.pubsub.PubSubElementType getNodeElement() -> getNodeElement
    org.jivesoftware.smackx.pubsub.FormNodeType valueOfFromElementName(java.lang.String,java.lang.String) -> valueOfFromElementName
org.jivesoftware.smackx.pubsub.FormType -> org.jivesoftware.smackx.pubsub.FormType:
    org.jivesoftware.smackx.pubsub.FormType form -> form
    org.jivesoftware.smackx.pubsub.FormType submit -> submit
    org.jivesoftware.smackx.pubsub.FormType cancel -> cancel
    org.jivesoftware.smackx.pubsub.FormType result -> result
    org.jivesoftware.smackx.pubsub.FormType[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.FormType[] values() -> values
    org.jivesoftware.smackx.pubsub.FormType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.pubsub.GetItemsRequest -> org.jivesoftware.smackx.pubsub.GetItemsRequest:
    java.lang.String subId -> subId
    int maxItems -> maxItems
    java.lang.String getSubscriptionId() -> getSubscriptionId
    int getMaxItems() -> getMaxItems
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.pubsub.Item -> org.jivesoftware.smackx.pubsub.Item:
    java.lang.String id -> id
    java.lang.String getId() -> getId
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
org.jivesoftware.smackx.pubsub.ItemDeleteEvent -> org.jivesoftware.smackx.pubsub.ItemDeleteEvent:
    java.util.List itemIds -> itemIds
    java.util.List getItemIds() -> getItemIds
    java.lang.String toString() -> toString
org.jivesoftware.smackx.pubsub.ItemPublishEvent -> org.jivesoftware.smackx.pubsub.ItemPublishEvent:
    java.util.List items -> items
    java.util.Date originalDate -> originalDate
    java.util.List getItems() -> getItems
    boolean isDelayed() -> isDelayed
    java.util.Date getPublishedDate() -> getPublishedDate
    java.lang.String toString() -> toString
org.jivesoftware.smackx.pubsub.ItemReply -> org.jivesoftware.smackx.pubsub.ItemReply:
    org.jivesoftware.smackx.pubsub.ItemReply owner -> owner
    org.jivesoftware.smackx.pubsub.ItemReply publisher -> publisher
    org.jivesoftware.smackx.pubsub.ItemReply[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.ItemReply[] values() -> values
    org.jivesoftware.smackx.pubsub.ItemReply valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.pubsub.ItemsExtension -> org.jivesoftware.smackx.pubsub.ItemsExtension:
    org.jivesoftware.smackx.pubsub.ItemsExtension$ItemsElementType type -> type
    java.lang.Boolean notify -> notify
    java.util.List items -> items
    org.jivesoftware.smackx.pubsub.ItemsExtension$ItemsElementType getItemsElementType() -> getItemsElementType
    java.util.List getExtensions() -> getExtensions
    java.util.List getItems() -> getItems
    boolean getNotify() -> getNotify
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
org.jivesoftware.smackx.pubsub.ItemsExtension$ItemsElementType -> org.jivesoftware.smackx.pubsub.ItemsExtension$ItemsElementType:
    org.jivesoftware.smackx.pubsub.ItemsExtension$ItemsElementType items -> items
    org.jivesoftware.smackx.pubsub.ItemsExtension$ItemsElementType retract -> retract
    org.jivesoftware.smackx.pubsub.PubSubElementType elem -> elem
    java.lang.String att -> att
    org.jivesoftware.smackx.pubsub.ItemsExtension$ItemsElementType[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.ItemsExtension$ItemsElementType[] values() -> values
    org.jivesoftware.smackx.pubsub.ItemsExtension$ItemsElementType valueOf(java.lang.String) -> valueOf
    org.jivesoftware.smackx.pubsub.PubSubElementType getNodeElement() -> getNodeElement
    java.lang.String getElementAttribute() -> getElementAttribute
org.jivesoftware.smackx.pubsub.LeafNode -> org.jivesoftware.smackx.pubsub.LeafNode:
    org.jivesoftware.smackx.packet.DiscoverItems discoverItems() -> discoverItems
    java.util.List getItems() -> getItems
    java.util.List getItems(java.lang.String) -> getItems
    java.util.List getItems(java.util.Collection) -> getItems
    java.util.List getItems(int) -> getItems
    java.util.List getItems(int,java.lang.String) -> getItems
    void publish() -> publish
    void publish(org.jivesoftware.smackx.pubsub.Item) -> publish
    void publish(java.util.Collection) -> publish
    void send() -> send
    void send(org.jivesoftware.smackx.pubsub.Item) -> send
    void send(java.util.Collection) -> send
    void deleteAllItems() -> deleteAllItems
    void deleteItem(java.lang.String) -> deleteItem
    void deleteItem(java.util.Collection) -> deleteItem
org.jivesoftware.smackx.pubsub.Node -> org.jivesoftware.smackx.pubsub.Node:
    org.jivesoftware.smack.Connection con -> con
    java.lang.String id -> id
    java.lang.String to -> to
    java.util.concurrent.ConcurrentHashMap itemEventToListenerMap -> itemEventToListenerMap
    java.util.concurrent.ConcurrentHashMap itemDeleteToListenerMap -> itemDeleteToListenerMap
    java.util.concurrent.ConcurrentHashMap configEventToListenerMap -> configEventToListenerMap
    void setTo(java.lang.String) -> setTo
    java.lang.String getId() -> getId
    org.jivesoftware.smackx.pubsub.ConfigureForm getNodeConfiguration() -> getNodeConfiguration
    void sendConfigurationForm(org.jivesoftware.smackx.Form) -> sendConfigurationForm
    org.jivesoftware.smackx.packet.DiscoverInfo discoverInfo() -> discoverInfo
    java.util.List getSubscriptions() -> getSubscriptions
    java.util.List getAllSubscriptions() -> getAllSubscriptions
    org.jivesoftware.smackx.pubsub.Subscription subscribe(java.lang.String) -> subscribe
    org.jivesoftware.smackx.pubsub.Subscription subscribe(java.lang.String,org.jivesoftware.smackx.pubsub.SubscribeForm) -> subscribe
    void unsubscribe(java.lang.String) -> unsubscribe
    void unsubscribe(java.lang.String,java.lang.String) -> unsubscribe
    org.jivesoftware.smackx.pubsub.SubscribeForm getSubscriptionOptions(java.lang.String) -> getSubscriptionOptions
    org.jivesoftware.smackx.pubsub.SubscribeForm getSubscriptionOptions(java.lang.String,java.lang.String) -> getSubscriptionOptions
    void addItemEventListener(org.jivesoftware.smackx.pubsub.listener.ItemEventListener) -> addItemEventListener
    void removeItemEventListener(org.jivesoftware.smackx.pubsub.listener.ItemEventListener) -> removeItemEventListener
    void addConfigurationListener(org.jivesoftware.smackx.pubsub.listener.NodeConfigListener) -> addConfigurationListener
    void removeConfigurationListener(org.jivesoftware.smackx.pubsub.listener.NodeConfigListener) -> removeConfigurationListener
    void addItemDeleteListener(org.jivesoftware.smackx.pubsub.listener.ItemDeleteListener) -> addItemDeleteListener
    void removeItemDeleteListener(org.jivesoftware.smackx.pubsub.listener.ItemDeleteListener) -> removeItemDeleteListener
    java.lang.String toString() -> toString
    org.jivesoftware.smackx.pubsub.packet.PubSub createPubsubPacket(org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smack.packet.PacketExtension) -> createPubsubPacket
    org.jivesoftware.smackx.pubsub.packet.PubSub createPubsubPacket(org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smack.packet.PacketExtension,org.jivesoftware.smackx.pubsub.packet.PubSubNamespace) -> createPubsubPacket
    org.jivesoftware.smack.packet.Packet sendPubsubPacket(org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smackx.pubsub.NodeExtension) -> sendPubsubPacket
    org.jivesoftware.smack.packet.Packet sendPubsubPacket(org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smackx.pubsub.NodeExtension,org.jivesoftware.smackx.pubsub.packet.PubSubNamespace) -> sendPubsubPacket
    java.util.List getSubscriptionIds(org.jivesoftware.smack.packet.Packet) -> getSubscriptionIds
    java.util.List access$000(org.jivesoftware.smack.packet.Packet) -> access$000
org.jivesoftware.smackx.pubsub.Node$EventContentFilter -> org.jivesoftware.smackx.pubsub.Node$EventContentFilter:
    java.lang.String firstElement -> firstElement
    java.lang.String secondElement -> secondElement
    org.jivesoftware.smackx.pubsub.Node this$0 -> this$0
    boolean accept(org.jivesoftware.smack.packet.Packet) -> accept
org.jivesoftware.smackx.pubsub.Node$ItemDeleteTranslator -> org.jivesoftware.smackx.pubsub.Node$ItemDeleteTranslator:
    org.jivesoftware.smackx.pubsub.listener.ItemDeleteListener listener -> listener
    org.jivesoftware.smackx.pubsub.Node this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.pubsub.Node$ItemEventTranslator -> org.jivesoftware.smackx.pubsub.Node$ItemEventTranslator:
    org.jivesoftware.smackx.pubsub.listener.ItemEventListener listener -> listener
    org.jivesoftware.smackx.pubsub.Node this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.pubsub.Node$NodeConfigTranslator -> org.jivesoftware.smackx.pubsub.Node$NodeConfigTranslator:
    org.jivesoftware.smackx.pubsub.listener.NodeConfigListener listener -> listener
    org.jivesoftware.smackx.pubsub.Node this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.pubsub.NodeEvent -> org.jivesoftware.smackx.pubsub.NodeEvent:
    java.lang.String nodeId -> nodeId
    java.lang.String getNodeId() -> getNodeId
org.jivesoftware.smackx.pubsub.NodeExtension -> org.jivesoftware.smackx.pubsub.NodeExtension:
    org.jivesoftware.smackx.pubsub.PubSubElementType element -> element
    java.lang.String node -> node
    java.lang.String getNode() -> getNode
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
org.jivesoftware.smackx.pubsub.NodeType -> org.jivesoftware.smackx.pubsub.NodeType:
    org.jivesoftware.smackx.pubsub.NodeType leaf -> leaf
    org.jivesoftware.smackx.pubsub.NodeType collection -> collection
    org.jivesoftware.smackx.pubsub.NodeType[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.NodeType[] values() -> values
    org.jivesoftware.smackx.pubsub.NodeType valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.pubsub.OptionsExtension -> org.jivesoftware.smackx.pubsub.OptionsExtension:
    java.lang.String jid -> jid
    java.lang.String id -> id
    java.lang.String getJid() -> getJid
    java.lang.String getId() -> getId
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.pubsub.PayloadItem -> org.jivesoftware.smackx.pubsub.PayloadItem:
    org.jivesoftware.smack.packet.PacketExtension payload -> payload
    org.jivesoftware.smack.packet.PacketExtension getPayload() -> getPayload
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
org.jivesoftware.smackx.pubsub.PresenceState -> org.jivesoftware.smackx.pubsub.PresenceState:
    org.jivesoftware.smackx.pubsub.PresenceState chat -> chat
    org.jivesoftware.smackx.pubsub.PresenceState online -> online
    org.jivesoftware.smackx.pubsub.PresenceState away -> away
    org.jivesoftware.smackx.pubsub.PresenceState xa -> xa
    org.jivesoftware.smackx.pubsub.PresenceState dnd -> dnd
    org.jivesoftware.smackx.pubsub.PresenceState[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.PresenceState[] values() -> values
    org.jivesoftware.smackx.pubsub.PresenceState valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.pubsub.PubSubElementType -> org.jivesoftware.smackx.pubsub.PubSubElementType:
    org.jivesoftware.smackx.pubsub.PubSubElementType CREATE -> CREATE
    org.jivesoftware.smackx.pubsub.PubSubElementType DELETE -> DELETE
    org.jivesoftware.smackx.pubsub.PubSubElementType DELETE_EVENT -> DELETE_EVENT
    org.jivesoftware.smackx.pubsub.PubSubElementType CONFIGURE -> CONFIGURE
    org.jivesoftware.smackx.pubsub.PubSubElementType CONFIGURE_OWNER -> CONFIGURE_OWNER
    org.jivesoftware.smackx.pubsub.PubSubElementType CONFIGURATION -> CONFIGURATION
    org.jivesoftware.smackx.pubsub.PubSubElementType OPTIONS -> OPTIONS
    org.jivesoftware.smackx.pubsub.PubSubElementType DEFAULT -> DEFAULT
    org.jivesoftware.smackx.pubsub.PubSubElementType ITEMS -> ITEMS
    org.jivesoftware.smackx.pubsub.PubSubElementType PUBLISH -> PUBLISH
    org.jivesoftware.smackx.pubsub.PubSubElementType PUBLISH_OPTIONS -> PUBLISH_OPTIONS
    org.jivesoftware.smackx.pubsub.PubSubElementType PURGE_OWNER -> PURGE_OWNER
    org.jivesoftware.smackx.pubsub.PubSubElementType PURGE_EVENT -> PURGE_EVENT
    org.jivesoftware.smackx.pubsub.PubSubElementType RETRACT -> RETRACT
    org.jivesoftware.smackx.pubsub.PubSubElementType AFFILIATIONS -> AFFILIATIONS
    org.jivesoftware.smackx.pubsub.PubSubElementType SUBSCRIBE -> SUBSCRIBE
    org.jivesoftware.smackx.pubsub.PubSubElementType SUBSCRIPTION -> SUBSCRIPTION
    org.jivesoftware.smackx.pubsub.PubSubElementType SUBSCRIPTIONS -> SUBSCRIPTIONS
    org.jivesoftware.smackx.pubsub.PubSubElementType SUBSCRIPTIONS_OWNER -> SUBSCRIPTIONS_OWNER
    org.jivesoftware.smackx.pubsub.PubSubElementType UNSUBSCRIBE -> UNSUBSCRIBE
    java.lang.String eName -> eName
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace nSpace -> nSpace
    org.jivesoftware.smackx.pubsub.PubSubElementType[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.PubSubElementType[] values() -> values
    org.jivesoftware.smackx.pubsub.PubSubElementType valueOf(java.lang.String) -> valueOf
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace getNamespace() -> getNamespace
    java.lang.String getElementName() -> getElementName
    org.jivesoftware.smackx.pubsub.PubSubElementType valueOfFromElemName(java.lang.String,java.lang.String) -> valueOfFromElemName
org.jivesoftware.smackx.pubsub.PubSubManager -> org.jivesoftware.smackx.pubsub.PubSubManager:
    org.jivesoftware.smack.Connection con -> con
    java.lang.String to -> to
    java.util.Map nodeMap -> nodeMap
    org.jivesoftware.smackx.pubsub.LeafNode createNode() -> createNode
    org.jivesoftware.smackx.pubsub.LeafNode createNode(java.lang.String) -> createNode
    org.jivesoftware.smackx.pubsub.Node createNode(java.lang.String,org.jivesoftware.smackx.Form) -> createNode
    org.jivesoftware.smackx.pubsub.Node getNode(java.lang.String) -> getNode
    org.jivesoftware.smackx.packet.DiscoverItems discoverNodes(java.lang.String) -> discoverNodes
    java.util.List getSubscriptions() -> getSubscriptions
    java.util.List getAffiliations() -> getAffiliations
    void deleteNode(java.lang.String) -> deleteNode
    org.jivesoftware.smackx.pubsub.ConfigureForm getDefaultConfiguration() -> getDefaultConfiguration
    org.jivesoftware.smackx.packet.DiscoverInfo getSupportedFeatures() -> getSupportedFeatures
    org.jivesoftware.smack.packet.Packet sendPubsubPacket(org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smack.packet.PacketExtension,org.jivesoftware.smackx.pubsub.packet.PubSubNamespace) -> sendPubsubPacket
    org.jivesoftware.smack.packet.Packet sendPubsubPacket(org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smack.packet.PacketExtension) -> sendPubsubPacket
    org.jivesoftware.smackx.pubsub.packet.PubSub createPubsubPacket(java.lang.String,org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smack.packet.PacketExtension) -> createPubsubPacket
    org.jivesoftware.smackx.pubsub.packet.PubSub createPubsubPacket(java.lang.String,org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smack.packet.PacketExtension,org.jivesoftware.smackx.pubsub.packet.PubSubNamespace) -> createPubsubPacket
    org.jivesoftware.smack.packet.Packet sendPubsubPacket(org.jivesoftware.smack.Connection,java.lang.String,org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smack.packet.PacketExtension) -> sendPubsubPacket
    org.jivesoftware.smack.packet.Packet sendPubsubPacket(org.jivesoftware.smack.Connection,java.lang.String,org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smack.packet.PacketExtension,org.jivesoftware.smackx.pubsub.packet.PubSubNamespace) -> sendPubsubPacket
    org.jivesoftware.smack.packet.Packet sendPubsubPacket(org.jivesoftware.smack.Connection,java.lang.String,org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smackx.pubsub.packet.PubSub) -> sendPubsubPacket
    org.jivesoftware.smack.packet.Packet sendPubsubPacket(org.jivesoftware.smack.Connection,java.lang.String,org.jivesoftware.smack.packet.IQ$Type,org.jivesoftware.smackx.pubsub.packet.PubSub,org.jivesoftware.smackx.pubsub.packet.PubSubNamespace) -> sendPubsubPacket
org.jivesoftware.smackx.pubsub.PublishItem -> org.jivesoftware.smackx.pubsub.PublishItem:
    java.util.Collection items -> items
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.pubsub.PublishModel -> org.jivesoftware.smackx.pubsub.PublishModel:
    org.jivesoftware.smackx.pubsub.PublishModel publishers -> publishers
    org.jivesoftware.smackx.pubsub.PublishModel subscribers -> subscribers
    org.jivesoftware.smackx.pubsub.PublishModel open -> open
    org.jivesoftware.smackx.pubsub.PublishModel[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.PublishModel[] values() -> values
    org.jivesoftware.smackx.pubsub.PublishModel valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.pubsub.RetractItem -> org.jivesoftware.smackx.pubsub.RetractItem:
    java.lang.String id -> id
    java.lang.String getId() -> getId
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.pubsub.SimplePayload -> org.jivesoftware.smackx.pubsub.SimplePayload:
    java.lang.String elemName -> elemName
    java.lang.String ns -> ns
    java.lang.String payload -> payload
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.lang.String toString() -> toString
org.jivesoftware.smackx.pubsub.SubscribeExtension -> org.jivesoftware.smackx.pubsub.SubscribeExtension:
    java.lang.String jid -> jid
    java.lang.String getJid() -> getJid
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.pubsub.SubscribeForm -> org.jivesoftware.smackx.pubsub.SubscribeForm:
    java.text.SimpleDateFormat format -> format
    boolean isDeliverOn() -> isDeliverOn
    void setDeliverOn(boolean) -> setDeliverOn
    boolean isDigestOn() -> isDigestOn
    void setDigestOn(boolean) -> setDigestOn
    int getDigestFrequency() -> getDigestFrequency
    void setDigestFrequency(int) -> setDigestFrequency
    java.util.Date getExpiry() -> getExpiry
    void setExpiry(java.util.Date) -> setExpiry
    boolean isIncludeBody() -> isIncludeBody
    void setIncludeBody(boolean) -> setIncludeBody
    java.util.Iterator getShowValues() -> getShowValues
    void setShowValues(java.util.Collection) -> setShowValues
    boolean parseBoolean(java.lang.String) -> parseBoolean
    java.lang.String getFieldValue(org.jivesoftware.smackx.pubsub.SubscribeOptionFields) -> getFieldValue
    java.util.Iterator getFieldValues(org.jivesoftware.smackx.pubsub.SubscribeOptionFields) -> getFieldValues
    void addField(org.jivesoftware.smackx.pubsub.SubscribeOptionFields,java.lang.String) -> addField
org.jivesoftware.smackx.pubsub.SubscribeOptionFields -> org.jivesoftware.smackx.pubsub.SubscribeOptionFields:
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields deliver -> deliver
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields digest -> digest
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields digest_frequency -> digest_frequency
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields expire -> expire
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields include_body -> include_body
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields show_values -> show_values
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields subscription_type -> subscription_type
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields subscription_depth -> subscription_depth
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields[] values() -> values
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields valueOf(java.lang.String) -> valueOf
    java.lang.String getFieldName() -> getFieldName
    org.jivesoftware.smackx.pubsub.SubscribeOptionFields valueOfFromElement(java.lang.String) -> valueOfFromElement
org.jivesoftware.smackx.pubsub.Subscription -> org.jivesoftware.smackx.pubsub.Subscription:
    java.lang.String jid -> jid
    java.lang.String id -> id
    org.jivesoftware.smackx.pubsub.Subscription$State state -> state
    boolean configRequired -> configRequired
    java.lang.String getJid() -> getJid
    java.lang.String getId() -> getId
    org.jivesoftware.smackx.pubsub.Subscription$State getState() -> getState
    boolean isConfigRequired() -> isConfigRequired
    java.lang.String toXML() -> toXML
    void appendAttribute(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendAttribute
org.jivesoftware.smackx.pubsub.Subscription$State -> org.jivesoftware.smackx.pubsub.Subscription$State:
    org.jivesoftware.smackx.pubsub.Subscription$State subscribed -> subscribed
    org.jivesoftware.smackx.pubsub.Subscription$State unconfigured -> unconfigured
    org.jivesoftware.smackx.pubsub.Subscription$State pending -> pending
    org.jivesoftware.smackx.pubsub.Subscription$State none -> none
    org.jivesoftware.smackx.pubsub.Subscription$State[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.Subscription$State[] values() -> values
    org.jivesoftware.smackx.pubsub.Subscription$State valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.pubsub.SubscriptionEvent -> org.jivesoftware.smackx.pubsub.SubscriptionEvent:
    java.util.List subIds -> subIds
    java.util.List getSubscriptions() -> getSubscriptions
    void setSubscriptions(java.util.List) -> setSubscriptions
org.jivesoftware.smackx.pubsub.SubscriptionsExtension -> org.jivesoftware.smackx.pubsub.SubscriptionsExtension:
    java.util.List items -> items
    java.util.List getSubscriptions() -> getSubscriptions
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.pubsub.UnsubscribeExtension -> org.jivesoftware.smackx.pubsub.UnsubscribeExtension:
    java.lang.String jid -> jid
    java.lang.String id -> id
    java.lang.String getJid() -> getJid
    java.lang.String getId() -> getId
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.pubsub.listener.ItemDeleteListener -> org.jivesoftware.smackx.pubsub.listener.ItemDeleteListener:
    void handleDeletedItems(org.jivesoftware.smackx.pubsub.ItemDeleteEvent) -> handleDeletedItems
    void handlePurge() -> handlePurge
org.jivesoftware.smackx.pubsub.listener.ItemEventListener -> org.jivesoftware.smackx.pubsub.listener.ItemEventListener:
    void handlePublishedItems(org.jivesoftware.smackx.pubsub.ItemPublishEvent) -> handlePublishedItems
org.jivesoftware.smackx.pubsub.listener.NodeConfigListener -> org.jivesoftware.smackx.pubsub.listener.NodeConfigListener:
    void handleNodeConfiguration(org.jivesoftware.smackx.pubsub.ConfigurationEvent) -> handleNodeConfiguration
org.jivesoftware.smackx.pubsub.packet.PubSub -> org.jivesoftware.smackx.pubsub.packet.PubSub:
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace ns -> ns
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    void setPubSubNamespace(org.jivesoftware.smackx.pubsub.packet.PubSubNamespace) -> setPubSubNamespace
    org.jivesoftware.smack.packet.PacketExtension getExtension(org.jivesoftware.smackx.pubsub.PubSubElementType) -> getExtension
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace getPubSubNamespace() -> getPubSubNamespace
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.pubsub.packet.PubSubNamespace -> org.jivesoftware.smackx.pubsub.packet.PubSubNamespace:
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace BASIC -> BASIC
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace ERROR -> ERROR
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace EVENT -> EVENT
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace OWNER -> OWNER
    java.lang.String fragment -> fragment
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace[] $VALUES -> $VALUES
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace[] values() -> values
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace valueOf(java.lang.String) -> valueOf
    java.lang.String getXmlns() -> getXmlns
    java.lang.String getFragment() -> getFragment
    org.jivesoftware.smackx.pubsub.packet.PubSubNamespace valueOfFromXmlns(java.lang.String) -> valueOfFromXmlns
org.jivesoftware.smackx.pubsub.packet.SyncPacketSend -> org.jivesoftware.smackx.pubsub.packet.SyncPacketSend:
    org.jivesoftware.smack.packet.Packet getReply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet,long) -> getReply
    org.jivesoftware.smack.packet.Packet getReply(org.jivesoftware.smack.Connection,org.jivesoftware.smack.packet.Packet) -> getReply
org.jivesoftware.smackx.pubsub.provider.AffiliationProvider -> org.jivesoftware.smackx.pubsub.provider.AffiliationProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.pubsub.provider.AffiliationsProvider -> org.jivesoftware.smackx.pubsub.provider.AffiliationsProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.pubsub.provider.ConfigEventProvider -> org.jivesoftware.smackx.pubsub.provider.ConfigEventProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.pubsub.provider.EventProvider -> org.jivesoftware.smackx.pubsub.provider.EventProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.pubsub.provider.FormNodeProvider -> org.jivesoftware.smackx.pubsub.provider.FormNodeProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.pubsub.provider.ItemProvider -> org.jivesoftware.smackx.pubsub.provider.ItemProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.pubsub.provider.ItemsProvider -> org.jivesoftware.smackx.pubsub.provider.ItemsProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.pubsub.provider.PubSubProvider -> org.jivesoftware.smackx.pubsub.provider.PubSubProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.pubsub.provider.RetractEventProvider -> org.jivesoftware.smackx.pubsub.provider.RetractEventProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.pubsub.provider.SimpleNodeProvider -> org.jivesoftware.smackx.pubsub.provider.SimpleNodeProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.pubsub.provider.SubscriptionProvider -> org.jivesoftware.smackx.pubsub.provider.SubscriptionProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.pubsub.provider.SubscriptionsProvider -> org.jivesoftware.smackx.pubsub.provider.SubscriptionsProvider:
    org.jivesoftware.smack.packet.PacketExtension createReturnExtension(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> createReturnExtension
org.jivesoftware.smackx.pubsub.util.NodeUtils -> org.jivesoftware.smackx.pubsub.util.NodeUtils:
    org.jivesoftware.smackx.pubsub.ConfigureForm getFormFromPacket(org.jivesoftware.smack.packet.Packet,org.jivesoftware.smackx.pubsub.PubSubElementType) -> getFormFromPacket
org.jivesoftware.smackx.pubsub.util.XmlUtils -> org.jivesoftware.smackx.pubsub.util.XmlUtils:
    void appendAttribute(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendAttribute
org.jivesoftware.smackx.search.SimpleUserSearch -> org.jivesoftware.smackx.search.SimpleUserSearch:
    org.jivesoftware.smackx.Form form -> form
    org.jivesoftware.smackx.ReportedData data -> data
    void setForm(org.jivesoftware.smackx.Form) -> setForm
    org.jivesoftware.smackx.ReportedData getReportedData() -> getReportedData
    java.lang.String getChildElementXML() -> getChildElementXML
    java.lang.String getItemsToSearch() -> getItemsToSearch
    java.lang.String getSingleValue(org.jivesoftware.smackx.FormField) -> getSingleValue
    void parseItems(org.xmlpull.v1.XmlPullParser) -> parseItems
org.jivesoftware.smackx.search.UserSearch -> org.jivesoftware.smackx.search.UserSearch:
    java.lang.String getChildElementXML() -> getChildElementXML
    org.jivesoftware.smackx.Form getSearchForm(org.jivesoftware.smack.Connection,java.lang.String) -> getSearchForm
    org.jivesoftware.smackx.ReportedData sendSearchForm(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.Form,java.lang.String) -> sendSearchForm
    org.jivesoftware.smackx.ReportedData sendSimpleSearchForm(org.jivesoftware.smack.Connection,org.jivesoftware.smackx.Form,java.lang.String) -> sendSimpleSearchForm
    void buildDataForm(org.jivesoftware.smackx.search.SimpleUserSearch,java.lang.String,org.xmlpull.v1.XmlPullParser) -> buildDataForm
    void access$000(org.jivesoftware.smackx.search.SimpleUserSearch,java.lang.String,org.xmlpull.v1.XmlPullParser) -> access$000
org.jivesoftware.smackx.search.UserSearch$Provider -> org.jivesoftware.smackx.search.UserSearch$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.search.UserSearchManager -> org.jivesoftware.smackx.search.UserSearchManager:
    org.jivesoftware.smack.Connection con -> con
    org.jivesoftware.smackx.search.UserSearch userSearch -> userSearch
    org.jivesoftware.smackx.Form getSearchForm(java.lang.String) -> getSearchForm
    org.jivesoftware.smackx.ReportedData getSearchResults(org.jivesoftware.smackx.Form,java.lang.String) -> getSearchResults
    java.util.Collection getSearchServices() -> getSearchServices
org.jivesoftware.smackx.workgroup.MetaData -> org.jivesoftware.smackx.workgroup.MetaData:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.util.Map metaData -> metaData
    java.util.Map getMetaData() -> getMetaData
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.workgroup.QueueUser -> org.jivesoftware.smackx.workgroup.QueueUser:
    java.lang.String userID -> userID
    int queuePosition -> queuePosition
    int estimatedTime -> estimatedTime
    java.util.Date joinDate -> joinDate
    java.lang.String getUserID() -> getUserID
    int getQueuePosition() -> getQueuePosition
    int getEstimatedRemainingTime() -> getEstimatedRemainingTime
    java.util.Date getQueueJoinTimestamp() -> getQueueJoinTimestamp
org.jivesoftware.smackx.workgroup.WorkgroupInvitation -> org.jivesoftware.smackx.workgroup.WorkgroupInvitation:
    java.lang.String uniqueID -> uniqueID
    java.lang.String sessionID -> sessionID
    java.lang.String groupChatName -> groupChatName
    java.lang.String issuingWorkgroupName -> issuingWorkgroupName
    java.lang.String messageBody -> messageBody
    java.lang.String invitationSender -> invitationSender
    java.util.Map metaData -> metaData
    java.lang.String getUniqueID() -> getUniqueID
    java.lang.String getSessionID() -> getSessionID
    java.lang.String getGroupChatName() -> getGroupChatName
    java.lang.String getWorkgroupName() -> getWorkgroupName
    java.lang.String getMessageBody() -> getMessageBody
    java.lang.String getInvitationSender() -> getInvitationSender
    java.util.Map getMetaData() -> getMetaData
org.jivesoftware.smackx.workgroup.WorkgroupInvitationListener -> org.jivesoftware.smackx.workgroup.WorkgroupInvitationListener:
    void invitationReceived(org.jivesoftware.smackx.workgroup.WorkgroupInvitation) -> invitationReceived
org.jivesoftware.smackx.workgroup.agent.Agent -> org.jivesoftware.smackx.workgroup.agent.Agent:
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String workgroupJID -> workgroupJID
    java.util.Collection getWorkgroups(java.lang.String,java.lang.String,org.jivesoftware.smack.Connection) -> getWorkgroups
    java.lang.String getUser() -> getUser
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
org.jivesoftware.smackx.workgroup.agent.AgentRoster -> org.jivesoftware.smackx.workgroup.agent.AgentRoster:
    int EVENT_AGENT_ADDED -> EVENT_AGENT_ADDED
    int EVENT_AGENT_REMOVED -> EVENT_AGENT_REMOVED
    int EVENT_PRESENCE_CHANGED -> EVENT_PRESENCE_CHANGED
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String workgroupJID -> workgroupJID
    java.util.List entries -> entries
    java.util.List listeners -> listeners
    java.util.Map presenceMap -> presenceMap
    boolean rosterInitialized -> rosterInitialized
    void reload() -> reload
    void addListener(org.jivesoftware.smackx.workgroup.agent.AgentRosterListener) -> addListener
    void removeListener(org.jivesoftware.smackx.workgroup.agent.AgentRosterListener) -> removeListener
    int getAgentCount() -> getAgentCount
    java.util.Set getAgents() -> getAgents
    boolean contains(java.lang.String) -> contains
    org.jivesoftware.smack.packet.Presence getPresence(java.lang.String) -> getPresence
    java.lang.String getPresenceMapKey(java.lang.String) -> getPresenceMapKey
    void fireEvent(int,java.lang.Object) -> fireEvent
    java.lang.String access$200(org.jivesoftware.smackx.workgroup.agent.AgentRoster,java.lang.String) -> access$200
    java.lang.String access$300(org.jivesoftware.smackx.workgroup.agent.AgentRoster) -> access$300
    java.util.Map access$400(org.jivesoftware.smackx.workgroup.agent.AgentRoster) -> access$400
    java.util.List access$500(org.jivesoftware.smackx.workgroup.agent.AgentRoster) -> access$500
    void access$600(org.jivesoftware.smackx.workgroup.agent.AgentRoster,int,java.lang.Object) -> access$600
org.jivesoftware.smackx.workgroup.agent.AgentRoster$1 -> org.jivesoftware.smackx.workgroup.agent.AgentRoster$1:
org.jivesoftware.smackx.workgroup.agent.AgentRoster$AgentStatusListener -> org.jivesoftware.smackx.workgroup.agent.AgentRoster$AgentStatusListener:
    org.jivesoftware.smackx.workgroup.agent.AgentRoster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.workgroup.agent.AgentRoster$PresencePacketListener -> org.jivesoftware.smackx.workgroup.agent.AgentRoster$PresencePacketListener:
    org.jivesoftware.smackx.workgroup.agent.AgentRoster this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.workgroup.agent.AgentRosterListener -> org.jivesoftware.smackx.workgroup.agent.AgentRosterListener:
    void agentAdded(java.lang.String) -> agentAdded
    void agentRemoved(java.lang.String) -> agentRemoved
    void presenceChanged(org.jivesoftware.smack.packet.Presence) -> presenceChanged
org.jivesoftware.smackx.workgroup.agent.AgentSession -> org.jivesoftware.smackx.workgroup.agent.AgentSession:
    org.jivesoftware.smack.Connection connection -> connection
    java.lang.String workgroupJID -> workgroupJID
    boolean online -> online
    org.jivesoftware.smack.packet.Presence$Mode presenceMode -> presenceMode
    int maxChats -> maxChats
    java.util.Map metaData -> metaData
    java.util.Map queues -> queues
    java.util.List offerListeners -> offerListeners
    java.util.List invitationListeners -> invitationListeners
    java.util.List queueUsersListeners -> queueUsersListeners
    org.jivesoftware.smackx.workgroup.agent.AgentRoster agentRoster -> agentRoster
    org.jivesoftware.smackx.workgroup.agent.TranscriptManager transcriptManager -> transcriptManager
    org.jivesoftware.smackx.workgroup.agent.TranscriptSearchManager transcriptSearchManager -> transcriptSearchManager
    org.jivesoftware.smackx.workgroup.agent.Agent agent -> agent
    org.jivesoftware.smack.PacketListener packetListener -> packetListener
    void close() -> close
    org.jivesoftware.smackx.workgroup.agent.AgentRoster getAgentRoster() -> getAgentRoster
    org.jivesoftware.smack.packet.Presence$Mode getPresenceMode() -> getPresenceMode
    int getMaxChats() -> getMaxChats
    boolean isOnline() -> isOnline
    void setMetaData(java.lang.String,java.lang.String) -> setMetaData
    void removeMetaData(java.lang.String) -> removeMetaData
    java.lang.String getMetaData(java.lang.String) -> getMetaData
    void setOnline(boolean) -> setOnline
    void setStatus(org.jivesoftware.smack.packet.Presence$Mode,int) -> setStatus
    void setStatus(org.jivesoftware.smack.packet.Presence$Mode,int,java.lang.String) -> setStatus
    void setStatus(org.jivesoftware.smack.packet.Presence$Mode,java.lang.String) -> setStatus
    void dequeueUser(java.lang.String) -> dequeueUser
    org.jivesoftware.smackx.workgroup.packet.Transcripts getTranscripts(java.lang.String) -> getTranscripts
    org.jivesoftware.smackx.workgroup.packet.Transcript getTranscript(java.lang.String) -> getTranscript
    org.jivesoftware.smackx.Form getTranscriptSearchForm() -> getTranscriptSearchForm
    org.jivesoftware.smackx.ReportedData searchTranscripts(org.jivesoftware.smackx.Form) -> searchTranscripts
    org.jivesoftware.smackx.workgroup.packet.OccupantsInfo getOccupantsInfo(java.lang.String) -> getOccupantsInfo
    java.lang.String getWorkgroupJID() -> getWorkgroupJID
    org.jivesoftware.smackx.workgroup.agent.Agent getAgent() -> getAgent
    org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue getQueue(java.lang.String) -> getQueue
    java.util.Iterator getQueues() -> getQueues
    void addQueueUsersListener(org.jivesoftware.smackx.workgroup.agent.QueueUsersListener) -> addQueueUsersListener
    void removeQueueUsersListener(org.jivesoftware.smackx.workgroup.agent.QueueUsersListener) -> removeQueueUsersListener
    void addOfferListener(org.jivesoftware.smackx.workgroup.agent.OfferListener) -> addOfferListener
    void removeOfferListener(org.jivesoftware.smackx.workgroup.agent.OfferListener) -> removeOfferListener
    void addInvitationListener(org.jivesoftware.smackx.workgroup.WorkgroupInvitationListener) -> addInvitationListener
    void removeInvitationListener(org.jivesoftware.smackx.workgroup.WorkgroupInvitationListener) -> removeInvitationListener
    void fireOfferRequestEvent(org.jivesoftware.smackx.workgroup.packet.OfferRequestProvider$OfferRequestPacket) -> fireOfferRequestEvent
    void fireOfferRevokeEvent(org.jivesoftware.smackx.workgroup.packet.OfferRevokeProvider$OfferRevokePacket) -> fireOfferRevokeEvent
    void fireInvitationEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> fireInvitationEvent
    void fireQueueUsersEvent(org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue,org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status,int,java.util.Date,java.util.Set) -> fireQueueUsersEvent
    void handlePacket(org.jivesoftware.smack.packet.Packet) -> handlePacket
    void setNote(java.lang.String,java.lang.String) -> setNote
    org.jivesoftware.smackx.workgroup.ext.notes.ChatNotes getNote(java.lang.String) -> getNote
    org.jivesoftware.smackx.workgroup.ext.history.AgentChatHistory getAgentHistory(java.lang.String,int,java.util.Date) -> getAgentHistory
    org.jivesoftware.smackx.workgroup.settings.SearchSettings getSearchSettings() -> getSearchSettings
    org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup getMacros(boolean) -> getMacros
    void saveMacros(org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup) -> saveMacros
    java.util.Map getChatMetadata(java.lang.String) -> getChatMetadata
    void sendRoomInvitation(org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type,java.lang.String,java.lang.String,java.lang.String) -> sendRoomInvitation
    void sendRoomTransfer(org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type,java.lang.String,java.lang.String,java.lang.String) -> sendRoomTransfer
    org.jivesoftware.smackx.workgroup.settings.GenericSettings getGenericSettings(org.jivesoftware.smack.Connection,java.lang.String) -> getGenericSettings
    boolean hasMonitorPrivileges(org.jivesoftware.smack.Connection) -> hasMonitorPrivileges
    void makeRoomOwner(org.jivesoftware.smack.Connection,java.lang.String) -> makeRoomOwner
    void access$000(org.jivesoftware.smackx.workgroup.agent.AgentSession,org.jivesoftware.smack.packet.Packet) -> access$000
org.jivesoftware.smackx.workgroup.agent.AgentSession$1 -> org.jivesoftware.smackx.workgroup.agent.AgentSession$1:
    org.jivesoftware.smackx.workgroup.agent.AgentSession this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.workgroup.agent.AgentSession$2 -> org.jivesoftware.smackx.workgroup.agent.AgentSession$2:
    org.jivesoftware.smackx.workgroup.agent.AgentSession this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.agent.AgentSession$3 -> org.jivesoftware.smackx.workgroup.agent.AgentSession$3:
    org.jivesoftware.smackx.workgroup.agent.AgentSession this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.agent.AgentSession$4 -> org.jivesoftware.smackx.workgroup.agent.AgentSession$4:
    org.jivesoftware.smackx.workgroup.packet.RoomInvitation val$invitation -> val$invitation
    org.jivesoftware.smackx.workgroup.agent.AgentSession this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.agent.AgentSession$5 -> org.jivesoftware.smackx.workgroup.agent.AgentSession$5:
    org.jivesoftware.smackx.workgroup.packet.RoomTransfer val$transfer -> val$transfer
    org.jivesoftware.smackx.workgroup.agent.AgentSession this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.agent.InvitationRequest -> org.jivesoftware.smackx.workgroup.agent.InvitationRequest:
    java.lang.String inviter -> inviter
    java.lang.String room -> room
    java.lang.String reason -> reason
    java.lang.String getInviter() -> getInviter
    java.lang.String getRoom() -> getRoom
    java.lang.String getReason() -> getReason
    boolean isUserRequest() -> isUserRequest
    boolean isInvitation() -> isInvitation
    boolean isTransfer() -> isTransfer
org.jivesoftware.smackx.workgroup.agent.Offer -> org.jivesoftware.smackx.workgroup.agent.Offer:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.workgroup.agent.AgentSession session -> session
    java.lang.String sessionID -> sessionID
    java.lang.String userJID -> userJID
    java.lang.String userID -> userID
    java.lang.String workgroupName -> workgroupName
    java.util.Date expiresDate -> expiresDate
    java.util.Map metaData -> metaData
    org.jivesoftware.smackx.workgroup.agent.OfferContent content -> content
    boolean accepted -> accepted
    boolean rejected -> rejected
    void accept() -> accept
    void reject() -> reject
    java.lang.String getUserID() -> getUserID
    java.lang.String getUserJID() -> getUserJID
    java.lang.String getWorkgroupName() -> getWorkgroupName
    java.util.Date getExpiresDate() -> getExpiresDate
    java.lang.String getSessionID() -> getSessionID
    java.util.Map getMetaData() -> getMetaData
    org.jivesoftware.smackx.workgroup.agent.OfferContent getContent() -> getContent
    boolean isAccepted() -> isAccepted
    boolean isRejected() -> isRejected
org.jivesoftware.smackx.workgroup.agent.Offer$AcceptPacket -> org.jivesoftware.smackx.workgroup.agent.Offer$AcceptPacket:
    org.jivesoftware.smackx.workgroup.agent.Offer this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.agent.Offer$RejectPacket -> org.jivesoftware.smackx.workgroup.agent.Offer$RejectPacket:
    org.jivesoftware.smackx.workgroup.agent.Offer this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.agent.OfferConfirmation -> org.jivesoftware.smackx.workgroup.agent.OfferConfirmation:
    java.lang.String userJID -> userJID
    long sessionID -> sessionID
    java.lang.String getUserJID() -> getUserJID
    void setUserJID(java.lang.String) -> setUserJID
    long getSessionID() -> getSessionID
    void setSessionID(long) -> setSessionID
    void notifyService(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String) -> notifyService
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.agent.OfferConfirmation$NotifyServicePacket -> org.jivesoftware.smackx.workgroup.agent.OfferConfirmation$NotifyServicePacket:
    java.lang.String roomName -> roomName
    org.jivesoftware.smackx.workgroup.agent.OfferConfirmation this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.agent.OfferConfirmation$Provider -> org.jivesoftware.smackx.workgroup.agent.OfferConfirmation$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.agent.OfferConfirmationListener -> org.jivesoftware.smackx.workgroup.agent.OfferConfirmationListener:
    void offerConfirmed(org.jivesoftware.smackx.workgroup.agent.OfferConfirmation) -> offerConfirmed
org.jivesoftware.smackx.workgroup.agent.OfferContent -> org.jivesoftware.smackx.workgroup.agent.OfferContent:
    boolean isUserRequest() -> isUserRequest
    boolean isInvitation() -> isInvitation
    boolean isTransfer() -> isTransfer
org.jivesoftware.smackx.workgroup.agent.OfferListener -> org.jivesoftware.smackx.workgroup.agent.OfferListener:
    void offerReceived(org.jivesoftware.smackx.workgroup.agent.Offer) -> offerReceived
    void offerRevoked(org.jivesoftware.smackx.workgroup.agent.RevokedOffer) -> offerRevoked
org.jivesoftware.smackx.workgroup.agent.QueueUsersListener -> org.jivesoftware.smackx.workgroup.agent.QueueUsersListener:
    void statusUpdated(org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue,org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status) -> statusUpdated
    void averageWaitTimeUpdated(org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue,int) -> averageWaitTimeUpdated
    void oldestEntryUpdated(org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue,java.util.Date) -> oldestEntryUpdated
    void usersUpdated(org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue,java.util.Set) -> usersUpdated
org.jivesoftware.smackx.workgroup.agent.RevokedOffer -> org.jivesoftware.smackx.workgroup.agent.RevokedOffer:
    java.lang.String userJID -> userJID
    java.lang.String userID -> userID
    java.lang.String workgroupName -> workgroupName
    java.lang.String sessionID -> sessionID
    java.lang.String reason -> reason
    java.util.Date timestamp -> timestamp
    java.lang.String getUserJID() -> getUserJID
    java.lang.String getUserID() -> getUserID
    java.lang.String getWorkgroupName() -> getWorkgroupName
    java.lang.String getSessionID() -> getSessionID
    java.lang.String getReason() -> getReason
    java.util.Date getTimestamp() -> getTimestamp
org.jivesoftware.smackx.workgroup.agent.TranscriptManager -> org.jivesoftware.smackx.workgroup.agent.TranscriptManager:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.workgroup.packet.Transcript getTranscript(java.lang.String,java.lang.String) -> getTranscript
    org.jivesoftware.smackx.workgroup.packet.Transcripts getTranscripts(java.lang.String,java.lang.String) -> getTranscripts
org.jivesoftware.smackx.workgroup.agent.TranscriptSearchManager -> org.jivesoftware.smackx.workgroup.agent.TranscriptSearchManager:
    org.jivesoftware.smack.Connection connection -> connection
    org.jivesoftware.smackx.Form getSearchForm(java.lang.String) -> getSearchForm
    org.jivesoftware.smackx.ReportedData submitSearch(java.lang.String,org.jivesoftware.smackx.Form) -> submitSearch
org.jivesoftware.smackx.workgroup.agent.TransferRequest -> org.jivesoftware.smackx.workgroup.agent.TransferRequest:
    java.lang.String inviter -> inviter
    java.lang.String room -> room
    java.lang.String reason -> reason
    java.lang.String getInviter() -> getInviter
    java.lang.String getRoom() -> getRoom
    java.lang.String getReason() -> getReason
    boolean isUserRequest() -> isUserRequest
    boolean isInvitation() -> isInvitation
    boolean isTransfer() -> isTransfer
org.jivesoftware.smackx.workgroup.agent.UserRequest -> org.jivesoftware.smackx.workgroup.agent.UserRequest:
    org.jivesoftware.smackx.workgroup.agent.UserRequest instance -> instance
    org.jivesoftware.smackx.workgroup.agent.OfferContent getInstance() -> getInstance
    boolean isUserRequest() -> isUserRequest
    boolean isInvitation() -> isInvitation
    boolean isTransfer() -> isTransfer
org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue -> org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue:
    java.lang.String name -> name
    org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status status -> status
    int averageWaitTime -> averageWaitTime
    java.util.Date oldestEntry -> oldestEntry
    java.util.Set users -> users
    int maxChats -> maxChats
    int currentChats -> currentChats
    java.lang.String getName() -> getName
    org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status getStatus() -> getStatus
    void setStatus(org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status) -> setStatus
    int getUserCount() -> getUserCount
    java.util.Iterator getUsers() -> getUsers
    void setUsers(java.util.Set) -> setUsers
    int getAverageWaitTime() -> getAverageWaitTime
    void setAverageWaitTime(int) -> setAverageWaitTime
    java.util.Date getOldestEntry() -> getOldestEntry
    void setOldestEntry(java.util.Date) -> setOldestEntry
    int getMaxChats() -> getMaxChats
    void setMaxChats(int) -> setMaxChats
    int getCurrentChats() -> getCurrentChats
    void setCurrentChats(int) -> setCurrentChats
org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status -> org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status:
    org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status OPEN -> OPEN
    org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status ACTIVE -> ACTIVE
    org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status CLOSED -> CLOSED
    java.lang.String value -> value
    org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status fromString(java.lang.String) -> fromString
    java.lang.String toString() -> toString
org.jivesoftware.smackx.workgroup.ext.forms.WorkgroupForm -> org.jivesoftware.smackx.workgroup.ext.forms.WorkgroupForm:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.ext.forms.WorkgroupForm$InternalProvider -> org.jivesoftware.smackx.workgroup.ext.forms.WorkgroupForm$InternalProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.ext.history.AgentChatHistory -> org.jivesoftware.smackx.workgroup.ext.history.AgentChatHistory:
    java.lang.String agentJID -> agentJID
    int maxSessions -> maxSessions
    long startDate -> startDate
    java.util.List agentChatSessions -> agentChatSessions
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    void addChatSession(org.jivesoftware.smackx.workgroup.ext.history.AgentChatSession) -> addChatSession
    java.util.Collection getAgentChatSessions() -> getAgentChatSessions
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.ext.history.AgentChatHistory$InternalProvider -> org.jivesoftware.smackx.workgroup.ext.history.AgentChatHistory$InternalProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.workgroup.ext.history.AgentChatSession parseChatSetting(org.xmlpull.v1.XmlPullParser) -> parseChatSetting
org.jivesoftware.smackx.workgroup.ext.history.AgentChatSession -> org.jivesoftware.smackx.workgroup.ext.history.AgentChatSession:
    java.util.Date startDate -> startDate
    long duration -> duration
    java.lang.String visitorsName -> visitorsName
    java.lang.String visitorsEmail -> visitorsEmail
    java.lang.String sessionID -> sessionID
    java.lang.String question -> question
    java.util.Date getStartDate() -> getStartDate
    void setStartDate(java.util.Date) -> setStartDate
    long getDuration() -> getDuration
    void setDuration(long) -> setDuration
    java.lang.String getVisitorsName() -> getVisitorsName
    void setVisitorsName(java.lang.String) -> setVisitorsName
    java.lang.String getVisitorsEmail() -> getVisitorsEmail
    void setVisitorsEmail(java.lang.String) -> setVisitorsEmail
    java.lang.String getSessionID() -> getSessionID
    void setSessionID(java.lang.String) -> setSessionID
    void setQuestion(java.lang.String) -> setQuestion
    java.lang.String getQuestion() -> getQuestion
org.jivesoftware.smackx.workgroup.ext.history.ChatMetadata -> org.jivesoftware.smackx.workgroup.ext.history.ChatMetadata:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String sessionID -> sessionID
    java.util.Map map -> map
    java.lang.String getSessionID() -> getSessionID
    void setSessionID(java.lang.String) -> setSessionID
    void setMetadata(java.util.Map) -> setMetadata
    java.util.Map getMetadata() -> getMetadata
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.ext.history.ChatMetadata$Provider -> org.jivesoftware.smackx.workgroup.ext.history.ChatMetadata$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.ext.macros.Macro -> org.jivesoftware.smackx.workgroup.ext.macros.Macro:
    int TEXT -> TEXT
    int URL -> URL
    int IMAGE -> IMAGE
    java.lang.String title -> title
    java.lang.String description -> description
    java.lang.String response -> response
    int type -> type
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getResponse() -> getResponse
    void setResponse(java.lang.String) -> setResponse
    int getType() -> getType
    void setType(int) -> setType
org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup -> org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup:
    java.util.List macros -> macros
    java.util.List macroGroups -> macroGroups
    java.lang.String title -> title
    void addMacro(org.jivesoftware.smackx.workgroup.ext.macros.Macro) -> addMacro
    void removeMacro(org.jivesoftware.smackx.workgroup.ext.macros.Macro) -> removeMacro
    org.jivesoftware.smackx.workgroup.ext.macros.Macro getMacroByTitle(java.lang.String) -> getMacroByTitle
    void addMacroGroup(org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup) -> addMacroGroup
    void removeMacroGroup(org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup) -> removeMacroGroup
    org.jivesoftware.smackx.workgroup.ext.macros.Macro getMacro(int) -> getMacro
    org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup getMacroGroupByTitle(java.lang.String) -> getMacroGroupByTitle
    org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup getMacroGroup(int) -> getMacroGroup
    java.util.List getMacros() -> getMacros
    void setMacros(java.util.List) -> setMacros
    java.util.List getMacroGroups() -> getMacroGroups
    void setMacroGroups(java.util.List) -> setMacroGroups
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.workgroup.ext.macros.Macros -> org.jivesoftware.smackx.workgroup.ext.macros.Macros:
    org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup rootGroup -> rootGroup
    boolean personal -> personal
    org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup personalMacroGroup -> personalMacroGroup
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup getRootGroup() -> getRootGroup
    void setRootGroup(org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup) -> setRootGroup
    boolean isPersonal() -> isPersonal
    void setPersonal(boolean) -> setPersonal
    org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup getPersonalMacroGroup() -> getPersonalMacroGroup
    void setPersonalMacroGroup(org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup) -> setPersonalMacroGroup
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.ext.macros.Macros$InternalProvider -> org.jivesoftware.smackx.workgroup.ext.macros.Macros$InternalProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.workgroup.ext.macros.Macro parseMacro(org.xmlpull.v1.XmlPullParser) -> parseMacro
    org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup parseMacroGroup(org.xmlpull.v1.XmlPullParser) -> parseMacroGroup
    org.jivesoftware.smackx.workgroup.ext.macros.MacroGroup parseMacroGroups(java.lang.String) -> parseMacroGroups
org.jivesoftware.smackx.workgroup.ext.notes.ChatNotes -> org.jivesoftware.smackx.workgroup.ext.notes.ChatNotes:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String sessionID -> sessionID
    java.lang.String notes -> notes
    java.lang.String getSessionID() -> getSessionID
    void setSessionID(java.lang.String) -> setSessionID
    java.lang.String getNotes() -> getNotes
    void setNotes(java.lang.String) -> setNotes
    java.lang.String getChildElementXML() -> getChildElementXML
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
org.jivesoftware.smackx.workgroup.ext.notes.ChatNotes$Provider -> org.jivesoftware.smackx.workgroup.ext.notes.ChatNotes$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.packet.AgentInfo -> org.jivesoftware.smackx.workgroup.packet.AgentInfo:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String jid -> jid
    java.lang.String name -> name
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.packet.AgentInfo$Provider -> org.jivesoftware.smackx.workgroup.packet.AgentInfo$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.packet.AgentStatus -> org.jivesoftware.smackx.workgroup.packet.AgentStatus:
    java.text.SimpleDateFormat UTC_FORMAT -> UTC_FORMAT
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String workgroupJID -> workgroupJID
    java.util.List currentChats -> currentChats
    int maxChats -> maxChats
    java.lang.String getWorkgroupJID() -> getWorkgroupJID
    java.util.List getCurrentChats() -> getCurrentChats
    int getMaxChats() -> getMaxChats
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.text.SimpleDateFormat access$000() -> access$000
    java.lang.String access$102(org.jivesoftware.smackx.workgroup.packet.AgentStatus,java.lang.String) -> access$102
    java.util.List access$200(org.jivesoftware.smackx.workgroup.packet.AgentStatus) -> access$200
    int access$302(org.jivesoftware.smackx.workgroup.packet.AgentStatus,int) -> access$302
org.jivesoftware.smackx.workgroup.packet.AgentStatus$ChatInfo -> org.jivesoftware.smackx.workgroup.packet.AgentStatus$ChatInfo:
    java.lang.String sessionID -> sessionID
    java.lang.String userID -> userID
    java.util.Date date -> date
    java.lang.String email -> email
    java.lang.String username -> username
    java.lang.String question -> question
    java.lang.String getSessionID() -> getSessionID
    java.lang.String getUserID() -> getUserID
    java.util.Date getDate() -> getDate
    java.lang.String getEmail() -> getEmail
    java.lang.String getUsername() -> getUsername
    java.lang.String getQuestion() -> getQuestion
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.workgroup.packet.AgentStatus$Provider -> org.jivesoftware.smackx.workgroup.packet.AgentStatus$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
    org.jivesoftware.smackx.workgroup.packet.AgentStatus$ChatInfo parseChatInfo(org.xmlpull.v1.XmlPullParser) -> parseChatInfo
org.jivesoftware.smackx.workgroup.packet.AgentStatusRequest -> org.jivesoftware.smackx.workgroup.packet.AgentStatusRequest:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.util.Set agents -> agents
    int getAgentCount() -> getAgentCount
    java.util.Set getAgents() -> getAgents
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getChildElementXML() -> getChildElementXML
    java.util.Set access$000(org.jivesoftware.smackx.workgroup.packet.AgentStatusRequest) -> access$000
org.jivesoftware.smackx.workgroup.packet.AgentStatusRequest$Item -> org.jivesoftware.smackx.workgroup.packet.AgentStatusRequest$Item:
    java.lang.String jid -> jid
    java.lang.String type -> type
    java.lang.String name -> name
    java.lang.String getJID() -> getJID
    java.lang.String getType() -> getType
    java.lang.String getName() -> getName
org.jivesoftware.smackx.workgroup.packet.AgentStatusRequest$Provider -> org.jivesoftware.smackx.workgroup.packet.AgentStatusRequest$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.workgroup.packet.AgentStatusRequest$Item parseAgent(org.xmlpull.v1.XmlPullParser) -> parseAgent
org.jivesoftware.smackx.workgroup.packet.AgentWorkgroups -> org.jivesoftware.smackx.workgroup.packet.AgentWorkgroups:
    java.lang.String agentJID -> agentJID
    java.util.List workgroups -> workgroups
    java.lang.String getAgentJID() -> getAgentJID
    java.util.List getWorkgroups() -> getWorkgroups
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.packet.AgentWorkgroups$Provider -> org.jivesoftware.smackx.workgroup.packet.AgentWorkgroups$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.packet.DepartQueuePacket -> org.jivesoftware.smackx.workgroup.packet.DepartQueuePacket:
    java.lang.String user -> user
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.packet.MetaDataProvider -> org.jivesoftware.smackx.workgroup.packet.MetaDataProvider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.workgroup.packet.MonitorPacket -> org.jivesoftware.smackx.workgroup.packet.MonitorPacket:
    java.lang.String sessionID -> sessionID
    boolean isMonitor -> isMonitor
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    boolean isMonitor() -> isMonitor
    void setMonitor(boolean) -> setMonitor
    java.lang.String getSessionID() -> getSessionID
    void setSessionID(java.lang.String) -> setSessionID
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.packet.MonitorPacket$InternalProvider -> org.jivesoftware.smackx.workgroup.packet.MonitorPacket$InternalProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.packet.OccupantsInfo -> org.jivesoftware.smackx.workgroup.packet.OccupantsInfo:
    java.text.SimpleDateFormat UTC_FORMAT -> UTC_FORMAT
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String roomID -> roomID
    java.util.Set occupants -> occupants
    java.lang.String getRoomID() -> getRoomID
    int getOccupantsCount() -> getOccupantsCount
    java.util.Set getOccupants() -> getOccupants
    java.lang.String getChildElementXML() -> getChildElementXML
    java.util.Set access$000(org.jivesoftware.smackx.workgroup.packet.OccupantsInfo) -> access$000
    java.text.SimpleDateFormat access$100() -> access$100
org.jivesoftware.smackx.workgroup.packet.OccupantsInfo$OccupantInfo -> org.jivesoftware.smackx.workgroup.packet.OccupantsInfo$OccupantInfo:
    java.lang.String jid -> jid
    java.lang.String nickname -> nickname
    java.util.Date joined -> joined
    java.lang.String getJID() -> getJID
    java.lang.String getNickname() -> getNickname
    java.util.Date getJoined() -> getJoined
org.jivesoftware.smackx.workgroup.packet.OccupantsInfo$Provider -> org.jivesoftware.smackx.workgroup.packet.OccupantsInfo$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.workgroup.packet.OccupantsInfo$OccupantInfo parseOccupantInfo(org.xmlpull.v1.XmlPullParser) -> parseOccupantInfo
org.jivesoftware.smackx.workgroup.packet.OfferRequestProvider -> org.jivesoftware.smackx.workgroup.packet.OfferRequestProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.packet.OfferRequestProvider$OfferRequestPacket -> org.jivesoftware.smackx.workgroup.packet.OfferRequestProvider$OfferRequestPacket:
    int timeout -> timeout
    java.lang.String userID -> userID
    java.lang.String userJID -> userJID
    java.util.Map metaData -> metaData
    java.lang.String sessionID -> sessionID
    org.jivesoftware.smackx.workgroup.agent.OfferContent content -> content
    java.lang.String getUserID() -> getUserID
    java.lang.String getUserJID() -> getUserJID
    java.lang.String getSessionID() -> getSessionID
    int getTimeout() -> getTimeout
    org.jivesoftware.smackx.workgroup.agent.OfferContent getContent() -> getContent
    java.util.Map getMetaData() -> getMetaData
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.packet.OfferRevokeProvider -> org.jivesoftware.smackx.workgroup.packet.OfferRevokeProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.packet.OfferRevokeProvider$OfferRevokePacket -> org.jivesoftware.smackx.workgroup.packet.OfferRevokeProvider$OfferRevokePacket:
    java.lang.String userJID -> userJID
    java.lang.String userID -> userID
    java.lang.String sessionID -> sessionID
    java.lang.String reason -> reason
    org.jivesoftware.smackx.workgroup.packet.OfferRevokeProvider this$0 -> this$0
    java.lang.String getUserJID() -> getUserJID
    java.lang.String getUserID() -> getUserID
    java.lang.String getReason() -> getReason
    java.lang.String getSessionID() -> getSessionID
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.packet.QueueDetails -> org.jivesoftware.smackx.workgroup.packet.QueueDetails:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.text.SimpleDateFormat DATE_FORMATTER -> DATE_FORMATTER
    java.util.Set users -> users
    int getUserCount() -> getUserCount
    java.util.Set getUsers() -> getUsers
    void addUser(org.jivesoftware.smackx.workgroup.QueueUser) -> addUser
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.text.SimpleDateFormat access$100() -> access$100
    void access$200(org.jivesoftware.smackx.workgroup.packet.QueueDetails,org.jivesoftware.smackx.workgroup.QueueUser) -> access$200
org.jivesoftware.smackx.workgroup.packet.QueueDetails$1 -> org.jivesoftware.smackx.workgroup.packet.QueueDetails$1:
org.jivesoftware.smackx.workgroup.packet.QueueDetails$Provider -> org.jivesoftware.smackx.workgroup.packet.QueueDetails$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.workgroup.packet.QueueOverview -> org.jivesoftware.smackx.workgroup.packet.QueueOverview:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.text.SimpleDateFormat DATE_FORMATTER -> DATE_FORMATTER
    int averageWaitTime -> averageWaitTime
    java.util.Date oldestEntry -> oldestEntry
    int userCount -> userCount
    org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status status -> status
    void setAverageWaitTime(int) -> setAverageWaitTime
    int getAverageWaitTime() -> getAverageWaitTime
    void setOldestEntry(java.util.Date) -> setOldestEntry
    java.util.Date getOldestEntry() -> getOldestEntry
    void setUserCount(int) -> setUserCount
    int getUserCount() -> getUserCount
    org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status getStatus() -> getStatus
    void setStatus(org.jivesoftware.smackx.workgroup.agent.WorkgroupQueue$Status) -> setStatus
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
    java.text.SimpleDateFormat access$000() -> access$000
org.jivesoftware.smackx.workgroup.packet.QueueOverview$Provider -> org.jivesoftware.smackx.workgroup.packet.QueueOverview$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.workgroup.packet.QueueUpdate -> org.jivesoftware.smackx.workgroup.packet.QueueUpdate:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    int position -> position
    int remainingTime -> remainingTime
    int getPosition() -> getPosition
    int getRemaingTime() -> getRemaingTime
    java.lang.String toXML() -> toXML
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
org.jivesoftware.smackx.workgroup.packet.QueueUpdate$Provider -> org.jivesoftware.smackx.workgroup.packet.QueueUpdate$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.workgroup.packet.RoomInvitation -> org.jivesoftware.smackx.workgroup.packet.RoomInvitation:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type type -> type
    java.lang.String invitee -> invitee
    java.lang.String inviter -> inviter
    java.lang.String sessionID -> sessionID
    java.lang.String room -> room
    java.lang.String reason -> reason
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getInviter() -> getInviter
    java.lang.String getRoom() -> getRoom
    java.lang.String getReason() -> getReason
    java.lang.String getSessionID() -> getSessionID
    java.lang.String toXML() -> toXML
    org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type access$102(org.jivesoftware.smackx.workgroup.packet.RoomInvitation,org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type) -> access$102
    java.lang.String access$202(org.jivesoftware.smackx.workgroup.packet.RoomInvitation,java.lang.String) -> access$202
    java.lang.String access$302(org.jivesoftware.smackx.workgroup.packet.RoomInvitation,java.lang.String) -> access$302
    java.lang.String access$402(org.jivesoftware.smackx.workgroup.packet.RoomInvitation,java.lang.String) -> access$402
    java.lang.String access$502(org.jivesoftware.smackx.workgroup.packet.RoomInvitation,java.lang.String) -> access$502
    java.lang.String access$602(org.jivesoftware.smackx.workgroup.packet.RoomInvitation,java.lang.String) -> access$602
org.jivesoftware.smackx.workgroup.packet.RoomInvitation$1 -> org.jivesoftware.smackx.workgroup.packet.RoomInvitation$1:
org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Provider -> org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type -> org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type:
    org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type user -> user
    org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type queue -> queue
    org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type workgroup -> workgroup
    org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type[] $VALUES -> $VALUES
    org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type[] values() -> values
    org.jivesoftware.smackx.workgroup.packet.RoomInvitation$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.workgroup.packet.RoomTransfer -> org.jivesoftware.smackx.workgroup.packet.RoomTransfer:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type type -> type
    java.lang.String invitee -> invitee
    java.lang.String inviter -> inviter
    java.lang.String sessionID -> sessionID
    java.lang.String room -> room
    java.lang.String reason -> reason
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getInviter() -> getInviter
    java.lang.String getRoom() -> getRoom
    java.lang.String getReason() -> getReason
    java.lang.String getSessionID() -> getSessionID
    java.lang.String toXML() -> toXML
    org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type access$102(org.jivesoftware.smackx.workgroup.packet.RoomTransfer,org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type) -> access$102
    java.lang.String access$202(org.jivesoftware.smackx.workgroup.packet.RoomTransfer,java.lang.String) -> access$202
    java.lang.String access$302(org.jivesoftware.smackx.workgroup.packet.RoomTransfer,java.lang.String) -> access$302
    java.lang.String access$402(org.jivesoftware.smackx.workgroup.packet.RoomTransfer,java.lang.String) -> access$402
    java.lang.String access$502(org.jivesoftware.smackx.workgroup.packet.RoomTransfer,java.lang.String) -> access$502
    java.lang.String access$602(org.jivesoftware.smackx.workgroup.packet.RoomTransfer,java.lang.String) -> access$602
org.jivesoftware.smackx.workgroup.packet.RoomTransfer$1 -> org.jivesoftware.smackx.workgroup.packet.RoomTransfer$1:
org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Provider -> org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type -> org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type:
    org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type user -> user
    org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type queue -> queue
    org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type workgroup -> workgroup
    org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type[] $VALUES -> $VALUES
    org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type[] values() -> values
    org.jivesoftware.smackx.workgroup.packet.RoomTransfer$Type valueOf(java.lang.String) -> valueOf
org.jivesoftware.smackx.workgroup.packet.SessionID -> org.jivesoftware.smackx.workgroup.packet.SessionID:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String sessionID -> sessionID
    java.lang.String getSessionID() -> getSessionID
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.workgroup.packet.SessionID$Provider -> org.jivesoftware.smackx.workgroup.packet.SessionID$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.workgroup.packet.Transcript -> org.jivesoftware.smackx.workgroup.packet.Transcript:
    java.lang.String sessionID -> sessionID
    java.util.List packets -> packets
    java.lang.String getSessionID() -> getSessionID
    java.util.List getPackets() -> getPackets
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.packet.TranscriptProvider -> org.jivesoftware.smackx.workgroup.packet.TranscriptProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.packet.TranscriptSearch -> org.jivesoftware.smackx.workgroup.packet.TranscriptSearch:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.packet.TranscriptSearch$Provider -> org.jivesoftware.smackx.workgroup.packet.TranscriptSearch$Provider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.packet.Transcripts -> org.jivesoftware.smackx.workgroup.packet.Transcripts:
    java.text.SimpleDateFormat UTC_FORMAT -> UTC_FORMAT
    java.lang.String userID -> userID
    java.util.List summaries -> summaries
    java.lang.String getUserID() -> getUserID
    java.util.List getSummaries() -> getSummaries
    java.lang.String getChildElementXML() -> getChildElementXML
    java.text.SimpleDateFormat access$000() -> access$000
org.jivesoftware.smackx.workgroup.packet.Transcripts$AgentDetail -> org.jivesoftware.smackx.workgroup.packet.Transcripts$AgentDetail:
    java.lang.String agentJID -> agentJID
    java.util.Date joinTime -> joinTime
    java.util.Date leftTime -> leftTime
    java.lang.String getAgentJID() -> getAgentJID
    java.util.Date getJoinTime() -> getJoinTime
    java.util.Date getLeftTime() -> getLeftTime
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.workgroup.packet.Transcripts$TranscriptSummary -> org.jivesoftware.smackx.workgroup.packet.Transcripts$TranscriptSummary:
    java.lang.String sessionID -> sessionID
    java.util.Date joinTime -> joinTime
    java.util.Date leftTime -> leftTime
    java.util.List agentDetails -> agentDetails
    java.lang.String getSessionID() -> getSessionID
    java.util.Date getJoinTime() -> getJoinTime
    java.util.Date getLeftTime() -> getLeftTime
    java.util.List getAgentDetails() -> getAgentDetails
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.workgroup.packet.TranscriptsProvider -> org.jivesoftware.smackx.workgroup.packet.TranscriptsProvider:
    java.text.SimpleDateFormat UTC_FORMAT -> UTC_FORMAT
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.workgroup.packet.Transcripts$TranscriptSummary parseSummary(org.xmlpull.v1.XmlPullParser) -> parseSummary
    java.util.List parseAgents(org.xmlpull.v1.XmlPullParser) -> parseAgents
org.jivesoftware.smackx.workgroup.packet.UserID -> org.jivesoftware.smackx.workgroup.packet.UserID:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String userID -> userID
    java.lang.String getUserID() -> getUserID
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.workgroup.packet.UserID$Provider -> org.jivesoftware.smackx.workgroup.packet.UserID$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.workgroup.packet.WorkgroupInformation -> org.jivesoftware.smackx.workgroup.packet.WorkgroupInformation:
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String workgroupJID -> workgroupJID
    java.lang.String getWorkgroupJID() -> getWorkgroupJID
    java.lang.String getElementName() -> getElementName
    java.lang.String getNamespace() -> getNamespace
    java.lang.String toXML() -> toXML
org.jivesoftware.smackx.workgroup.packet.WorkgroupInformation$Provider -> org.jivesoftware.smackx.workgroup.packet.WorkgroupInformation$Provider:
    org.jivesoftware.smack.packet.PacketExtension parseExtension(org.xmlpull.v1.XmlPullParser) -> parseExtension
org.jivesoftware.smackx.workgroup.settings.ChatSetting -> org.jivesoftware.smackx.workgroup.settings.ChatSetting:
    java.lang.String key -> key
    java.lang.String value -> value
    int type -> type
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    int getType() -> getType
    void setType(int) -> setType
org.jivesoftware.smackx.workgroup.settings.ChatSettings -> org.jivesoftware.smackx.workgroup.settings.ChatSettings:
    int IMAGE_SETTINGS -> IMAGE_SETTINGS
    int TEXT_SETTINGS -> TEXT_SETTINGS
    int BOT_SETTINGS -> BOT_SETTINGS
    java.util.List settings -> settings
    java.lang.String key -> key
    int type -> type
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    void setKey(java.lang.String) -> setKey
    void setType(int) -> setType
    void addSetting(org.jivesoftware.smackx.workgroup.settings.ChatSetting) -> addSetting
    java.util.Collection getSettings() -> getSettings
    org.jivesoftware.smackx.workgroup.settings.ChatSetting getChatSetting(java.lang.String) -> getChatSetting
    org.jivesoftware.smackx.workgroup.settings.ChatSetting getFirstEntry() -> getFirstEntry
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.settings.ChatSettings$InternalProvider -> org.jivesoftware.smackx.workgroup.settings.ChatSettings$InternalProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
    org.jivesoftware.smackx.workgroup.settings.ChatSetting parseChatSetting(org.xmlpull.v1.XmlPullParser) -> parseChatSetting
org.jivesoftware.smackx.workgroup.settings.GenericSettings -> org.jivesoftware.smackx.workgroup.settings.GenericSettings:
    java.util.Map map -> map
    java.lang.String query -> query
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String getQuery() -> getQuery
    void setQuery(java.lang.String) -> setQuery
    java.util.Map getMap() -> getMap
    void setMap(java.util.Map) -> setMap
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.settings.GenericSettings$InternalProvider -> org.jivesoftware.smackx.workgroup.settings.GenericSettings$InternalProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.settings.OfflineSettings -> org.jivesoftware.smackx.workgroup.settings.OfflineSettings:
    java.lang.String redirectURL -> redirectURL
    java.lang.String offlineText -> offlineText
    java.lang.String emailAddress -> emailAddress
    java.lang.String subject -> subject
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    java.lang.String getRedirectURL() -> getRedirectURL
    void setRedirectURL(java.lang.String) -> setRedirectURL
    java.lang.String getOfflineText() -> getOfflineText
    void setOfflineText(java.lang.String) -> setOfflineText
    java.lang.String getEmailAddress() -> getEmailAddress
    void setEmailAddress(java.lang.String) -> setEmailAddress
    java.lang.String getSubject() -> getSubject
    void setSubject(java.lang.String) -> setSubject
    boolean redirects() -> redirects
    boolean isConfigured() -> isConfigured
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.settings.OfflineSettings$InternalProvider -> org.jivesoftware.smackx.workgroup.settings.OfflineSettings$InternalProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.settings.SearchSettings -> org.jivesoftware.smackx.workgroup.settings.SearchSettings:
    java.lang.String forumsLocation -> forumsLocation
    java.lang.String kbLocation -> kbLocation
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    boolean isSearchEnabled() -> isSearchEnabled
    java.lang.String getForumsLocation() -> getForumsLocation
    void setForumsLocation(java.lang.String) -> setForumsLocation
    java.lang.String getKbLocation() -> getKbLocation
    void setKbLocation(java.lang.String) -> setKbLocation
    boolean hasKB() -> hasKB
    boolean hasForums() -> hasForums
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.settings.SearchSettings$InternalProvider -> org.jivesoftware.smackx.workgroup.settings.SearchSettings$InternalProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.settings.SoundSettings -> org.jivesoftware.smackx.workgroup.settings.SoundSettings:
    java.lang.String outgoingSound -> outgoingSound
    java.lang.String incomingSound -> incomingSound
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    void setOutgoingSound(java.lang.String) -> setOutgoingSound
    void setIncomingSound(java.lang.String) -> setIncomingSound
    byte[] getIncomingSoundBytes() -> getIncomingSoundBytes
    byte[] getOutgoingSoundBytes() -> getOutgoingSoundBytes
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.settings.SoundSettings$InternalProvider -> org.jivesoftware.smackx.workgroup.settings.SoundSettings$InternalProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.settings.WorkgroupProperties -> org.jivesoftware.smackx.workgroup.settings.WorkgroupProperties:
    boolean authRequired -> authRequired
    java.lang.String email -> email
    java.lang.String fullName -> fullName
    java.lang.String jid -> jid
    java.lang.String ELEMENT_NAME -> ELEMENT_NAME
    java.lang.String NAMESPACE -> NAMESPACE
    boolean isAuthRequired() -> isAuthRequired
    void setAuthRequired(boolean) -> setAuthRequired
    java.lang.String getEmail() -> getEmail
    void setEmail(java.lang.String) -> setEmail
    java.lang.String getFullName() -> getFullName
    void setFullName(java.lang.String) -> setFullName
    java.lang.String getJid() -> getJid
    void setJid(java.lang.String) -> setJid
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.settings.WorkgroupProperties$InternalProvider -> org.jivesoftware.smackx.workgroup.settings.WorkgroupProperties$InternalProvider:
    org.jivesoftware.smack.packet.IQ parseIQ(org.xmlpull.v1.XmlPullParser) -> parseIQ
org.jivesoftware.smackx.workgroup.user.QueueListener -> org.jivesoftware.smackx.workgroup.user.QueueListener:
    void joinedQueue() -> joinedQueue
    void departedQueue() -> departedQueue
    void queuePositionUpdated(int) -> queuePositionUpdated
    void queueWaitTimeUpdated(int) -> queueWaitTimeUpdated
org.jivesoftware.smackx.workgroup.user.Workgroup -> org.jivesoftware.smackx.workgroup.user.Workgroup:
    java.lang.String workgroupJID -> workgroupJID
    org.jivesoftware.smack.Connection connection -> connection
    boolean inQueue -> inQueue
    java.util.List invitationListeners -> invitationListeners
    java.util.List queueListeners -> queueListeners
    java.util.List siteInviteListeners -> siteInviteListeners
    int queuePosition -> queuePosition
    int queueRemainingTime -> queueRemainingTime
    java.lang.String getWorkgroupJID() -> getWorkgroupJID
    boolean isInQueue() -> isInQueue
    boolean isAvailable() -> isAvailable
    int getQueuePosition() -> getQueuePosition
    int getQueueRemainingTime() -> getQueueRemainingTime
    void joinQueue() -> joinQueue
    void joinQueue(org.jivesoftware.smackx.Form) -> joinQueue
    void joinQueue(org.jivesoftware.smackx.Form,java.lang.String) -> joinQueue
    void joinQueue(java.util.Map,java.lang.String) -> joinQueue
    void departQueue() -> departQueue
    void addQueueListener(org.jivesoftware.smackx.workgroup.user.QueueListener) -> addQueueListener
    void removeQueueListener(org.jivesoftware.smackx.workgroup.user.QueueListener) -> removeQueueListener
    void addInvitationListener(org.jivesoftware.smackx.workgroup.WorkgroupInvitationListener) -> addInvitationListener
    void removeQueueListener(org.jivesoftware.smackx.workgroup.WorkgroupInvitationListener) -> removeQueueListener
    void fireInvitationEvent(org.jivesoftware.smackx.workgroup.WorkgroupInvitation) -> fireInvitationEvent
    void fireQueueJoinedEvent() -> fireQueueJoinedEvent
    void fireQueueDepartedEvent() -> fireQueueDepartedEvent
    void fireQueuePositionEvent(int) -> fireQueuePositionEvent
    void fireQueueTimeEvent(int) -> fireQueueTimeEvent
    void handlePacket(org.jivesoftware.smack.packet.Packet) -> handlePacket
    org.jivesoftware.smackx.workgroup.settings.ChatSetting getChatSetting(java.lang.String) -> getChatSetting
    org.jivesoftware.smackx.workgroup.settings.ChatSettings getChatSettings(int) -> getChatSettings
    org.jivesoftware.smackx.workgroup.settings.ChatSettings getChatSettings() -> getChatSettings
    org.jivesoftware.smackx.workgroup.settings.ChatSettings getChatSettings(java.lang.String,int) -> getChatSettings
    boolean isEmailAvailable() -> isEmailAvailable
    org.jivesoftware.smackx.workgroup.settings.OfflineSettings getOfflineSettings() -> getOfflineSettings
    org.jivesoftware.smackx.workgroup.settings.SoundSettings getSoundSettings() -> getSoundSettings
    org.jivesoftware.smackx.workgroup.settings.WorkgroupProperties getWorkgroupProperties() -> getWorkgroupProperties
    org.jivesoftware.smackx.workgroup.settings.WorkgroupProperties getWorkgroupProperties(java.lang.String) -> getWorkgroupProperties
    org.jivesoftware.smackx.Form getWorkgroupForm() -> getWorkgroupForm
    boolean access$002(org.jivesoftware.smackx.workgroup.user.Workgroup,boolean) -> access$002
    int access$102(org.jivesoftware.smackx.workgroup.user.Workgroup,int) -> access$102
    int access$202(org.jivesoftware.smackx.workgroup.user.Workgroup,int) -> access$202
    void access$300(org.jivesoftware.smackx.workgroup.user.Workgroup,org.jivesoftware.smack.packet.Packet) -> access$300
    org.jivesoftware.smack.Connection access$400(org.jivesoftware.smackx.workgroup.user.Workgroup) -> access$400
org.jivesoftware.smackx.workgroup.user.Workgroup$1 -> org.jivesoftware.smackx.workgroup.user.Workgroup$1:
    org.jivesoftware.smackx.workgroup.user.Workgroup this$0 -> this$0
    void joinedQueue() -> joinedQueue
    void departedQueue() -> departedQueue
    void queuePositionUpdated(int) -> queuePositionUpdated
    void queueWaitTimeUpdated(int) -> queueWaitTimeUpdated
org.jivesoftware.smackx.workgroup.user.Workgroup$2 -> org.jivesoftware.smackx.workgroup.user.Workgroup$2:
    org.jivesoftware.smackx.workgroup.user.Workgroup this$0 -> this$0
    void invitationReceived(org.jivesoftware.smack.Connection,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.jivesoftware.smack.packet.Message) -> invitationReceived
org.jivesoftware.smackx.workgroup.user.Workgroup$3 -> org.jivesoftware.smackx.workgroup.user.Workgroup$3:
    org.jivesoftware.smackx.workgroup.user.Workgroup this$0 -> this$0
    void processPacket(org.jivesoftware.smack.packet.Packet) -> processPacket
org.jivesoftware.smackx.workgroup.user.Workgroup$JoinQueuePacket -> org.jivesoftware.smackx.workgroup.user.Workgroup$JoinQueuePacket:
    java.lang.String userID -> userID
    org.jivesoftware.smackx.packet.DataForm form -> form
    org.jivesoftware.smackx.workgroup.user.Workgroup this$0 -> this$0
    java.lang.String getChildElementXML() -> getChildElementXML
org.jivesoftware.smackx.workgroup.util.ListenerEventDispatcher -> org.jivesoftware.smackx.workgroup.util.ListenerEventDispatcher:
    java.util.ArrayList triplets -> triplets
    boolean hasFinishedDispatching -> hasFinishedDispatching
    boolean isRunning -> isRunning
    void addListenerTriplet(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> addListenerTriplet
    boolean hasFinished() -> hasFinished
    void run() -> run
org.jivesoftware.smackx.workgroup.util.ListenerEventDispatcher$TripletContainer -> org.jivesoftware.smackx.workgroup.util.ListenerEventDispatcher$TripletContainer:
    java.lang.Object listenerInstance -> listenerInstance
    java.lang.reflect.Method listenerMethod -> listenerMethod
    java.lang.Object[] methodArguments -> methodArguments
    org.jivesoftware.smackx.workgroup.util.ListenerEventDispatcher this$0 -> this$0
    java.lang.Object getListenerInstance() -> getListenerInstance
    java.lang.reflect.Method getListenerMethod() -> getListenerMethod
    java.lang.Object[] getMethodArguments() -> getMethodArguments
org.jivesoftware.smackx.workgroup.util.MetaDataUtils -> org.jivesoftware.smackx.workgroup.util.MetaDataUtils:
    java.util.Map parseMetaData(org.xmlpull.v1.XmlPullParser) -> parseMetaData
    java.lang.String serializeMetaData(java.util.Map) -> serializeMetaData
org.jivesoftware.smackx.workgroup.util.ModelUtil -> org.jivesoftware.smackx.workgroup.util.ModelUtil:
    boolean areEqual(java.lang.Object,java.lang.Object) -> areEqual
    boolean areBooleansEqual(java.lang.Boolean,java.lang.Boolean) -> areBooleansEqual
    boolean areDifferent(java.lang.Object,java.lang.Object) -> areDifferent
    boolean areBooleansDifferent(java.lang.Boolean,java.lang.Boolean) -> areBooleansDifferent
    boolean hasNonNullElement(java.lang.Object[]) -> hasNonNullElement
    java.lang.String concat(java.lang.String[]) -> concat
    java.lang.String concat(java.lang.String[],java.lang.String) -> concat
    boolean hasLength(java.lang.String) -> hasLength
    java.lang.String nullifyIfEmpty(java.lang.String) -> nullifyIfEmpty
    java.lang.String nullifyingToString(java.lang.Object) -> nullifyingToString
    boolean hasStringChanged(java.lang.String,java.lang.String) -> hasStringChanged
    java.lang.String getTimeFromLong(long) -> getTimeFromLong
    java.util.List iteratorAsList(java.util.Iterator) -> iteratorAsList
    java.util.Iterator reverseListIterator(java.util.ListIterator) -> reverseListIterator
org.jivesoftware.smackx.workgroup.util.ReverseListIterator -> org.jivesoftware.smackx.workgroup.util.ReverseListIterator:
    java.util.ListIterator _i -> _i
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.xbill.DNS.A6Record -> org.a.a.a:
    int prefixBits -> a
    java.net.InetAddress suffix -> b
    org.xbill.DNS.Name prefix -> c
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.AAAARecord -> org.a.a.b:
    java.net.InetAddress address -> a
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.AFSDBRecord -> org.a.a.c:
    org.xbill.DNS.Record getObject() -> a
org.xbill.DNS.APLRecord -> org.a.a.d:
    java.util.List elements -> a
    org.xbill.DNS.Record getObject() -> a
    boolean validatePrefixLength(int,int) -> b
    byte[] parseAddress(byte[],int) -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    int addressLength(byte[]) -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    boolean access$000(int,int) -> a
org.xbill.DNS.APLRecord$1 -> org.a.a.e:
org.xbill.DNS.APLRecord$Element -> org.a.a.f:
    int family -> a
    boolean negative -> b
    int prefixLength -> c
    java.lang.Object address -> d
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.xbill.DNS.ARecord -> org.a.a.g:
    int addr -> a
    org.xbill.DNS.Record getObject() -> a
    int fromArray(byte[]) -> b
    byte[] toArray(int) -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.Address -> org.a.a.h:
    java.lang.String toDottedQuad(byte[]) -> a
    int familyOf(java.net.InetAddress) -> a
    int addressLength(int) -> a
org.xbill.DNS.CERTRecord -> org.a.a.i:
    int certType -> a
    int keyTag -> b
    int alg -> c
    byte[] cert -> d
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.CNAMERecord -> org.a.a.j:
    org.xbill.DNS.Record getObject() -> a
    org.xbill.DNS.Name getTarget() -> a_
org.xbill.DNS.Cache -> org.a.a.k:
    org.xbill.DNS.Cache$CacheMap data -> a
    int maxncache -> b
    int maxcache -> c
    int dclass -> d
    int limitExpire(long,long) -> b
    java.lang.Object exactName(org.xbill.DNS.Name) -> a
    org.xbill.DNS.Cache$Element[] allElements(java.lang.Object) -> a
    org.xbill.DNS.Cache$Element oneElement(org.xbill.DNS.Name,java.lang.Object,int,int) -> a
    org.xbill.DNS.Cache$Element findElement(org.xbill.DNS.Name,int,int) -> c
    void addElement(org.xbill.DNS.Name,org.xbill.DNS.Cache$Element) -> a
    void removeElement(org.xbill.DNS.Name,int) -> a
    void clearCache() -> a
    void addRRset(org.xbill.DNS.RRset,int) -> a
    void addNegative(org.xbill.DNS.Name,int,org.xbill.DNS.SOARecord,int) -> a
    org.xbill.DNS.SetResponse lookup(org.xbill.DNS.Name,int,int) -> a
    org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name,int,int) -> b
    int getCred(int,boolean) -> a
    void markAdditional(org.xbill.DNS.RRset,java.util.Set) -> a
    org.xbill.DNS.SetResponse addMessage(org.xbill.DNS.Message) -> a
    java.lang.String toString() -> toString
    int access$000(long,long) -> a
org.xbill.DNS.Cache$CacheMap -> org.a.a.l:
    int maxsize -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.xbill.DNS.Cache$CacheRRset -> org.a.a.m:
    int credibility -> a
    int expire -> b
    boolean expired() -> a
    int compareCredibility(int) -> a
    java.lang.String toString() -> toString
org.xbill.DNS.Cache$Element -> org.a.a.n:
    boolean expired() -> a
    int compareCredibility(int) -> a
    int getType() -> b
org.xbill.DNS.Cache$NegativeElement -> org.a.a.o:
    int type -> a
    org.xbill.DNS.Name name -> b
    int credibility -> c
    int expire -> d
    int getType() -> b
    boolean expired() -> a
    int compareCredibility(int) -> a
    java.lang.String toString() -> toString
org.xbill.DNS.Client -> org.a.a.p:
    long endTime -> a
    java.nio.channels.SelectionKey key -> b
    void blockUntil(java.nio.channels.SelectionKey,long) -> a
    void verboseLog(java.lang.String,byte[]) -> a
    void cleanup() -> a
org.xbill.DNS.Compression -> org.a.a.q:
    org.xbill.DNS.Compression$Entry[] table -> a
    boolean verbose -> b
    void add(int,org.xbill.DNS.Name) -> a
    int get(org.xbill.DNS.Name) -> a
org.xbill.DNS.Compression$1 -> org.a.a.r:
org.xbill.DNS.Compression$Entry -> org.a.a.s:
    org.xbill.DNS.Name name -> a
    int pos -> b
    org.xbill.DNS.Compression$Entry next -> c
org.xbill.DNS.DClass -> org.a.a.t:
    org.xbill.DNS.Mnemonic classes -> a
    void check(int) -> a
    java.lang.String string(int) -> b
org.xbill.DNS.DClass$DClassMnemonic -> org.a.a.u:
    void check(int) -> a
org.xbill.DNS.DHCIDRecord -> org.a.a.v:
    byte[] data -> a
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    java.lang.String rrToString() -> b
org.xbill.DNS.DLVRecord -> org.a.a.w:
    int footprint -> a
    int alg -> b
    int digestid -> c
    byte[] digest -> d
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.DNAMERecord -> org.a.a.x:
    org.xbill.DNS.Record getObject() -> a
    org.xbill.DNS.Name getTarget() -> b_
org.xbill.DNS.DNSInput -> org.a.a.y:
    byte[] array -> a
    int pos -> b
    int end -> c
    int saved_pos -> d
    int saved_end -> e
    int current() -> a
    int remaining() -> b
    void require(int) -> d
    void setActive(int) -> a
    void clearActive() -> c
    void jump(int) -> b
    void save() -> d
    void restore() -> e
    int readU8() -> f
    int readU16() -> g
    long readU32() -> h
    void readByteArray(byte[],int,int) -> a
    byte[] readByteArray(int) -> c
    byte[] readByteArray() -> i
    byte[] readCountedString() -> j
org.xbill.DNS.DNSKEYRecord -> org.a.a.z:
    org.xbill.DNS.Record getObject() -> a
    int getFootprint() -> c_
org.xbill.DNS.DNSOutput -> org.a.a.aa:
    byte[] array -> a
    int pos -> b
    int saved_pos -> c
    int current() -> a
    void check(long,int) -> a
    void need(int) -> d
    void jump(int) -> a
    void save() -> b
    void restore() -> c
    void writeU8(int) -> b
    void writeU16(int) -> c
    void writeU32(long) -> a
    void writeByteArray(byte[],int,int) -> a
    void writeByteArray(byte[]) -> a
    void writeCountedString(byte[]) -> b
    byte[] toByteArray() -> d
org.xbill.DNS.DSRecord -> org.a.a.ab:
    int footprint -> a
    int alg -> b
    int digestid -> c
    byte[] digest -> d
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.EmptyRecord -> org.a.a.ac:
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.ExtendedResolver -> org.a.a.ad:
    java.util.List resolvers -> a
    boolean loadBalance -> b
    int lbStart -> c
    int retries -> d
    void init() -> a
    void setTimeout(int,int) -> a
    void setTimeout(int) -> a
    org.xbill.DNS.Message send(org.xbill.DNS.Message) -> a
    java.lang.Object sendAsync(org.xbill.DNS.Message,org.xbill.DNS.ResolverListener) -> a
    java.util.List access$000(org.xbill.DNS.ExtendedResolver) -> a
    boolean access$100(org.xbill.DNS.ExtendedResolver) -> b
    int access$208(org.xbill.DNS.ExtendedResolver) -> c
    int access$200(org.xbill.DNS.ExtendedResolver) -> d
    int access$244(org.xbill.DNS.ExtendedResolver,int) -> a
    int access$300(org.xbill.DNS.ExtendedResolver) -> e
org.xbill.DNS.ExtendedResolver$Resolution -> org.a.a.ae:
    org.xbill.DNS.Resolver[] resolvers -> a
    int[] sent -> b
    java.lang.Object[] inprogress -> c
    int retries -> d
    int outstanding -> e
    boolean done -> f
    org.xbill.DNS.Message query -> g
    org.xbill.DNS.Message response -> h
    java.lang.Throwable thrown -> i
    org.xbill.DNS.ResolverListener listener -> j
    void send(int) -> a
    org.xbill.DNS.Message start() -> a
    void startAsync(org.xbill.DNS.ResolverListener) -> a
    void receiveMessage(java.lang.Object,org.xbill.DNS.Message) -> a
    void handleException(java.lang.Object,java.lang.Exception) -> a
org.xbill.DNS.Flags -> org.a.a.af:
    org.xbill.DNS.Mnemonic flags -> a
    java.lang.String string(int) -> a
    boolean isFlag(int) -> b
org.xbill.DNS.FormattedTime -> org.a.a.ag:
    java.text.NumberFormat w2 -> a
    java.text.NumberFormat w4 -> b
    java.lang.String format(java.util.Date) -> a
org.xbill.DNS.GPOSRecord -> org.a.a.ah:
    byte[] latitude -> a
    byte[] longitude -> b
    byte[] altitude -> c
    org.xbill.DNS.Record getObject() -> a
    void validate(double,double) -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    java.lang.String getLongitudeString() -> d_
    double getLongitude() -> d
    java.lang.String getLatitudeString() -> e
    double getLatitude() -> f
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.HINFORecord -> org.a.a.ai:
    byte[] cpu -> a
    byte[] os -> b
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    java.lang.String rrToString() -> b
org.xbill.DNS.Header -> org.a.a.aj:
    int id -> a
    int flags -> b
    int[] counts -> c
    java.util.Random random -> d
    void init() -> f
    void toWire(org.xbill.DNS.DNSOutput) -> a
    byte[] toWire() -> a
    boolean validFlag(int) -> i
    void checkFlag(int) -> j
    void setFlag(int) -> a
    boolean getFlag(int) -> b
    int getID() -> b
    void setID(int) -> c
    int getRcode() -> c
    void setOpcode(int) -> d
    int getOpcode() -> d
    void setCount(int,int) -> a
    void incCount(int) -> e
    void decCount(int) -> f
    int getCount(int) -> g
    java.lang.String printFlags() -> e
    java.lang.String toStringWithRcode(int) -> h
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.xbill.DNS.IPSECKEYRecord -> org.a.a.ak:
    int precedence -> a
    int gatewayType -> b
    int algorithmType -> c
    java.lang.Object gateway -> d
    byte[] key -> e
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.ISDNRecord -> org.a.a.al:
    byte[] address -> a
    byte[] subAddress -> b
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    java.lang.String rrToString() -> b
org.xbill.DNS.InvalidDClassException -> org.a.a.am:
org.xbill.DNS.InvalidTTLException -> org.a.a.an:
org.xbill.DNS.InvalidTypeException -> org.a.a.ao:
org.xbill.DNS.KEYBase -> org.a.a.ap:
    int flags -> a
    int proto -> b
    int alg -> c
    byte[] key -> d
    int footprint -> e
    java.security.PublicKey publicKey -> f
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    int getFootprint() -> c_
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.KEYRecord -> org.a.a.aq:
    org.xbill.DNS.Record getObject() -> a
    int getFootprint() -> c_
org.xbill.DNS.KXRecord -> org.a.a.ar:
    org.xbill.DNS.Record getObject() -> a
    org.xbill.DNS.Name getAdditionalName() -> c
org.xbill.DNS.LOCRecord -> org.a.a.as:
    java.text.NumberFormat w2 -> a
    java.text.NumberFormat w3 -> b
    long size -> c
    long hPrecision -> d
    long vPrecision -> e
    long latitude -> f
    long longitude -> k
    long altitude -> l
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    void renderFixedPoint(java.lang.StringBuffer,java.text.NumberFormat,long,long) -> a
    java.lang.String positionToString(long,char,char) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    long parseLOCformat(int) -> a
    int toLOCformat(long) -> b
org.xbill.DNS.Lookup -> org.a.a.at:
    org.xbill.DNS.Resolver defaultResolver -> a
    org.xbill.DNS.Name[] defaultSearchPath -> b
    java.util.Map defaultCaches -> c
    org.xbill.DNS.Resolver resolver -> d
    org.xbill.DNS.Name[] searchPath -> e
    org.xbill.DNS.Cache cache -> f
    boolean temporary_cache -> g
    int credibility -> h
    org.xbill.DNS.Name name -> i
    int type -> j
    int dclass -> k
    boolean verbose -> l
    int iterations -> m
    boolean foundAlias -> n
    boolean done -> o
    boolean doneCurrent -> p
    java.util.List aliases -> q
    org.xbill.DNS.Record[] answers -> r
    int result -> s
    java.lang.String error -> t
    boolean nxdomain -> u
    boolean badresponse -> v
    java.lang.String badresponse_error -> w
    boolean networkerror -> x
    boolean timedout -> y
    boolean nametoolong -> z
    boolean referral -> A
    org.xbill.DNS.Name[] noAliases -> B
    void refreshDefault() -> a
    org.xbill.DNS.Resolver getDefaultResolver() -> b
    org.xbill.DNS.Cache getDefaultCache(int) -> a
    org.xbill.DNS.Name[] getDefaultSearchPath() -> c
    void reset() -> e
    void follow(org.xbill.DNS.Name,org.xbill.DNS.Name) -> a
    void processResponse(org.xbill.DNS.Name,org.xbill.DNS.SetResponse) -> a
    void lookup(org.xbill.DNS.Name) -> a
    void resolve(org.xbill.DNS.Name,org.xbill.DNS.Name) -> b
    org.xbill.DNS.Record[] run() -> d
org.xbill.DNS.MBRecord -> org.a.a.au:
    org.xbill.DNS.Record getObject() -> a
    org.xbill.DNS.Name getAdditionalName() -> c
org.xbill.DNS.MDRecord -> org.a.a.av:
    org.xbill.DNS.Record getObject() -> a
    org.xbill.DNS.Name getAdditionalName() -> c
org.xbill.DNS.MFRecord -> org.a.a.aw:
    org.xbill.DNS.Record getObject() -> a
    org.xbill.DNS.Name getAdditionalName() -> c
org.xbill.DNS.MGRecord -> org.a.a.ax:
    org.xbill.DNS.Record getObject() -> a
org.xbill.DNS.MINFORecord -> org.a.a.ay:
    org.xbill.DNS.Name responsibleAddress -> a
    org.xbill.DNS.Name errorAddress -> b
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.MRRecord -> org.a.a.az:
    org.xbill.DNS.Record getObject() -> a
org.xbill.DNS.MXRecord -> org.a.a.ba:
    org.xbill.DNS.Record getObject() -> a
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    org.xbill.DNS.Name getAdditionalName() -> c
org.xbill.DNS.Message -> org.a.a.bb:
    org.xbill.DNS.Header header -> d
    java.util.List[] sections -> e
    int size -> f
    org.xbill.DNS.TSIG tsigkey -> g
    org.xbill.DNS.TSIGRecord querytsig -> h
    int tsigerror -> i
    int tsigstart -> a
    int tsigState -> b
    int sig0start -> c
    org.xbill.DNS.Record[] emptyRecordArray -> j
    org.xbill.DNS.RRset[] emptyRRsetArray -> k
    org.xbill.DNS.Message newQuery(org.xbill.DNS.Record) -> a
    org.xbill.DNS.Header getHeader() -> a
    void addRecord(org.xbill.DNS.Record,int) -> a
    org.xbill.DNS.Record getQuestion() -> b
    org.xbill.DNS.TSIGRecord getTSIG() -> c
    boolean isSigned() -> d
    boolean isVerified() -> e
    org.xbill.DNS.OPTRecord getOPT() -> f
    int getRcode() -> g
    org.xbill.DNS.Record[] getSectionArray(int) -> a
    boolean sameSet(org.xbill.DNS.Record,org.xbill.DNS.Record) -> a
    org.xbill.DNS.RRset[] getSectionRRsets(int) -> b
    void toWire(org.xbill.DNS.DNSOutput) -> a
    int sectionToWire(org.xbill.DNS.DNSOutput,int,org.xbill.DNS.Compression,int) -> a
    boolean toWire(org.xbill.DNS.DNSOutput,int) -> a
    byte[] toWire() -> h
    byte[] toWire(int) -> c
    int numBytes() -> i
    java.lang.String sectionToString(int) -> d
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.xbill.DNS.Mnemonic -> org.a.a.bc:
    java.lang.Integer[] cachedInts -> a
    java.util.HashMap strings -> b
    java.util.HashMap values -> c
    java.lang.String description -> d
    int wordcase -> e
    java.lang.String prefix -> f
    int max -> g
    boolean numericok -> h
    void setMaximum(int) -> b
    void setPrefix(java.lang.String) -> a
    void setNumericAllowed(boolean) -> a
    java.lang.Integer toInteger(int) -> c
    void check(int) -> a
    java.lang.String sanitize(java.lang.String) -> b
    void add(int,java.lang.String) -> a
    void addAlias(int,java.lang.String) -> b
    void addAll(org.xbill.DNS.Mnemonic) -> a
    java.lang.String getText(int) -> d
org.xbill.DNS.NAPTRRecord -> org.a.a.bd:
    int order -> a
    int preference -> b
    byte[] flags -> c
    byte[] service -> d
    byte[] regexp -> e
    org.xbill.DNS.Name replacement -> f
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    org.xbill.DNS.Name getAdditionalName() -> c
org.xbill.DNS.NSAPRecord -> org.a.a.be:
    byte[] address -> a
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    java.lang.String rrToString() -> b
org.xbill.DNS.NSAP_PTRRecord -> org.a.a.bf:
    org.xbill.DNS.Record getObject() -> a
org.xbill.DNS.NSEC3PARAMRecord -> org.a.a.bg:
    int hashAlg -> a
    int flags -> b
    int iterations -> c
    byte[] salt -> d
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    java.lang.String rrToString() -> b
org.xbill.DNS.NSEC3Record -> org.a.a.bh:
    int hashAlg -> a
    int flags -> b
    int iterations -> c
    byte[] salt -> d
    byte[] next -> e
    org.xbill.DNS.TypeBitmap types -> f
    org.xbill.DNS.utils.base32 b32 -> k
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    java.lang.String rrToString() -> b
org.xbill.DNS.NSECRecord -> org.a.a.bi:
    org.xbill.DNS.Name next -> a
    org.xbill.DNS.TypeBitmap types -> b
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    java.lang.String rrToString() -> b
org.xbill.DNS.NSRecord -> org.a.a.bj:
    org.xbill.DNS.Record getObject() -> a
    org.xbill.DNS.Name getAdditionalName() -> c
org.xbill.DNS.NULLRecord -> org.a.a.bk:
    byte[] data -> a
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.NXTRecord -> org.a.a.bl:
    org.xbill.DNS.Name next -> a
    java.util.BitSet bitmap -> b
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.Name -> org.a.a.bm:
    byte[] name -> c
    long offsets -> d
    int hashcode -> e
    byte[] emptyLabel -> f
    byte[] wildLabel -> g
    org.xbill.DNS.Name root -> a
    org.xbill.DNS.Name empty -> b
    java.text.DecimalFormat byteFormat -> h
    byte[] lowercase -> i
    org.xbill.DNS.Name wild -> j
    void setoffset(int,int) -> a
    int offset(int) -> a
    void setlabels(int) -> b
    int getlabels() -> e
    void copy(org.xbill.DNS.Name,org.xbill.DNS.Name) -> b
    void append(byte[],int,int) -> a
    org.xbill.DNS.TextParseException parseException(java.lang.String,java.lang.String) -> a
    void appendFromString(java.lang.String,byte[],int,int) -> a
    void appendSafe(byte[],int,int) -> b
    org.xbill.DNS.Name fromString(java.lang.String,org.xbill.DNS.Name) -> a
    org.xbill.DNS.Name fromString(java.lang.String) -> a
    org.xbill.DNS.Name fromConstantString(java.lang.String) -> b
    org.xbill.DNS.Name concatenate(org.xbill.DNS.Name,org.xbill.DNS.Name) -> a
    org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord) -> a
    boolean isAbsolute() -> a
    short length() -> b
    int labels() -> c
    boolean subdomain(org.xbill.DNS.Name) -> a
    java.lang.String byteString(byte[],int) -> a
    java.lang.String toString() -> toString
    void toWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression) -> a
    void toWireCanonical(org.xbill.DNS.DNSOutput) -> a
    byte[] toWireCanonical() -> d
    void toWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    boolean equals(byte[],int) -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
org.xbill.DNS.NameTooLongException -> org.a.a.bn:
org.xbill.DNS.OPTRecord -> org.a.a.bo:
    java.util.List options -> a
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    int getPayloadSize() -> d
    int getExtendedRcode() -> e
    int getVersion() -> f
    int getFlags() -> g
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.OPTRecord$Option -> org.a.a.bp:
    int code -> a
    byte[] data -> b
    java.lang.String toString() -> toString
org.xbill.DNS.Opcode -> org.a.a.bq:
    org.xbill.DNS.Mnemonic opcodes -> a
    java.lang.String string(int) -> a
org.xbill.DNS.Options -> org.a.a.br:
    java.util.Map table -> a
    void refresh() -> a
    void set(java.lang.String) -> a
    void set(java.lang.String,java.lang.String) -> a
    boolean check(java.lang.String) -> b
    java.lang.String value(java.lang.String) -> c
    int intValue(java.lang.String) -> d
org.xbill.DNS.PTRRecord -> org.a.a.bs:
    org.xbill.DNS.Record getObject() -> a
org.xbill.DNS.PXRecord -> org.a.a.bt:
    int preference -> a
    org.xbill.DNS.Name map822 -> b
    org.xbill.DNS.Name mapX400 -> c
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.RPRecord -> org.a.a.bu:
    org.xbill.DNS.Name mailbox -> a
    org.xbill.DNS.Name textDomain -> b
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.RRSIGRecord -> org.a.a.bv:
    org.xbill.DNS.Record getObject() -> a
    int getTypeCovered() -> d
org.xbill.DNS.RRset -> org.a.a.bw:
    java.util.List rrs -> a
    short nsigs -> b
    short position -> c
    void safeAddRR(org.xbill.DNS.Record) -> b
    void addRR(org.xbill.DNS.Record) -> a
    java.util.Iterator iterator(boolean,boolean) -> a
    java.util.Iterator rrs() -> c
    org.xbill.DNS.Name getName() -> d
    int getType() -> b
    int getDClass() -> e
    long getTTL() -> f
    org.xbill.DNS.Record first() -> g
    java.lang.String iteratorToString(java.util.Iterator) -> a
    java.lang.String toString() -> toString
org.xbill.DNS.RTRecord -> org.a.a.bx:
    org.xbill.DNS.Record getObject() -> a
org.xbill.DNS.Rcode -> org.a.a.by:
    org.xbill.DNS.Mnemonic rcodes -> a
    org.xbill.DNS.Mnemonic tsigrcodes -> b
    java.lang.String string(int) -> a
    java.lang.String TSIGstring(int) -> b
org.xbill.DNS.Record -> org.a.a.bz:
    org.xbill.DNS.Name name -> g
    int type -> h
    int dclass -> i
    long ttl -> j
    java.text.DecimalFormat byteFormat -> a
    org.xbill.DNS.Record getObject() -> a
    org.xbill.DNS.Record getEmptyRecord(org.xbill.DNS.Name,int,int,long,boolean) -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int,long,int,org.xbill.DNS.DNSInput) -> a
    org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int,long) -> a
    org.xbill.DNS.Record newRecord(org.xbill.DNS.Name,int,int) -> a
    org.xbill.DNS.Record fromWire(org.xbill.DNS.DNSInput,int,boolean) -> a
    void toWire(org.xbill.DNS.DNSOutput,int,org.xbill.DNS.Compression) -> a
    void toWireCanonical(org.xbill.DNS.DNSOutput,boolean) -> a
    byte[] toWireCanonical(boolean) -> a
    byte[] rdataToWireCanonical() -> h
    java.lang.String rrToString() -> b
    java.lang.String rdataToString() -> i
    java.lang.String toString() -> toString
    java.lang.String byteArrayToString(byte[],boolean) -> a
    java.lang.String unknownToString(byte[]) -> a
    org.xbill.DNS.Name getName() -> j
    int getType() -> k
    int getRRsetType() -> l
    int getDClass() -> m
    long getTTL() -> n
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    boolean sameRRset(org.xbill.DNS.Record) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.xbill.DNS.Record cloneRecord() -> o
    void setTTL(long) -> a
    int compareTo(java.lang.Object) -> compareTo
    org.xbill.DNS.Name getAdditionalName() -> c
    int checkU8(java.lang.String,int) -> a
    int checkU16(java.lang.String,int) -> b
    long checkU32(java.lang.String,long) -> a
    org.xbill.DNS.Name checkName(java.lang.String,org.xbill.DNS.Name) -> a
org.xbill.DNS.RelativeNameException -> org.a.a.ca:
org.xbill.DNS.ResolveThread -> org.a.a.cb:
    org.xbill.DNS.Message query -> a
    java.lang.Object id -> b
    org.xbill.DNS.ResolverListener listener -> c
    org.xbill.DNS.Resolver res -> d
    void run() -> run
org.xbill.DNS.Resolver -> org.a.a.cc:
    void setTimeout(int,int) -> a
    void setTimeout(int) -> a
    org.xbill.DNS.Message send(org.xbill.DNS.Message) -> a
    java.lang.Object sendAsync(org.xbill.DNS.Message,org.xbill.DNS.ResolverListener) -> a
org.xbill.DNS.ResolverConfig -> org.a.a.cd:
    java.lang.String[] servers -> a
    org.xbill.DNS.Name[] searchlist -> b
    org.xbill.DNS.ResolverConfig currentConfig -> c
    void addServer(java.lang.String,java.util.List) -> a
    void addSearch(java.lang.String,java.util.List) -> b
    void configureFromLists(java.util.List,java.util.List) -> a
    boolean findProperty() -> f
    boolean findSunJVM() -> g
    void findResolvConf(java.lang.String) -> a
    void findUnix() -> h
    void findNetware() -> i
    void findWin(java.io.InputStream,java.util.Locale) -> a
    void findWin(java.io.InputStream) -> a
    void find95() -> j
    void findNT() -> k
    void findAndroid() -> l
    java.lang.String[] servers() -> a
    java.lang.String server() -> b
    org.xbill.DNS.Name[] searchPath() -> c
    org.xbill.DNS.ResolverConfig getCurrentConfig() -> d
    void refresh() -> e
org.xbill.DNS.ResolverListener -> org.a.a.ce:
    void receiveMessage(java.lang.Object,org.xbill.DNS.Message) -> a
    void handleException(java.lang.Object,java.lang.Exception) -> a
org.xbill.DNS.SIGBase -> org.a.a.cf:
    int covered -> a
    int alg -> b
    int labels -> c
    long origttl -> d
    java.util.Date expire -> e
    java.util.Date timeSigned -> f
    int footprint -> k
    org.xbill.DNS.Name signer -> l
    byte[] signature -> m
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    int getTypeCovered() -> d
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.SIGRecord -> org.a.a.cg:
    org.xbill.DNS.Record getObject() -> a
    int getTypeCovered() -> d
org.xbill.DNS.SOARecord -> org.a.a.ch:
    org.xbill.DNS.Name host -> a
    org.xbill.DNS.Name admin -> b
    long serial -> c
    long refresh -> d
    long retry -> e
    long expire -> f
    long minimum -> k
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    long getSerial() -> d
    long getMinimum() -> e
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.SPFRecord -> org.a.a.ci:
    org.xbill.DNS.Record getObject() -> a
org.xbill.DNS.SRVRecord -> org.a.a.cj:
    int priority -> a
    int weight -> b
    int port -> c
    org.xbill.DNS.Name target -> d
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    int getPriority() -> d
    int getWeight() -> e
    int getPort() -> f
    org.xbill.DNS.Name getTarget() -> g
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    org.xbill.DNS.Name getAdditionalName() -> c
org.xbill.DNS.SSHFPRecord -> org.a.a.ck:
    int alg -> a
    int digestType -> b
    byte[] fingerprint -> c
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.Section -> org.a.a.cl:
    org.xbill.DNS.Mnemonic sections -> a
    java.lang.String[] longSections -> b
    java.lang.String[] updateSections -> c
    java.lang.String string(int) -> a
    java.lang.String longString(int) -> b
    java.lang.String updString(int) -> c
org.xbill.DNS.Serial -> org.a.a.cm:
    int compare(long,long) -> a
org.xbill.DNS.SetResponse -> org.a.a.cn:
    org.xbill.DNS.SetResponse unknown -> a
    org.xbill.DNS.SetResponse nxdomain -> b
    org.xbill.DNS.SetResponse nxrrset -> c
    int type -> d
    java.lang.Object data -> e
    org.xbill.DNS.SetResponse ofType(int) -> a
    void addRRset(org.xbill.DNS.RRset) -> a
    boolean isNXDOMAIN() -> a
    boolean isNXRRSET() -> b
    boolean isDelegation() -> c
    boolean isCNAME() -> d
    boolean isDNAME() -> e
    boolean isSuccessful() -> f
    org.xbill.DNS.RRset[] answers() -> g
    org.xbill.DNS.CNAMERecord getCNAME() -> h
    org.xbill.DNS.DNAMERecord getDNAME() -> i
    java.lang.String toString() -> toString
org.xbill.DNS.SimpleResolver -> org.a.a.co:
    java.net.InetSocketAddress address -> a
    java.net.InetSocketAddress localAddress -> b
    boolean useTCP -> c
    boolean ignoreTruncation -> d
    org.xbill.DNS.OPTRecord queryOPT -> e
    org.xbill.DNS.TSIG tsig -> f
    long timeoutValue -> g
    java.lang.String defaultResolver -> h
    int uniqueID -> i
    void setTimeout(int,int) -> a
    void setTimeout(int) -> a
    long getTimeout() -> a
    org.xbill.DNS.Message parseMessage(byte[]) -> a
    void verifyTSIG(org.xbill.DNS.Message,org.xbill.DNS.Message,byte[],org.xbill.DNS.TSIG) -> a
    void applyEDNS(org.xbill.DNS.Message) -> b
    int maxUDPSize(org.xbill.DNS.Message) -> c
    org.xbill.DNS.Message send(org.xbill.DNS.Message) -> a
    java.lang.Object sendAsync(org.xbill.DNS.Message,org.xbill.DNS.ResolverListener) -> a
    org.xbill.DNS.Message sendAXFR(org.xbill.DNS.Message) -> d
org.xbill.DNS.SingleCompressedNameBase -> org.a.a.cp:
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.SingleNameBase -> org.a.a.cq:
    org.xbill.DNS.Name singleName -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    org.xbill.DNS.Name getSingleName() -> d
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.TCPClient -> org.a.a.cr:
    void bind(java.net.SocketAddress) -> a
    void connect(java.net.SocketAddress) -> b
    void send(byte[]) -> a
    byte[] _recv(int) -> a
    byte[] recv() -> b
    byte[] sendrecv(java.net.SocketAddress,java.net.SocketAddress,byte[],long) -> a
org.xbill.DNS.TKEYRecord -> org.a.a.cs:
    org.xbill.DNS.Name alg -> a
    java.util.Date timeInception -> b
    java.util.Date timeExpire -> c
    int mode -> d
    int error -> e
    byte[] key -> f
    byte[] other -> k
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String modeString() -> d
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.TSIG -> org.a.a.ct:
    org.xbill.DNS.Name HMAC_MD5 -> a
    org.xbill.DNS.Name HMAC -> b
    org.xbill.DNS.Name HMAC_SHA1 -> c
    org.xbill.DNS.Name HMAC_SHA256 -> d
    org.xbill.DNS.Name name -> e
    org.xbill.DNS.Name alg -> f
    java.lang.String digest -> g
    byte[] key -> h
    org.xbill.DNS.TSIGRecord generate(org.xbill.DNS.Message,byte[],int,org.xbill.DNS.TSIGRecord) -> a
    void apply(org.xbill.DNS.Message,int,org.xbill.DNS.TSIGRecord) -> a
    void apply(org.xbill.DNS.Message,org.xbill.DNS.TSIGRecord) -> a
    byte verify(org.xbill.DNS.Message,byte[],int,org.xbill.DNS.TSIGRecord) -> b
    int verify(org.xbill.DNS.Message,byte[],org.xbill.DNS.TSIGRecord) -> a
    int recordLength() -> a
    java.lang.String access$000(org.xbill.DNS.TSIG) -> a
    byte[] access$100(org.xbill.DNS.TSIG) -> b
    org.xbill.DNS.Name access$200(org.xbill.DNS.TSIG) -> c
    org.xbill.DNS.Name access$300(org.xbill.DNS.TSIG) -> d
org.xbill.DNS.TSIG$StreamVerifier -> org.a.a.cu:
    org.xbill.DNS.TSIG key -> a
    org.xbill.DNS.utils.HMAC verifier -> b
    int nresponses -> c
    int lastsigned -> d
    org.xbill.DNS.TSIGRecord lastTSIG -> e
    int verify(org.xbill.DNS.Message,byte[]) -> a
org.xbill.DNS.TSIGRecord -> org.a.a.cv:
    org.xbill.DNS.Name alg -> a
    java.util.Date timeSigned -> b
    int fudge -> c
    byte[] signature -> d
    int originalID -> e
    int error -> f
    byte[] other -> k
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    org.xbill.DNS.Name getAlgorithm() -> d
    java.util.Date getTimeSigned() -> e
    int getFudge() -> f
    byte[] getSignature() -> g
    int getError() -> p
    byte[] getOther() -> q
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.TTL -> org.a.a.cw:
    void check(long) -> a
    java.lang.String format(long) -> b
org.xbill.DNS.TXTBase -> org.a.a.cx:
    java.util.List strings -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.TXTRecord -> org.a.a.cy:
    org.xbill.DNS.Record getObject() -> a
org.xbill.DNS.TextParseException -> org.a.a.cz:
org.xbill.DNS.Type -> org.a.a.da:
    org.xbill.DNS.Type$TypeMnemonic types -> a
    void check(int) -> a
    java.lang.String string(int) -> b
    org.xbill.DNS.Record getProto(int) -> c
    boolean isRR(int) -> d
org.xbill.DNS.Type$TypeMnemonic -> org.a.a.db:
    java.util.HashMap objects -> a
    void add(int,java.lang.String,org.xbill.DNS.Record) -> a
    void check(int) -> a
    org.xbill.DNS.Record getProto(int) -> e
org.xbill.DNS.TypeBitmap -> org.a.a.dc:
    java.util.TreeSet types -> a
    java.lang.String toString() -> toString
    void mapToWire(org.xbill.DNS.DNSOutput,java.util.TreeSet,int) -> a
    void toWire(org.xbill.DNS.DNSOutput) -> a
    boolean empty() -> a
org.xbill.DNS.U16NameBase -> org.a.a.dd:
    int u16Field -> a
    org.xbill.DNS.Name nameField -> b
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    org.xbill.DNS.Name getNameField() -> d
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.UDPClient -> org.a.a.de:
    java.security.SecureRandom prng -> c
    boolean prng_initializing -> d
    boolean bound -> e
    void bind_random(java.net.InetSocketAddress) -> a
    void bind(java.net.SocketAddress) -> a
    void connect(java.net.SocketAddress) -> b
    void send(byte[]) -> a
    byte[] recv(int) -> a
    byte[] sendrecv(java.net.SocketAddress,java.net.SocketAddress,byte[],int,long) -> a
    java.security.SecureRandom access$000() -> b
    boolean access$102(boolean) -> a
org.xbill.DNS.UDPClient$1 -> org.a.a.df:
    void run() -> run
org.xbill.DNS.UNKRecord -> org.a.a.dg:
    byte[] data -> a
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.WKSRecord -> org.a.a.dh:
    byte[] address -> a
    int protocol -> b
    int[] services -> c
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    java.lang.String rrToString() -> b
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
org.xbill.DNS.WireParseException -> org.a.a.di:
org.xbill.DNS.X25Record -> org.a.a.dj:
    byte[] address -> a
    org.xbill.DNS.Record getObject() -> a
    void rrFromWire(org.xbill.DNS.DNSInput) -> a
    void rrToWire(org.xbill.DNS.DNSOutput,org.xbill.DNS.Compression,boolean) -> a
    java.lang.String rrToString() -> b
org.xbill.DNS.ZoneTransferException -> org.a.a.dk:
org.xbill.DNS.ZoneTransferIn -> org.a.a.dl:
    org.xbill.DNS.Name zname -> a
    int qtype -> b
    int dclass -> c
    long ixfr_serial -> d
    boolean want_fallback -> e
    java.net.SocketAddress localAddress -> f
    java.net.SocketAddress address -> g
    org.xbill.DNS.TCPClient client -> h
    org.xbill.DNS.TSIG tsig -> i
    org.xbill.DNS.TSIG$StreamVerifier verifier -> j
    long timeout -> k
    int state -> l
    long end_serial -> m
    long current_serial -> n
    org.xbill.DNS.Record initialsoa -> o
    int rtype -> p
    java.util.List axfr -> q
    java.util.List ixfr -> r
    org.xbill.DNS.ZoneTransferIn newAXFR(org.xbill.DNS.Name,java.net.SocketAddress,org.xbill.DNS.TSIG) -> a
    void setTimeout(int) -> a
    void setLocalAddress(java.net.SocketAddress) -> a
    void openConnection() -> c
    void sendQuery() -> d
    long getSOASerial(org.xbill.DNS.Record) -> a
    void logxfr(java.lang.String) -> a
    void fail(java.lang.String) -> b
    void fallback() -> e
    void parseRR(org.xbill.DNS.Record) -> b
    void closeConnection() -> f
    org.xbill.DNS.Message parseMessage(byte[]) -> a
    void doxfr() -> g
    java.util.List run() -> a
    java.util.List getAXFR() -> b
org.xbill.DNS.ZoneTransferIn$1 -> org.a.a.dm:
org.xbill.DNS.ZoneTransferIn$Delta -> org.a.a.dn:
    long start -> a
    long end -> b
    java.util.List adds -> c
    java.util.List deletes -> d
org.xbill.DNS.utils.HMAC -> org.a.a.a.a:
    java.security.MessageDigest digest -> a
    byte[] ipad -> b
    byte[] opad -> c
    void init(byte[]) -> c
    void update(byte[],int,int) -> a
    void update(byte[]) -> a
    byte[] sign() -> a
    boolean verify(byte[]) -> b
    void clear() -> b
org.xbill.DNS.utils.base16 -> org.a.a.a.b:
    java.lang.String toString(byte[]) -> a
org.xbill.DNS.utils.base32 -> org.a.a.a.c:
    java.lang.String alphabet -> a
    boolean padding -> b
    boolean lowercase -> c
    int blockLenToPadding(int) -> a
    java.lang.String toString(byte[]) -> a
org.xbill.DNS.utils.base64 -> org.a.a.a.d:
    java.lang.String toString(byte[]) -> a
    java.lang.String formatString(byte[],int,java.lang.String,boolean) -> a
org.xbill.DNS.utils.hexdump -> org.a.a.a.e:
    char[] hex -> a
    java.lang.String dump(java.lang.String,byte[],int,int) -> a
    java.lang.String dump(java.lang.String,byte[]) -> a
vi.com.gdi.bgl.android.java.EnvDrawText -> vi.com.gdi.bgl.android.java.EnvDrawText:
    java.lang.String a -> a
    android.graphics.Paint pt -> pt
    int iWordWidthMax -> iWordWidthMax
    int iWordHightMax -> iWordHightMax
    boolean bBmpChange -> bBmpChange
    android.graphics.Bitmap bmp -> bmp
    android.graphics.Canvas canvasTemp -> canvasTemp
    int[] buffer -> buffer
    android.util.SparseArray fontCache -> fontCache
    int[] drawText(java.lang.String,int,int,int[],int,int,int,int) -> drawText
    short[] getTextSize(java.lang.String,int) -> getTextSize
    void registFontCache(int,android.graphics.Typeface) -> registFontCache
    void removeFontCache(int) -> removeFontCache
vi.com.gdi.bgl.android.java.a -> vi.com.gdi.bgl.android.java.a:
    android.graphics.Typeface a -> a
    int b -> b
